{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./src/status.js","webpack://cosmicLib/./src/helpers.js","webpack://cosmicLib/./node_modules/babel-runtime/regenerator/index.js","webpack://cosmicLib/./src/specs.js","webpack://cosmicLib/./src/resolve.js","webpack://cosmicLib/./src/event.js","webpack://cosmicLib/./src/node.js","webpack://cosmicLib/./src/format.js","webpack://cosmicLib/./src/parse.js","webpack://cosmicLib/external \"stellar-sdk\"","webpack://cosmicLib/./node_modules/style-loader/lib/urls.js","webpack://cosmicLib/./node_modules/style-loader/lib/addStyles.js","webpack://cosmicLib/./src/cosmic-lib.css","webpack://cosmicLib/./src/cosmic-lib.css?9f62","webpack://cosmicLib/./src/encode.js","webpack://cosmicLib/./src/prepare.js","webpack://cosmicLib/./src/check.js","webpack://cosmicLib/./src/decode.js","webpack://cosmicLib/./src/convert.js","webpack://cosmicLib/./src/action.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime-module.js","webpack://cosmicLib/(webpack)/buildin/global.js","webpack://cosmicLib/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__9__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","update","fail","cosmicLink","status","continuation","_statusNode","node","appendClass","statusNode","errorContinuation","error","console","log","errors","push","errorsNode","grab","lineNode","create","append","populateHtmlNode","titleNode","textContent","index","Error","delay","thunk","firstCall","memoized","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","transactionOptionalFields","operationMandatoryFields","accountMerge","allowTrust","changeTrust","createAccount","createPassiveOffer","inflation","manageData","manageOffer","pathPayment","payment","setOptions","operationOptionalFields","fieldType","amount","asset","assetCode","authorize","buying","clearFlags","destAsset","destAmount","destination","fee","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","maxTime","medThreshold","memo","minTime","network","offerId","price","path","selling","sendAsset","sendMax","sequence","setFlags","signer","source","startingBalance","trustor","_callee","address","promise","_regenerator2","default","wrap","_context","prev","next","_accountCache","_helpers","accountCacheExpiration","stop","_callee2","account","_context2","match","StellarSdk","FederationServer","sent","account_id","abrupt","t0","_callee3","publicKey","accountResponse","_context3","selectNetwork","getSource","resolveAddress","server","loadAccount","_callee4","signers","entry","StrKey","_context4","getSourceAccount","weight","key","type","replace","decodeSha256Hash","toString","decodePreAuthTx","getSignature","sort","a","b","_callee6","_context6","getSigners","keys","t1","done","t2","_callee7","transactionId","caller","_context7","transactions","transaction","Network","useTestNetwork","usePublicNetwork","_addressResolver","_cacheAccount","_this","_asyncToGenerator","mark","_callee5","tdesc","keypair","hint","_context5","resolveTransaction","getTdesc","signatures","Keypair","fromPublicKey","signatureHint","find","signature","handle","trigger","element","event","onClick","handler","defaultHandler","message","field","window","alert","issuerNode","style","display","allFormats","handleFormat","format","handlers","then","forEach","callback","catch","addFormatHandler","formatHandlers","removeFormatHandler","filter","callFormatHandlers","_len","arguments","formats","Array","_key","childs","child","appendChild","document","createTextNode","clear","innerHTML","newClass","className","copyContent","select","execCommand","attributes","createElement","id","_len2","_key2","concat","destroy","parentNode","removeChild","e","pattern","undefined","querySelector","show","_len3","elements","_key3","hide","_len4","_key4","rewrite","_len5","_key5","trNode","infoNode","opNode","transactionNode","specs","_fieldDesc","_formatOdesc","operations","addressNode","parent","grandpa","title","memo_format","onclick","_ref2","odesc","meaning","msg","_odescToMeaning","query","fieldNode","txt","_typeof","_format","signersNode","listNode","signerNode","animation","_x2","apply","_makeHashNode","hash","textBox","errorNode","_resolveAddressAndUpdate","codeNode","code","assetNode","issuer","assetsArray","assetsArrayNode","date","timestamp","Date","toLocaleString","flags","typeNode","valueNode","setPage","page","_page","encodeURI","makeConverter","_network","Server","dispatch","typeTowardAllUsingDelayed","convert","options","uriToQuery","tx","_guessType","parser","typeParser","typeTowardAll","stripSource","stripSequence","stripSignatures","typeTowardXdr","_transactionNode","tdescToJson","delayed","typeTowardUri","json","getJson","jsonToTdesc","from","to","_this2","getFrom","getTo","converter","uri","split","xdrUri","temp","xdr","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","indexOf","JSON","stringify","fn","stylesInDom","isOldIE","all","atob","getElement","target","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","refs","j","parts","addStyle","listToStyles","list","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","idx","splice","createStyleElement","attrs","addAttrs","el","setAttribute","obj","remove","result","transform","styleIndex","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","join","cssNode","childNodes","content","hmr","locals","encoder","boolean","toISOString","typedValue","preparer","Asset","native","preparedAsset","preparedSigner","ed25519PublicKey","sha256Hash","preAuthTx","Memo","number","fieldValue","toLowerCase","threshold","min","max","num","isNaN","checker","decodedValue","decodeURIComponent","assetsList","isValid","parsedAsset","timeStamp","parse","numerator","denominator","check","decoder","assetLower","builder","operation","_makeTransactionBuilder","_odescToOperation","addOperation","build","prepare","Operation","opts","loadedAccount","Constructor","baseAccount","memoType","memoValue","timebounds","_baseAccount","__proto__","constructor","TransactionBuilder","memo_type","addMemo","queryToJson","queries","argument","decode","_isTransactionField","errorObject","mandatoryFields","_isOperationField","transactionToXdr","toEnvelope","toXDR","xdrToTransaction","Transaction","xdrToQuery","transactionToJson","copy","user","map","_memo","_switch","_arm","_value","timeBounds","line","jsonToQuery","encode","queryToUri","seed","signingPromise","fromSecret","hasSigner","hasSigned","_signingPromise","getTransaction","sign","response","submitTransaction","global","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","rootRecord","completion","rval","dispatchException","exception","context","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","err","previousPromise","callInvokeWithMethodAndArg","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","g","hadRuntime","getOwnPropertyNames","oldRuntime","eval","action","CosmicLink","_classCallCheck","htmlNode","makeHtmlNodes","send","_htmlNode","_signersNode","nodes"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"stellar-sdk\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"stellar-sdk\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory(require(\"stellar-sdk\"));\n\telse\n\t\troot[\"cosmicLib\"] = factory(root[\"stellar-sdk\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__9__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","'use strict'\n\nimport * as node from './node'\n\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * This is mostly about error handling.\n *\n * @module\n */\n\n/**\n * Set `cosmicLink` status as `status` and update statusNode.\n * All status are considered erroneous.\n * Error status should be recorded using the fail function bellow.\n * A valid cosmic link may have no status at all.\n * `status` changes are logged.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} status\n */\nexport function update (cosmicLink, status) {\n  if (cosmicLink.status) return\n  console.log('Set status: ' + status)\n  if (cosmicLink) cosmicLink.status = status\n\n  if (cosmicLink._statusNode) {\n    const title = node.grab('.CL_status', cosmicLink._statusNode)\n    title.textContent = status\n  }\n}\n\n/**\n * Set `cosmicLink` status as error status `status` and update statusNode.\n * This implies that the cosmic link or the underlying transaction is invalid.\n * Then, call `continuation` if any. `continuation` should be a either a\n * function or 'throw'.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\nexport function fail (cosmicLink, status, continuation) {\n  update(cosmicLink, status)\n  if (cosmicLink._statusNode) node.appendClass(cosmicLink.statusNode, 'CL_error')\n  errorContinuation(status, continuation)\n}\n\n/**\n * Append `error` to `cosmicLink`.errors and to the HTML display.\n * Then, call `continuation` if any. `continuation` should be a either a\n * function or 'throw'.\n * `error`s are logged.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\nexport function error (cosmicLink, error, continuation) {\n  console.log(error)\n\n  if (cosmicLink) {\n    if (!cosmicLink.errors) cosmicLink.errors = []\n    cosmicLink.errors.push(error)\n  }\n  if (cosmicLink._statusNode) {\n    const errorsNode = node.grab('.CL_events', cosmicLink._statusNode)\n    const lineNode = node.create('li', '.CL_error', error)\n    node.append(errorsNode, lineNode)\n  }\n\n  errorContinuation(error, continuation)\n}\n\n/**\n * Populate `cosmicLink.statusNode` with status anderrors from\n * `cosmicLink.errors`.\n *\n * @param {CL}\n */\nexport function populateHtmlNode (cosmicLink) {\n  if (cosmicLink.status) {\n    const titleNode = node.grab('.CL_status', cosmicLink.statusNode)\n    titleNode.textContent = cosmicLink.status\n  }\n  if (cosmicLink.errors) {\n    const errorsNode = node.grab('.CL_events', cosmicLink.statusNode)\n    for (let index in cosmicLink.errors) {\n      const error = cosmicLink.errors[index]\n      node.append(errorsNode, node.create('li', '.CL_error', error))\n    }\n  }\n}\n\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with *error as message.\n * If *continuation is undefined, do nothing.\n *\n * @private\n * @param {string} error\n * @param {function|'throw'} [continuation]\n */\nfunction errorContinuation (error, continuation) {\n  if (continuation) {\n    if (continuation === 'throw') throw new Error(error)\n    else continuation(error)\n  }\n}\n","'use strict'\n\n/**\n * Various independent helpers.\n *\n * @module\n */\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nexport function delay (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nexport function timeout (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nexport function capitalize (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nexport function shorter (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","\n/**\n * Contains Stellar transactions specification.\n *\n * @module\n */\n\n/**\n * Transaction optional fields.\n */\nexport const transactionOptionalFields = [\n  'network', 'memo', 'source', 'sequence',\n  'minTime', 'maxTime', 'fee'\n]\n\n/**\n * Operation mandatory fields.\n */\nexport const operationMandatoryFields = {\n  accountMerge: ['destination'],\n  allowTrust: ['assetCode', 'trustor'],\n  changeTrust: ['asset'],\n  createAccount: ['destination', 'startingBalance'],\n  createPassiveOffer: ['selling', 'buying', 'amount', 'price'],\n  inflation: [],\n  manageData: ['name'],\n  manageOffer: ['selling', 'buying', 'amount', 'price'],\n  pathPayment: ['sendAsset', 'sendMax', 'destination', 'destAsset', 'destAmount'],\n  payment: ['asset', 'destination', 'amount'],\n  setOptions: []\n}\n\n/**\n * Operation optionnal fields.\n */\nexport const operationOptionalFields = {\n  accountMerge: ['source'],\n  allowTrust: ['authorize', 'source'],\n  changeTrust: ['limit', 'source'],\n  createAccount: ['source'],\n  createPassiveOffer: ['source'],\n  inflation: ['source'],\n  manageData: ['value', 'source'],\n  manageOffer: ['offerId', 'source'],\n  pathPayment: ['path', 'source'],\n  payment: ['source'],\n  setOptions: ['inflationDest', 'clearFlags', 'setFlags', 'masterWeight',\n    'lowThreshold', 'medThreshold', 'highThreshold', 'signer', 'homeDomain',\n    'source']\n}\n\n/**\n * Field types.\n */\nexport const fieldType = {\n  amount: 'amount',\n  asset: 'asset',\n  assetCode: 'string',\n  authorize: 'boolean',\n  buying: 'asset',\n  clearFlags: 'flags',\n  destAsset: 'asset',\n  destAmount: 'amount',\n  destination: 'address',\n  fee: 'amount',\n  highThreshold: 'threshold',\n  homeDomain: 'string',\n  inflationDest: 'address',\n  limit: 'amount',\n  lowThreshold: 'threshold',\n  masterWeight: 'weight',\n  maxTime: 'date',\n  medThreshold: 'threshold',\n  memo: 'memo',\n  minTime: 'date',\n  network: 'network',\n  offerId: 'string',\n  price: 'price',\n  name: 'string',\n  path: 'assetsArray',\n  selling: 'asset',\n  sendAsset: 'asset',\n  sendMax: 'amount',\n  sequence: 'amount',\n  setFlags: 'flags',\n  signer: 'signer',\n  source: 'address',\n  startingBalance: 'amount',\n  trustor: 'address',\n  value: 'string'\n}\n","'use strict'\n\nimport {shorter, timeout, delay} from './helpers'\nimport * as status from './status'\n\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @module\n */\n\n/**\n * Select the network to be used by `StellarSdk` as being `cosmicLink` current\n * network.\n *\n * @param {CL}\n */\nexport function selectNetwork (cosmicLink) {\n  switch (cosmicLink.network) {\n    case 'test':\n      StellarSdk.Network.useTestNetwork()\n      break\n    case 'public':\n      StellarSdk.Network.usePublicNetwork()\n      break\n    default: throw new Error('Invalid network: ' + cosmicLink.network)\n  }\n}\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nexport let accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst _accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function _cacheAccount (address, promise) {\n  _accountCache[address] = promise\n  await timeout(accountCacheExpiration * 1000)\n  delete _accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * In case of error, change `cosmicLink` status accordingly.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nfunction resolveAddress (cosmicLink, address) {\n  if (_accountCache[address]) return _accountCache[address]\n  const promise = _addressResolver(cosmicLink, address)\n  _cacheAccount(address, promise)\n  return promise\n}\nexports.address = resolveAddress\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address` or write error/status in\n * `cosmicLink`.\n *\n * @private\n * @param {cosmicLink} cosmicLink\n * @param {string} address\n */\nasync function _addressResolver (cosmicLink, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.fail(cosmicLink, 'Invalid address(es)')\n    status.error(cosmicLink, 'Invalid address: ' + shorter(address), 'throw')\n  }\n\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    if (!account.account_id) throw new Error('Empty account')\n    return account\n  } catch (error) {\n    console.log(error)\n    status.fail(cosmicLink, 'Unresolved address(es)')\n    status.error(cosmicLink, \"Can't resolve: \" + shorter(address), 'throw')\n  }\n}\n\nexport async function getSourceAccount (cosmicLink) {\n  cosmicLink.selectNetwork()\n  const source = await cosmicLink.getSource()\n  const account = await resolveAddress(cosmicLink, source)\n  const publicKey = account.account_id\n  try {\n    const accountResponse = await cosmicLink.server.loadAccount(publicKey)\n    return accountResponse\n  } catch (error) {\n    console.log(error)\n    status.error(cosmicLink, `Can't find source account on ${cosmicLink.network} network`)\n    status.fail(cosmicLink, 'Empty source account', 'throw')\n  }\n}\n\n/**\n * Return an array containing the legit signers for `cosmicLink`.\n *\n * @param {CL}\n * @return {Array} Signers\n */\nexport async function getSigners (cosmicLink) {\n  const account = await cosmicLink.getSourceAccount()\n  const signers = []\n  for (let index in account.signers) {\n    const entry = account.signers[index]\n    const StrKey = StellarSdk.StrKey\n    const signer = { weight: entry.weight, value: entry.key }\n    signer.type = entry.type.replace(/^.*_/, '')\n    if (signer.type === 'hash') signer.value = StrKey.decodeSha256Hash(entry.key).toString('hex')\n    if (signer.type === 'tx') {\n      signer.value = StrKey.decodePreAuthTx(entry.key).toString('hex')\n    }\n    signer.getSignature = getSignature(cosmicLink, signer)\n    signers.push(signer)\n  }\n  return signers.sort((a, b) => b.weight - a.weight)\n}\n\nfunction getSignature (cosmicLink, signer) {\n  return delay(async () => {\n    switch (signer.type) {\n      case 'tx':\n        try {\n          await resolveTransaction(cosmicLink, signer.value)\n          return true\n        } catch (error) {\n          return false\n        }\n      case 'hash': return false\n      case 'key':\n        const tdesc = await cosmicLink.getTdesc()\n        if (!tdesc.signatures) return false\n\n        const keypair = StellarSdk.Keypair.fromPublicKey(signer.value)\n        const hint = keypair.signatureHint().toString('base64')\n        return tdesc.signatures.find(entry => {\n          if (entry.hint === hint) return entry.signature\n        })\n    }\n  })\n}\n\nexport async function hasSigned (cosmicLink, type, value) {\n  const signers = await cosmicLink.getSigners()\n  for (let index in signers) {\n    const signer = signers[index]\n    if (\n      signer.type === type &&\n      signer.value === value &&\n      await signer.getSignature()\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nasync function resolveTransaction (cosmicLink, transactionId) {\n  const caller = cosmicLink.server.transactions()\n  return caller.transaction(transactionId).call()\n}\n\n//~ async function getThreshold (cosmicLink) {\n  //~ const signers = await cosmicLink.getSigners()\n  //~ const max = signers.reduce((accum, entry) => accum + entry.weight)\n  //~ const current = signers.reduce((accum, entry) => accum + entry.signature ? entry.weight : 0)\n  //~ return { current: current, max: max, required: 0 }\n//~ }\n","'use strict'\n\nimport {capitalize} from './helpers'\n\nimport * as node from './node'\n\nconst event = exports\n\n/**\n * Contains the methods to trigger and handle events.\n *\n * @module\n */\n\n/**\n * Call handler (in any) defined for `type` in `cosmicLink`. Call it with\n * arguments `cosmicLink`, `value`, `element`; Where `element` is the clicked\n * HTML element and `value` the field value it represents.\n *\n * @param {CL}\n * @param {string} Type The type of `object` as defined in specs.js\n * @param {*}  value Field value in `transaction descriptor` format\n * @param {HTMLElement} element HTML element displaying `value`\n * @return *\n */\nexport function handle (cosmicLink, type, value, element) {\n  if (!cosmicLink || !cosmicLink.onClick) return\n  const handler = cosmicLink.onClick[type]\n  if (handler) return handler(cosmicLink, value, element)\n}\n\nexport function trigger (cosmicLink, type, value, element) {\n  return () => handle(cosmicLink, type, value, element)\n}\n\n/**\n * Default handlers for address and asset onclick events.\n *\n * @namespace\n */\nexport const defaultHandler = {}\n\ndefaultHandler.address = function address (cosmicLink, account) {\n  let message = ''\n  for (let field in account) {\n    message += field + ':\\n' + account[field] + '\\n\\n'\n  }\n  window.alert(message)\n}\n\ndefaultHandler.asset = function (cosmicLink, asset, element) {\n  const issuerNode = node.grab('.CL_assetIssuer', element)\n  if (issuerNode.style.display === 'inline') issuerNode.style.display = 'none'\n  else issuerNode.style.display = 'inline'\n}\n\n// TODO: implement a complete event handling interface.\n// Possible structure for an event object.\n// ~ {\n// ~ type: 'onClick'\n// ~ node: HTMLElement,\n// ~ operation: 0|undefined,\n// ~ field: 'address',\n// ~ value: 'GAWO...',\n// ~ }\n//\n// event.trigger(cosmicLink, eventType, [operation], [field], [value], [node], [add])\n// event.listen(cosmicLink, eventType, handler))\n\nconst allFormats = ['uri', 'query', 'tdesc', 'json', 'transaction', 'xdr']\n\nevent.addFormatHandler = function (cosmicLink, format, callback) {\n  const handlers = cosmicLink.formatHandlers\n  if (!handlers[format]) handlers[format] = []\n  handlers[format].push(callback)\n\n  handleFormat(cosmicLink, format, [callback])\n}\n\nevent.removeFormatHandler = function (cosmicLink, format, callback) {\n  const handlers = cosmicLink.formatHandlers\n  if (!handlers[format]) return\n\n  handlers[format] = handlers[format].filter(entry => entry !== callback)\n}\n\nevent.callFormatHandlers = function (cosmicLink, ...formats) {\n  if (!formats.length) formats = allFormats\n  const handlers = cosmicLink.formatHandlers\n\n  formats.forEach(entry => {\n    if (handlers[entry]) handleFormat(cosmicLink, entry, handlers[entry])\n  })\n}\n\nfunction handleFormat (cosmicLink, format, handlers) {\n  const getter = cosmicLink['get' + capitalize(format)]\n  if (!getter) return\n\n  getter().then(value => {\n    const event = { cosmicLink: cosmicLink, value: value }\n    handlers.forEach(callback => callback(event))\n  }).catch(error => {\n    const event = { cosmicLink: cosmicLink, error: error }\n    handlers.forEach(callback => callback(event))\n  })\n}\n","/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @module\n */\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nexport function append (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === 'string' || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nexport function appendClass (element, newClass) {\n  element.className = element.className + ' ' + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} element\n * */\nexport function clear (element) {\n  element.innerHTML = ''\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nexport function copyContent (element) {\n  element.select()\n  document.execCommand('copy')\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nexport function create (name, attributes, ...childs) {\n  if (!name) throw new Error('Missing tag name')\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === 'string') {\n    switch (attributes.substr(0, 1)) {\n      case '#': element.id = attributes.substr(1); break\n      case '.': element.className = attributes.substr(1); break\n      default: throw new Error('Unhandled attribute')\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nexport function destroy (element) {\n  try {\n    element.innerHTML = ''\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (e) { console.log(e) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nexport function grab (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nexport function show (...elements) {\n  elements.forEach(element => element.style.display = 'block')\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nexport function hide (...elements) {\n  elements.forEach(element => element.style.display = 'none')\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nexport function rewrite (element, ...childs) {\n  clear(element)\n  append(element, ...childs)\n}\n","'use strict'\n\nimport * as node from './node'\nimport {shorter} from './helpers'\n\nimport * as specs from './specs'\nimport * as status from './status'\nimport * as resolve from './resolve'\nimport * as event from './event'\n\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @module\n */\n\n/**\n * Populate `cosmicLink.transactionNode` with a description of `transaction\n * descriptor`.\n *\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n */\nexport async function tdesc (cosmicLink) {\n  const trNode = cosmicLink.transactionNode\n  const tdesc = await cosmicLink.getTdesc()\n  node.clear(trNode)\n\n  let infoNode\n  specs.transactionOptionalFields.forEach(entry => {\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = node.create('ul', '.CL_sideInfo')\n      const lineNode = node.create('li', {},\n        _fieldDesc[entry] + ': ',\n        field(cosmicLink, entry, tdesc[entry])\n      )\n      node.append(infoNode, lineNode)\n    }\n  })\n\n  if (infoNode) node.append(trNode, infoNode)\n\n  try {\n    const opNode = _formatOdesc(cosmicLink, tdesc.operations[0])\n    node.append(trNode, opNode)\n    exports.signers(cosmicLink)\n  } catch (error) {\n    console.log(error)\n    status.error(cosmicLink, 'Unhandled formatting error')\n  }\n}\n\n/**\n * Transaction field meaning.\n * @private\n */\nconst _fieldDesc = {\n  source: 'Source',\n  fee: 'Fees',\n  minTime: 'Valid only after',\n  maxTime: 'Valid only before',\n  memo: 'Memo',\n\n  network: 'Network',\n  sequence: 'Sequence'\n}\n\n/**\n * Return an HTMLElement with `operation descriptor` in human language.\n *\n * @private\n * @param {CL}\n * @param {Object} odesc Operation Descriptor\n */\nfunction _formatOdesc (cosmicLink, odesc) {\n  const opNode = node.create('div', '.CL_operation')\n  let meaning = _odescToMeaning(odesc)\n\n  while (meaning) {\n    if (meaning.substr(0, 1) === '{') {\n      const query = meaning.substr(1).replace(/}.*/, '')\n      meaning = meaning.replace(/^[^}]*}/, '')\n      if (query === 'newline') {\n        if (meaning === '') break\n        node.append(opNode, node.create('br'))\n      } else {\n        const fieldNode = field(cosmicLink, query, odesc[query])\n        node.append(opNode, fieldNode)\n      }\n    } else {\n      const txt = meaning.replace(/{.*/, '')\n      meaning = meaning.replace(/^[^{]*/, '')\n      node.append(opNode, txt)\n    }\n  }\n  return opNode\n}\n\n/**\n * Return a string that describe the meaning of `operation descriptor`.\n *\n * @private\n * @param {Object} odesc Operation descriptor\n * @return {string} Meaning of `operation descriptor`\n */\nfunction _odescToMeaning (odesc) {\n  let msg\n  switch (odesc.type) {\n    case 'accountMerge':\n      return 'Merge account inside {destination}'\n    case 'allowTrust':\n      if (odesc.authorize) {\n        return 'Allow usage of your asset {assetCode} to {trustor}'\n      } else {\n        return 'Deny usage of your asset {assetCode} to {trustor}'\n      }\n    case 'changeTrust':\n      if (odesc.limit === '0') {\n        return 'Refuse asset {asset}'\n      } else if (odesc.limit) {\n        return 'Set holding limit as {limit} for asset {asset}'\n      } else {\n        return 'Accept asset {asset}'\n      }\n    case 'createAccount':\n      return 'Create account {destination} and send it {startingBalance} XLM'\n    case 'createPassiveOffer':\n      return 'Passive offer of {amount} {selling} at {price} {buying} / unit'\n    case 'inflation':\n      return 'Run inflation'\n    case 'manageData':\n      if (odesc.value) {\n        return \"Set data entry '{name}' as '{value}'\"\n      } else {\n        return \"Delete data entry '{name}'\"\n      }\n    case 'manageOffer':\n      if (!odesc.offerId || odesc.offerId === '0') {\n        return 'Offer {amount} {selling} at {price} {buying} / unit'\n      } else if (odesc.amount !== '0') {\n        return \"Change offer '{offerId}' to: offer {amount} {selling} at \" +\n          '{price} {buying} / unit'\n      } else {\n        return \"Delete offer '{offerId}'\"\n      }\n    case 'pathPayment':\n      msg = 'Send {destAmount} {destAsset} to {destination} for a maximum ' +\n        'of {sendMax} {sendAsset}'\n      if (odesc.path) msg += ' using conversion path: {path}'\n      return msg\n    case 'payment':\n      return 'Send {amount} {asset} to {destination}'\n    case 'setOptions':\n      msg = ''\n      if (odesc.inflationDest) {\n        msg += 'Set inflation destination to: {inflationDest}{newline}'\n      }\n      if (odesc.clearFlags) msg += 'Clear flag(s): {clearFlags}{newline}'\n      if (odesc.setFlags) msg += 'Set flag(s): {setFlags}{newline}'\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === '0') {\n          msg += 'Delete master key{newline}'\n        } else {\n          msg += 'Set master key weight at: {masterWeight}{newline}'\n        }\n      }\n      ['lowThreshold', 'medThreshold', 'highThreshold'].forEach(field => {\n        if (odesc[field]) msg += 'Set ' + field + ' at: {' + field + '}{newline}'\n      })\n      if (odesc.signer) {\n        if (odesc.signer.weight === '0') msg += 'Remove signer: {signer}{newline}'\n        else msg += 'Set signer: {signer}{newline}'\n      }\n      if (odesc.homeDomain) msg += 'Set home domain: {homeDomain}{newline}'\n      if (odesc.homeDomain === '') msg += 'Unset home domain'\n      if (!msg) msg = 'Do nothing'\n      return msg\n    default:\n      throw new Error('Unknow operation: ' + odesc.type)\n  }\n}\n\n/**\n * Return an HTML element exposing `value`.\n *\n * @param {CL}\n * @param {string} field The field name of `value` as defined in `spec.js`\n * @return {HTLMElement} `value` formatted in HTML/CSS\n */\nexport function field (cosmicLink, field, value) {\n  let type = specs.fieldType[field]\n  if (!type) throw new Error('Unknow field: ' + field)\n\n  if (typeof value === 'object' && value.error) type = 'error'\n\n  const formatter = _format[type] || _format.string\n  const fieldNode = formatter(cosmicLink, value)\n\n  fieldNode.className = 'CL_' + type\n  fieldNode.onClick = event.trigger(cosmicLink, type, value, fieldNode)\n  return fieldNode\n}\n\n/**\n * Returns an HTML node that displays signers for the transaction represented by\n * `cosmicLink`.\n *\n * @param {CL}\n * @return {HTMLElement} - A `div` element containing the signers\n */\nexports.signers = async function (cosmicLink) {\n  const signers = await cosmicLink.getSigners()\n  const tdesc = await cosmicLink.getTdesc()\n  if (signers.length === 1 && !tdesc.signatures) return\n\n  const signersNode = cosmicLink.signersNode\n  node.clear(signersNode)\n\n  const titleNode = node.create('span', '.CL_threshold', 'Signatures')\n  const listNode = node.create('ul', '.CL_signers')\n  node.append(cosmicLink.signersNode, titleNode, listNode)\n\n  signers.forEach(entry => {\n    const signerNode = _format.signer(cosmicLink, entry)\n    const animation = node.create('span', '.CL_loadingAnim')\n    const lineNode = node.create('li', null, signerNode, animation)\n    entry.node = lineNode\n    entry.getSignature().then(signature => {\n      signature && node.appendClass(lineNode, 'CL_signed')\n      node.destroy(animation)\n    })\n    node.append(listNode, lineNode)\n  })\n}\n\n/******************************************************************************/\n\nlet _format = {}\n\n_format.string = function (cosmicLink, string) {\n  return document.createTextNode(string)\n}\n\n_format.error = function (cosmicLink, error) {\n  const errorNode = node.create('span', '.CL_error', error.value)\n  errorNode.title = 'Invalid value'\n  return errorNode\n}\n\n_format.address = function (cosmicLink, address) {\n  const addressNode = node.create('span',\n    { title: 'Resolving...', className: 'CL_address' },\n    shorter(address),\n    node.create('span', '.CL_loadingAnim')\n  )\n\n  _resolveAddressAndUpdate(cosmicLink, address, addressNode)\n  return addressNode\n}\n\nasync function _resolveAddressAndUpdate (cosmicLink, address, addressNode) {\n  try {\n    const account = await resolve.address(cosmicLink, address)\n\n    addressNode.title = account.account_id\n    if (account.memo) {\n      addressNode.title += `\\nMemo (${account.memo_format}): ${account.memo}`\n    }\n\n    addressNode.onclick = event.trigger(cosmicLink, 'address', account,\n      addressNode)\n  } catch (error) {\n    console.log(error)\n    addressNode.title = \"Can't resolve address\"\n    node.appendClass(addressNode, 'CL_error')\n\n    const parent = addressNode.parentNode\n    if (parent.className === 'CL_assetIssuer') {\n      parent.style.display = 'inline'\n    }\n  }\n\n  node.destroy(node.grab('.CL_loadingAnim', addressNode))\n  const grandpa = addressNode.parentNode.parentNode\n  if (grandpa && grandpa.className === 'CL_asset') {\n    node.destroy(node.grab('.CL_loadingAnim', grandpa))\n  }\n}\n\n_format.asset = function (cosmicLink, asset) {\n  const codeNode = node.create('span', '.CL_assetCode', asset.code)\n  const issuerNode = node.create('span', '.CL_assetIssuer')\n  const assetNode = node.create('span', '.CL_asset', codeNode, issuerNode)\n\n  codeNode.onclick = event.trigger(cosmicLink, 'asset', asset, assetNode)\n\n  if (asset.issuer) {\n    codeNode.title = 'Issued by ' + asset.issuer\n    node.append(issuerNode, ' issued by ')\n    node.append(issuerNode, _format.address(cosmicLink, asset.issuer))\n    node.append(codeNode, node.create('span', '.CL_loadingAnim'))\n  } else {\n    codeNode.title = 'Native asset'\n    node.append(issuerNode, ' native asset')\n  }\n\n  return assetNode\n}\n\n_format.assetsArray = function (cosmicLink, assetsArray) {\n  const assetsArrayNode = node.create('span')\n  for (let i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) node.append(assetsArrayNode, ', ')\n    node.append(assetsArrayNode, _format.asset(cosmicLink, assetsArray[i]))\n  }\n\n  return assetsArrayNode\n}\n\n_format.date = function (cosmicLink, timestamp) {\n  const date = new Date(timestamp * 1000)\n  return node.create('span', {}, date.toLocaleString())\n}\n\n_format.flags = function (cosmicLink, flags) {\n  let string = ''\n  if (flags >= 4) {\n    string = 'immutable'\n    flags = flags - 4\n  }\n  if (flags >= 2) {\n    if (string) string = ', ' + string\n    string = 'revocable' + string\n    flags = flags - 2\n  }\n  if (+flags === 1) {\n    if (string) string = ', ' + string\n    string = 'required' + string\n  }\n\n  return node.create('span', {}, string)\n}\n\n_format.memo = function (cosmicLink, memo) {\n  const typeNode = node.create('span', '.CL_memoType', memo.type)\n  let valueNode\n  if (memo.value.length > 30) {\n    valueNode = _makeHashNode(memo.value)\n    node.appendClass(valueNode, '.CL_memoValue')\n  } else {\n    valueNode = node.create('span', '.CL_memoValue', memo.value)\n  }\n  return node.create('span', {}, '(', typeNode, ') ', valueNode)\n}\n\n_format.price = function (cosmicLink, price) {\n  if (typeof price === 'string') {\n    return node.create('span', {}, price)\n  } else {\n    return node.create('span', {}, price.n / price.d + '')\n  }\n}\n\n_format.signer = function (cosmicLink, signer) {\n  const signerNode = node.create('span')\n  switch (signer.type) {\n    case 'key':\n      node.append(signerNode, 'Account ')\n      node.append(signerNode, _format.address(cosmicLink, signer.value))\n      break\n    case 'hash':\n      node.append(signerNode,\n        'Key whose hash is ',\n        _makeHashNode(signer.value)\n      )\n      break\n    case 'tx':\n      node.append(signerNode,\n        'Transaction ',\n        _makeHashNode(signer.value)\n      )\n  }\n  if (signer.weight > 1) {\n    node.append(signerNode, ' (weight: ' + signer.weight + ')')\n  }\n  return signerNode\n}\n\nfunction _makeHashNode (hash) {\n  return node.create('span',\n    { className: 'CL_hash', title: hash, onclick: _copier(hash) },\n    shorter(hash)\n  )\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nfunction _copier (string) {\n  return function () {\n    const textBox = node.create('textarea', {}, string)\n    node.append(node.grab('body'), textBox)\n    node.copyContent(textBox)\n    node.destroy(textBox)\n  }\n}\n","'use strict'\n\nimport {capitalize, delay} from './helpers'\n\nimport * as convert from './convert'\nimport * as format from './format'\nimport * as status from './status'\nimport * as event from './event'\n\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @module\n */\n\n/**\n * Set `page` as the base URI for `cosmicLink`. Update the URI getter\n * accordingly.\n */\nexport function setPage (cosmicLink, page) {\n  cosmicLink._page = encodeURI(page)\n  makeConverter(cosmicLink, 'query', 'uri')\n}\n\n/**\n * Set `cosmicLink` `network`. Throw an error if `network` is not valid.\n *\n * @param {CL}\n * @param {string} network Either `public` or `test`\n */\nexport function network (cosmicLink, network) {\n  cosmicLink._network = network\n  if (network === 'test') {\n    cosmicLink.server = new StellarSdk.Server('https://horizon-testnet.stellar.org')\n  } else if (network === 'public') {\n    cosmicLink.server = new StellarSdk.Server('https://horizon.stellar.org')\n  } else {\n    cosmicLink.server = null\n    status.error(cosmicLink, 'Invalid network: ' + network)\n    status.fail(cosmicLink, 'Invalid network', 'throw')\n  }\n}\n\n/**\n * Setup the getters for each format form `cosmicLink`, using `value` and\n * `...options` as input. The six getters are:\n * * CosmicLink.getUri()\n * * CosmicLink.getQuery()\n * * CosmicLink.getTdesc()\n * * CosmicLink.getJson()\n * * CosmicLink.getTransaction()\n * * CosmicLink.getXdr()\n * Each format offers a way to represent the same transaction. This function\n * only setup the getters, which returns a promise resolving to the transaction\n * in the corresponding format. The conversion only occurs if/when the getter\n * is called.\n *\n * @param {CL}\n * @param {string|Object} value A transaction in on of the supported format\n * @param {Object} options The options as specified for CosmicLink constructor\n * @return {void}\n */\nexport function dispatch (cosmicLink, value, options = {}) {\n  const type = _guessType(value)\n  const parser = typeParser[type]\n\n  /// Get network parameter now.\n  if (\n    (type === 'uri' || type === 'query' || type === 'xdrUri') &&\n    value.match('&network=')\n  ) {\n    const network = value.replace(/.*&network=/, '').replace(/&.*/, '')\n    try { cosmicLink.network = network } catch (error) {}\n  }\n\n  if (parser) parser(cosmicLink, value, options)\n  else typeTowardAll(cosmicLink, type, value, options)\n\n  /// A transaction with sequence number uses xdrUri format.\n  if (type === 'xdr' || type === 'transaction') {\n    if (options.stripSource || options.stripSequence || options.stripSignatures) {\n      typeTowardXdr(cosmicLink, 'json')\n    }\n    if (!options.stripSource && !options.stripSequence) {\n      makeConverter(cosmicLink, 'xdr', 'query', options)\n      makeConverter(cosmicLink, 'query', 'uri')\n    }\n  }\n\n  event.callFormatHandlers(cosmicLink)\n\n  if (cosmicLink._transactionNode) {\n    cosmicLink.getTdesc()\n      .then(tdesc => format.tdesc(cosmicLink, tdesc))\n      .catch(console.log)\n  }\n}\n\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n *\n * @private\n * @param {string|Object} value Either a cosmic link, a query, a `transaction\n *     descriptor` formatted as object or JSON, a Stellar Transaction object or\n *     a Stellar transaction XDR.\n * @return {string} type Type of `value`\n */\nfunction _guessType (value) {\n  let type\n  if (typeof value === 'string') {\n    const query = convert.uriToQuery('', value)\n    if (query && query.substr(0, 5) === '?xdr=') type = 'xdrUri'\n    else if (value.substr(0, 1) === '?') type = 'query'\n    else if (value.substr(0, 1) === '{') type = 'json'\n    else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = 'xdr'\n    else type = 'uri'\n  } else {\n    if (value.tx) type = 'transaction'\n    else type = 'tdesc'\n  }\n  return type\n}\n\n/**\n * Per-type customization of the generic parsing process.\n *\n * @private\n * @namespace\n */\nconst typeParser = {}\n\ntypeParser.uri = function (cosmicLink, uri) {\n  const page = uri.split('?')[0]\n  const query = convert.uriToQuery(cosmicLink, uri)\n  cosmicLink._page = encodeURI(page)\n  typeTowardAll(cosmicLink, 'query', query)\n}\n\ntypeParser.xdrUri = function (cosmicLink, xdrUri) {\n  const page = xdrUri.split('?')[0]\n  if (page) cosmicLink._page = encodeURI(page)\n\n  const query = convert.uriToQuery(cosmicLink, xdrUri)\n  const temp = query.split('&')\n  const xdr = temp[0].substr(5)\n\n  let options = {}\n  temp.slice(1).forEach(entry => {\n    let field = entry.replace(/=.*$/, '')\n    let value = entry.substr(field.length + 1)\n\n    switch (field) {\n      case 'stripSignatures':\n        options.stripSignatures = true\n        break\n      case 'stripSequence':\n        options.stripSequence = true\n        break\n      case 'stripSource':\n        options.stripSource = true\n        break\n      case 'network':\n        options.network = value\n        break\n      default:\n        status.fail(cosmicLink, 'Invalid query')\n        status.error(cosmicLink, 'Unknow option: ' + entry)\n    }\n  })\n\n  dispatch(cosmicLink, xdr, options)\n}\n\n/**\n * Setup all formats getters for `cosmicLink` using entry point `value`, which\n * is a transaction formatted in `type`.\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {*} value The value for `type`\n */\nfunction typeTowardAll (cosmicLink, type, value, ...options) {\n  if (type === 'tdesc') {\n    type = 'json'\n    value = convert.tdescToJson(cosmicLink, value, ...options)\n  }\n\n  typeTowardAllUsingDelayed(cosmicLink, type, delay(() => value), ...options)\n}\n\n/**\n * Setup all formats getters for `cosmicLink` using entry point `delayed`. Here\n * we name `delayed` a function that returns a promise of the transaction\n * formatted in `type`.\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {function} delayed A function that return a promise for `type`\n */\nexport function typeTowardAllUsingDelayed (cosmicLink, type, delayed, ...options) {\n  const getter = 'get' + capitalize(type)\n  cosmicLink[getter] = delayed\n\n  if (type !== 'xdr') typeTowardXdr(cosmicLink, type, ...options)\n  if (type !== 'uri') typeTowardUri(cosmicLink, type, ...options)\n  cosmicLink.getTdesc = async () => {\n    const json = await cosmicLink.getJson()\n    return convert.jsonToTdesc(cosmicLink, json)\n  }\n}\n\n/**\n * Setup format getters for `cosmicLink` starting from the one following `type`\n * until xdr. For example, if `type` is 'query', it will setup\n * `cosmicLink.getJson`, `cosmicLink.getTransaction` and `cosmicLink.getXdr`.\n *\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'transaction'\n * @param {*} value The value of `type`\n */\nfunction typeTowardXdr (cosmicLink, type, ...options) {\n  switch (type) {\n    case 'uri': makeConverter(cosmicLink, 'uri', 'query', ...options)\n    case 'query': makeConverter(cosmicLink, 'query', 'json', ...options)\n    case 'json': makeConverter(cosmicLink, 'json', 'transaction', ...options)\n    case 'transaction': makeConverter(cosmicLink, 'transaction', 'xdr', ...options)\n      break\n    default: throw new Error('Invalid type: ' + type)\n  }\n}\n\n/**\n * Setup format getters for `cosmicLink` starting from the one following `type`\n * until xdr. For example, if `type` is 'json', it will setup\n * `cosmicLink.getQuery` and `cosmicLink.getUri`.\n *\n * @param {CL}\n * @param {string} type One of 'xdr', 'transaction', 'json', 'query'\n */\nfunction typeTowardUri (cosmicLink, type, ...options) {\n  switch (type) {\n    case 'xdr': makeConverter(cosmicLink, 'xdr', 'transaction', ...options)\n    case 'transaction': makeConverter(cosmicLink, 'transaction', 'json', ...options)\n    case 'json': makeConverter(cosmicLink, 'json', 'query', ...options)\n    case 'query': makeConverter(cosmicLink, 'query', 'uri', ...options)\n      break\n    default: throw new Error('Invalid type: ' + type)\n  }\n}\n\n/**\n * Setup format getter get`to` for `cosmicLink` using `from`. In other words,\n * if `from` is 'uri' and `to` is 'query', it will setup `cosmicLink.getQuery`\n * to be computed from uri.\n *\n * This function uses existing conversion functions in 'convert' module.\n * i.e.: arbitrary conversion like from query to transaction won't do.\n *\n * @param {CL}\n * @param {string} from One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {string} to One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                    'xdr'\n */\nexport function makeConverter (cosmicLink, from, to, ...options) {\n  const getFrom = 'get' + capitalize(from)\n  const getTo = 'get' + capitalize(to)\n  const converter = from + 'To' + capitalize(to)\n\n  const getter = cosmicLink[getFrom]\n  cosmicLink[getTo] = delay(async () => {\n    const value = await getter()\n    return convert[converter](cosmicLink, value, ...options)\n  })\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = \"/* cosmiclib styling */\\n\\n.CL_assetCode,\\n.CL_address\\n{\\n    display: inline-block;\\n    margin: 0.1em;\\n    border: 1px solid lightgrey;\\n    background-color: #F1F1F1;\\n    border-radius: 0.2em;\\n    padding: 0.1em;\\n    color: #4C4C4C;\\n}\\n\\n.CL_assetCode:hover,\\n.CL_address:hover\\n{\\n    cursor: pointer;\\n    background-color: lightgrey;\\n}\\n\\n.CL_asset\\n{\\n    background-color: ghostwhite;\\n    border-left: 0;\\n    border-right: 0;\\n}\\n\\n.CL_assetIssuer\\n{\\n    display: none;\\n}\\n\\n.CL_hash:hover\\n{\\n    background-color: ghostwhite;\\n    cursor: pointer;\\n}\\n\\n.CL_done,\\n.CL_signed\\n{\\n    border: 0.1em solid mediumseagreen;\\n    border-radius: 0.2em;\\n    background-color: lightgreen;\\n    padding: 0.1em;\\n    color: black;\\n}\\n\\n.CL_error\\n{\\n    border: 0.1em solid tomato;\\n    border-radius: 0.2em;\\n    background-color: salmon;\\n    padding: 0.1em;\\n    color: black;\\n}\\n\\n/*** Transaction node styling ***/\\n\\n.CL_transactionNode\\n{\\n    margin: 0.5em 0;\\n}\\n\\n.CL_transactionNode ul.CL_sideInfo\\n{\\n    border-left: 0.2em solid lightgrey;\\n    padding-left: 0.1em;\\n    margin: 0;\\n    list-style-type: none;\\n    list-style-position: inside;\\n    font-size: 0.9em;\\n}\\n\\n\\n/*** Status/Signers node styling ***/\\n\\n.CL_statusNode,\\n.CL_signersNode\\n{\\n    margin: 0.5em;\\n    padding: 0;\\n}\\n\\n.CL_status,\\n.CL_threshold\\n{\\n    margin: 0;\\n    font-size: 0.85em;\\n    font-weight: bold;\\n    text-transform: uppercase;\\n    font-stretch: condensed;\\n}\\n\\n.CL_statusNode.CL_error\\n{\\n    background-color: white;\\n    border: none;\\n}\\n\\n.CL_events,\\n.CL_signers\\n{\\n    list-style-type: none;\\n    list-style-position: inside;\\n    font-size: 0.9 em;\\n    padding: 0;\\n    margin: 0;\\n}\\n\\n.CL_events li,\\n.CL_signers li\\n{\\n    margin:0 ;\\n    border-width: 0;\\n    padding-left: 0.2em;\\n    border-radius: 0;\\n}\\n\\n.CL_events li.CL_done,\\n.CL_signers li.CL_signed\\n{\\n    border-left: 0.3em solid mediumseagreen;\\n\\n}\\n\\n.CL_events li.CL_error\\n{\\n    border-left: 0.3em solid tomato;\\n}\\n\\n/* Loading animation */\\n\\n.CL_loadingAnim {\\n    display: inline-block;\\n    width: 0.7em;\\n    height: 0.7em;\\n    margin: 0 0.2em;\\n    border: 0.2em solid rgba(105,105,105,1);\\n    border-top-color: rgba(105,105,105,0.4);\\n    border-bottom-color: rgba(105,105,105,0.4);\\n    border-radius: 50%;\\n    -webkit-animation: CL_spin 1s linear infinite;\\n            animation: CL_spin 1s linear infinite;\\n}\\n\\n@-webkit-keyframes CL_spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n\\n@keyframes CL_spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n\"","\nvar content = require(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","'use strict'\n\nimport * as specs from './specs'\n\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @module\n */\n\nexport function field (cosmicLink, field, value) {\n  let result = value\n  const type = specs.fieldType[field]\n  if (type) {\n    const encoder = exports[type]\n    if (encoder) result = encoder(cosmicLink, value)\n  }\n  if (result === undefined) return ''\n  else return '&' + field + '=' + result\n}\n\n/******************************************************************************/\n\nexport function asset (cosmicLink, asset) {\n  if (asset.issuer) return asset.code + ':' + asset.issuer\n}\n\nexport function assetsArray (cosmicLink, assetsArray) {\n  let string = ''\n  assetsArray.forEach(entry => {\n    if (string) string = string + ','\n    string = string + asset(cosmicLink, entry)\n  })\n  return string\n}\n\nexport function boolean (cosmicLink, boolean) {\n  if (!boolean) return 'false'\n}\n\nexport function date (cosmicLink, timestamp) {\n  const date = new Date(timestamp * 1000)\n  const isoString = date.toISOString()\n    .replace(/\\.00.000/, '')\n    .replace(/\\.000/, '')\n    .replace(/T00:00:00Z/, '')\n  return isoString\n}\n\nexport function memo (cosmicLink, memo) {\n  return memo.type + ':' + memo.value\n}\n\nexport function signer (cosmicLink, signer) {\n  return signer.weight + ':' + signer.type + ':' + signer.value\n}\n","'use strict'\n\nimport * as specs from './specs'\nimport * as resolve from './resolve'\nimport * as status from './status'\n\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @module\n */\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {any} value\n */\nexport async function fieldValue (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return await typedValue(cosmicLink, type, value)\n  else status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n}\n\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {any} value\n */\nexport async function typedValue (cosmicLink, type, value) {\n  const preparer = exports[type]\n  if (preparer) return await preparer(cosmicLink, value)\n  else return value\n}\n\n/******************************************************************************/\n\n/**\n * Returns the `publicKey` for `address`.\n *\n * @param {CL}\n * @param {string} Address\n * @return {publicKey}\n */\nexport async function address (cosmicLink, address) {\n  const account = await resolve.address(cosmicLink, address)\n  return account.account_id\n}\n\n/**\n * Returns the Asset object equivalent to cosmic link `asset`.\n *\n * @param {CL}\n * @param {string} asset\n * @return {Asset}\n */\nexport async function asset (cosmicLink, asset) {\n  if (asset.issuer) {\n    const publicKey = await address(cosmicLink, asset.issuer)\n    return new StellarSdk.Asset(asset.code, publicKey)\n  } else {\n    return StellarSdk.Asset.native()\n  }\n}\n\n/**\n * Returns an array of Assets object equivalent to cosmic link `assetsArray`.\n *\n * @param {CL}\n * @param {Array.string} assetsArray\n * @return {Array.Asset}\n */\nexport async function assetsArray (cosmicLink, assetsArray) {\n  let path = []\n  for (let index in assetsArray) {\n    const string = assetsArray[index]\n    const preparedAsset = await asset(cosmicLink, string)\n    path.push(preparedAsset)\n  }\n  return path\n}\n\n/**\n * Returns a Stellar Memo equivalent to cosmic link `memo`.\n *\n * @param {CL}\n * @param {Object} memo { type: t, value: v}\n * @return {Memo}\n */\nexport function memo (cosmicLink, memo) {\n  return new StellarSdk.Memo(memo.type, memo.value)\n}\n\n/**\n * Return a Signer object equivalent to cosmic link `signer`,\n *\n * @param {CL}\n * @param {Object} signer { weigth: w, type: t, value: v }\n * @return {Signer}\n */\nexport async function signer (cosmicLink, signer) {\n  let preparedSigner = { weight: signer.weight }\n  switch (signer.type) {\n    case 'key':\n      const publicKey = await address(cosmicLink, signer.value)\n      preparedSigner.ed25519PublicKey = publicKey\n      break\n    case 'hash':\n      preparedSigner.sha256Hash = signer.value\n      break\n    case 'tx':\n      preparedSigner.preAuthTx = signer.value\n      break\n  }\n  return preparedSigner\n}\n","'use strict'\n\nimport * as status from './status'\nimport * as specs from './specs'\n\n/**\n * Provide checks for varous type of field used in cosmic links. In case of\n * error, `cosmicLink` is updated accordingly.\n *\n * This module may no be type-complete and new type checks got added only when\n * needed.\n *\n * The check apply on values using the cosmic link JSON format.\n *\n * @module\n */\n\n/**\n * Generic check for numbers. Check that `value` is a number or a string\n * representing a number. `type` is for the customization of the message in case\n * of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\nexport function number (cosmicLink, value, type = 'number', min, max) {\n  const num = +value\n  if (isNaN(num)) {\n    status.error(cosmicLink, 'Invalid ' + type + ' (should be a number): ' +\n        value, 'throw')\n  } else if ((min && num < min) || (max && num > max)) {\n    status.error(cosmicLink, 'Invalid ' + type +\n      ' (should be between ' + min + ' and ' + max + ' ): ' + value, 'throw')\n  }\n}\n\n/**\n * Check that `value` respect the cosmic link JSON format for `field`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {string} value\n */\nexport function fieldValue (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (type) typedValue(cosmicLink, type, value)\n  else status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n}\n\n/**\n * Check that `value` respect the cosmic link JSON format for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {string} value\n */\nexport function typedValue (cosmicLink, type, value) {\n  const checker = exports[type]\n  if (checker) checker(cosmicLink, value)\n}\n\n/******************************************************************************/\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {object} asset\n */\nexport function asset (cosmicLink, asset) {\n  const code = asset.code.toLowerCase()\n  if (!asset.issuer && code !== 'xlm' && code !== 'native') {\n    status.error(cosmicLink, 'Missing issuer for asset: ' + code, 'throw')\n  }\n}\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {string|number} amount\n */\nexport function amount (cosmicLink, amount) {\n  number(cosmicLink, amount, 'amount')\n}\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {object} signer\n */\nexport function signer (cosmicLink, signer) {\n  number(cosmicLink, signer.weight, 'weight', 0, 255)\n  switch (signer.type) {\n    case 'key': break\n    case 'hash':\n    case 'tx':\n      if (signer.value.length !== 64 || !signer.value.match(/[0-9a-f]*/)) {\n        status.error(cosmicLink, 'Invalid hash (expecting sha256sum)', 'throw')\n      }\n      break\n    default:\n      status.error(cosmicLink, 'Invalid signer type: ' + signer.type, 'throw')\n  }\n}\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {string|number} threshold\n */\nexport function threshold (cosmicLink, threshold) {\n  number(cosmicLink, threshold, 'threshold', 0, 255)\n}\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {string|number} weight\n */\nexport function weight (cosmicLink, weight) {\n  number(cosmicLink, weight, 'weight', 0, 255)\n}\n","'use strict'\n\nimport {shorter} from './helpers'\nimport * as status from './status'\nimport * as check from './check'\nimport * as specs from './specs'\n\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `cosmicLink` object\n * and HTML nodes are updated accordingly.\n *\n * @module\n */\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {string} value\n */\nexport function fieldValue (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  const decodedValue = decodeURIComponent(value)\n  if (type) return typedValue(cosmicLink, type, decodedValue)\n  /// This error will be handled latter in convert.queryToTdesc()\n  else throw ''\n}\n\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {string} value\n */\nexport function typedValue (cosmicLink, type, value) {\n  const decoder = exports[type]\n  if (decoder) return decoder(cosmicLink, value)\n  else return value\n}\n\n/******************************************************************************/\n\n/**\n * Decode `amount` to cosmic link format.\n *\n * @param [cosmicLink] cosmicLink\n * @param [string] amount\n * @return [string]\n */\nexport function amount (cosmicLink, amount) {\n  check.amount(cosmicLink, amount)\n  return amount\n}\n\n/**\n * Decode `asset` to cosmic link format: { code: c, issuer: i }.\n *\n * @param [cosmicLink] cosmicLink\n * @param [string] asset Either 'code:issuer', 'native' or 'XLM'\n * @return [Object]\n */\nexport function asset (cosmicLink, asset) {\n  const assetLower = asset.toLowerCase()\n  if (assetLower === 'xlm' || assetLower === 'native') {\n    return { code: 'XLM' }\n  } else {\n    const temp = asset.split(':')\n    const object = { code: temp[0], issuer: temp[1] }\n    check.asset(cosmicLink, object)\n    return object\n  }\n}\n\n/**\n * Decode `assetList` to cosmic link format.\n *\n * @param [cosmicLink] cosmicLink\n * @param [string] assetsList Assets in URI format separated by comas\n * @return [Object]\n */\nexport function assetsArray (cosmicLink, assetsList) {\n  const strArray = assetsList.split(',')\n  let assetsArray = []\n  let isValid = true\n\n  strArray.forEach(value => {\n    try {\n      const parsedAsset = asset(cosmicLink, value)\n      assetsArray.push(parsedAsset)\n    } catch (error) {\n      console.log(error)\n      isValid = false\n    }\n  })\n\n  if (!isValid) status.error(cosmicLink, 'Invalid asset path', 'throw')\n  return assetsArray\n}\n\n/**\n * Convert `string` to corresponding boolean.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} string boolean\n * @return {boolean}\n */\nexport function boolean (cosmicLink, string) {\n  switch (string) {\n    case 'true': return true\n    case 'false': return false\n    default: status.error(cosmicLink, 'Invalid boolean: ' + string, 'throw')\n  }\n}\n\n/**\n * Convert an ISO 8601 formatted date string to the UNIX timestamp format used\n * in Stellar transactions.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} string ISO 8601 date\n * @return {timestamp}\n */\nexport function date (cosmicLink, string) {\n  const timeStamp = Date.parse(string)\n  if (isNaN(timeStamp)) {\n    status.error(cosmicLink, 'Invalid date (expecting ISO format): ' + string, 'throw')\n  }\n  return timeStamp / 1000\n}\n\n/**\n * Convert a string encoded `memo` (i.e. 'type:value') to an equivalent object\n * using cosmic link representation.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} memo\n * @return {object} JSON memo representation\n */\nexport function memo (cosmicLink, memo) {\n  const type = memo.replace(/:.*/, '')\n  const value = memo.replace(/^[^:]*:/, '')\n  if (type === value) {\n    status.error(cosmicLink, 'Missing memo type: ' + memo, 'throw')\n  } else {\n    return { type: type, value: value }\n  }\n}\n\n/**\n * Convert a `price` string to an equivalent object in cosmic link\n * representation, which is a string representing a number or a\n * { n: nominator, d: denominator } couple.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} price\n * @return {string|object} JSON-compatible price object\n */\nexport function price (cosmicLink, price) {\n  const numerator = price.replace(/:.*/, '')\n  const denominator = price.replace(/^[^:]*:/, '')\n  if (numerator === denominator) {\n    return amount(cosmicLink, numerator)\n  } else {\n    const object = {}\n    object.n = +amount(cosmicLink, numerator)\n    object.d = +amount(cosmicLink, denominator)\n    return object\n  }\n}\n\n/**\n * Return a JSON-compatible represention of string-formatted `signer`.\n * String format for `signer` is 'weight,type:value'.\n * Object format is { weight: 'w', type: 't', value: 'v' }\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} signer\n * @return {object}\n */\nexport function signer (cosmicLink, signer) {\n  const temp = signer.split(':')\n  if (temp.length > 3) {\n    status.error(cosmicLink, 'Invalid signer: ' + shorter(signer), 'throw')\n  }\n\n  const weight = temp[0]\n  const type = temp[1]\n  const value = temp[2]\n  const object = { type: type, value: value, weight: weight }\n\n  check.signer(cosmicLink, object)\n  return object\n}\n","'use strict'\n\nimport * as specs from './specs'\nimport * as status from './status'\nimport * as decode from './decode'\nimport * as resolve from './resolve'\nimport * as prepare from './prepare'\nimport * as encode from './encode'\n\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @module\n */\n\n/** ****************************    URI -> XDR    ******************************/\n\n/**\n * Extract the query string from `uri`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} uri\n * @return {string} query\n */\n\nexport function uriToQuery (cosmicLink, uri) {\n  if (!uri.match(/\\?/)) return null\n  const query = uri.replace(/^[^?]*/, '')\n  return query\n}\n\n/**\n * Build a `transaction descriptor` object from a cosmic link `query`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} query\n * @return {Object} tdesc\n */\nexport function queryToJson (cosmicLink, query) {\n  if (query.length < 2) status.fail(cosmicLink, 'Empty query', 'throw')\n\n  /// Transaction descriptor.\n  const tdesc = {}\n  /// Operation descriptor.\n  const odesc = {}\n  const operation = query.substr(1).replace(/&.*/, '')\n  let isValid = true\n\n  if (!_isOperationTypeValid(operation)) {\n    status.error(cosmicLink, 'Unknow operation: ' + operation)\n    status.fail(cosmicLink, 'Invalid query', 'throw')\n  }\n\n  const queries = query.substr(operation.length + 2).split('&')\n  for (let index in queries) {\n    const argument = queries[index]\n    const field = argument.replace(/=.*/, '')\n    let value = argument.replace(/^[^=]*=/, '')\n\n    try {\n      if (!field) continue\n      if (!value && field !== 'homeDomain') {\n        value = '(empty)'\n        status.error(cosmicLink, 'No value for: ' + field, 'throw')\n      }\n\n      const decodedValue = decode.fieldValue(cosmicLink, field, value)\n      if (_isTransactionField(field)) tdesc[field] = decodedValue\n      else odesc[field] = decodedValue\n    } catch (error) {\n      /// At this point decoding errors should already be handled.\n      /// This line catch program error for debugging purpose.\n      if (!cosmicLink.errors) status.error(cosmicLink, error)\n      isValid = false\n      const errorObject = { error: error, value: value }\n      if (_isTransactionField(field)) tdesc[field] = errorObject\n      else odesc[field] = errorObject\n    }\n  }\n\n  const native = StellarSdk.Asset.native()\n  switch (operation) {\n    case 'allowTrust':\n      if (odesc.authorize === undefined) odesc.authorize = true\n      break\n    case 'createPassiveOffer':\n    case 'manageOffer': {\n      if (odesc.buying && !odesc.selling) odesc.selling = native\n      if (odesc.selling && !odesc.buying) odesc.buying = native\n      break\n    }\n    case 'manageData':\n      if (!odesc.value) odesc.value = null\n      break\n    case 'pathPayment':\n      if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = native\n      if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = native\n      break\n    case 'payment':\n      if (!odesc.asset) odesc.asset = native\n      break\n  }\n\n  const mandatoryFields = specs.operationMandatoryFields[operation]\n  mandatoryFields.forEach(field => {\n    if (odesc[field] === undefined) {\n      isValid = false\n      status.error(cosmicLink, 'Missing mandatory field: ' + field)\n    }\n  })\n  for (let field in odesc) {\n    if (!_isOperationField(operation, field)) {\n      isValid = false\n      status.error(cosmicLink, 'Invalid field: ' + field)\n    }\n  }\n\n  tdesc.operations = [ odesc ]\n  odesc.type = operation\n  if (!isValid) status.fail(cosmicLink, 'Invalid query')\n  return tdescToJson(cosmicLink, tdesc)\n}\n\n/**\n * Returns `true` if `operation` is a valid operation type, `false` otherwise.\n *\n * @private\n * @param {string} string\n * @return {boolean}\n */\nfunction _isOperationTypeValid (string) {\n  if (specs.operationMandatoryFields[string]) return true\n  else return false\n}\n\n/**\n * Returns `true` if `string` is a valid transaction field, `false` otherwise.\n *\n * @private\n * @param {string} string\n * @return {boolean}\n */\nfunction _isTransactionField (string) {\n  if (specs.transactionOptionalFields.indexOf(string) !== -1) return true\n  else return false\n}\n\n/**\n * Returns `true` if `string` is a valid field for `operation`, `false`\n * otherwise.\n *\n * @private\n * @param {string} operation\n * @param {string} string\n * @return {boolean}\n */\nfunction _isOperationField (operation, string) {\n  if (\n    specs.operationMandatoryFields[operation].indexOf(string) === -1 &&\n    specs.operationOptionalFields[operation].indexOf(string) === -1\n  ) return false\n  else return true\n}\n\n/**\n * Returns the JSON of cosmic link `transaction descriptor`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {Object} tdesc transaction descriptor\n * @return {string} transaction descriptor JSON\n */\nexport function tdescToJson (cosmicLink, tdesc) {\n  return JSON.stringify(tdesc, null, 2)\n}\n\n/**\n * Returns the Stellar `transaction` object for `cosmicLink`'s\n * `transaction descriptor`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {Object} tdesc transaction descriptor\n * @return {Transaction}\n */\nexport async function jsonToTransaction (cosmicLink, json) {\n  if (cosmicLink.status) throw new Error(cosmicLink.status)\n  const tdesc = jsonToTdesc(cosmicLink, json)\n\n  try {\n    const builder = await _makeTransactionBuilder(cosmicLink, tdesc)\n    const operation = await _odescToOperation(cosmicLink, tdesc.operations[0])\n    builder.addOperation(operation)\n    return builder.build()\n  } catch (error) {\n    if (!cosmicLink.errors) status.error(cosmicLink, error)\n    if (!cosmicLink.status) status.fail(cosmicLink, \"Can't build transaction\", 'throw')\n    else throw error\n  }\n}\n\n/**\n * Returns an Operation object equivalent to cosmic link `operation descriptor`.\n *\n * @private\n * @param {CL}\n * @param {Object} odesc Operation descriptor\n * @return {Operation}\n */\nasync function _odescToOperation (cosmicLink, odesc) {\n  let operation = odesc.type\n  delete odesc.type\n\n  for (let field in odesc) {\n    const value = await prepare.fieldValue(cosmicLink, field, odesc[field])\n    odesc[field] = value\n  }\n\n  return StellarSdk.Operation[operation](odesc)\n}\n\n/**\n * Returns a TransactionBuilder for `transaction descriptor`.\n *\n * @private\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n * @return {TransactionBuilder}\n */\nasync function _makeTransactionBuilder (cosmicLink, tdesc) {\n  let opts = {}\n  if (tdesc.fee) opts.fee = tdesc.fee\n  if (tdesc.memo) opts.memo = prepare.memo(cosmicLink, tdesc.memo)\n  if (tdesc.minTime || tdesc.maxTime) {\n    opts.timebounds = { minTime: 0, maxTime: 0 }\n    if (tdesc.minTime) opts.timebounds.minTime = tdesc.minTime\n    if (tdesc.maxTime) opts.timebounds.maxTime = tdesc.maxTime\n  }\n\n  const loadedAccount = await cosmicLink.getSourceAccount()\n  if (tdesc.sequence) {\n    const Constructor = loadedAccount._baseAccount.__proto__.constructor\n    const baseAccount = new Constructor(loadedAccount.id, tdesc.sequence - 1 + '')\n    loadedAccount._baseAccount = baseAccount\n  }\n  const builder = new StellarSdk.TransactionBuilder(loadedAccount, opts)\n\n  /// Check if memo is needed for destination account.\n  const operation = tdesc.operations[0]\n  if (operation.destination) {\n    const account = await resolve.address(cosmicLink, operation.destination)\n    if (account.memo) {\n      const memoType = account.memo_type\n      const memoValue = account.memo\n      if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n        status.error(cosmicLink, 'Memo conflict', 'throw')\n      } else {\n        builder.addMemo(new StellarSdk.Memo(memoType, memoValue))\n      }\n    }\n  }\n\n  return builder\n}\n\n/**\n * Return the XDR of `transaction`.\n *\n * @param {CL}\n * @param {Transaction} transaction\n * @return {XDR}\n */\nexport function transactionToXdr (cosmicLink, transaction) {\n  return transaction.toEnvelope().toXDR('base64')\n}\n\n/** ****************************    XDR -> URI    ******************************/\n\n/**\n * Return the Transaction object equivalent to `xdr`.\n *\n * @param {CL}\n * @param {XDR} xdr\n * @return {Transaction}\n */\nexport function xdrToTransaction (cosmicLink, xdr) {\n  try {\n    return new StellarSdk.Transaction(xdr)\n  } catch (error) {\n    console.log(error)\n    status.fail(cosmicLink, 'Invalid XDR', 'throw')\n  }\n}\n\n/**\n * Return the query equivalent to `xdr`.\n *\n * @param {CL}\n * @param {XDR} xdr Transaction envelope\n * @return {String}\n */\nexport function xdrToQuery (cosmicLink, xdr, options = {}) {\n  let query = '?xdr=' + xdr\n  if (options.network) query += '&network=' + options.network\n  return query\n}\n\n/**\n * Return the `transaction descriptor` JSON equivalent to Stellar `Transaction`\n * object.\n *\n * Set options.stripSource to true for a transaction that is account-agnostic,\n * like an exchange operation for example. Ignore it for a transaction that\n * is required to be performed from the source account defined in 'XDR'\n * (example: subscription monthly fee).\n *\n * You may set options.network to the desired network.\n *\n * @param {CL}\n * @param {Transaction} transaction\n * @param {Object} options\n * @return {JSON} transaction descriptor JSON\n */\nexport function transactionToJson (cosmicLink, transaction, options = {}) {\n  const copy = JSON.parse(JSON.stringify(transaction))\n\n  if (copy.operations.length > 1) {\n    status.error(cosmicLink, \"Can't parse multi-operation transactions yet.\")\n    status.fail(cosmicLink, 'Unhandled transaction', 'throw')\n  }\n\n  delete copy.tx\n\n  if (!cosmicLink.user) cosmicLink.user = copy.source\n\n  if (options.stripSource) {\n    delete copy.source\n    delete copy.signatures\n    delete copy.sequence\n  }\n  if (options.stripSequence) {\n    delete copy.sequence\n    delete copy.signatures\n  }\n  if (options.stripSignatures) delete copy.signatures\n\n  if (copy.signatures) {\n    copy.signatures = transaction.signatures.map(entry => {\n      return {\n        hint: entry.hint().toString('base64'),\n        signature: entry.signature().toString('base64')\n      }\n    })\n    if (copy.signatures.length === 0) delete copy.signatures\n  }\n\n  if (copy.fee === 100) delete copy.fee\n  if (copy._memo._switch.name !== 'memoNone') {\n    copy.memo = {}\n    copy.memo.type = copy._memo._arm\n    if (copy.memo.type === 'hash' || copy.memo.type === 'retHash') {\n      copy.memo.value = transaction._memo._value.toString('hex')\n      if (copy.memo.type === 'retHash') copy.memo.type = 'return'\n    } else {\n      copy.memo.value = transaction._memo._value.toString()\n    }\n  }\n  delete copy._memo\n\n  if (copy.timeBounds) {\n    if (copy.timeBounds.minTime && copy.timeBounds.minTime !== '0') {\n      copy.minTime = copy.timeBounds.minTime\n    }\n    if (copy.timeBounds.maxTime && copy.timeBounds.maxTime !== '0') {\n      copy.maxTime = copy.timeBounds.maxTime\n    }\n    delete copy.timeBounds\n  }\n\n  var operation = copy.operations[0]\n  if (operation.limit === '922337203685.4775807') delete operation.limit\n  if (operation.value) {\n    operation.value = transaction.operations[0].value.toString()\n  }\n  if (operation.offerId === '0') delete operation.offerId\n  if (operation.path && operation.path.length === 0) delete operation.path\n  if (operation.line) {\n    operation.asset = operation.line\n    delete operation.line\n  }\n  if (operation.signer) {\n    if (operation.signer.ed25519PublicKey) {\n      operation.signer.type = 'key'\n      operation.signer.value = operation.signer.ed25519PublicKey\n      delete operation.signer.ed25519PublicKey\n    } else if (operation.signer.sha256Hash) {\n      operation.signer.type = 'hash'\n      operation.signer.value = transaction.operations[0].signer.sha256Hash.toString('hex')\n      delete operation.signer.sha256Hash\n    } else if (operation.signer.preAuthTx) {\n      operation.signer.type = 'tx'\n      operation.signer.value = transaction.operations[0].signer.preAuthTx.toString('hex')\n      delete operation.signer.preAuthTx\n    }\n  }\n\n  if (options.network !== undefined) copy.network = options.network\n\n  return JSON.stringify(copy, null, 2)\n}\n\n/**\n * Parse `transaction descriptor` from `JSON`.\n *\n * @param {CL}\n * @param {JSON} JSON transaction descriptior\n * @return {Object} transaction descriptor\n */\nexport function jsonToTdesc (cosmicLink, json) {\n  return JSON.parse(json)\n}\n\n/**\n * Return the cosmic link query equivalent to `transaction descriptor`.\n *\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n * @return {string} query\n */\nexport function jsonToQuery (cosmicLink, json) {\n  const tdesc = jsonToTdesc(cosmicLink, json)\n  const operation = tdesc.operations[0].type\n  let query = '?' + operation\n\n  specs.transactionOptionalFields.forEach(field => {\n    if (tdesc[field] !== undefined) {\n      query = query + encode.field(cosmicLink, field, tdesc[field])\n    }\n  })\n\n  const odesc = tdesc.operations[0]\n  const operationFields = specs.operationMandatoryFields[operation]\n    .concat(specs.operationOptionalFields[operation])\n\n  operationFields.forEach(field => {\n    if (odesc[field] !== undefined) {\n      query = query + encode.field(cosmicLink, field, odesc[field])\n    }\n  })\n  return query\n}\n\n/**\n * Return a complete cosmic link URI made of `query` and `cosmicLink.page`.\n * Use `https://cosmic.link/` if `cosmicLink.page` is undefined\n *\n * @param {CL}\n * @param {string} query\n * @param {string} cosmic link URI\n */\nexport function queryToUri (cosmicLink, query) {\n  return cosmicLink.page + query\n}\n","'use strict'\n\nimport {shorter, delay} from './helpers'\n\nimport * as status from './status'\nimport * as resolve from './resolve'\nimport * as parse from './parse'\nimport * as format from './format'\nimport * as event from './event'\n\n/**\n * Contains the action methods for CosmicLink.\n *\n *\n * @module\n */\n\n/**\n * Sign `cosmicLink` using secret `Keypair`.\n * Return a promise that terminate when signing is over, and that resolve to\n * the signed Transaction object.\n *\n * @param {cosmicLink} cosmicLink\n * @param {seed} seed\n * @promise Signed Transaction object\n */\n\nexport async function sign (cosmicLink, seed) {\n  let keypair, publicKey\n  try {\n    keypair = StellarSdk.Keypair.fromSecret(seed)\n    publicKey = keypair.publicKey()\n  } catch (error) {\n    console.log(error)\n    throw new Error('Invalid secret seed')\n  }\n\n  if (cosmicLink.status) throw new Error(\"Can't sign invalid transaction\")\n  if (!await cosmicLink.hasSigner(publicKey)) {\n    throw new Error('Not a legit signer: ' + shorter(publicKey))\n  }\n  if (await cosmicLink.hasSigned(publicKey)) {\n    throw new Error('Transaction already signed with this key')\n  }\n\n  const signingPromise = _signingPromise(cosmicLink, keypair, publicKey)\n  parse.typeTowardAllUsingDelayed(cosmicLink, 'transaction', () => signingPromise)\n  parse.makeConverter(cosmicLink, 'xdr', 'query')\n  parse.makeConverter(cosmicLink, 'query', 'uri')\n  event.callFormatHandlers(cosmicLink)\n  await signingPromise\n}\n\nasync function _signingPromise (cosmicLink, keypair, publicKey) {\n  const transaction = await cosmicLink.getTransaction()\n\n  try {\n    resolve.selectNetwork(cosmicLink)\n    transaction.sign(keypair)\n  } catch (error) {\n    console.log(error)\n    status.error(cosmicLink,\n      'Failed to sign with key: ' + shorter(publicKey),\n      'throw'\n    )\n  }\n\n  cosmicLink.getSigners = delay(() => resolve.getSigners(cosmicLink))\n  format.signers(cosmicLink)\n\n  return transaction\n}\n\n/**\n * Send `cosmicLink`'s transaction to `server`. It should have been signed\n * beforehand.\n * Return a promise that terminate when submission is over.\n *\n * @param {CL}\n * @param {Server} [server=cosmicLink.server] Stellar SDK Server object\n * @return {Object} The server response\n */\nexport async function send (cosmicLink, server) {\n  if (!server) server = cosmicLink.server\n  const transaction = await cosmicLink.getTransaction()\n  const response = server.submitTransaction(transaction)\n  response.catch(console.log)\n  return response\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict'\n\nimport * as action from './action'\nimport * as event from './event'\nimport * as parse from './parse'\nimport * as resolve from './resolve'\nimport * as status from './status'\nimport {delay} from './helpers'\n\nlet node, format\nif (typeof document !== 'undefined') {\n  node = require('./node')\n  format = require('./format')\n  require('./cosmic-lib.css')\n} else if (typeof StellarSdk === 'undefined') {\n  global.StellarSdk = require('stellar-sdk')\n}\n\n/**\n * A `CosmicLink` object represents a Stellar transaction. It can be created\n * from an actual cosmic link or any link build with a cosmic link query, but\n * also from a Stellar Transaction object or its XDR representation.\n *\n * Additionally, it can be parsed from a `transaction descriptor`, which the\n * simplified format `CosmicLink`s are using to represent Stellar transaction.\n * This `transaction descriptor` can be written in its objectified form\n * (referred as `tdesc`) or stringified form (referred as `json`).\n *\n * To make a `CosmicLink` object, you'll need to provide the network on wich\n * it is valid, and may want to provide a default user, which could be your\n * accountID or the accountID of anybody using your service.\n *\n * @constructor\n * @param {*} transaction\n * @param {test|public} [userNetwork] The Stellar network to use, will be public\n *     by default.\n * @param {string} [userAddress] This is the fallback source address when none\n *     is specified from the transaction.\n * @param {Object} options Additional options\n */\n// --- Constructor ---\n// new CosmicLink(uri, \"[userNetwork]\", \"[userAddress]\")\n// new CosmicLink(query, \"[userNetwork]\", \"[userAddress]\")\n// new CosmicLink(transaction, \"[userNetwork]\", \"[userAddress]\", {...options})\n// new CosmicLink(xdr, \"[userNetwork]\", \"[userAddress]\", {...options})\n//\n// --- Options for transaction & xdr ---\n// stripSource = true   < Don't keep source account when converting to URI\n// network = ...        < Specify a network for this transaction\n//\n// --- Edit ---\n// CosmicLink.parse(any-format, {...options})\n// *CosmicLink.setField(field, value)\n// *CosmicLink.addOperation({...params})\n// *CosmicLink.changeOperation(index, {...params})\n// *CosmicLink.removeOperation(index)\n//\n// --- Formats (get) ---\n// CosmicLink.getUri()          < Return a promise of the URI string\n// CosmicLink.getQuery()        < Return a promise of the query string\n// CosmicLink.getJson()         < Return stringified JSON of the object\n// CosmicLink.getTdesc()        < Return a promise of the transaction descriptor\n// CosmicLink.getTransaction()  < Return a promise of the transaction\n// CosmicLink.getXdr()          < Return a promise of the transaction's XDR\n//\n// --- Handlers ---\n// CosmicLink.addFormatHandler(format, callback)\n// CosmicLink.removeFormatHandler(format, callback)\n// with event = { cosmicLink: ..., value: ..., error: ... }\n//\n// --- Datas ---           <<< Update everything on the go >>>\n// CosmicLink.user         < User address\n// *CosmicLink.aliases     < Local aliases for public keys\n// CosmicLink.network      < Test/Public network\n// CosmicLink.server       < The horizon server to use\n// CosmicLink.status       < Status of the CosmicLink (valid or specific error)\n// CosmicLink.errors       < An array of errors (or undefined if no error)\n// CosmicLink.page         < The base URI, without the query\n//\n// --- Datas (asynchronous)\n// CosmicLink.getSource()         < Transaction source\n// CosmicLink.getSourceAccount()  < Transaction source account object\n// CosmicLink.getSigners()        < Array of legit signers\n//\n// --- Tests ---\n// CosmicLink.hasSigner(publicKey)   < Test if `publicKey` is a signer for CosmicLink\n// CosmicLink.hasSigned(publicKey)   < Test if `publicKey` signature is available\n//\n// --- Actions ---\n// CosmicLink.selectNetwork()  < Select CosmicLink network for Stellar SDK\n// CosmicLink.sign(seed)       < Sign the transaction\n// CosmicLink.send([server])   < Send the transaction to the network\n//\n// --- Events ---\n// CosmicLink.onClick.type      < For onClick events on the HTML description\n//\n// --- HTML Nodes ---\n// CosmicLink.htmlNode         < HTML element for CosmicLink\n// CosmicLink.transactionNode  < HTML description of the transaction\n// CosmicLink.signersNode      < HTML element for the signers list\n// CosmicLink.statusNode       < HTML element for the transaction status & errors\n\nexport class CosmicLink {\n  constructor (transaction, network, user, options) {\n    if (user) this.user = user\n    if (network) this.network = network\n\n    this.onClick = event.defaultHandler\n    if (!this._page) this._page = CosmicLink.page\n\n    this.formatHandlers = {}\n    for (let format in CosmicLink.formatHandlers) {\n      const handlers = CosmicLink.formatHandlers[format]\n      this.formatHandlers[format] = handlers.slice(0)\n    }\n\n    if (typeof document !== 'undefined') {\n      let htmlNode = node.grab('#CL_htmlNode')\n      /// Backward compatibility\n      if (!htmlNode) htmlNode = node.grab('#CL_transactionNode')\n      if (htmlNode) makeHtmlNodes(this, htmlNode)\n    }\n\n    parse.dispatch(this, transaction, options)\n\n    /// Fallback only when network is not set from the URI.\n    if (!this.network) this.network = CosmicLink.network\n\n    this.getSourceAccount = delay(() => resolve.getSourceAccount(this))\n    this.getSigners = delay(() => resolve.getSigners(this))\n  }\n\n  parse (transaction, options) {\n    parse.dispatch(this, transaction, options)\n  }\n\n  async getSource () {\n    const tdesc = await this.getTdesc()\n    if (tdesc.source) return tdesc.source\n    else if (this.user) return this.user\n    else throw new Error('No source defined for this transaction')\n  }\n\n  async hasSigner (value, type = 'key') {\n    const signers = await this.getSigners()\n    return signers.find(entry => entry.value === value && entry.type === type)\n  }\n\n  async hasSigned (value, type = 'key') {\n    return await resolve.hasSigned(this, type, value)\n  }\n\n  /// Actions\n  selectNetwork () { resolve.selectNetwork(this) }\n  async sign (seed) { await action.sign(this, seed) }\n  async send (server) { await action.send(this, server) }\n\n  /// Datas\n  get page () {\n    return this._page\n  }\n  set page (uri) {\n    parse.setPage(this, uri)\n  }\n\n  get network () { return this._network }\n  set network (network) { parse.network(this, network) }\n\n  /// HTML\n  get htmlNode () {\n    if (!this._htmlNode) makeHtmlNodes(this)\n    return this._htmlNode\n  }\n  set htmlNode (value) { this._htmlNode = value }\n\n  get transactionNode () {\n    this.htmlNode\n    return this._transactionNode\n  }\n  set transactionNode (value) { this._transactionNode = value }\n\n  get statusNode () {\n    this.htmlNode\n    return this._statusNode\n  }\n  set statusNode (value) { this._statusNode = value }\n\n  get signersNode () {\n    this.htmlNode\n    return this._signersNode\n  }\n  set signersNode (value) { this._signersNode = value }\n}\n\n/// Class-wide configuration\nCosmicLink.page = 'https://cosmic.link/'\nCosmicLink.network = 'public'\n\nCosmicLink.formatHandlers = {}\nCosmicLink.addFormatHandler = function (format, callback) {\n  event.addFormatHandler(CosmicLink, format, callback)\n}\nCosmicLink.removeFormatHandler = function (format, callback) {\n  event.removeFormatHandler(CosmicLink, format, callback)\n}\n\nfunction makeHtmlNodes (cosmicLink, htmlNode) {\n  if (htmlNode) {\n    node.clear(htmlNode)\n    htmlNode.className = 'CL_htmlNode'\n  } else htmlNode = node.create('div', '.CL_htmlNode')\n  cosmicLink._htmlNode = htmlNode\n\n  const nodes = ['_transactionNode', '_statusNode', '_signersNode']\n  for (let index in nodes) {\n    const name = nodes[index]\n    cosmicLink[name] = node.create('div', '.CL' + name)\n    node.append(htmlNode, cosmicLink[name])\n  }\n\n  node.append(cosmicLink._statusNode,\n    node.create('span', '.CL_status'),\n    node.create('ul', '.CL_events')\n  )\n\n  if (cosmicLink.getTdesc) format.tdesc(cosmicLink)\n  status.populateHtmlNode(cosmicLink)\n}\n"],"sourceRoot":""}
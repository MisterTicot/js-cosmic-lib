{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/env.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/misc.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/stellar-sdk.js","webpack://cosmicLib/./src/specs.js","webpack://cosmicLib/./src/resolve.js","webpack://cosmicLib/./src/status.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/html.js","webpack://cosmicLib/./node_modules/@babel/runtime/regenerator/index.js","webpack://cosmicLib/./src/config.js","webpack://cosmicLib/./src/decode.js","webpack://cosmicLib/./src/format.js","webpack://cosmicLib/./src/signers-utils.js","webpack://cosmicLib/./src/check.js","webpack://cosmicLib/./src/convert.js","webpack://cosmicLib/./src/normalize.js","webpack://cosmicLib/./src/event.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/buffer.js","webpack://cosmicLib/./src/destruct.js","webpack://cosmicLib/./src/index.js","webpack://cosmicLib/./node_modules/process/browser.js","webpack://cosmicLib/(webpack)/buildin/global.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/polyfill.js","webpack://cosmicLib/./src/aliases.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime-module.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/(webpack)/buildin/module.js","webpack://cosmicLib/./src/cosmiclink.js","webpack://cosmicLib/./src/action.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/axios.js","webpack://cosmicLib/./src/construct.js","webpack://cosmicLib/./src/encode.js","webpack://cosmicLib/./src/parse.js","webpack://cosmicLib/./src/expand.js","webpack://cosmicLib/./src/load.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/dom.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","global","env","isBrowser","window","document","isNode","versions","node","nodeRequire","stealth_require","eval","misc","require","html","delay","thunk","memoized","firstCall","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","copy","textBox","append","grab","copyContent","destroy","setHiddenProperty","writable","deprecated","date","before","after","console","error","concat","useExtra","obj","extraField","isUtf8","match","isBase64","undefined","StellarSdk","specs","field","transactionOptionalFields","fieldDesc","network","horizon","callback","memo","source","sequence","minTime","maxTime","fee","isTransactionField","find","operationMandatoryFields","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createPassiveOffer","inflation","manageData","manageOffer","pathPayment","payment","setOptions","operationOptionalFields","operationFields","isOperationField","operation","fieldType","amount","asset","assetCode","assetIssuer","authorize","bumpTo","buying","clearFlags","destAsset","destAmount","destination","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","medThreshold","memoBinary","memoHash","memoId","memoReturn","memoText","memoType","offerId","price","path","selling","sendAsset","sendMax","setFlags","signer","signerHash","signerKey","signerType","signerTx","signerWeight","startingBalance","trustor","types","type","entry","push","_loop","neutralAccountId","sep7MandatoryFields","tx","pay","sep7OptionalFields","sep7IgnoredFields","helpers","status","_callee5","conf","address","account","accountId","_regeneratorRuntime","wrap","_context5","prev","next","FederationServer","sent","account_id","Error","memo_type","aliases","alias","abrupt","t0","fail","stop","accountResolver","_callee6","quietFlag","server","accountResponse","_context6","loadAccount","response","makeAccountResponse","publicKey","Account","cache","id","signers","public_key","weight","resolveTxSource","_callee7","_context7","signersTableToSignersList","signersTable","array","forEach","arguments","current","Server","useNetwork","passphrase","networkPassphrase","log","Network","use","currentNetwork","networkName","index","values","indexOf","keys","promise","addressResolver","_ref","_asyncToGenerator","mark","_callee","_context","_x3","_x4","_x5","apply","isAccountEmpty","then","catch","txSourceAccount","_ref2","_callee2","baseAccount","_context2","sub","_baseAccount","_x9","_x10","_x11","txSources","transaction","extra","operations","a","txSigners","_ref3","_callee3","_context3","t1","done","filter","_x12","_x13","txSignersList","_ref4","_callee4","_context4","_x16","_x17","_cosmicplus","errorContinuation","continuation","init","errors","update","_statusNode","textContent","errorStatus","appendClass","errorsNode","lineNode","makeHtmlNode","statusNode","statusLine","errorLine","element","_len","childs","Array","_key","child","appendChild","createTextNode","newClass","className","clear","_len2","elements","_key2","innerHTML","selectionStart","selectionEnd","select","getSelection","range","createRange","selectNode","removeAllRanges","addRange","execCommand","attributes","createElement","_len3","_key3","parentNode","removeChild","pattern","querySelector","show","_len4","_key4","hidden","hide","_len5","_key5","replace","element1","element2","replaceChild","rewrite","_len6","_key6","addStyles","styles","styleNode","headNode","config","event","page","setupNetwork","Networks","PUBLIC","TESTNET","all","addAliases","definitions","add","removeAliases","remove","clickHandlers","defaultClickHandlers","setClickHandler","clearClickHandler","decode","check","normalize","query","tdesc","command","params","split","param","odesc","decodeURIComponent","assetLower","toLowerCase","code","temp","issuer","assetsList","map","matched","Date","toISOString","numerator","denominator","format","signersUtils","parentProperty","infoNode","trNode","opNode","retNode","sourceNode","addressNode","meaning","msg","operationMeaning","fieldNode","txt","signatures","signersNode","for","utils","signersList","sources","div","accountSignersNode","title","titleNode","listNode","signerNode","hasSigned","insertBefore","firstChild","makeAccountSignersNode","parentOdesc","parentIndex","parentTdesc","domNode","_typeof","eventObject","constructor","cosmicLink","onclick","callClickHandler","parent","animation","grandpa","classList","contains","style","display","errDesc","errorNode","message","resolveAddressAndUpdate","codeNode","issuerNode","assetNode","assetsArray","assetsArrayNode","buffer","hash","toLocaleString","flags","valueNode","typeNode","value1","value2","value3","StrKey","decodeSha256Hash","toString","weightNode","SignersUtils","_classCallCheck","extendFlag","txHash","assign","utilities","hasSigner","keypair","Keypair","fromPublicKey","verify","signature","extends","txField","e","operationType","operationField","number","min","max","num","isNaN","integer","parseInt","utf8","base64","isValid","boolean","parse","threshold","convert","construct","destruct","encode","uriToQuery","uri","queryToTdesc","tdescToJson","JSON","stringify","tdescToTransaction","transactionToXdr","toEnvelope","toXDR","xdrToSep7","xdr","options","sep7","encodeURIComponent","url","xdrToTransaction","Transaction","stripSignatures","xdrToQuery","transactionToTdesc","jsonToTdesc","json","tdescToQuery","queryToUri","removeEmptyFields","dateFields","XLM","Asset","native","handler","alert","preimage","prompt","sign","Memo","__proto__","Buffer","stripSource","stripSequence","_memo","_switch","timeBounds","op","optree","_attributes","body","_value","line","assetPath","timestamp","sdkMemo","_arm","sdkSequence","sdkSigner","ed25519PublicKey","sha256Hash","preAuthTx","exposeModule","layer","_config","withConfig","library","_this$module","_class","_possibleConstructorReturn","_getPrototypeOf","_inherits","CosmicLink","load","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","args","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","Function","NodeList","predicate","TypeError","thisArg","k","kValue","configurable","target","varArgs","to","nextSource","nextKey","publicKeys","anchors","GAEDLNMCQZOSLY7Y4NW3DTEWQEVVCXYYMBDNGPPGBMQH4GFYECBI7YVK","GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4","GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF","GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR","GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP","GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC","GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP","GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP","GDPFSEBZO2W4TLWZO7FIMMG3QONHXYVF6LUULI6HUJS6PJLE4TRZEXLF","GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ","GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3","GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG","GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI","GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2","GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7","GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN","GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW","GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M","GCYK67DDGBOANS6UODJ62QWGLEB2A7JQ3XUV25HCMLT7CI23PMMK3W6R","GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL","GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX","GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH","GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK","GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH","GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS","GDGKBRCPW4C3ENNC5C64PE6U33MG52GBKFXOK5P3OSWF74DAOXRXV6OJ","GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6","GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN","GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY","GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5","GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B","GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX","GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z","GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP","GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5","GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M","GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG","GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK","GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI","GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N","GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S","GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C","GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3","GCLRUZDCWBHS7VIFCT43BARPP63BHR32HMEVKXYQODA5BU6SIGFK4HL2","GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON","GA7FCCMTTSUIC37PODEL6EOOSPDRILP6OQI5FWCWDDVDBLJV72W6RINZ","GBVAOIACNSB7OVUXJYC5UE2D4YK2F7A24T7EE5YOMN4CE6GCHUTOUQXM","GDXTJEK4JZNSTNQAWA53RZNS2GIKTDRPEUWDXELFMKU52XNECNVDVXDI","GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN","GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM","GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5","destinationshadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","webpackPolyfill","deprecate","paths","children","action","initCosmicLink","checkLock","splice","lock","keypairs_or_preimage","send","_query","_tdesc","locker","_json","_transaction","_xdr","_sep7","_htmlDescription","makeHtmlDescription","_htmlLink","makeHtmlLink","htmlDescription","formatsFields","dispatch","_transactionNode","_signersNode","htmlLink","href","axios","applyLock","updateSignersNode","sendToStellarGuard","post","data","_args","_x","allFine","keypairsOrPreimage","short","_short","_short2","_args2","t2","signHashX","_args3","STELLARGUARD_PUBKEY","submitTransaction","makeTransactionBuilder","_callee9","txOpts","sourceAccount","builder","memoValue","_context9","timebounds","TransactionBuilder","addMemo","txBuilder","addOperation","build","_x2","Operation","_x7","_x8","_ref5","_x14","_ref6","_x15","_ref7","constructedAsset","_x18","from","_ref8","_callee8","_context8","_x19","_x20","encodedValue","expand","encodeURI","formats","guessType","parseFmt","setTdesc","sep7ToXdr","xdrUri","sep7Request","isIgnoredSep7Field","isArray","dom","css","rel","onload","onerror","linkNode","head","querySelectorAll","header","nav","main","footer","ingest"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory();\n\telse\n\t\troot[\"cosmicLib\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","\"use_strict\"\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\nconst env = exports\n\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\nenv.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\"\n\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\nenv.isNode = typeof process !== \"undefined\" && process.versions && process.versions.node\n\n/**\n * The window object, or `undefined`.\n */\nenv.window = env.isBrowser && window\n\n/**\n * The global objet, or `undefined`.\n */\nenv.global = env.isNode && global\n\n/**\n * A require that only have effect in Node.js and that is invisible package\n * bundlers.\n */\nenv.nodeRequire = () => {}\nif (env.isNode) {\n  const stealth_require = eval(\"require\")\n  env.nodeRequire = (module) => stealth_require(module)\n}\n","\"use strict\"\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\nconst misc = exports\n\nconst env = require(\"./env\")\nconst html = env.isBrowser && require(\"./html\")\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nmisc.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + \"...\" + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nmisc.copy = env.isBrowser && function (string) {\n  const textBox = html.create(\"textarea\", {}, string)\n  html.append(html.grab(\"body\"), textBox)\n  html.copyContent(textBox)\n  html.destroy(textBox)\n}\n\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, { value: value, enumerable: false, writable: true })\n}\n\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\nmisc.deprecated = function (date, before, after) {\n  console.error(`Warning: ${before} is deprecated and will be removed after \\\n${date}. Please use ${after} instead.`)\n}\n\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\nconst extraField = \"_extra_ticot\"\n\n/**\n * Test if **string** is made of printable UTF8 characters. This is a simplified\n * test that is not robust.\n *\n * @param {String}\n * @return {Boolean}\n */\nmisc.isUtf8 = function (string) {\n  // eslint-disable-next-line no-control-regex\n  return !string.match(/[\\0-\\x1F\\x7F-\\x9F\\xAD\\uD7FC-\\uF8FF]/)\n}\n\n/**\n * Test if **string** is a base64 string.\n *\n * @param  {String} string\n * @return {Boolean}\n */\nmisc.isBase64 = function (string) {\n  return !!string.match(/^[0-9a-zA-Z+/]*=*$/)\n}","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  if (window.StellarSdk === undefined) console.error(\"Missing dependency: StellarSdk\")\n  else module.exports = window.StellarSdk\n} else {\n  module.exports = env.nodeRequire(\"stellar-sdk\")\n}\n","\"use_strict\"\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\nconst specs = exports\n\n/**\n * Transaction optional fields.\n */\nspecs.transactionOptionalFields = [\n  \"network\", \"horizon\", \"callback\",\n  \"memo\", \"source\", \"sequence\", \"minTime\", \"maxTime\", \"fee\"\n]\n\n/**\n * Transaction field meaning.\n */\nspecs.fieldDesc = {\n  network: \"Network\",\n  horizon: \"Horizon\",\n  callback: \"Callback\",\n\n  memo: \"Memo\",\n  source: \"Source\",\n  sequence: \"Sequence\",\n  minTime: \"Valid after\",\n  maxTime: \"Valid until\",\n  fee: \"Fees\"\n}\n\n\n/**\n * @param {string} field\n * @return {boolean}\n */\nspecs.isTransactionField = function (field) {\n  return specs.transactionOptionalFields.find(name => name === field)\n}\n\n/**\n * Operation mandatory fields.\n */\nspecs.operationMandatoryFields = {\n  accountMerge: [\"destination\"],\n  allowTrust: [\"authorize\", \"assetCode\", \"trustor\"],\n  bumpSequence: [\"bumpTo\"],\n  changeTrust: [\"asset\"],\n  createAccount: [\"destination\", \"startingBalance\"],\n  createPassiveOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  inflation: [],\n  manageData: [\"name\", \"value\"],\n  manageOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  pathPayment: [\"sendAsset\", \"sendMax\", \"destination\", \"destAsset\", \"destAmount\"],\n  payment: [\"asset\", \"destination\", \"amount\"],\n  setOptions: []\n}\n\n/**\n * Operation optionnal fields.\n */\nspecs.operationOptionalFields = {\n  accountMerge: [\"source\"],\n  allowTrust: [\"source\"],\n  bumpSequence: [\"source\"],\n  changeTrust: [\"limit\", \"source\"],\n  createAccount: [\"source\"],\n  createPassiveOffer: [\"source\"],\n  inflation: [\"source\"],\n  manageData: [\"source\"],\n  manageOffer: [\"offerId\", \"source\"],\n  pathPayment: [\"path\", \"source\"],\n  payment: [\"source\"],\n  setOptions: [\"inflationDest\", \"clearFlags\", \"setFlags\", \"masterWeight\",\n    \"lowThreshold\", \"medThreshold\", \"highThreshold\", \"signer\", \"homeDomain\",\n    \"source\"]\n}\n\n/**\n * Operations fields\n */\nspecs.operationFields = {}\nfor (let field in specs.operationMandatoryFields) {\n  specs.operationFields[field] = specs.operationMandatoryFields[field]\n    .concat(specs.operationOptionalFields[field])\n}\n\n/**\n * @param {string} type Operation type\n * @param {string} field\n * @return {boolean}\n */\nspecs.isOperationField = function (operation, field) {\n  return specs.operationFields[operation].find(name => name === field)\n}\n\n/**\n * Field types.\n */\nspecs.fieldType = {\n  amount: \"amount\",\n  asset: \"asset\",\n  assetCode: \"string\",\n  assetIssuer: \"address\",\n  authorize: \"boolean\",\n  bumpTo: \"sequence\",\n  buying: \"asset\",\n  callback: \"url\",\n  clearFlags: \"flags\",\n  destAsset: \"asset\",\n  destAmount: \"amount\",\n  destination: \"address\",\n  fee: \"amount\",\n  highThreshold: \"threshold\",\n  homeDomain: \"string\",\n  horizon: \"url\",\n  inflationDest: \"address\",\n  limit: \"amount\",\n  lowThreshold: \"threshold\",\n  masterWeight: \"weight\",\n  maxTime: \"date\",\n  medThreshold: \"threshold\",\n  memo: \"memo\",\n  memoBinary: \"hash\",\n  memoHash: \"hash\",\n  memoId: \"id\",\n  memoReturn: \"hash\",\n  memoText: \"string\",\n  memoType: \"string\",\n  minTime: \"date\",\n  network: \"network\",\n  offerId: \"string\",\n  price: \"price\",\n  name: \"string\",\n  path: \"assetsArray\",\n  selling: \"asset\",\n  sendAsset: \"asset\",\n  sendMax: \"amount\",\n  sequence: \"sequence\",\n  setFlags: \"flags\",\n  signer: \"signer\",\n  signerHash: \"hash\",\n  signerKey: \"address\",\n  signerType: \"string\",\n  signerTx: \"id\",\n  signerWeight: \"weight\",\n  source: \"address\",\n  startingBalance: \"amount\",\n  trustor: \"address\",\n  value: \"buffer\"\n}\n\n/**\n * An array of each valid type for fields.\n */\nspecs.types = []\nfor (let field in specs.fieldType) {\n  const type = specs.fieldType[field]\n  specs.types.find(entry => entry === type) || specs.types.push(type)\n}\n\n/**\n * A neutral account ID meant to be replaced before signing & sending the\n * transaction.\n * @static\n */\nspecs.neutralAccountId = \"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\"\n\n/**\n * The mandatory fields for each SEP-0007 operation.\n */\nspecs.sep7MandatoryFields = {\n  tx: [ \"xdr\" ],\n  pay: [ \"destination\" ]\n}\n\n/**\n * The optional fields for each SEP-0007 operation.\n */\nspecs.sep7OptionalFields = {\n  tx: [ \"callback\", \"pubkey\", \"network_passphrase\", \"origin_domain\", \"signature\" ],\n  pay: [ \"amount\", \"asset_code\", \"asset_issuer\", \"memo\", \"memo_type\", \"callback\",\n    \"network_passphrase\", \"origin_domain\", \"signature\" ]\n}\n\nspecs.sep7IgnoredFields = [ \"message\", \"pubkey\", \"origin_domain\", \"signature\" ]\n","\"use strict\"\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\n/**\n * Returns the\n * [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * for **horizon**, or for **network**, or for the current network.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @param {string} [horizon] A horizon URL\n * @returns {Server} A StellarSdk Server object\n */\nresolve.server = function (conf, network = conf.network, horizon = conf.horizon) {\n  if (!horizon) horizon = resolve.horizon(conf, network)\n  if (!horizon) throw new Error(\"No horizon node defined for selected network.\")\n  if (!conf.current.server[horizon]) conf.current.server[horizon] = new StellarSdk.Server(horizon)\n  return conf.current.server[horizon]\n}\n\n/**\n * Switch to the current network, or to **network** if provided.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @returns {Server} A StellarSdk Server object\n */\nresolve.useNetwork = function (conf, network = conf.network) {\n  const passphrase = resolve.networkPassphrase(conf, network)\n  const currentPassphrase = resolve.networkPassphrase()\n  if (passphrase !== currentPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network)\n    StellarSdk.Network.use(new StellarSdk.Network(passphrase))\n  }\n}\n\n/**\n * Returns the curent Horizon node URL, or the Horizon node URL for **network**\n * if provided.\n *\n * @param {string} [network] A network name or passphrase.\n */\nresolve.horizon = function (conf, network = conf.network) {\n  if (conf.horizon) {\n    return conf.horizon\n  } else {\n    const passphrase = resolve.networkPassphrase(conf, network)\n    if (conf.current && conf.current.horizon[passphrase]) {\n      return conf.current.horizon[passphrase]\n    }\n  }\n}\n\n/**\n * Returns the current network passphrase, or the passphrase for **network** is\n * provided.\n */\nresolve.networkPassphrase = function (conf = {}, network = conf.network) {\n  if (network === undefined) {\n    const currentNetwork = StellarSdk.Network.current()\n    if (currentNetwork) return currentNetwork.networkPassphrase()\n  } else {\n    return conf.current.passphrase[network] || network\n  }\n}\n\n/**\n * Returns the network name for **network passphrase**, or `undefined`.\n *\n * @param {string} networkPassphrase\n * @return {string}\n */\nresolve.networkName = function (conf = {}, networkPassphrase) {\n  const index = Object.values(conf.current.passphrase).indexOf(networkPassphrase)\n  if (index === -1) return networkPassphrase\n  else return Object.keys(conf.current.passphrase)[index]\n}\n\n/**\n * Returns the federation server\n * [Account]{@link https://stellar.github.io/js-stellar-sdk/Account.html}\n * for **address**.\n *\n * @async\n * @param {string} address A Stellar public key or a federated address\n * @return {} Resolve to federation server response\n */\nresolve.address = function (conf, address) {\n  const cache = conf.cache\n  if (cache && cache.destination[address]) return cache.destination[address]\n\n  const promise = addressResolver(conf, address)\n  if (cache) cache.destination[address] = promise\n  return promise\n}\n\nasync function addressResolver (conf, address) {\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    const accountId = account.account_id\n    if (!accountId) throw new Error(\"Unknow address\")\n    if (!account.memo_type) delete account.memo\n    if (address !== accountId) account.address = address\n    if (conf.aliases && conf.aliases[accountId]) {\n      account.alias = conf.aliases[accountId]\n    }\n    return account\n  } catch (error) {\n    console.error(error)\n    status.error(conf, \"Can't resolve: \" + helpers.shorter(address))\n    status.fail(conf, \"Unresolved address\", \"throw\")\n  }\n}\n\n/**\n * Returns the\n * [AccountResponse]{@link https://stellar.github.io/js-stellar-sdk/AccountResponse.html}\n * object for **address**.\n *\n * @param {string} address A public key or a federated address\n * @return {Object} The AccountResponse\n */\nresolve.account = async function (conf, address, quietFlag) {\n  const account = await resolve.address(conf, address)\n  const accountId = account.account_id\n  const cache = conf.cache\n  if (cache && cache.account[accountId]) return cache.account[accountId]\n\n  const promise = accountResolver(conf, accountId, quietFlag)\n  if (cache) cache.account[accountId] = promise\n  return promise\n}\n\nasync function accountResolver (conf, accountId, quietFlag) {\n  const server = resolve.server(conf)\n  try {\n    const accountResponse = await server.loadAccount(accountId)\n    return accountResponse\n  } catch (error) {\n    if (quietFlag) {\n      throw error\n    } else {\n      if (error.response) {\n        status.error(conf, \"Empty account: \" + helpers.shorter(accountId), \"throw\")\n      } else {\n        status.error(conf, \"Invalid horizon node: \" + resolve.horizon(conf), \"throw\")\n      }\n    }\n  }\n}\n\n/**\n * Returns `true` if **address** account is empty, `false` otherwise.\n *\n * @async\n * @param {string} address Public key or federated address\n * @return {boolean}\n */\nresolve.isAccountEmpty = function (conf, address) {\n  return resolve.account(conf, address, true).then(() => false).catch(() => true)\n}\n\n/**\n * Returns the account object for transaction source **address`** with sequence\n * set at **sequence** if provided. If **address** is not provided, returns the\n * neutral account object instead (as in SEP-0007 specifications).\n *\n * @param {string} [address]\n * @param {string|numbre} [sequence]\n * @return {AccountResponse}\n */\nresolve.txSourceAccount = async function (conf, address, sequence) {\n  if (!address) {\n    return makeAccountResponse(conf, specs.neutralAccountId, \"-1\")\n  } else {\n    const destination = await resolve.address(conf, address)\n    if (destination.memo) status.error(conf, \"Invalid transaction source address (requires a memo)\", \"throw\")\n    const account = await resolve.account(conf, destination.account_id)\n    if (sequence) {\n      const baseAccount = new StellarSdk.Account(account.id, sequence)\n      baseAccount.sequence = baseAccount.sequence.sub(1)\n      account._baseAccount = baseAccount\n    }\n    return account\n  }\n}\n\n/**\n * Creates an AccountResponse object with signers set for an empty account.\n *\n * @param  {string} publicKey\n * @param  {string} sequence [description]\n * @return {AccountResponse}\n */\nfunction makeAccountResponse (conf, publicKey, sequence) {\n  const account = new StellarSdk.Account(publicKey, sequence)\n  if (conf.cache) conf.cache.account[publicKey] = account\n  account.id = publicKey\n\n  account.signers = [{\n    public_key: publicKey,\n    weight: 1,\n    key: publicKey,\n    type: \"ed25519_public_key\"\n  }]\n\n  return account\n}\n\n/**\n * Returns the array of all source accounts ID involved in **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\nresolve.txSources = function (conf, transaction) {\n  if (!transaction.source) throw new Error(\"No source for transaction\")\n\n  const extra = resolve.extra(conf, transaction)\n  if (extra.cache.txSources) return extra.cache.txSources\n\n  const array = extra.cache.txSources = [ transaction.source ]\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  return array\n}\n\n/**\n * Returns an object such as:\n *\n * ```js\n * {\n *    $accountId: $accountSigners\n *    ...\n * }\n * ```\n *\n * @param {Transaction} transaction\n * @return {Object}\n */\nresolve.txSigners = async function (conf, transaction) {\n  const extra = resolve.extra(conf, transaction)\n  if (extra.cache.txSigners) return extra.cache.txSigners\n\n  const txSources = resolve.txSources(extra, transaction)\n  const signers = extra.cache.txSigners = {}\n\n  for (let index in txSources) {\n    const source = txSources[index]\n    const account = await resolveTxSource(extra, source)\n    if (!signers[account.id]) {\n      signers[account.id] = account.signers.filter(signer => {\n        return signer.type !== \"preauthTx\"\n      })\n    }\n  }\n\n  return signers\n}\n\nasync function resolveTxSource (conf, address) {\n  try {\n    return await resolve.account(conf, address, \"quiet\")\n  } catch (error) {\n    return makeAccountResponse(conf, address, \"0\")\n  }\n}\n\n/**\n * Returns an Array containing the keys for all legit signers of **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = resolve.extra(conf, transaction)\n  if (!extra.cache.txSignersList) {\n    const txSigners = await resolve.txSigners(extra, transaction)\n    extra.cache.txSignersList = signersTableToSignersList(txSigners)\n  }\n  return extra.cache.txSignersList\n}\n\nfunction signersTableToSignersList (signersTable) {\n  const array = []\n  for (let accountId in signersTable) {\n    signersTable[accountId].forEach(signer => {\n      if (!array.find(key => key === signer.key)) array.push(signer.key)\n    })\n  }\n  return array\n}\n\n/**\n * Add an extra field to **object** that embed cache and local configuration.\n *\n * @private\n */\nresolve.extra = function (conf, object) {\n  if (!object._cosmicplus) {\n    helpers.setHiddenProperty(object, \"_cosmicplus\", {})\n    if (conf.cache) object._cosmicplus.cache = conf.cache\n    else object._cosmicplus.cache = { destination: {}, account: {} }\n    object._cosmicplus.network = conf.network\n    object._cosmicplus.current = conf.current\n  }\n  return object._cosmicplus\n}\n","\"use strict\"\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * Thoses methods won't have effect unless status reporting is enabled on `conf`\n * object by using `status.init` (wich is done automatically on CosmicLink\n * objects).\n *\n * @private\n * @exports status\n */\nconst status = exports\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst html = env.isBrowser && require(\"@cosmic-plus/jsutils/html\")\n\n/**\n * Initialize `conf.status` & `conf.errors`.\n */\nstatus.init = function (conf) {\n  conf.status = null\n  conf.errors = false\n}\n\n/**\n * Set `conf` status as `status` and update statusNode. Error status should be\n * recorded using the `status.fail` function bellow. Once a status is set it\n * won't be mutated.\n *\n * @param {string} status\n */\nstatus.update = function (conf, status) {\n  if (conf.status || conf.status === undefined) return\n\n  // eslint-disable-next-line no-console\n  console.log(\"Set status: \" + status)\n  conf.status = status\n\n  if (conf._statusNode) {\n    const title = html.grab(\".cosmiclib_status\", conf._statusNode)\n    title.textContent = status\n  }\n}\n\n/**\n * Set `conf` status as error status `status` and update statusNode. This\n * implies that the cosmic link or the underlying transaction is invalid. Then,\n * call `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\nstatus.fail = function (conf, errorStatus, continuation) {\n  status.update(conf, errorStatus)\n  if (conf._statusNode) html.appendClass(conf._statusNode, \"cosmiclib_error\")\n  errorContinuation(errorStatus, continuation)\n}\n\n/**\n * Append `error` to `conf.errors` and to the HTML display. Then, call\n * `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\nstatus.error = function (conf, error, continuation) {\n  // eslint-disable-next-line no-console\n  console.log(error)\n\n  if (conf.errors !== undefined) {\n    if (!conf.errors) conf.errors = []\n\n    conf.errors.push(error)\n\n    if (conf._statusNode) {\n      const errorsNode = html.grab(\".cosmiclib_errors\", conf._statusNode)\n      const lineNode = html.create(\"li\", null, error)\n      html.append(errorsNode, lineNode)\n    }\n  }\n\n  errorContinuation(error, continuation)\n}\n\n/**\n * Create & return an HTML element that displays `conf` status and eventual\n * errors.\n *\n * @return {htmlElement}\n */\nstatus.makeHtmlNode = function (conf) {\n  const statusNode = html.create(\"div\", \".cosmiclib_statusNode\")\n\n  const statusLine = html.create(\"span\", \".cosmiclib_status\")\n  html.append(statusNode, statusLine)\n  if (conf.status) statusLine.textContent = conf.status\n\n  const errorsNode = html.create(\"ul\", \".cosmiclib_errors\")\n  html.append(statusNode, errorsNode)\n  if (conf.errors) {\n    conf.errors.forEach(error => {\n      const errorLine = html.create(\"li\", null, error)\n      html.append(errorsNode, errorLine)\n    })\n  }\n\n  return statusNode\n}\n\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with `error` as message.\n * If `continuation` is undefined, do nothing.\n */\nfunction errorContinuation (error, continuation) {\n  if (continuation) {\n    if (continuation === \"throw\") throw new Error(error)\n    else continuation(error)\n  }\n}\n","\"use_strict\"\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\nconst html = exports\n\n/// Prevent node failure when accidentaly loading this file.\nconst env = require(\"./env\")\nconst document = env.window ? env.window.document : undefined\nif (env.isNode) console.error(\"@cosmic-plus/jsutils/html is a browser-only module\")\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nhtml.append = function (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === \"string\" || typeof child === \"number\" || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nhtml.appendClass = function (element, newClass) {\n  element.className += \" \" + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} elements\n * */\nhtml.clear = function (...elements) {\n  elements.forEach(element => { element.innerHTML = \"\" })\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return\n\n  if (element.select) {\n    element.select()\n  } else if (window.getSelection) {\n    const range = document.createRange()\n    range.selectNode(element)\n    window.getSelection().removeAllRanges()\n    window.getSelection().addRange(range)\n  } else {\n    return\n  }\n  return document.execCommand(\"copy\")\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nhtml.create = function (name, attributes, ...childs) {\n  if (!name) throw new Error(\"Missing tag name\")\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === \"string\") {\n    switch (attributes.substr(0, 1)) {\n    case \"#\": element.id = attributes.substr(1); break\n    case \".\": element.className = attributes.substr(1); break\n    default: throw new Error(\"Unhandled attribute\")\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) html.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.destroy = function (element) {\n  try {\n    element.innerHTML = \"\"\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (error) { console.error(error) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nhtml.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.show = function (...elements) {\n  elements.forEach(element => element.hidden = false)\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.hide = function (...elements) {\n  elements.forEach(element => element.hidden = true)\n}\n\n/**\n * Replace `element1` by `element2`.\n *\n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\nhtml.replace = function (element1, element2) {\n  element1.parentNode.replaceChild(element2, element1)\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nhtml.rewrite = function (element, ...childs) {\n  html.clear(element)\n  html.append(element, ...childs)\n}\n\n/**\n * Add `string` as additional CSS definitions for the current document.\n *\n * @param {string} styles CSS definitions\n */\nhtml.addStyles = function (styles) {\n  const styleNode = html.create(\"style\", { type: \"text/css\" }, styles)\n  html.append(headNode, styleNode)\n}\nconst headNode = html.grab(\"head\")\n","module.exports = require(\"regenerator-runtime\");\n","\"use_strict\"\n/**\n * Library-wide configuration.\n *\n * @borrows module:aliases.all as aliases\n * @borrows module:aliases.add as addAliases\n * @borrows module:aliases.remove as removeAliases\n *\n * @borrows module:event.defaultClickHandlers as clickHandlers\n * @borrows module:event.setClickHandler as setClickHandler\n * @borrows module:event.clearClickHandler as clearClickHandler\n *\n * @exports config\n */\nconst config = exports\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst aliases = require(\"./aliases\")\nconst event = env.isBrowser && require(\"./event\")\n\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\nconfig.page = \"https://cosmic.link/\"\n/**\n * The default fallback network.\n * @default 'public'\n */\nconfig.network = \"public\"\n/**\n * The default fallback source address.\n * @default undefined\n */\nconfig.source = undefined\n\n/**\n * Networks setup.\n *\n * @private\n */\nconfig.current = {\n  passphrase: {},\n  horizon: {},\n  server: {}\n}\n\n/**\n * Set default **passphrase** and **horizon** URL for network **name**.\n *\n * Adding custom network this way will enable the use of their name in cosmic\n * queries (as in `&network=name`). However, please remind that this feature\n * will works only on your side and could break compatibility with other\n * services.\n *\n * @example\n * cosmicLib.config.setupNetwork('public', 'https://my-own-horizon-instance.example.org')\n * cosmicLib.config.setupNetwork('custom', 'https://custom-horizon.example.org', 'My Custom Passphrase')\n *\n * @param {string} name Network name (like 'public', 'test')\n * @param {string} horizon Horizon URL\n * @param {string} [passphrase] Network passphrase\n */\nconfig.setupNetwork = function (name, horizon, passphrase) {\n  if (passphrase) config.current.passphrase[name] = passphrase\n  else passphrase = config.current.passphrase[name]\n  config.current.horizon[passphrase] = horizon\n}\n\nconfig.setupNetwork(\"public\", \"https://horizon.stellar.org\", StellarSdk.Networks.PUBLIC)\nconfig.setupNetwork(\"test\", \"https://horizon-testnet.stellar.org\", StellarSdk.Networks.TESTNET)\n\nconfig.aliases = aliases.all\nconfig.addAliases = (definitions) => aliases.add(config, definitions)\nconfig.removeAliases = (array) => aliases.remove(config, array)\n\nconfig.clickHandlers = event.defaultClickHandlers\nconfig.setClickHandler = (fieldType, callback) => event.setClickHandler(config, fieldType, callback)\nconfig.clearClickHandler = (fieldType) => event.clearClickHandler(config, fieldType)\n","\"use strict\"\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `conf` object\n * and HTML nodes are updated accordingly.\n *\n * @private\n * @exports decode\n */\nconst decode = exports\n\nconst check = require(\"./check\")\nconst normalize = require(\"./normalize\")\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\ndecode.query = function (conf, query = \"?\") {\n  if (query.substr(0, 1) !== \"?\") status.fail(conf, \"Invalid query\", \"throw\")\n\n  const operations = []\n  const tdesc = {}\n\n  let command = query.substr(1).replace(/&.*/, \"\")\n  const params = query.substr(command.length + 2).split(\"&\")\n  if (command && command !== \"transaction\") operations.push({ type: command })\n\n  for (let index in params) {\n    const param = params[index].split(\"=\", 2)\n    const field = param[0]\n    if (!field) continue\n\n    if (field === \"operation\") {\n      operations.push({ type: param[1] })\n      command = \"operation\"\n      continue\n    }\n\n    const value = decode.field(conf, field, param[1])\n\n    /// Multi-operation link.\n    if (command === \"transaction\") {\n      tdesc[field] = value\n    } else if (command === \"operation\") {\n      operations[operations.length - 1][field] = value\n    /// One-operation link.\n    } else {\n      if (specs.isTransactionField(field)) {\n        tdesc[field] = value\n      } else {\n        operations[0][field] = value\n      }\n    }\n  }\n\n  tdesc.operations = operations\n  normalize.tdesc(conf, tdesc)\n  tdesc.operations.forEach(odesc => normalize.odesc(conf, odesc))\n  check.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/******************************************************************************/\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\ndecode.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  return type ? decode.type(conf, type, value) : value\n}\n\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {string} type\n * @param {string} value\n */\ndecode.type = function (conf, type, value) {\n  if (value) {\n    value = decodeURIComponent(value)\n    return process[type] ? process[type](conf, value) : value\n  } else {\n    return \"\"\n  }\n}\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.asset = function (conf, asset) {\n  const assetLower = asset.toLowerCase()\n  if (assetLower === \"xlm\" || assetLower === \"native\") {\n    return { code: \"XLM\" }\n  } else {\n    const temp = asset.split(\":\")\n    const object = { code: temp[0], issuer: temp[1] }\n    return object\n  }\n}\n\nprocess.assetsArray = function (conf, assetsList) {\n  const strArray = assetsList.split(\",\")\n  return strArray.map(entry => decode.asset(conf, entry))\n}\n\nprocess.boolean = function (conf, string) {\n  switch (string) {\n  case \"true\": return true\n  case \"false\": return false\n  }\n}\n\nprocess.buffer = function (conf, string) {\n  const matched = string.match(/(^[^:]*):/)\n  const type = matched && matched[1]\n  switch (type) {\n  case \"text\": case \"base64\":\n    return { type: type, value: string.substr(type.length + 1)}\n  default:\n    return { type: \"text\", value: string }\n  }\n}\n\nprocess.date = function (conf, string) {\n  /// Use UTC timezone by default.\n  if (string.match(/T[^+]*[0-9]$/)) string += \"Z\"\n  return new Date(string).toISOString()\n}\n\nprocess.memo = function (conf, string) {\n  const matched = string.match(/(^[^:]*):/)\n  const type = matched && matched[1]\n  switch (type) {\n  case \"text\": case \"base64\": case \"id\": case \"hash\": case \"return\":\n    return { type: type, value: string.substr(type.length + 1)}\n  default:\n    return { type: \"text\", value: string }\n  }\n}\n\nprocess.price = function (conf, price) {\n  const numerator = price.replace(/:.*/, \"\")\n  const denominator = price.replace(/^[^:]*:/, \"\")\n  if (numerator === denominator) return price\n  else return { n: +numerator, d: +denominator }\n}\n\nprocess.signer = function (conf, signer) {\n  const temp = signer.split(\":\")\n  const object = { weight: temp[0], type: temp[1], value: temp[2] }\n  return object\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  exports[type] = (conf, value) => decode.type(conf, type, value)\n})\n","\"use strict\"\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @private\n * @exports format\n */\nconst format = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst html = require(\"@cosmic-plus/jsutils/html\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst config = require(\"./config\")\nconst event = require(\"./event\")\nconst resolve = require(\"./resolve\")\nconst signersUtils = require(\"./signers-utils\")\nconst specs = require(\"./specs\")\n\n/**\n * Returns an HTML div describing `tdesc`.\n *\n * @param {Object} tdesc Transaction descriptor.\n * @return {HTMLElement} Transaction HTML description.\n */\nformat.tdesc = function (conf, tdesc) {\n  const trNode = html.create(\"div\", \".cosmiclib_transactionNode\")\n  if (!tdesc) return trNode\n\n  let infoNode\n  for (let index in specs.transactionOptionalFields) {\n    const entry = specs.transactionOptionalFields[index]\n    if (entry === \"horizon\" && resolve.horizon(config, conf.network)) continue\n\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = html.create(\"ul\", \".cosmiclib_sideInfo\")\n      const lineNode = html.create(\"li\", {},\n        specs.fieldDesc[entry] + \": \",\n        format.field(conf, entry, tdesc[entry])\n      )\n      html.append(infoNode, lineNode)\n    }\n  }\n  if (infoNode) html.append(trNode, infoNode)\n\n  try {\n    for (let index in tdesc.operations) {\n      const operation = tdesc.operations[index]\n      const opNode = format.odesc(conf, operation)\n      opNode.index = index\n      html.append(trNode, opNode)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  trNode.tdesc = tdesc\n  return trNode\n}\n\n/**\n * Returns an HTML div describing `odesc`.\n *\n * @param {Object} odesc Operation in cosmic link JSON format.\n * @return {HTMLElement} Operation HTML description.\n */\nformat.odesc = function (conf, odesc) {\n  const opNode = html.create(\"div\", \".cosmiclib_operation\")\n  opNode.odesc = odesc\n  let retNode = opNode\n\n  if (odesc.source) {\n    retNode = html.create(\"div\", \".cosmiclib_sourcedOperation\")\n    const sourceNode = html.create(\"div\", \".cosmiclib_sideInfo\", \"Source: \")\n    const addressNode = format.address(conf, odesc.source)\n    html.append(sourceNode, addressNode)\n    html.append(retNode, sourceNode, opNode)\n  }\n\n  let meaning = operationMeaning(odesc)\n  while (meaning) {\n    if (meaning.substr(0, 1) === \"{\") {\n      const query = meaning.substr(1).replace(/}.*/, \"\")\n      meaning = meaning.replace(/^[^}]*}/, \"\")\n      if (query === \"newline\") {\n        if (meaning === \"\") break\n        html.append(opNode, html.create(\"br\"))\n      } else {\n        const fieldNode = format.field(conf, query, odesc[query])\n        html.append(opNode, fieldNode)\n      }\n    } else {\n      const txt = meaning.replace(/{.*/, \"\")\n      meaning = meaning.replace(/^[^{]*/, \"\")\n      html.append(opNode, txt)\n    }\n  }\n  return retNode\n}\n\n/**\n * Returns a string describing `odesc`.\n *\n * @private\n */\nfunction operationMeaning (odesc) {\n  let msg\n  switch (odesc.type) {\n  case \"accountMerge\":\n    return \"Merge account inside {destination}\"\n  case \"allowTrust\":\n    if (odesc.authorize) {\n      return \"Allow usage of your asset {assetCode} to {trustor}\"\n    } else {\n      return \"Deny usage of your asset {assetCode} to {trustor}\"\n    }\n  case \"bumpSequence\":\n    return \"Set account sequence number to {bumpTo}\"\n  case \"changeTrust\":\n    if (odesc.limit === \"0\") {\n      return \"Refuse asset {asset}\"\n    } else if (odesc.limit) {\n      return \"Set holding limit as {limit} for asset {asset}\"\n    } else {\n      return \"Accept asset {asset}\"\n    }\n  case \"createAccount\":\n    return \"Create account {destination} and send it {startingBalance} XLM\"\n  case \"createPassiveOffer\":\n    return \"Passive offer of {amount} {selling} at {price} {buying} / unit\"\n  case \"inflation\":\n    return \"Run inflation\"\n  case \"manageData\":\n    if (odesc.value) {\n      if (odesc.value.type === \"text\") {\n        return \"Set data entry '{name}' to: '{value}'\"\n      } else {\n        return \"Set data entry '{name}' to base64: '{value}'\"\n      }\n    } else {\n      return \"Delete data entry '{name}'\"\n    }\n  case \"manageOffer\":\n    if (!odesc.offerId || odesc.offerId === \"0\") {\n      return \"Offer {amount} {selling} at {price} {buying} / unit\"\n    } else if (odesc.amount !== \"0\") {\n      return \"Change offer '{offerId}' to: offer {amount} {selling} at \" +\n          \"{price} {buying} / unit\"\n    } else {\n      return \"Delete offer '{offerId}'\"\n    }\n  case \"pathPayment\":\n    msg = \"Send {destAmount} {destAsset} to {destination} for a maximum \" +\n        \"of {sendMax} {sendAsset}\"\n    if (odesc.path) msg += \" using conversion path: {path}\"\n    return msg\n  case \"payment\":\n    return \"Send {amount} {asset} to {destination}\"\n  case \"setOptions\":\n    msg = \"\"\n    if (odesc.inflationDest) {\n      msg += \"Set inflation destination to: {inflationDest}{newline}\"\n    }\n    if (odesc.clearFlags) msg += \"Clear flag(s): {clearFlags}{newline}\"\n    if (odesc.setFlags) msg += \"Set flag(s): {setFlags}{newline}\"\n    if (odesc.masterWeight) {\n      if (odesc.masterWeight === \"0\") {\n        msg += \"Delete master key{newline}\"\n      } else {\n        msg += \"Set master key weight at: {masterWeight}{newline}\"\n      }\n    }\n    [\"lowThreshold\", \"medThreshold\", \"highThreshold\"].forEach(field => {\n      if (odesc[field]) msg += \"Set \" + field + \" at: {\" + field + \"}{newline}\"\n    })\n    if (odesc.signer) {\n      if (odesc.signer.type === \"tx\") {\n        if (odesc.signer.weight === \"0\") msg += \"Remove pre-signed {signer}{newline}\"\n        else msg += \"Pre-sign {signer}{newline}\"\n      } else {\n        if (odesc.signer.weight === \"0\") msg += \"Remove signer: {signer}{newline}\"\n        else msg += \"Set signer: {signer}{newline}\"\n      }\n    }\n    if (odesc.homeDomain) msg += \"Set home domain: {homeDomain}{newline}\"\n    if (odesc.homeDomain === \"\") msg += \"Unset home domain\"\n    if (!msg) msg = \"Do nothing\"\n    return msg\n  default:\n    throw new Error(\"Unknow operation: \" + odesc.type)\n  }\n}\n\n/**\n * Returns an HTML div describing `signers`.\n *\n * @param {Object} signers Signers object as returned by @see{resolve.signers}.\n * @return {HTMLElement} Signers HTML description\n */\nformat.signatures = function (conf, transaction) {\n  const signersNode = html.create(\"div\", \".cosmiclib_signersNode\")\n\n  signersUtils.for(conf, transaction).then(utils => {\n    if (utils.signersList.length < 2 && !utils.signatures.length) return\n\n    utils.sources.forEach(accountId => {\n      if (accountId !== specs.neutralAccountId) {\n        const div = makeAccountSignersNode(conf, utils, accountId)\n        html.append(signersNode, div)\n      }\n    })\n  })\n\n  return signersNode\n}\n\nfunction makeAccountSignersNode (conf, utils, accountId) {\n  const accountSignersNode = html.create(\"div\")\n\n  const title = \"Signers for \" + helpers.shorter(accountId)\n  const titleNode = html.create(\"span\", \".cosmiclib_threshold\", title)\n  const listNode = html.create(\"ul\", \".cosmiclib_signers\")\n  html.append(accountSignersNode, titleNode, listNode)\n\n  utils.signers[accountId].forEach(signer => {\n    const signerNode = format.signer(conf, signer)\n    const lineNode = html.create(\"li\", null, signerNode)\n    if (utils.hasSigned(signer.key)) {\n      html.appendClass(lineNode, \"cosmiclib_signed\")\n      listNode.insertBefore(lineNode, listNode.firstChild)\n    } else {\n      html.append(listNode, lineNode)\n    }\n  })\n\n  return accountSignersNode\n}\n\n/**\n * Retrieves the parent odesc (*Operation Descriptor*) of an HTML element, or\n * returns `undefined` if **element** is not the child of an HTML formatted\n * operation.\n *\n * @param {HTMLElement} element\n * @return {Object} odesc\n */\nformat.parentOdesc = (conf, element) => parentProperty(element, \"odesc\")\n\n/**\n * Retrieves the parent operation index of an HTML element, or returns\n * `undefined` if **element** is not the child of an HTML formatted operation.\n *\n * @param {HTMLElement} element\n * @return {Number} operation index\n */\nformat.parentIndex = (conf, element) => parentProperty(element, \"index\")\n\n/**\n * Retrieves the parent tdesc of an HTML element, or returns `undefined`\n * if **element** is not the child of an HTML formatted transaction.\n *\n * @param {HTMLElement} element\n * @return {Object} tdesc\n */\nformat.parentTdesc = (conf, element) => parentProperty(element, \"tdesc\")\n\nfunction parentProperty (element, property) {\n  while (element.parentNode) {\n    if (element.parentNode[property]) return element.parentNode[property]\n    else element = element.parentNode\n  }\n}\n\n/******************************************************************************/\n\n/**\n * Returns an HTML div describing `field` `value`.\n *\n * @param {string} field The field name of `value` as defined in `spec.js`.\n * @param {*} value The value of `field`.\n * @return {HTLMElement} `field` `value` HTML description\n */\nformat.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) throw new Error(\"Unknow field: \" + field)\n\n  const domNode = format.type(conf, type, value)\n  domNode.field = field\n  if (field !== type) html.appendClass(domNode, \"cosmiclib_\" + field)\n\n  return domNode\n}\n\nformat.type = function (conf, type, value) {\n  if (typeof value === \"object\" && value.error) type = \"error\"\n  const formatter = process[type] || process.string\n  const domNode = formatter(conf, value)\n  domNode.className = \"cosmiclib_\" + type\n\n  const eventObject = {\n    conf: conf,\n    type: type,\n    value: value,\n    domNode: domNode\n  }\n  if (conf.constructor.name === \"CosmicLink\") eventObject.cosmicLink = conf\n  domNode.onclick = () => event.callClickHandler(conf, type, eventObject)\n  return domNode\n}\n\n/// Provide a format method for each data type.\nspecs.types.forEach(type => {\n  format[type] = (conf, value) => format.type(conf, type, value)\n})\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.string = function (conf, string) {\n  if (typeof string !== \"string\") string = string + \"\"\n  return html.create(\"span\", null, string)\n}\n\nprocess.error = function (conf, errDesc) {\n  const errorNode = html.create(\"span\", \".cosmiclib_error\")\n  errorNode.textContent = errDesc.value === \"\" ? \"(undefined)\"\n    : errDesc.value.value  || errDesc.value\n  errorNode.title = errDesc.error.message\n  return errorNode\n}\n\nprocess.address = function (conf, address) {\n  const addressNode = html.create(\"span\",\n    { title: \"Resolving...\" },\n    helpers.shorter(address),\n    html.create(\"span\", \".cosmiclib_loadingAnim\")\n  )\n\n  resolveAddressAndUpdate(conf, address, addressNode)\n  return addressNode\n}\n\nasync function resolveAddressAndUpdate (conf, address, addressNode) {\n  try {\n    const account = await resolve.address(conf, address)\n\n    addressNode.title = account.account_id\n    if (account.memo) {\n      addressNode.title += `\\nMemo (${account.memo_type}): ${account.memo}`\n    }\n\n    if (account.address) addressNode.textContent = account.address\n    else if (account.alias) addressNode.textContent = account.alias\n\n    addressNode.extra = account\n  } catch (error) {\n    addressNode.title = \"Can't resolve address\"\n    html.appendClass(addressNode, \"cosmiclib_error\")\n\n    const parent = addressNode.parentNode\n    if (parent.classList.contains(\"cosmiclib_assetIssuer\")) {\n      parent.style.display = \"inline\"\n    }\n  }\n\n  const animation = html.grab(\".cosmiclib_loadingAnim\", addressNode)\n  if (animation) html.destroy(animation)\n  const grandpa = addressNode.parentNode.parentNode\n  if (grandpa && grandpa.classList.contains(\"cosmiclib_asset\")) {\n    html.destroy(html.grab(\".cosmiclib_loadingAnim\", grandpa))\n    const odesc = format.parentOdesc(conf, grandpa)\n    if (odesc && odesc.type === \"changeTrust\") {\n      addressNode.parentNode.style.display = \"inline\"\n    }\n  }\n}\n\nprocess.asset = function (conf, asset) {\n  const codeNode = format.field(conf, \"assetCode\", asset.code)\n  const issuerNode = html.create(\"span\", null, \" issued by \")\n  const assetNode = html.create(\"span\", null, codeNode, issuerNode)\n  issuerNode.style.display = \"none\"\n\n  if (asset.issuer) {\n    codeNode.title = \"Issued by \" + asset.issuer\n    html.append(issuerNode, format.field(conf, \"assetIssuer\", asset.issuer))\n    html.append(codeNode, html.create(\"span\", \".cosmiclib_loadingAnim\"))\n  } else {\n    codeNode.title = \"Native asset\"\n    html.rewrite(issuerNode, \" native asset\")\n  }\n\n  codeNode.onclick = () => {\n    if (issuerNode.style.display === \"inline\") issuerNode.style.display = \"none\"\n    else issuerNode.style.display = \"inline\"\n  }\n\n  return assetNode\n}\n\nprocess.assetsArray = function (conf, assetsArray) {\n  const assetsArrayNode = html.create(\"span\")\n  for (let i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) html.append(assetsArrayNode, \", \")\n    html.append(assetsArrayNode, format.asset(conf, assetsArray[i]))\n  }\n\n  return assetsArrayNode\n}\n\nprocess.buffer = function (conf, object) {\n  if (object.type === \"base64\") return format.hash(conf, object.value)\n  else return format.string(conf, object.value)\n}\n\nprocess.date = function (conf, date) {\n  return html.create(\"span\", {}, new Date(date).toLocaleString())\n}\n\nprocess.hash = function (conf, hash) {\n  return html.create(\"span\", { title: hash }, helpers.shorter(hash))\n}\n\nprocess.id = process.hash\n\nprocess.flags = function (conf, flags) {\n  let string = \"\"\n  if (flags >= 4) {\n    string = \"immutable\"\n    flags = flags - 4\n  }\n  if (flags >= 2) {\n    if (string) string = \", \" + string\n    string = \"revocable\" + string\n    flags = flags - 2\n  }\n  if (+flags === 1) {\n    if (string) string = \", \" + string\n    string = \"required\" + string\n  }\n\n  return html.create(\"span\", {}, string)\n}\n\nprocess.memo = function (conf, memo) {\n  const typeNode = format.field(conf, \"memoType\", memo.type)\n  let valueNode\n  switch (memo.type) {\n  case \"text\":\n    valueNode = format.field(conf, \"memoText\", memo.value)\n    break\n  case \"base64\":\n    valueNode = format.field(conf, \"memoBinary\", memo.value)\n    break\n  case \"id\":\n    valueNode = format.field(conf, \"memoId\", memo.value)\n    break\n  case \"hash\":\n    valueNode = format.field(conf, \"memoHash\", memo.value)\n    break\n  case \"return\":\n    valueNode = format.field(conf, \"memoReturn\", memo.value)\n  }\n  return html.create(\"span\", {}, \"(\", typeNode, \") \", valueNode)\n}\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") {\n    return html.create(\"span\", {}, price)\n  } else {\n    return html.create(\"span\", {}, price.n / price.d + \"\")\n  }\n}\n\nprocess.signer = function (conf, signer) {\n  const signerNode = html.create(\"span\")\n  switch (signer.type) {\n  case \"key\":\n  case \"ed25519_public_key\": {\n    const value1 = signer.value || signer.key\n    html.append(signerNode, \"Account \", format.field(conf, \"signerKey\", value1))\n    break\n  }\n  case \"tx\": {\n    const value2 = signer.value || signer.key\n    html.append(signerNode, \"transaction \", format.field(conf, \"signerTx\", value2))\n    break\n  }\n  case \"hash\":\n  case \"sha256hash\": {\n    const value3 = signer.value || StellarSdk.StrKey.decodeSha256Hash(signer.key).toString(\"hex\")\n    html.append(signerNode, \"key whose hash is \", format.field(conf, \"signerHash\", value3))\n    break\n  }\n  }\n  if (signer.weight > 1) {\n    const weightNode = format.weight(conf, signer.weight)\n    html.append(signerNode, \" (weight: \", weightNode, \")\")\n  }\n  return signerNode\n}\n","\"use_strict\"\n/**\n * This module provides two ways to generate {@link SignersUtils} for a\n * Transaction object. The first one extends the object and is the intended way\n * to use those utilities. However, as extending objects can sometimes prove\n * inconvenient or intrusive, a second method allows to create a stand-alone\n * {@link SignersUtils} tied to a given transaction.\n *\n * @exports signersUtils\n */\nconst signersUtils = exports\n\nconst resolve = require(\"./resolve\")\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\n/**\n * **SignersUtils** is a toolbox that aims to ease the handling of\n * multisignature transactions. The idea behind it is to fetch all required\n * data once and to cache the responses into the transaction. Then, all\n * the utilities can function in a synchronous (immediate) manner.\n *\n * Those are automatically available in `cosmicLink.transaction` after\n * `await cosmicLink.lock()` is ran. Alternatively, you can extend a transaction\n * or generate its SignersUtils by using {@link module:signersUtils}. There's no\n * `cosmicLib.SignersUtils` constructor.\n *\n * An instance of SignersUtils is always tied to a given transaction. This is\n * why none of the provided methods take a transaction as parameter.\n *\n * >\n * | Members                                                                     | Methods\n * |-----------------------------------------------------------------------------|-------------\n * | [sources]{@link SignersUtils#sources}: Array of transaction sources         | [hasSigner]{@link SignersUtils#hasSigner}: Test if a key is a legit signer for transaction\n * | [signers]{@link SignersUtils#signers}: Table of transaction signers         | [hasSigned]{@link SignersUtils#hasSigned}: Test if a key has signed transaction\n * | [signersList]{@link SignersUtils#signersList}: Array of transaction signers |\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Donation', maxDate: 2019 })\n *  .addOperation('payment', { destination: 'tips*cosmic.link', amount: 10 })\n *\n * await cosmicLink.lock({ network: 'test', source: 'myaddress*example.org' })\n *\n * console.log(cosmicLink.transaction.signers)\n * console.log(cosmicLink.transaction.hasSigner(GB...DXEZ))\n *\n * @alias SignersUtils\n * @namespace\n */\nclass SignersUtils {\n  static async resolve (conf, transaction, extendFlag) {\n    const extra = resolve.extra(conf, transaction)\n\n    if (!extra.cache.signersUtils) {\n      resolve.useNetwork(extra)\n      extra.cache.txHash = transaction.hash()\n      const utils = new SignersUtils(extra, transaction)\n      /**\n       * A list of the sources involved in the transaction.\n       * @alias SignersUtils#sources\n       * @type {Array}\n       */\n      utils.sources = await resolve.txSources(extra, transaction)\n      /**\n       * A table of the signers for each transaction source.\n       * @alias SignersUtils#signers\n       * @type {Object}\n       */\n      utils.signers = await resolve.txSigners(extra, transaction)\n      /**\n       * A list of the legit signers for the transaction.\n       * @alias SignersUtils#signersList\n       * @type {Array}\n       */\n      utils.signersList = await resolve.txSignersList(extra, transaction)\n      Object.assign(utils, utilities)\n      extra.cache.signersUtils = utils\n    }\n\n    if (extendFlag) {\n      if (!transaction.hasSigner) Object.assign(transaction, extra.cache.signersUtils)\n      return transaction\n    } else {\n      return extra.cache.signersUtils\n    }\n  }\n\n  constructor (conf, transaction) {\n    this.signatures = transaction.signatures\n    helpers.setHiddenProperty(this, \"_cosmicplus\", transaction._cosmicplus)\n  }\n}\n\n/******************************************************************************/\n\nconst utilities = {}\n\n/**\n * Tests if **accountId** is a legit signer for the transaction.\n *\n * @example\n * if (transaction.hasSigner(GB...DEZX)) console.log('Legit signer')\n *\n * @alias SignersUtils#hasSigner\n * @param {string} accountId\n * @return {boolean}\n */\nutilities.hasSigner = function (accountId) {\n  return this.signersList.find(key => key === accountId)\n}\n\n/**\n * Tests if **accountId** has signed the transaction.\n *\n * @example\n * if (transaction.hasSigned(GB...DEZX)) console.log('Has signed')\n *\n * @alias SignersUtils#hasSigned\n * @param {string} accountId\n * @return {boolean}\n */\nutilities.hasSigned = function (accountId) {\n  if (accountId.substr(0, 1) === \"G\") {\n    const keypair = StellarSdk.Keypair.fromPublicKey(accountId)\n    const txHash = this._cosmicplus.cache.txHash\n    return !!this.signatures.find(entry => keypair.verify(txHash, entry.signature()))\n  }\n}\n\n/******************************************************************************/\n\n/**\n * Returns SignersUtils for **transaction**.\n *\n * @async\n * @param {Transaction} transaction\n * @return {SignersUtils}\n */\nsignersUtils.for = (conf, transaction) => SignersUtils.resolve(conf, transaction)\n\n/**\n * Extends **transaction** with SignersUtils.\n *\n * @async\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nsignersUtils.extends = (conf, transaction) => SignersUtils.resolve(conf, transaction, true)\n","\"use strict\"\n/**\n * Exposes some of the check routines used by cosmic-lib. Individual type-checks\n * are also available for:\n *\n * > address, amount, asset, assetsArray, boolean, buffer, date, flags, hash,\n * id, memo, network, price, sequence, signer, string, threshold, url, weight\n *\n * All checks are meant to be used on tdesc formatted values. Form example, in\n * tdesc buffer values are not encoded as actual Buffer object but as something\n * like: `{ type: \"text\", value: \"Hello World!\"}`.\n *\n * @example\n * check.field(\"minTime\", \"2018-11\")\n * check.date(\"2018-11\")\n *\n * @private\n * @exports check\n */\nconst check = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst { isUtf8, isBase64 } = require(\"@cosmic-plus/jsutils/misc\")\n\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\n/**\n * Check that **tdesc** is valid.\n *\n * @example\n * check.tdesc({\n *   memo: { type: \"text\", value: \"Hello, World!\" },\n *   network: \"public\",\n *   source: \"tips*cosmic.link\",\n *   operations: [{ type: \"setOptions\", homeDomain: \"cosmic.link\" }]\n * })\n *\n * @param  {Object} tdesc\n */\ncheck.tdesc = function (conf, tdesc) {\n  for (let field in tdesc) {\n    try {\n      check.txField(conf, field, tdesc[field])\n    } catch (error) {\n      tdesc[field] = errDesc(error, tdesc[field])\n    }\n  }\n\n  if (!tdesc.operations.length) {\n    status.error(conf, \"No operation\")\n  }\n  if (tdesc.operations.length > 100) {\n    status.error(conf, \"Too much operations (max 100)\")\n  }\n\n  tdesc.operations.forEach(odesc => {\n    // eslint-disable-next-line no-empty\n    try { check.odesc(conf, odesc) } catch (e) { }\n  })\n\n  if (conf.errors) {\n    const error = new Error(\"Invalid tdesc\")\n    error.tdesc = tdesc\n    throw error\n  }\n}\n\n/**\n * Check that tdesc operation is valid (referred as **odesc**).\n *\n * @example\n * check.odesc({ type: \"payment\", destination: \"tips*cosmic.link\", amount: \"20\" })\n *\n * @param  {Object} odesc [description]\n */\ncheck.odesc = function (conf, odesc) {\n  try {\n    check.operationType(conf, odesc.type)\n  } catch (error) {\n    odesc.type = errDesc(error, odesc.type)\n  }\n\n  for (let field in odesc) {\n    try {\n      check.operationField(conf, odesc.type, field, odesc[field])\n    } catch (error) {\n      odesc[field] = errDesc(error, odesc[field])\n    }\n  }\n\n  specs.operationMandatoryFields[odesc.type].forEach(field => {\n    if (odesc[field] === undefined) {\n      const error = new Error(\"Missing mandatory field: \" + field)\n      odesc[field] = errDesc(error)\n      status.error(conf, error.message)\n    }\n  })\n\n  if (conf.errors) throw new Error(\"Invalid odesc\")\n}\n\n/**\n * Check that **field** is a valid transaction field and that its **value** is\n * valid.\n *\n * @param  {string} field\n * @param  {*} value\n */\ncheck.txField = function (conf, field, value) {\n  if (field === \"operations\") return\n  if (!specs.transactionOptionalFields.find(name => name === field)) {\n    status.error(conf, \"Invalid transaction field: \" + field, \"throw\")\n  }\n  check.field(conf, field, value)\n}\n\n/**\n * Check that **type** is a valid Stellar Operation type.\n *\n * @param  {String}\n */\ncheck.operationType = function (conf, type) {\n  if (!specs.operationMandatoryFields[type]) {\n    status.error(conf, \"Invalid operation: \" + type, \"throw\")\n  }\n}\n\n/**\n * Check that **field** is a valid **operation** field and that its **value** is\n * valid.\n *\n * @param {String} operation\n * @param {String} field\n * @param {*} value\n */\ncheck.operationField = function (conf, operation, field, value) {\n  if (field === \"type\") return\n  if (!specs.isOperationField(operation, field)) {\n    status.error(conf, `Invalid field for ${operation}: ${field}`, \"throw\")\n  }\n  check.field(conf, field, value)\n}\n\nfunction errDesc (error, value = \"\") {\n  return { error: error, value: value }\n}\n\n/******************************************************************************/\n\n/**\n * Check that **field** **value** is a valid.\n *\n * @example\n * check.field(\"memo\", { type: \"text\", value: \"Hello, World!\" })\n *\n * @param {string} field The name of a Stellar Transaction parameter\n * @param {*} value\n */\ncheck.field = function (conf, field, value) {\n  if (value === \"\" && field !== \"homeDomain\" && field !== \"value\") {\n    status.error(conf, `Missing value for field: ${field}`, \"throw\")\n  }\n\n  const type = specs.fieldType[field]\n  if (!type) status.error(conf, \"Unknow field: \" + field, \"throw\")\n  if (value) check.type(conf, type, value)\n}\n\n/**\n * Check that **value** is of type **type**.\n *\n * @example\n * check.type(\"date\", \"2018-11-28\")\n *\n * @param {string} type\n * @param {string} value\n */\ncheck.type = function (conf, type, value) {\n  if (!specs.types.find(entry => entry === type)) {\n    throw new Error(\"Invalid type: \" + type)\n  }\n  return check[type](conf, value)\n}\n\n/**\n * Generic check for numbers. Check that **value** is a number or a string\n * representing a number. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction\n * for `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.number = function (conf, value, type = \"number\", min, max = \"unlimited\") {\n  const num = +value\n  if (isNaN(num)) {\n    status.error(conf,\n      `Invalid ${type} (should be a number): ${value}`,\n      \"throw\"\n    )\n  } else if ((min && num < min) || (max && num > max)) {\n    status.error(conf,\n      `Invalid ${type} (should be between ${min} and ${max} ): ${value}`,\n      \"throw\"\n    )\n  }\n}\n\n/**\n * Generic check for integers. Check that **value** is an integer or a string\n * representing an integer. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction for\n * **value**.\n *\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.integer = function (conf, value, type = \"integer\", min, max) {\n  check.number(conf, value, type, min, max)\n  if (parseInt(value) + \"\" !== value + \"\") {\n    status.error(conf, `Not an integer: ${value}`, \"throw\")\n  }\n}\n\n/**\n * Check that **value** is an UTF-8 string.\n *\n * *Note:* This use a weak (simplified) test that may not be accurate for small\n * strings.\n *\n * @param  {String} value\n */\ncheck.utf8 = function (conf, value) {\n  if (typeof value !== \"string\" || !isUtf8(value)) {\n    status.error(conf, `Invalid UTF8 string: ${value}`, \"throw\")\n  }\n}\n\n/**\n * Check that **value** is a base64 string.\n *\n * @param  {String} value\n */\ncheck.base64 = function (conf, value) {\n  if (typeof value !== \"string\" || !isBase64(value)) {\n    status.error(conf, `Invalid base64 string: ${value}`, \"throw\")\n  }\n}\n\n/******************************************************************************/\n\ncheck.amount = function (conf, amount) {\n  check.number(conf, amount, \"amount\")\n}\n\ncheck.address = function (conf, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.error(conf, \"Invalid address: \" + helpers.shorter(address), \"throw\")\n  }\n}\n\ncheck.asset = function (conf, asset) {\n  const code = asset.code.toLowerCase()\n  if (!asset.issuer && code !== \"xlm\" && code !== \"native\") {\n    status.error(conf, \"Missing issuer for asset: \" + code, \"throw\")\n  }\n}\n\ncheck.assetsArray = function (conf, assetsArray) {\n  let isValid = true\n  for (let index in assetsArray) {\n    try {\n      check.asset(conf, assetsArray[index])\n    } catch (error) {\n      console.error(error)\n      isValid = false\n    }\n  }\n  if (!isValid) throw new Error(\"Invalid assets array\")\n}\n\ncheck.boolean = function (conf, boolean) {\n  if (typeof boolean !== \"boolean\") {\n    status.error(conf, \"Invalid boolean: \" + boolean, \"throw\")\n  }\n}\n\ncheck.buffer = function (conf, buffer) {\n  switch (buffer.type) {\n  case \"text\": check.utf8(conf, buffer.value); break\n  case \"base64\": check.base64(conf, buffer.value); break\n  default: status.error(conf, \"Invalid buffer type: \" + buffer.type, \"throw\")\n  }\n}\n\ncheck.date = function (conf, date) {\n  if (isNaN(Date.parse(date))) {\n    status.error(conf, \"Invalid date: \" + date, \"throw\")\n  }\n}\n\ncheck.flags = function (conf, flags) {\n  check.integer(conf, flags, \"flags\", 0, 7)\n}\n\ncheck.hash = function (conf, hash) {\n  if (hash.length !== 64 || !hash.match(/^[0-9a-f]*$/)) {\n    status.error(conf, \"Invalid hash: \" + hash, \"throw\")\n  }\n}\n\ncheck.id = function (conf, id) {\n  if (!id.match(/^[0-9]*$/)) status.error(conf, \"Invalid id: \" + id, \"throw\")\n}\n\ncheck.memo = function (conf, memo) {\n  switch (memo.type) {\n  case \"text\": check.utf8(conf, memo.value); break\n  case \"base64\": check.base64(conf, memo.value); break\n  case \"hash\": case \"return\": check.hash(conf, memo.value); break\n  case \"id\": check.id(conf, memo.value); break\n  default: status.error(conf, \"Invalid memo type: \" + memo.type, \"throw\")\n  }\n}\n\n\ncheck.price = function (conf, price) {\n  if (typeof price === \"object\") {\n    try {\n      check.price(null, price.n)\n      check.price(null, price.d)\n    } catch (error) {\n      status.error(conf, \"Invalid price: \" + price, \"throw\")\n    }\n  } else {\n    check.number(conf, price, \"price\", 0)\n  }\n}\n\ncheck.signer = function (conf, signer) {\n  check.weight(conf, signer.weight)\n  switch (signer.type) {\n  case \"key\":\n    check.address(conf, signer.value)\n    break\n  case \"hash\":\n  case \"tx\":\n    check.hash(conf, signer.value)\n    break\n  default:\n    status.error(conf, \"Invalid signer type: \" + signer.type, \"throw\")\n  }\n}\n\ncheck.sequence = function (conf, sequence) {\n  check.number(conf, sequence, \"sequence\", 0)\n}\n\ncheck.threshold = function (conf, threshold) {\n  check.integer(conf, threshold, \"threshold\", 0, 255)\n}\n\ncheck.weight = function (conf, weight) {\n  check.integer(conf, weight, \"weight\", 0, 255)\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","\"use strict\"\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @private\n * @exports convert\n */\nconst convert = exports\n\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst construct = require(\"./construct\")\nconst decode = require(\"./decode\")\nconst destruct = require(\"./destruct\")\nconst encode = require(\"./encode\")\nconst resolve = require(\"./resolve\")\n\n/** ****************************    URI -> XDR    ******************************/\n\nconvert.uriToQuery = function (conf, uri) {\n  if (!uri.match(/\\?/)) return null\n  const query = uri.replace(/^[^?]*/, \"\")\n  return query\n}\n\nconvert.queryToTdesc = decode.query\n\nconvert.tdescToJson = function (conf, tdesc) {\n  return JSON.stringify(tdesc, null, 2)\n}\n\nconvert.tdescToTransaction = construct.transaction\n\nconvert.transactionToXdr = function (conf, transaction) {\n  return transaction.toEnvelope().toXDR(\"base64\")\n}\n\nconvert.xdrToSep7 = function (conf, xdr, options) {\n  let sep7 = \"web+stellar:tx?xdr=\"\n  sep7 += encodeURIComponent(xdr)\n  if (options.network && options.network !== \"public\") {\n    const passphrase = resolve.networkPassphrase(conf, options.network)\n    sep7 += \"&network_passphrase=\" + encodeURIComponent(passphrase)\n  }\n  if (options.callback) sep7 += \"&callback=url:\" + encode.url(conf, options.callback)\n  // Not part of the standard.\n  // if (options.horizon) sep7 +=\"&horizon=\" + encode.url(conf, options.horizon)\n\n  return sep7\n}\n\n/** ****************************    XDR -> URI    ******************************/\n\nconvert.xdrToTransaction = function (conf, xdr, options = {}) {\n  const transaction = new StellarSdk.Transaction(xdr)\n  if (options.stripSignatures) transaction.signatures = []\n  return transaction\n}\n\nconvert.xdrToQuery = function (conf, xdr, options = {}) {\n  let query = \"?xdr=\" + xdr\n  if (options.network) query += \"&network=\" + encodeURIComponent(options.network)\n  if (options.horizon) query += \"&horizon=\" + encode.url(conf, options.horizon)\n  if (options.callback) query += \"&callback=\" + encode.url(conf, options.callback)\n  return query\n}\n\nconvert.transactionToTdesc = destruct.transaction\n\nconvert.jsonToTdesc = function (conf, json) {\n  return JSON.parse(json)\n}\n\nconvert.tdescToQuery = encode.query\n\nconvert.queryToUri = function (conf, query) {\n  const page = conf.page || \"https://cosmic.link\"\n  return page + query\n}\n","\"use_strict\"\n/**\n * Methods to set tdesc/odesc defaults values and strip out useless data.\n *\n * @exports normalize\n * @private\n */\nconst normalize = exports\n\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst config = require(\"./config\")\nconst resolve = require(\"./resolve\")\n\n/**\n * Setup the default values for `tdesc`.\n */\nnormalize.tdesc = function (conf, tdesc) {\n  removeEmptyFields(tdesc)\n  if (!tdesc.operations) tdesc.operations = []\n\n  if (tdesc.fee === 100 * tdesc.operations.length) delete tdesc.fee\n  dateFields.forEach(field => {\n    if (tdesc[field]) {\n      tdesc[field] = normalize.date(conf, tdesc[field])\n      if (tdesc[field] === \"1970\") delete tdesc[field]\n    }\n  })\n\n  if (tdesc.network) tdesc.network = normalize.network(conf, tdesc.network)\n\n  // When network is neither test nor public, we want to provide a fallback\n  // Horizon URL; else we don't need it.\n  if (tdesc.network && tdesc.network !== \"public\" && tdesc.network !== \"test\") {\n    const url = resolve.horizon(config, tdesc.network) || tdesc.horizon\n    tdesc.horizon = normalize.url(conf, url)\n  } else {\n    delete tdesc.horizon\n  }\n\n  if (tdesc.callback) tdesc.callback = normalize.url(conf, tdesc.callback)\n}\n\nconst dateFields = [\"minTime\", \"maxTime\"]\n\nnormalize.date = function (conf, date) {\n  return date.replace(/:00\\.000/, \"\").replace(/\\.000/, \"\")\n    .replace(/T00:00Z/, \"\").replace(/-01$/, \"\").replace(/-01$/, \"\")\n}\n\nnormalize.network = function (conf, network) {\n  const networkName = resolve.networkName(conf, network)\n  if (networkName === \"public\" || networkName === \"test\") {\n    return networkName\n  // In network is neither test nor public, we want to use the network\n  // passphrase as parameter to ensure cross-wallet compatibility.\n  } else {\n    return resolve.networkPassphrase(conf, network)\n  }\n}\n\nnormalize.url = function (conf, url) {\n  if (url) return (url.substr(0,4) === \"http\") ? url : \"https://\" + url\n}\n\n/**\n * Add the implicit values for fields made optional in the CosmicLink protocol\n * but required by StellarSdk.\n */\nnormalize.odesc = function (conf, odesc) {\n  removeEmptyFields(odesc)\n  /// No limit = maximum limit.\n  if (odesc.limit === \"922337203685.4775807\") delete odesc.limit\n  /// New offer.\n  if (odesc.offerId === \"0\") delete odesc.offerId\n  /// Empty asset conversion path.\n  if (odesc.path && !odesc.path.length) delete odesc.path\n  /// Useless denominator.\n  if (odesc.price && odesc.price.d === 1) odesc.price = odesc.price.n + \"\"\n\n  switch (odesc.type) {\n  case \"allowTrust\":\n    /// Allow trust by default.\n    if (odesc.authorize === undefined) odesc.authorize = true\n    break\n  case \"createPassiveOffer\":\n  case \"manageOffer\": {\n    /// XLM as default asset.\n    if (odesc.buying && !odesc.selling) odesc.selling = XLM\n    if (odesc.selling && !odesc.buying) odesc.buying = XLM\n    break\n  }\n  case \"manageData\":\n    /// Delete data entry.\n    if (!odesc.value) odesc.value = \"\"\n    break\n  case \"pathPayment\":\n    /// XLM as default asset.\n    if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = XLM\n    if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = XLM\n    break\n  case \"payment\":\n    /// XLM as default asset.\n    if (!odesc.asset) odesc.asset = XLM\n    break\n  }\n}\n\nconst XLM = StellarSdk.Asset.native()\n\nfunction removeEmptyFields (object) {\n  for (let field in object) {\n    if (object[field] === null || object[field] === undefined) delete object[field]\n  }\n}\n","\"use strict\"\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n * @exports event\n */\nconst event = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\n\nconst format = require(\"./format\")\n\n/** *** Click events *****/\n\n/**\n * Set the click handler for **type** HTML elements as **callback**.\n *\n * @example\n * cosmicLib.config.setClickHandler('address', showAddressPopup)\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\nevent.setClickHandler = function (conf, type, callback) {\n  conf.clickHandlers[type] = callback\n}\n\n/**\n * Remove the current click handler for **type**.\n *\n * @example\n * cosmicLib.config.clearClickHandler('address')\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\nevent.clearClickHandler = function (conf, type) {\n  conf.clickHandlers[type] = undefined\n}\n\nevent.callClickHandler = function (conf, type, event) {\n  const handler = conf.clickHandlers[type]\n  event.extra = event.domNode.extra\n  event.field = event.domNode.field\n  event.tdesc = format.parentTdesc(conf, event.domNode)\n  event.odesc = format.parentOdesc(conf, event.domNode)\n  event.index = format.parentIndex(conf, event.domNode)\n  if (handler) handler(event)\n}\n\n/**\n * The active click handlers. Takes the form:\n *\n * ```\n * cosmicLib.config.clickHandlers = {\n *   type1: callback1,\n *   ...\n *   typeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * * **address**: A prompt that shows the address details\n * * **id**: A function that copy the id into the clipboard\n * * **hash**: A function that copy the hash into the clipboard or show a prompt\n *   for preimage signature when relevant\n * ```\n */\nevent.defaultClickHandlers = {\n  address: function (event) {\n    if (!event.extra) return\n    let message = \"\"\n    for (let field in event.extra) {\n      message += `${field}:\\n` + `${event.extra[field]}\\n\\n`\n    }\n    window.alert(message)\n  },\n  hash: function (event) {\n    const grandma = event.domNode.parentNode.parentNode.parentNode\n    if (grandma.classList.contains(\"cosmiclib_signers\")) {\n      const preimage = prompt(\"Please enter preimage:\")\n      if (preimage) event.cosmicLink.sign(preimage)\n    } else {\n      helpers.copy(event.value)\n    }\n  },\n  id: helpers.copy\n}\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  const StellarSdk = require(\"./stellar-sdk\")\n  const hash = \"0000000000000000000000000000000000000000000000000000000000000000\"\n  const memo = new StellarSdk.Memo(\"hash\", hash)\n  module.exports = memo.value.__proto__.constructor\n} else {\n  module.exports = env.nodeRequire(\"safe-buffer\").Buffer\n}\n","\"use strict\"\n/**\n * Contains the methods to convert data from *{@see Transaction}* format to\n * *Tdesc* format.\n *\n * @private\n * @exports destruct\n */\nconst destruct = exports\n\nconst { isUtf8 } = require(\"@cosmic-plus/jsutils/misc\")\n\nconst normalize = require(\"./normalize\")\nconst specs = require(\"./specs\")\n\n/**\n * Convert `tx` into *Tdesc*.\n *\n * @param {Transaction} tx\n * @param {Object} options\n * @return {Object} A tdesc\n */\ndestruct.transaction = function (conf, tx, options = {}) {\n  const tdesc = {}\n\n  if (tx.source === specs.neutralAccountId) options.stripSource = true\n  if (tx.sequence === \"0\") options.stripSequence = true\n\n  tdesc.network = options.network\n  tdesc.horizon = options.horizon\n  tdesc.callback = options.callback\n  if (!options.stripSource) tdesc.source = tx.source\n  if (!options.stripSource && !options.stripSequence) {\n    tdesc.sequence = destruct.sequence(conf, tx.sequence)\n  }\n\n  if (tx._memo._switch.name !== \"memoNone\") tdesc.memo = destruct.memo(conf, tx._memo)\n  if (tx.timeBounds) {\n    if (tx.timeBounds.minTime) tdesc.minTime = destruct.date(conf, tx.timeBounds.minTime)\n    if (tx.timeBounds.maxTime) tdesc.maxTime = destruct.date(conf, tx.timeBounds.maxTime)\n  }\n  tdesc.fee = tx.fee\n\n  /// Work around a bug in stellar-sdk 0.11\n  /// https://github.com/stellar/js-stellar-sdk/issues/204\n  tdesc.operations = []\n  for (let index in tx.operations) {\n    const op = tx.operations[index]\n    if (op.homeDomain === null) {\n      const optree = tx.tx._attributes.operations[index]\n      op.homeDomain = optree._attributes.body._value._attributes.homeDomain\n    }\n    tdesc.operations[index] = destruct.operation(conf, op)\n  }\n  // tdesc.operations = tx.operations.map(op => destruct.operation(conf, op))\n\n  normalize.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/**\n * Convert `op` into odesc format.\n *\n * @param {Object} op A StellarSdk Operation\n * @return {Object} An odesc\n */\ndestruct.operation = function (conf, op) {\n  const odesc = {}\n\n  for (let field in op) {\n    if (field === \"type\") odesc.type = op.type\n    else if (field === \"line\") odesc.asset = op.line\n    else odesc[field] = destruct.field(conf, field, op[field])\n  }\n\n  normalize.odesc(conf, odesc)\n  return odesc\n}\n\n/******************************************************************************/\n\n/**\n * Destruct `value` according to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\ndestruct.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return destruct.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Destruct `value` using the destructuring function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\ndestruct.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value\n  else return destruct[type](conf, value)\n}\n\n/******************************************************************************/\n\ndestruct.asset = function (conf, asset) {\n  return Object.assign({}, asset)\n}\n\ndestruct.assetPath = function (conf, assetPath) {\n  return assetPath.map(asset => destruct.asset(asset))\n}\n\ndestruct.buffer = function (conf, buffer) {\n  if (!buffer) return null\n  const string = buffer.toString()\n  if (isUtf8(string)) {\n    return { type: \"text\", value: string }\n  } else {\n    const value = buffer.toString(\"base64\").replace(/=*$/,\"\")\n    return { type: \"base64\", value: value }\n  }\n}\n\ndestruct.date = function (conf, timestamp) {\n  return new Date(timestamp * 1000).toISOString()\n}\n\ndestruct.memo = function (conf, sdkMemo) {\n  const memo = {}\n  if (sdkMemo._switch.name !== \"memoNone\") {\n    memo.type = sdkMemo._arm\n    if (memo.type === \"hash\" || memo.type === \"retHash\") {\n      memo.value = sdkMemo._value.toString(\"hex\")\n      if (memo.type === \"retHash\") memo.type = \"return\"\n    } else if (memo.type === \"text\") {\n      return destruct.buffer(conf, sdkMemo._value)\n    } else {\n      memo.value = sdkMemo._value.toString()\n    }\n  }\n  return memo\n}\n\ndestruct.sequence = function (conf, sdkSequence) {\n  return sdkSequence.toString()\n}\n\ndestruct.signer = function (conf, sdkSigner) {\n  const signer = { weight: sdkSigner.weight }\n  if (sdkSigner.ed25519PublicKey) {\n    signer.type = \"key\"\n    signer.value = sdkSigner.ed25519PublicKey\n  } else if (sdkSigner.sha256Hash) {\n    signer.type = \"hash\"\n    signer.value = sdkSigner.sha256Hash.toString(\"hex\")\n  } else if (sdkSigner.preAuthTx) {\n    signer.type = \"tx\"\n    signer.value = sdkSigner.preAuthTx.toString(\"hex\")\n  }\n  return signer\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","\"use strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\n\nif (env.isBrowser) require(\"@cosmic-plus/jsutils/polyfill\")\n\n// Configure CosmicLib Horizon node.\n// const cosmicLib = require(\"./cosmic-lib\")\n// cosmicLib.config.setupNetwork(\"public\", \"https://horizon.stellar.lobstr.co\")\n\n/**\n * Automatically pass `config` to `module` functions as first argument.\n *\n * @param {Object} config A configuration object similar than config.js module.\n * @param {Object} module A cosmic-lib module whose functions takes config as the\n *   first argument.\n * @private\n */\nfunction exposeModule (config, module) {\n  const layer = Object.assign({}, module)\n  helpers.setHiddenProperty(layer, \"_config\", config)\n  for (let name in module) {\n    if (typeof module[name] === \"function\") {\n      layer[name] = function (...params) { return module[name](this._config, ...params) }\n    } else {\n      layer[name] = module[name]\n    }\n  }\n  return layer\n}\n\n/**\n * Create a clone of the library with an alternative config object derived from\n * **params**. Fields which are not defined in **params** stay in sync with parent\n * configuration.\n *\n * @example\n * const testnet = cosmicLib.withConfig({ network: 'test' })\n * const account = await testnet.resolve.account('tips*cosmic.link')\n *\n * @params {Object} params Alternative configuration\n * @return {Object} A clone of cosmicLib\n */\nexports.withConfig = function (params) {\n  const library = Object.create(this)\n  library.config = Object.assign({}, this.config, params)\n\n  for (let module in this) {\n    if (this[module].prototype && this[module].prototype.__proto__ === this.config) {\n      library[module] = class extends this[module] {}\n      Object.assign(library[module].prototype, this[module].prototype)\n      library[module].prototype.__proto__ = library.config\n    } else if (this[module]._config) {\n      library[module] = Object.create(this[module])\n      helpers.setHiddenProperty(library[module], \"_config\", library.config)\n    }\n  }\n\n  return library\n}\n\n/// Export modules.\n\nconst config = exports.config = require(\"./config\")\nexports.check = exposeModule(config, require(\"./check\"))\nexports.CosmicLink = require(\"./cosmiclink\")\nexports.load = env.isBrowser && exposeModule(config, require(\"./load\"))\nexports.resolve = exposeModule(config, require(\"./resolve\"))\nexports.signersUtils = exposeModule(config, require(\"./signers-utils\"))\nexports.specs = require(\"./specs\")\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use_strict\"\n\nif (!NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, \"find\", {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError(\"\\\"this\\\" is null or not defined\")\n      }\n\n      var o = Object(this)\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== \"function\") {\n        throw new TypeError(\"predicate must be a function\")\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1]\n\n      // 5. Let k be 0.\n      var k = 0\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k]\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue\n        }\n        // e. Increase k by 1.\n        k++\n      }\n\n      // 7. Return undefined.\n      return undefined\n    },\n    configurable: true,\n    writable: true\n  })\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign (target, varArgs) { // .length of function is 2\n      \"use strict\"\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError(\"Cannot convert undefined or null to object\")\n      }\n\n      var to = Object(target)\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index]\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    },\n    writable: true,\n    configurable: true\n  })\n}\n\nif (!Object.values) {\n  Object.values = function values(obj) {\n    return Object.keys(obj).map(e => obj[e])\n  }\n}","\"use_strict\"\n/**\n * Aliases handlers & most known Stellar addresses.\n *\n * @private\n * @exports aliases\n */\nconst aliases = exports\n\n/**\n * Add new **aliases** or replace existing ones.\n *\n * @example\n * cosmicLib.config.addAliases({\n *   'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n *   'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io'\n * })\n *\n * @param {Object} aliases An object such as `{ publicKey1: name1, ..., publicKeyN: nameN }`\n */\naliases.add = function (conf, aliases) {\n  conf.aliases = Object.assign(conf.aliases, aliases)\n}\n\n/**\n * Remove **publicKeys** from aliases list.\n *\n * @example\n * cosmicLib.config.removeAliases([\n *  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP',\n *  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5',\n * ])\n *\n * @param {Array} publicKeys An array of public keys\n */\naliases.remove = function (conf, publicKeys) {\n  publicKeys.forEach(entry => delete conf.aliases[entry])\n}\n\n/**\n * Aliases for most known anchors.\n */\naliases.anchors = {\n  \"GAEDLNMCQZOSLY7Y4NW3DTEWQEVVCXYYMBDNGPPGBMQH4GFYECBI7YVK\": \"anclax.com\",\n  \"GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4\": \"apay.io\",\n  \"GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF\": \"apay.io\",\n  \"GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR\": \"apay.io\",\n  \"GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP\": \"apay.io\",\n  \"GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC\": \"astral9.io\",\n  \"GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP\": \"charnatoken.top\",\n  \"GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP\": \"coins.asia\",\n  \"GDPFSEBZO2W4TLWZO7FIMMG3QONHXYVF6LUULI6HUJS6PJLE4TRZEXLF\": \"collective21.org\",\n  \"GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ\": \"cryptomover.com\",\n  \"GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3\": \"cryptomover.com\",\n  \"GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG\": \"cryptomover.com\",\n  \"GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI\": \"cryptomover.com\",\n  \"GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2\": \"cryptomover.com\",\n  \"GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7\": \"cryptotari.io\",\n  \"GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN\": \"equid.co\",\n  \"GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW\": \"flutterwave.com\",\n  \"GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M\": \"frasindo.com\",\n  \"GCYK67DDGBOANS6UODJ62QWGLEB2A7JQ3XUV25HCMLT7CI23PMMK3W6R\": \"golix.io\",\n  \"GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL\": \"irene.energy\",\n  \"GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX\": \"liquido.i-server.org\",\n  \"GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH\": \"mobius.network\",\n  \"GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK\": \"moni.com\",\n  \"GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH\": \"naobtc.com\",\n  \"GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS\": \"naobtc.com\",\n  \"GDGKBRCPW4C3ENNC5C64PE6U33MG52GBKFXOK5P3OSWF74DAOXRXV6OJ\": \"nezly.com\",\n  \"GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6\": \"old.repocoin.io\",\n  \"GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN\": \"old.sureremit.co\",\n  \"GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY\": \"pedity.com\",\n  \"GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5\": \"pr.network\",\n  \"GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B\": \"repocoin.io\",\n  \"GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX\": \"ripplefox.com\",\n  \"GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z\": \"six.network\",\n  \"GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP\": \"smartlands.io\",\n  \"GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5\": \"stellarport.io\",\n  \"GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M\": \"stemchain.io\",\n  \"GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG\": \"stronghold.co\",\n  \"GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK\": \"stronghold.co\",\n  \"GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI\": \"superlumen.org\",\n  \"GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N\": \"sureremit.co\",\n  \"GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S\": \"tempo.eu.com\",\n  \"GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C\": \"ternio.io\",\n  \"GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3\": \"thefutbolcoin.io\",\n  \"GCLRUZDCWBHS7VIFCT43BARPP63BHR32HMEVKXYQODA5BU6SIGFK4HL2\": \"tonaira.com\",\n  \"GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON\": \"tontinetrust.com\",\n  \"GA7FCCMTTSUIC37PODEL6EOOSPDRILP6OQI5FWCWDDVDBLJV72W6RINZ\": \"vcbear.net\",\n  \"GBVAOIACNSB7OVUXJYC5UE2D4YK2F7A24T7EE5YOMN4CE6GCHUTOUQXM\": \"vcbear.net\",\n  \"GDXTJEK4JZNSTNQAWA53RZNS2GIKTDRPEUWDXELFMKU52XNECNVDVXDI\": \"vcbear.net\",\n  \"GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN\": \"winsome.gift\",\n  \"GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM\": \"ximcoin.com\",\n  \"GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5\": \"xirkle.com\"\n}\n\naliases.destinations = {\n  \"GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2\": \"AEX\",\n  \"GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A\": \"Binance\",\n  \"GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC\": \"Binance\",\n  \"GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL\": \"Bitfinex\",\n  \"GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3\": \"Bittrex\",\n  \"GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM\": \"BTC38\",\n  \"GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7\": \"Changelly\",\n  \"GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH\": \"Exrates\",\n  \"GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S\": \"Gate.io\",\n  \"GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO\": \"GOPAX\",\n  \"GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S\": \"Indodax\",\n  \"GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP\": \"KOINEX\",\n  \"GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM\": \"Kraken\",\n  \"GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT\": \"Lumenaut Inflation\",\n  \"GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH\": \"Mobius Issuer\",\n  \"GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES\": \"NaoBTC\",\n  \"GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB\": \"OKEX\",\n  \"GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L\": \"PapayaBot\",\n  \"GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW\": \"PapayaSwap\",\n  \"GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY\": \"Pedity Issuer\",\n  \"GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW\": \"Piiko\",\n  \"GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2\": \"Poloniex\",\n  \"GCZYLNGU4CA5NAWBAVTHMZH4JXWKP2OUJ6OK3I7XXZCNA5622WUJVLTG\": \"RMT swap\",\n  \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\": \"Stellar Guard\",\n  \"GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW\": \"StellarTerm Inflation\",\n  \"GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI\": \"Superlumen Issuer\",\n  \"GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM\": \"XIM\"\n}\n\n/**\n * Aliases handlers & most known Stellar addresses. Aliases takes the form:\n *\n * ```js\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n */\naliases.all = Object.assign({}, aliases.anchors, aliases.destinations)\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst html = env.isBrowser && require(\"@cosmic-plus/jsutils/html\")\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\n\nconst action = require(\"./action\")\nconst config = require(\"./config\")\nconst convert = require(\"./convert\")\nconst format = env.isBrowser && require(\"./format\")\nconst parse = require(\"./parse\")\nconst resolve = require(\"./resolve\")\nconst status = require(\"./status\")\n\n/**\n * | Formats                                     | Data                                | Actions                                        | Editor                                       | HTML elements\n * |---------------------------------------------|-------------------------------------|------------------------------------------------|----------------------------------------------|----------------------------------------\n * |-----------------------|-----------------------|-----------------------|-----------------------|-----------------------\n * | [uri]{@link CosmicLink#uri}                 |[page]{@link CosmicLink#page}        |[selectNetwork]{@link CosmicLink#selectNetwork} |[parse]{@link CosmicLink#parse}               |[htmlDescription]{@link CosmicLink#htmlDescription}\n * | [query]{@link CosmicLink#query}             |[network]{@link CosmicLink#network}  |await [lock]{@link CosmicLink#lock}             |[setTxFields]{@link CosmicLink#setTxFields}   |[htmlLink]{@link CosmicLink#htmlLink}\n * | [tdesc]{@link CosmicLink#tdesc}             |[horizon]{@link CosmicLink#horizon}  |[sign]{@link CosmicLink#sign}                   |[addOperation]{@link CosmicLink#addOperation} |\n * | [json]{@link CosmicLink#json}               |[callback]{@link CosmicLink#callback}|await [send]{@link CosmicLink#send}             |[setOperation]{@link CosmicLink#setOperation}\n * | [transaction]{@link CosmicLink#transaction} |[source]{@link CosmicLink#source}    |\n * | [xdr]{@link CosmicLink#xdr}                 |[status]{@link CosmicLink#status}    |\n * | [sep7]{@link CosmicLink#sep7}               |[errors]{@link CosmicLink#errors}    |\n * |                                             |[locker]{@link CosmicLink#locker}\n * |                                             |[cache]{@link CosmicLink#cache}\n * -----\n *\n * The **CosmicLink** class represents Stellar\n * [transactions]{@link https://stellar.org/developers/guides/concepts/transactions.html}\n * encoded in various formats. It allows to convert between those formats, to\n * edit the underlying transaction, to build it, to sign it and to send it to\n * the blockchain.\n *\n * There are 3 main formats from which the other are derived:\n *\n * * The StellarSdk [Transaction]{@link {@link https://stellar.github.io/js-stellar-sdk/Transaction.html}} object. (**transaction**)\n * * The CosmicLink, which is a transaction encoded as a query. (**query**)\n * * The Tdesc, which is an internal JSON-compatible format in-between those two.\n *   It is the easier format to work with. (**tdesc**)\n *\n * Those formats can be derived into other related formats:\n *\n * * The XDR, which's a base64 representation of StellarSdk Transaction. (**xdr**)\n * * The Sep-0007 link, in its XDR form. (**sep7**)\n * * The CosmicLink URL/URI, which is a page plus the query. (**uri**)\n * * The Tdesc JSON, which is its stringified version. (**json**)\n *\n * A CosmicLink object can be created from any of those formats. Some of the\n * other formats are immediately available, while others may need an\n * `await cosmicLink.lock()` operation to become computable:\n *\n * * If you create a CosmicLink from an **uri**, a **query**, a **tdesc** or a\n *   **json**, only those 4 formats are available at first. Transaction, xdr &\n *   sep7 will become available after a `cosmicLink.lock()`. (**free formats**)\n * * If you create a CosmicLink from a **transaction**, an **xdr** or a **sep7**,\n *   all formats will immediately be available. (**locked formats**)\n *\n * For a better efficiency, formats are lazy-evaluated. This means that they are\n * computed once only if/when you call them:\n *\n * ```js\n * const cosmicLink = new CosmicLink(xdr, { network: 'test' })\n * console.log(cosmicLink.query)\n * ```\n *\n * The role of `cosmicLink.lock()` is centric to this class. In practice, the\n * free formats don't have to be tied to a **network**, a **source** or a\n * **sequence number**. For example, the CosmicQuery `?inflation` is a valid\n * generic transaction that can be locked to any network/source/sequence\n * combination.\n *\n * On the other hand, locked formats are always tied to a particular combination\n * of those, hence the need for a **lock** command:\n *\n * ```js\n * const cosmicLib = require('cosmic-lib')\n * cosmicLib.network = 'test'\n * cosmicLib.source = 'tips*cosmic.link'\n *\n * const cosmicLink = new cosmicLib.CosmicLink('?inflation')\n *\n * console.log(cosmicLink.tdesc.source)    // => undefined\n * console.log(cosmicLink.tdesc.network)   // => undefined\n * console.log(cosmicLink.tdesc.sequence)  // => undefined\n * console.log(cosmicLink.xdr)             // => undefined\n *\n * await cosmicLink.lock({)\n *\n * console.log(cosmicLink.tdesc.source)    // => 'GC6Z...2JVW'\n * console.log(cosmicLink.tdesc.network)   // => 'test'\n * console.log(cosmicLink.tdesc.sequence)  // => 29...3903\n * console.log(cosmicLink.xdr)             // => 'AAAA....AA=='\n * ```\n *\n * The **lock** command is asynchronous because free formats accept\n * [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html},\n * but locked formats don't. The library automatically resolve\n * those and this is an asynchronous operation. At the same time, it downloads\n * the required data from the blockchain to handle multi-signers transactions.\n *\n * After the lock operation, all free formats are updated according to the new\n * state of the transaction. It is now possible to `cosmicLink.sign(keypair)`\n * it, and to `cosmicLink.send()` it to the blockchain.\n */\nclass CosmicLink {\n  /**\n   * Create a new CosmicLink object. **transaction** can be one of the accepted\n   * format: uri, query, json, tdesc, transaction, xdr or sep7.\n   *\n   * @constructor\n   * @param {string|Object|Transaction} transaction A transaction in one of\n   *  thoses formats: uri, query, json, tdesc, transaction, xdr, sep7\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format.\n   * @param {string} options.network For Transaction/XDR formats, the network for\n   *     which it have been created\n   * @param {boolean} options.stripSignatures If set, will strip out signatures\n   *     from XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set, will strip out signatures\n   *     and sequence number from XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set, will strip out signatures,\n   *     sequence number and transaction primary source account from\n   *     XDR/Transaction formats.\n   * @return {CosmicLink}\n   */\n  constructor (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /**\n   * Refer to the underlying global configuration\n   * @private\n   */\n  get config () {\n    return this.__proto__.__proto__\n  }\n\n  /**\n   * Re-parse this CosmicLink. Useful in implementing transaction editors. The\n   * parameters are the same than [Constructor]{@link CosmicLink#Constructor},\n   * and the result is similar except that no new CosmicLink object is created.\n   */\n  parse (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /// Formats\n  /**\n   * A CosmicLink is a URI that embed a Cosmic [Query]{@link CosmicLink#query}.\n   * This format is simply the `cosmicLink.query` appended to the\n   * `cosmicLink.page`\n   */\n  get uri () {\n    if (this.query) return this.page + this.query\n    else return undefined\n  }\n\n  /**\n   * CosmicLink's transaction encoded in the Cosmic\n   * [Query]{@link tutorial:specs_query} format. This format allows to\n   * conveniently pass around Stellar transactions over any URI.\n   */\n  get query () {\n    if (!this._query) {\n      if (this.xdr) this._query = convert.xdrToQuery(this, this.xdr, this.tdesc)\n      else if (this.tdesc) this._query = convert.tdescToQuery(this, this.tdesc)\n      else return undefined\n    }\n    return this._query\n  }\n\n  /**\n   * CosmicLink's transaction in Tdesc format. This is in-between an objectified\n   * query representation and a simplified StellarSdk Transaction object. It has\n   * been created to be convenient to understand, use and manipulate.\n   *\n   * If you need to read the transaction parameters, this is the format of\n   * choice:\n   *\n   * ```js\n   * console.log(cosmicLink.tdesc.network) // Does the transaction enforce a network?\n   * console.log(cosmicLink.tdesc.source)  // Does the transaction enforce a source?\n   * console.log(cosmicLink.tdesc.memo)    // A simplified memo object or undefined\n   * console.log(cosmicLink.operations)    // Transaction operations in simplified format\n   * ```\n   *\n   * This formats authorize [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html}\n   * everywhere StellarSdk Transaction accept public keys. Those addresses are\n   * resolved when running the [lock]{@link CosmicLink#lock} method, and the\n   * tdesc is replaced by a resolved one.\n   *\n   * Tdesc is also very convenient to edit. To keep the CosmicLink in sync, you\n   * either need to [parse]{@link CosmicLink#parse} the edited tdesc, or to edit\n   * it using the dedicated methods:\n   *\n   * * [setTxFields]{@link CosmicLink#setTxFields}: set/clear transaction fields\n   * * [addOperation]{@link CosmicLink#addOperation}: add a new operation\n   * * [setOperation]{@link CosmicLink#setOperation}: edit/clear an operation\n   */\n  get tdesc () {\n    if (!this._tdesc) {\n      if (this.transaction) this._tdesc = convert.transactionToTdesc(this, this.transaction, this.locker)\n      else return undefined\n    }\n    return this._tdesc\n  }\n\n  /**\n   * CosmicLink's transaction in JSON format. This is a stringified version of\n   * [Tdesc]{@link CosmicLink#tdesc} format.\n   */\n  get json () {\n    if (!this._json) this._json = convert.tdescToJson(this, this.tdesc)\n    return this._json\n  }\n\n  /**\n   * CosmicLink's transaction in StellarSdk\n   * [Transaction]{@link https://stellar.github.io/js-stellar-sdk/Transaction.html}\n   * format.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get transaction () {\n    return this._transaction\n  }\n\n  /**\n   * CosmicLink's transaction in\n   * [XDR]{@link https://stellar.org/developers/guides/concepts/xdr.html}\n   * format.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get xdr () {\n    if (!this._xdr) {\n      if (!this.transaction) return undefined\n      this._xdr = convert.transactionToXdr(this, this.transaction)\n    }\n    return this._xdr\n  }\n\n  /**\n   * CosmicLink transaction in\n   * [SEP-0007]{@link https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md}\n   * link format. Only the XDR part of this protocol is currently supported by\n   * CosmicLink, minus the signature verification.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get sep7 () {\n    if (!this._sep7) {\n      if (!this.xdr) return undefined\n      this._sep7 = convert.xdrToSep7(this, this.xdr, this.tdesc)\n    }\n    return this._sep7\n  }\n\n  /// Data\n  /**\n   * The page this CosmicLink uses to construct its [URI]{@link CosmicLink#uri}.\n   *\n   * @var CosmicLink#page\n   */\n\n  /**\n   * The source for this transaction. This can be defined either locally\n   * (`cosmicLink.tdesc.source`) or globally (`cosmicLib.config.source`). The\n   * local configuration takes precedence, or, in other words, the global source\n   * is a fallback value in case the transaction emitter doesn't set one.\n   *\n   * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n   * CosmicLink#setTxFields}.\n   */\n  get source () {\n    return (this.tdesc && this.tdesc.source) || this.config.source\n  }\n\n  /**\n   * The network for this transaction. This can be defined either locally\n   * (`cosmicLink.tdesc.network`) or globally (`cosmicLib.config.network`). The\n   * local configuration takes precedence, or, in other words, the global\n   * network is a fallback value in case the transaction emitter doesn't set\n   * one.\n   *\n   * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n   * CosmicLink#setTxFields}.\n   */\n  get network () {\n    return (this.tdesc && this.tdesc.network) || this.config.network\n  }\n\n  /**\n   * The URL of the horizon node from which ledger data will be retrieved, and\n   * to which the signed transaction will be posted if there's no\n   * [callback]{@link CosmicLink#callback}.\n   *\n   * This can be defined either locally (`cosmicLink.tdesc.horizon`) or globally\n   * (using [setupNetwork]{@link module:config.setupNetwork}). This parameter is\n   * special in the sense that it's the only one for which the global\n   * configuration takes precedence.\n   *\n   * The rationale for this behavior is that we want transaction emitter to\n   * provide a fallback Horizon URL in the special case none is known for a\n   * custom network, but generally speaking it won't be right to allow the\n   * transaction emitter to force us to use a particular Horizon node.\n   *\n   * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n   * CosmicLink#setTxFields}.\n   */\n  get horizon () {\n    return resolve.horizon(this.config, this.network) || (this.tdesc && this.tdesc.horizon)\n  }\n\n  /**\n   * The URL at which the signed transaction will be posted. This can be defined\n   * either locally (`cosmicLink.tdesc.callback`) or globally\n   * (`cosmicLib.config.callback`). The local configuration takes precedence.\n   *\n   * When no callback is defined, the signed transaction is posted to\n   * [Horizon]{@link CosmicLink#horizon}. This is the default behavior.\n   *\n   * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n   * CosmicLink#setTxFields}.\n   */\n  get callback () {\n    return (this.tdesc && this.tdesc.callback) || this.config.callback\n  }\n\n  /// Editor\n  /**\n   * Add/remove transaction fields and reparse the CosmicLink. **object** should\n   * follow the Tdesc format, but fields values can be written using query or\n   * StellarSdk format as well.\n   *\n   * @example\n   * cosmicLink.setTxFields({ minTime: '2018-10', maxTime: '2019-01' })\n   *\n   * @example\n   * cosmicLink.setTxFields({ minTime: null, maxTime: null })\n   *\n   * @example\n   * cosmicLink.setTxFields({ memo: 'Bonjour!' })\n   *\n   * @param {Object} object Transaction fields definition. Fields can be either\n   *   written using the JSON format or the query format\n   * @return {CosmicLink}\n   */\n  setTxFields (object) {\n    checkLock(this)\n    this.parse(Object.assign(this.tdesc, object))\n    return this\n  }\n\n  /**\n   * Add a new operation to CosmicLink. **params** should follow the Tdesc format,\n   * but fields values can be written using query or StellarSdk format as well.\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: 'CNY:admin*ripplefox' })\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: { code: 'CNY', issuer: 'admin*ripplefox } })\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: new StellarSdk.Asset('CNY', ...) })\n   *\n   * @param {string} type The operation type.\n   * @param {Object} params The operation parameters.\n   * @return {CosmicLink}\n   */\n  addOperation (type, params) {\n    checkLock(this)\n    const odesc = Object.assign({ type: type }, params)\n    this.tdesc.operations.push(odesc)\n    this.parse(this.tdesc)\n    return this\n  }\n\n  /**\n   * Set/remove one of the CosmicLink operations. **params** should follow the\n   * Tdesc format, but fields can be written using query or StellarSdk format\n   * as well. If **type** is set to `null`, the operation at **index**\n   * is deleted.\n   *\n   * @example\n   * cosmicLink.setOperation(1, 'setOptions', { homeDomain: 'example.org' })\n   *\n   * @example\n   * cosmicLink.setOperation(2, null)\n   *\n   * @param {integer} index The operation index.\n   * @param {type} type  The operation type.\n   * @param {params} params The operation parameters.\n   * @return {CosmicLink}\n   */\n  setOperation (index, type, params) {\n    checkLock(this)\n    if (!this.tdesc.operations[index]) {\n      throw new Error(`Operation ${index} doesn't exists`)\n    }\n\n    if (type === null) {\n      this.tdesc.operations.splice(index, 1)\n    } else {\n      this.tdesc.operations[index] = Object.assign({ type: type }, params)\n      this.parse(this.tdesc)\n    }\n    return this\n  }\n\n  /// Actions\n  /**\n   * Select the network that this CosmicLink uses.\n   */\n  selectNetwork () { return resolve.useNetwork(this) }\n  lock (options) { return action.lock(this, options) }\n  sign (...keypairs_or_preimage) { return action.sign(this, ...keypairs_or_preimage) }\n  send (horizon) { return action.send(this, horizon) }\n\n  /**\n   * The HTML DOM node that displays a description of the current transaction.\n   * This is a browser-only property.\n   *\n   * If your HTML page contains an element with `id=\"cosmiclink_description\"`,\n   * it will automatically get populated with the description of the last\n   * CosmicLink created.\n   */\n  get htmlDescription () {\n    if (!this._htmlDescription) makeHtmlDescription(this)\n    return this._htmlDescription\n  }\n\n  /**\n   * A link HTML Element that points to `cosmicLink.uri`\n   */\n  get htmlLink () {\n    if (!this._htmlLink) makeHtmlLink(this)\n    return this._htmlLink\n  }\n\n  /// Backward compatibility (2018-09 -> 2019-03).\n  get server () {\n    return resolve.server(this)\n  }\n\n  get htmlNode () {\n    helpers.deprecated(\"2019-03\", \"cosmicLink.htmlNode\", \"cosmicLink.htmlDescription\")\n    return this.htmlDescription\n  }\n  get transactionNode () { return html.grab(\".cosmiclib_transactionNode\", this.htmlDescription) }\n  get statusNode () { return html.grab(\".cosmiclib_statusNode\", this.htmlDescription) }\n  get signersNode () { return html.grab(\".cosmiclib_signersNode\", this.htmlDescription) }\n\n  hasSigned (accountId) {\n    helpers.deprecated(\"2019-03\", \"cosmicLink.hasSigned\", \"cosmicLink.transaction.hasSigned\")\n    return this.transaction.hasSigned(accountId)\n  }\n  hasSigner (accountId) {\n    helpers.deprecated(\"2019-03\", \"cosmicLink.hasSigner\", \"cosmicLink.transaction.hasSigner\")\n    return this.transaction.hasSigner(accountId)\n  }\n}\n\n/**\n * Initialize or reset a CosmicLink.\n *\n * @private\n */\nfunction initCosmicLink (cosmicLink, transaction, options = {}) {\n  checkLock(cosmicLink)\n\n  /// Reset object in case of reparse.\n  formatsFields.forEach(type => delete cosmicLink[type])\n  cosmicLink.page = cosmicLink.page || options.page || config.page\n  /**\n   * The status of a CosmicLink. It becomes non-null in case of failure.\n   * @var CosmicLink#status\n   */\n  /**\n   * By default `false`, or an *Array* of errors.\n   * @var CosmicLink#errors\n   */\n  status.init(cosmicLink)\n\n  /**\n   * The CosmicLink cache contains the resolved federations addresses and the\n   * accounts object. Using the same set of data for all the CosmicLink related\n   * computations ensure consistent results.\n   *\n   * @var CosmicLink#cache\n   */\n  cosmicLink.cache = { destination: {}, account: {} }\n\n  parse.dispatch(cosmicLink, transaction, options)\n\n  if (env.isBrowser) {\n    makeHtmlLink(cosmicLink)\n    if (!cosmicLink._htmlDescription) {\n      /// #cosmiclib_htmlNode: Backward compatibility (2018-09 -> 2019-03).\n      cosmicLink._htmlDescription = html.grab(\"#cosmiclink_description\") || html.grab(\"#CL_htmlNode\")\n    }\n    if (cosmicLink._htmlDescription) {\n      if (cosmicLink.htmlDescription.id === \"#CL_htmlNode\") {\n        helpers.deprecated(\"2019-03\", \"id=\\\"#CL_htmlNode\\\"\", \"id=\\\"cosmiclink_description\\\"\")\n      }\n      makeHtmlDescription(cosmicLink)\n    }\n  }\n}\nconst formatsFields = [\"_query\", \"_tdesc\", \"_json\", \"_transaction\", \"_xdr\"]\n\n/**\n * Initialize CosmicLink html nodes.\n *\n * @private\n */\nfunction makeHtmlDescription (cosmicLink) {\n  if (env.isNode) return\n  let htmlDescription = cosmicLink._htmlDescription\n\n  if (htmlDescription) {\n    html.clear(htmlDescription)\n    htmlDescription.className = \"cosmiclink_description\"\n  } else {\n    htmlDescription = html.create(\"div\", \".cosmiclink_description\")\n    cosmicLink._htmlDescription = htmlDescription\n  }\n\n  cosmicLink._transactionNode = format.tdesc(cosmicLink, cosmicLink.tdesc)\n  cosmicLink._statusNode = status.makeHtmlNode(cosmicLink)\n  cosmicLink._signersNode = html.create(\"div\", \".cosmiclib_signersNode\")\n\n  html.append(htmlDescription,\n    cosmicLink._transactionNode, cosmicLink._statusNode, cosmicLink._signersNode)\n}\n\n/**\n * Make the HTML link.\n * @private\n */\nfunction makeHtmlLink (cosmicLink) {\n  if (env.isNode) return\n\n  const htmlLink = html.grab(\"#cosmiclink\") || html.create(\"a\")\n  htmlLink.className = \".cosmiclink\"\n  htmlLink.href = cosmicLink.page\n  htmlLink.onclick = () => htmlLink.href = cosmicLink.uri\n  if (!htmlLink.title) htmlLink.title = \"Sign transaction\"\n  if (!htmlLink.textContent) htmlLink.textContent = \"CosmicLink\"\n\n  cosmicLink._htmlLink = htmlLink\n  return htmlLink\n}\n\n/**\n * Throw an error if CosmicLink is locked.\n * @private\n */\nfunction checkLock (cosmicLink) {\n  if (cosmicLink.locker) throw new Error(\"Cosmic link is locked.\")\n}\n\nCosmicLink.prototype.__proto__ = config\nmodule.exports = CosmicLink\n","\"use strict\"\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n * @exports action\n */\nconst action = exports\n\nconst axios = require(\"@cosmic-plus/base/axios\")\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\n\nconst convert = require(\"./convert\")\nconst format = env.isBrowser && require(\"./format\")\nconst resolve = require(\"./resolve\")\nconst signersUtils = require(\"./signers-utils\")\nconst status = require(\"./status\")\n\n/**\n * Lock a CosmicLink to a network/source pair. If the cosmicLink was created\n * from a query/uri/tdesc/json, it will create the corresponding\n * transaction/xdr/sep7 formats.\n *\n * This operation must be performed by the wallet before signing & sending the\n * transaction.\n *\n * @example\n * cosmicLib.config.network = \"test\"\n * const cosmicLink = new CosmicLink(\"?setOptions\")\n * console.log(cosmicLink.network) // => undefined\n * console.log(cosmicLink.xdr)     // => undefined\n * await cosmicLink.lock()\n * console.log(cosmicLink.network) // => \"test\"\n * console.log(cosmicLink.xdr)     // => \"AAAA...AA==\"\n *\n *\n * @alias CosmicLink#lock\n * @async\n * @param {Object} [options]\n * @param {string} options.network Local fallback network\n * @param {string} options.horizon Local fallback horizon (overwrited by global configuration)\n * @param {string} options.callback Local fallback callback\n * @param {string} options.source Local fallback source\n */\naction.lock = async function (cosmicLink, options = {}) {\n  if (cosmicLink.status) throw new Error(cosmicLink.status)\n  if (cosmicLink.locker) throw new Error(\"CosmicLink is already locked.\")\n\n  try {\n    await applyLock(cosmicLink, options)\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error)\n      status.error(cosmicLink, error.message)\n    }\n    status.fail(cosmicLink, \"Transaction build failed\", \"throw\")\n  }\n\n  updateSignersNode(cosmicLink)\n\n  return cosmicLink\n}\n\nasync function applyLock (cosmicLink, options) {\n  /**\n   * The locker property tells that a CosmicLink have been locked, and exposes\n   * the network & source values to which it have been locked.\n   *\n   * @alias CosmicLink#locker\n   */\n  cosmicLink.locker = {\n    source: cosmicLink.tdesc.source || options.source || cosmicLink.config.source,\n    network: cosmicLink.tdesc.network || options.network || cosmicLink.config.network,\n    horizon: options.horizon || cosmicLink.horizon,\n    callback: cosmicLink.tdesc.callback || options.callback || cosmicLink.config.callback\n  }\n\n  /// Preserve the underlying tdesc object.\n  cosmicLink._tdesc = Object.assign({}, cosmicLink.tdesc, cosmicLink.locker)\n  delete cosmicLink._query\n  delete cosmicLink._json\n\n  if (!cosmicLink._transaction) {\n    cosmicLink._transaction = await convert.tdescToTransaction(cosmicLink, cosmicLink.tdesc)\n    delete cosmicLink._tdesc\n  }\n\n  delete cosmicLink._transaction._cosmicplus\n  await signersUtils.extends(cosmicLink, cosmicLink._transaction)\n}\n\n/**\n * Sign CosmicLink's Transaction with **keypairs_or_preimage** and update the\n * other formats accordingly. Only legit signers are allowed to sign, and a\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before signing.\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|Buffer|string} ...keypairs_or_preimage\n */\naction.sign = async function (cosmicLink, ...keypairsOrPreimage) {\n  if (!cosmicLink.locker) throw new Error(\"cosmicLink is not locked.\")\n  resolve.useNetwork(cosmicLink)\n\n  const transaction = cosmicLink.transaction\n  let allFine = true\n\n  if (typeof keypairsOrPreimage[0] !== \"string\") {\n    for (let index in keypairsOrPreimage) {\n      const keypair = keypairsOrPreimage[index]\n      const publicKey = keypair.publicKey()\n\n      if (!cosmicLink.transaction.hasSigner(publicKey)) {\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, \"Not a legit signer: \" + short)\n        allFine = false\n        continue\n      }\n\n      if (cosmicLink.transaction.hasSigned(publicKey)) continue\n\n      try {\n        transaction.sign(keypair)\n      } catch (error) {\n        console.error(error)\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, \"Failed to sign with key: \" + short)\n        allFine = false\n        continue\n      }\n    }\n  } else {\n    try {\n      transaction.signHashX(keypairsOrPreimage[0])\n    } catch (error) {\n      console.error(error)\n      const short = helpers.shorter(keypairsOrPreimage[0])\n      status.error(cosmicLink, \"Failed to sign with preimage: \" + short, \"throw\")\n    }\n  }\n\n  /// Update other formats.\n  [\"_query\", \"_xdr\", \"_sep7\"].forEach(format => delete cosmicLink[format])\n  updateSignersNode(cosmicLink)\n\n  if (!allFine) throw new Error(\"Some signers where invalid\")\n  else return transaction\n}\n\nfunction updateSignersNode (cosmicLink) {\n  if (cosmicLink._signersNode) {\n    const signersNode = format.signatures(cosmicLink, cosmicLink._transaction)\n    cosmicLink.htmlDescription.replaceChild(signersNode, cosmicLink._signersNode)\n    cosmicLink._signersNode = signersNode\n  }\n}\n\n/**\n * Send CosmicLink's transaction to a blockchain validator, or to\n * [StellarGuard]{@link https://stellarguard.me} when relevant. A\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before sending.\n *\n * Returns a promise that resolve/reject to the horizon server response.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {horizon} [horizon] An horizon node URL\n * @return {Object} The server response\n */\naction.send = async function (cosmicLink, horizon = cosmicLink.horizon) {\n  if (!cosmicLink.locker) throw new Error(\"cosmicLink is not locked.\")\n  const server = resolve.server(cosmicLink, horizon)\n\n  if (cosmicLink.transaction.hasSigner(STELLARGUARD_PUBKEY)) {\n    return sendToStellarGuard(cosmicLink)\n  } else if (cosmicLink.callback) {\n    return axios.post(cosmicLink.callback, { xdr: cosmicLink.xdr })\n  } else {\n    return server.submitTransaction(cosmicLink.transaction)\n  }\n}\n\nfunction sendToStellarGuard (cosmicLink) {\n  const url = cosmicLink.network === \"test\"\n    ? \"https://test.stellarguard.me/api/transactions\"\n    : \"https://stellarguard.me/api/transactions\"\n  return axios.post(url, {\n    xdr: cosmicLink.xdr, callback: cosmicLink.callback\n  }).then(result => result.data)\n}\n\nconst STELLARGUARD_PUBKEY = \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\"\n","\"use_stict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  module.exports = require(\"./stellar-sdk\").axios\n} else {\n  module.exports = env.nodeRequire(\"axios\")\n}\n","\"use strict\"\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @private\n * @exports construct\n */\nconst construct = exports\n\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst resolve = require(\"./resolve\")\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\n/**\n * Returns the StellarSdk Transaction built from tdesc.\n *\n * @param {Object} tdesc\n * @return {Transaction}\n */\nconstruct.transaction = async function (conf, tdesc) {\n  if (conf.status) throw new Error(conf.status)\n\n  try {\n    const txBuilder = await makeTransactionBuilder(conf, tdesc)\n    for (let index in tdesc.operations) {\n      const odesc = tdesc.operations[index]\n      const operation = await construct.operation(conf, odesc)\n      txBuilder.addOperation(operation)\n    }\n    return txBuilder.build()\n  } catch (error) {\n    if (!conf.errors) {\n      console.error(error)\n      status.error(conf, error.message)\n    }\n    if (!conf.status) status.fail(conf, \"Transaction build failed\", \"throw\")\n    else throw error\n  }\n}\n\n/**\n * Returns the StellarSdk Operation built from `odesc`.\n *\n * @param {Object} odesc\n * @return {Operation}\n */\nconstruct.operation = async function (conf, odesc) {\n  const operation = odesc.type\n  delete odesc.type\n\n  for (let field in odesc) {\n    odesc[field] = await construct.field(conf, field, odesc[field])\n  }\n\n  return StellarSdk.Operation[operation](odesc)\n}\n\n/**\n * Returns the TransactionBuilder for `tdesc`.\n */\nasync function makeTransactionBuilder (conf, tdesc) {\n  let txOpts = {}\n  if (tdesc.fee) txOpts.fee = tdesc.fee\n  if (tdesc.memo) txOpts.memo = construct.memo(conf, tdesc.memo)\n  if (tdesc.minTime || tdesc.maxTime) {\n    txOpts.timebounds = { minTime: 0, maxTime: 0 }\n    if (tdesc.minTime) txOpts.timebounds.minTime = construct.date(conf, tdesc.minTime)\n    if (tdesc.maxTime) txOpts.timebounds.maxTime = construct.date(conf, tdesc.maxTime)\n  }\n\n  const sourceAccount = await resolve.txSourceAccount(conf, tdesc.source, tdesc.sequence)\n  const builder = new StellarSdk.TransactionBuilder(sourceAccount, txOpts)\n\n  /// Check if memo is needed for destination account.\n  for (let index in tdesc.operations) {\n    const operation = tdesc.operations[index]\n    if (operation.destination) {\n      const destination = await resolve.address(conf, operation.destination)\n      if (destination.memo) {\n        const memoType = destination.memo_type\n        const memoValue = destination.memo\n        if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n          const short = helpers.shorter(operation.destination)\n          status.error(conf, `Memo conflict: ${short} requires to set a memo`, \"throw\")\n        } else {\n          tdesc.memo = { type: memoType, value: memoValue }\n          builder.addMemo(new StellarSdk.Memo(memoType, memoValue))\n        }\n      }\n    }\n  }\n\n  return builder\n}\n\n/******************************************************************************/\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\nconstruct.field = async function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return construct.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\nconstruct.type = async function (conf, type, value) {\n  return construct[type](conf, value)\n}\n\n/******************************************************************************/\n\nconstruct.address = async function (conf, address) {\n  const account = await resolve.address(conf, address)\n  return account.account_id\n}\n\nconstruct.asset = async function (conf, asset) {\n  if (asset.issuer) {\n    const publicKey = await construct.address(conf, asset.issuer)\n    return new StellarSdk.Asset(asset.code, publicKey)\n  } else {\n    return StellarSdk.Asset.native()\n  }\n}\n\nconstruct.assetsArray = async function (conf, assetsArray) {\n  let path = []\n  for (let index in assetsArray) {\n    const string = assetsArray[index]\n    const constructedAsset = await construct.asset(conf, string)\n    path.push(constructedAsset)\n  }\n  return path\n}\n\nconstruct.buffer = function (conf, object) {\n  if (object.type === \"base64\") {\n    return Buffer.from(object.value, \"base64\")\n  } else {\n    return object.value || null\n  }\n}\n\nconstruct.date = function (conf, string) {\n  return Date.parse(string) / 1000\n}\n\nconstruct.memo = function (conf, memo) {\n  if (memo.type === \"base64\") {\n    return new StellarSdk.Memo(\"text\", Buffer.from(memo.value, \"base64\"))\n  } else {\n    return new StellarSdk.Memo(memo.type, memo.value)\n  }\n}\n\nconstruct.signer = async function (conf, signer) {\n  let sdkSigner = { weight: +signer.weight }\n  if (signer.type === \"tx\") sdkSigner.preAuthTx = signer.value\n  else if (signer.type === \"hash\") sdkSigner.sha256Hash = signer.value\n  else if (signer.type === \"key\") {\n    const publicKey = await construct.address(conf, signer.value)\n    sdkSigner.ed25519PublicKey = publicKey\n  }\n  return sdkSigner\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","\"use strict\"\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @private\n * @exports encode\n */\nconst encode = exports\n\nconst decode = require(\"./decode\")\nconst specs = require(\"./specs\")\n\nencode.query = function (conf, tdesc) {\n  if (conf.errors) return undefined\n\n  let command\n  if (!tdesc.operations.length || tdesc.operations.length > 1 || tdesc.operations[0].source) {\n    command = \"transaction\"\n  } else {\n    command = tdesc.operations[0].type\n  }\n  let query = \"?\" + command\n\n  specs.transactionOptionalFields.forEach(field => {\n    if (tdesc[field] !== undefined) query += encode.field(conf, field, tdesc[field])\n  })\n\n  tdesc.operations.forEach(odesc => {\n    if (command === \"transaction\") query += \"&operation=\" + odesc.type\n    for (let field in odesc) {\n      if (field === \"type\") continue\n      query += encode.field(conf, field, odesc[field])\n    }\n  })\n\n  return query\n}\n\n/******************************************************************************/\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) throw new Error(`Invalid field: ${field}`)\n\n  const encodedValue = encode.type(conf, type, value)\n  if (encodedValue === \"\" && field !== \"homeDomain\") return \"\"\n  else return `&${field}=${encodedValue}`\n}\n\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.type = function (conf, type, value) {\n  if (value === undefined) return \"\"\n\n  const encodedValue = process[type] ? process[type](conf, value) : value\n  if (encodedValue === undefined) return \"\"\n  else return encodedValue\n}\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.asset = function (conf, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + \":\" + encodeURIComponent(asset.issuer)\n}\n\nprocess.assetsArray = function (conf, assetsArray) {\n  return assetsArray.map(asset => encode.asset(conf, asset)).toString()\n}\n\nprocess.boolean = function (conf, boolean) {\n  if (boolean === false) return \"false\"\n}\n\nprocess.buffer = function (conf, buffer) {\n  if (buffer.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    const decoded = decode.buffer(conf, buffer.value)\n    if (decoded.type === \"text\") return encodeURIComponent(buffer.value)\n  } else if (buffer) {\n    return buffer.type + \":\" + encodeURIComponent(buffer.value)\n  }\n}\n\nprocess.date = function (conf, date) {\n  return date.replace(/Z$/, \"\")\n}\n\nprocess.memo = function (conf, memo) {\n  if (memo.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    const decoded = decode.memo(conf, memo.value)\n    if (decoded.type === \"text\") return encodeURIComponent(memo.value)\n  }\n  return memo.type + \":\" + encodeURIComponent(memo.value)\n}\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return price\n  else return price.n + \":\" + price.d\n}\n\nprocess.signer = function (conf, signer) {\n  return signer.weight + \":\" + signer.type + \":\" + signer.value\n}\n\nprocess.string = encode.buffer\n\nprocess.url = function (conf, url) {\n  if (url.substr(0, 8) === \"https://\") url = url.substr(8)\n  return encodeURIComponent(url)\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  exports[type] = (conf, value) => encode.type(conf, type, value)\n})\n","\"use strict\"\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\nconst parse = exports\n\nconst check = require(\"./check\")\nconst convert = require(\"./convert\")\nconst decode = require(\"./decode\")\nconst expand = require(\"./expand\")\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\n/**\n * Sets cosmicLink page as the base path of `uri`.\n *\n * @param {string} page URI basename\n */\nparse.page = function (cosmicLink, uri) {\n  const page = uri.split(\"?\")[0]\n  if (page) cosmicLink.page = encodeURI(page)\n}\n\n/**\n * Call the right functions to setup cosmicLink depending on `options` and\n * `value` type.\n *\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\nparse.dispatch = function (cosmicLink, value = \"?\", options = {}) {\n  formats.forEach(format => delete cosmicLink[format])\n  const type = guessType(value)\n\n  // Strip out URL hash\n  switch (type) {\n  case \"uri\": case \"query\": case \"xdrUri\": case \"sep7\": case \"sep7Request\":\n    value = value.replace(/#.*$/, \"\")\n  }\n\n  // Parse transaction\n  try {\n    if (parseFmt[type]) parseFmt[type](cosmicLink, value, options)\n    else setTdesc(cosmicLink, type, value, options)\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error)\n      status.error(cosmicLink, error.message)\n    }\n    status.fail(cosmicLink, \"Invalid \" + type)\n    if (error.tdesc) cosmicLink._tdesc = error.tdesc\n  }\n\n  if (options.page) parse.page(cosmicLink, options.page)\n}\n\nconst formats = [\"_query\", \"_json\", \"_tdesc\", \"_transaction\", \"_xdr\", \"_sep7\"]\n\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n */\nfunction guessType (value) {\n  let type\n  if (typeof value === \"string\") {\n    const query = convert.uriToQuery(\"\", value)\n    if (value.substr(0, 12) === \"web+stellar:\") type = \"sep7\"\n    else if (query && query.substr(0, 5) === \"?req=\") type = \"sep7Request\"\n    else if (query && query.substr(0, 5) === \"?xdr=\") type = \"xdrUri\"\n    else if (value.substr(0, 1) === \"?\") type = \"query\"\n    else if (value.substr(0, 1) === \"{\") type = \"json\"\n    else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = \"xdr\"\n    else type = \"uri\"\n  } else {\n    if (value.tx) type = \"transaction\"\n    else type = \"tdesc\"\n  }\n  return type\n}\n\n/******************************************************************************/\n\nconst parseFmt = {}\n\n/**\n * Initialize cosmicLink using `xdrUri`.\n */\nparseFmt.xdrUri = function (cosmicLink, xdrUri, options) {\n  parse.page(cosmicLink, xdrUri)\n\n  const query = convert.uriToQuery(cosmicLink, xdrUri)\n  const temp = query.split(\"&\")\n  const xdr = temp[0].substr(5)\n\n  temp.slice(1).forEach(entry => {\n    let field = entry.replace(/=.*$/, \"\")\n    let value = entry.substr(field.length + 1)\n\n    switch (field) {\n    case \"stripSignatures\":\n      options.stripSignatures = true\n      break\n    case \"stripSequence\":\n      options.stripSequence = true\n      break\n    case \"stripSource\":\n      options.stripSource = true\n      break\n    case \"network\":\n      options.network = decode.network(cosmicLink, value)\n      break\n    case \"horizon\": case \"callback\":\n      options[field] = decode.url(cosmicLink, value)\n      break\n    default:\n      status.error(cosmicLink, \"Unknow option: \" + entry)\n      status.fail(cosmicLink, \"Invalid query\")\n    }\n  })\n\n  setTdesc(cosmicLink, \"xdr\", xdr, options)\n}\n\n/**\n * Initialize cosmicLink using `sep7Request`.\n */\nparseFmt.sep7Request = function (cosmicLink, sep7Request, options) {\n  parse.page(cosmicLink, sep7Request)\n\n  const query = convert.uriToQuery(cosmicLink, sep7Request)\n  const sep7 = decodeURIComponent(query.substr(5))\n  parseFmt.sep7(cosmicLink, sep7, options)\n}\n\n/**\n * Initialize cosmicLink using `sep7`.\n */\nparseFmt.sep7 = function (cosmicLink, sep7, options = {}) {\n  if (sep7.substr(12, 4) === \"pay?\") {\n    throw new Error(\"SEP-0007 'pay' operation is not currently supported.\")\n  } else if (sep7.substr(12, 3) !== \"tx?\") {\n    throw new Error(\"Invalid SEP-0007 link.\")\n  }\n\n  const query = convert.uriToQuery(cosmicLink, sep7)\n  const params = query.substr(1).split(\"&\")\n  if (!options.network) options.network = \"public\"\n  let xdr\n\n  params.forEach(entry => {\n    const field = entry.replace(/=.*$/, \"\")\n    const value = entry.substr(field.length + 1)\n\n    switch (field) {\n    case \"xdr\":\n      xdr = decodeURIComponent(value)\n      break\n    case \"network_passphrase\":\n      options.network = decode.network(cosmicLink, value)\n      break\n    case \"callback\":\n      if (value.substr(0,4) !== \"url:\") throw new Error(\"Invalid callback: \" + value)\n      options.callback = decode.url(cosmicLink, value.substr(4))\n      break\n    default:\n      if (isIgnoredSep7Field(field)) {\n        // eslint-disable-next-line no-console\n        console.log(\"Ignored SEP-0007 field: \" + field)\n      } else {\n        throw new Error(\"Invalid SEP-0007 field: \" + field)\n      }\n    }\n  })\n\n  if (!xdr) throw new Error(\"Missing XDR parameter\")\n  setTdesc(cosmicLink, \"xdr\", xdr, options)\n}\n\nfunction isIgnoredSep7Field (field) {\n  return specs.sep7IgnoredFields.find(name => name === field)\n}\n\n/******************************************************************************/\n\n/**\n * Set cosmicLink_tdesc from format `type`. From there, the CosmicLink methods\n * can lazy-evaluate any requested format.\n */\nfunction setTdesc (cosmicLink, type, value, options) {\n  if (type !== \"uri\") cosmicLink[\"_\" + type] = value\n\n  switch (type) {\n  case \"uri\":\n    parse.page(cosmicLink, value)\n    cosmicLink._query = convert.uriToQuery(cosmicLink, value, options)\n    // eslint-disable-next-line no-fallthrough\n  case \"query\":\n    cosmicLink._tdesc = convert.queryToTdesc(cosmicLink, cosmicLink.query, options)\n    delete cosmicLink._query\n    break\n  case \"json\":\n    value = convert.jsonToTdesc(cosmicLink, value)\n    // eslint-disable-next-line no-fallthrough\n  case \"tdesc\":\n    cosmicLink._tdesc = expand.tdesc(cosmicLink, value)\n    delete cosmicLink._json\n    check.tdesc(cosmicLink, cosmicLink.tdesc)\n    break\n  case \"sep7\":\n    cosmicLink._xdr = convert.sep7ToXdr(cosmicLink, cosmicLink.sep7)\n    // eslint-disable-next-line no-fallthrough\n  case \"xdr\":\n    cosmicLink._transaction = convert.xdrToTransaction(cosmicLink, cosmicLink.xdr, options)\n    // eslint-disable-next-line no-fallthrough\n  case \"transaction\":\n    cosmicLink._tdesc = convert.transactionToTdesc(cosmicLink, cosmicLink.transaction, options)\n    delete cosmicLink._sep7\n    if (options.stripSource || options.stripSequence) {\n      delete cosmicLink._xdr\n      delete cosmicLink._transaction\n    } else if (options.stripSignatures) {\n      cosmicLink.transaction.signatures = []\n      delete cosmicLink._xdr\n    }\n  }\n}\n","\"use_strict\"\n/**\n * Methods that expand tdesc paramaters from their query/StellarSdk format into\n * their tdesc equivalent. This allows user to pass value in the format they\n * feel the most confortable with when creating CosmicLinks.\n *\n * @private\n * @exports expand\n */\nconst expand = exports\n\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst decode = require(\"./decode\")\nconst destruct = require(\"./destruct\")\nconst normalize = require(\"./normalize\")\nconst specs = require(\"./specs\")\n\n/**\n * Replace each tdesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `tdesc` passed in\n * parameter.\n *\n * @param {Object} tdesc\n * @return tdesc\n */\nexpand.tdesc = function (conf, tdesc) {\n  for (let field in tdesc) {\n    if (field === \"operations\") continue\n    else tdesc[field] = expand.field(conf, field, tdesc[field])\n  }\n  if (tdesc.operations) tdesc.operations.forEach(odesc => expand.odesc(conf, odesc))\n  normalize.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/**\n * Replace each odesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `odesc` passed in\n * parameter.\n *\n * @param {Object} odesc\n * @return tdesc\n */\nexpand.odesc = function (conf, odesc) {\n  for (let field in odesc) {\n    if (field === \"type\") continue\n    else odesc[field] = expand.field(conf, field, odesc[field])\n  }\n  normalize.odesc(conf, odesc)\n  return odesc\n}\n\n/******************************************************************************/\n\n/**\n * Expands `value` to its tdesc format according to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\nexpand.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return expand.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Expands `value` to its tdesc format according to `type`.\n *\n * @param {string} type\n * @param {string} value\n */\nexpand.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value\n  if (typeof value === \"number\") value = value + \"\"\n  return expand[type] ? expand[type](conf, value) : value + \"\"\n}\n\n/******************************************************************************/\n\nexpand.asset = function (conf, asset) {\n  if (asset instanceof StellarSdk.Asset) return destruct.asset(conf, asset)\n  else if (typeof asset === \"string\") return decode.asset(conf, asset)\n  else return asset\n}\n\nexpand.assetPath = function (conf, assetPath) {\n  if (Array.isArray(assetPath)) return assetPath.map(asset => expand.asset(conf, asset))\n  else if (typeof assetPath === \"string\") return decode.assetPath(conf, assetPath)\n}\n\nexpand.buffer = function (conf, buffer) {\n  if (!buffer) return \"\"\n  if (buffer instanceof Buffer) return destruct.buffer(conf, buffer)\n  else if (typeof buffer === \"string\") return decode.buffer(conf, buffer)\n  else return buffer\n}\n\nexpand.date = function (conf, date) {\n  if (typeof date === \"number\") date = date + \"\"\n  if (!date.match(/^[0-9]*$/) || date.length < 5) return decode.date(conf, date)\n  else return destruct.date(conf, date)\n}\n\nexpand.memo = function (conf, memo) {\n  if (memo instanceof StellarSdk.Memo) return destruct.memo(conf, memo)\n  else if (typeof memo === \"string\") return decode.memo(conf, memo)\n  else return memo\n}\n\nexpand.price = function (conf, price) {\n  if (typeof price === \"string\" && price.match(/:/)) {\n    return decode.price(conf, price)\n  } else {\n    return price\n  }\n}\n\nexpand.signer = function (conf, signer) {\n  if (signer.key) return destruct.signer(conf, signer)\n  else if (typeof signer === \"string\") return decode.signer(conf, signer)\n  else return signer\n}\n\nexpand.string = function (conf, string) {\n  if (typeof string === \"number\") return string + \"\"\n  else return string\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) {\n    exports[type] = (conf, value) => {\n      if (typeof value === \"number\") return value + \"\"\n      else return value\n    }\n  }\n})\n","\"use_strict\"\n/**\n * Asynchronously load external ressources.\n *\n * @exports load\n */\nconst load = exports\n\nconst dom = require(\"@cosmic-plus/jsutils/dom\")\nconst html = require(\"@cosmic-plus/jsutils/html\")\n\n/**\n * Load cosmic-lib CSS from **href** or from default origin. All subsequent\n * calls will refer to the original request.\n *\n * @example\n * /// Preload at the start of your script:\n * cosmicLib.load.styles('css/cosmic-lib.css')\n *\n * /// Then wait for the request to resolve before you display CosmicLink HTML\n * /// description:\n * await cosmicLib.load.styles()\n *\n * @async\n * @param {string} [href='cosmic-lib.css']\n */\nload.styles = async function (conf, href = \"https://cosmic.plus/cosmic-lib/cosmic-lib.css\") {\n  const promise = load.css(conf, href)\n  load.styles = () => promise\n  return promise\n}\n\n/**\n * Load a CSS from **href**.\n *\n * @example\n * /// Preload at script initialization:\n * const cssLoader = cosmicLib.load.css('my-styles.css')\n *\n * /// To wait for loading to finish:\n * await cssLoader\n *\n * @async\n * @param {string} href\n */\nload.css = async function (conf, href) {\n  return new Promise(function (resolve, reject) {\n    const attributes = { rel: \"stylesheet\", type: \"text/css\", href: href, onload: resolve, onerror: reject }\n    const linkNode = html.create(\"link\", attributes)\n    html.append(dom.head, linkNode)\n  })\n}\n","\"use_strict\"\n/**\n * A simple module that ease access to HTML DOM nodes. Any HTML element having\n * an `id` at loading time is registered at dom[id]. This is to avoid running\n * `querySelector` multiple times.\n *\n * @exports dom\n */\nconst dom = exports\n\nconst html = require(\"./html\")\n\n/// Prevent node failure when accidentaly loading this file.\nconst env = require(\"./env\")\nconst document = env.window ? env.window.document : undefined\nif (env.isNode) console.error(\"@cosmic-plus/jsutils/dom is a browser-only module\")\n\n/**\n * Add to dom all **element** child having an `id=` attribute.\n */\nfunction ingest (element = document) {\n  if (element.id) dom[element.id] = element\n  const array = element.querySelectorAll(\"[id]\")\n  for (let index in array) {\n    const element = array[index]\n    if (element.id) dom[element.id] = element\n  }\n}\nObject.defineProperty(dom, \"ingest\",\n  { value: ingest, enumerable: false, writable: false })\n\n/**\n * Main tags.\n */\ndom.html = html.grab(\"html\")\ndom.head = html.grab(\"head\")\ndom.body = html.grab(\"body\")\ndom.header = html.grab(\"header\")\ndom.nav = html.grab(\"nav\")\ndom.main = html.grab(\"main\")\ndom.footer = html.grab(\"footer\")\n\n/**\n * All elements having an ID.\n */\ndom.ingest()\n"],"sourceRoot":""}
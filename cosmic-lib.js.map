{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./src/status.js","webpack://cosmicLib/./src/helpers.js","webpack://cosmicLib/./node_modules/babel-runtime/regenerator/index.js","webpack://cosmicLib/./src/specs.js","webpack://cosmicLib/./src/resolve.js","webpack://cosmicLib/./src/event.js","webpack://cosmicLib/./src/node.js","webpack://cosmicLib/./src/format.js","webpack://cosmicLib/./src/check.js","webpack://cosmicLib/./src/parse.js","webpack://cosmicLib/external \"stellar-sdk\"","webpack://cosmicLib/./node_modules/style-loader/lib/urls.js","webpack://cosmicLib/./node_modules/style-loader/lib/addStyles.js","webpack://cosmicLib/./src/cosmic-lib.css","webpack://cosmicLib/./src/cosmic-lib.css?9f62","webpack://cosmicLib/./src/aliases.js","webpack://cosmicLib/./src/encode.js","webpack://cosmicLib/./src/prepare.js","webpack://cosmicLib/./src/decode.js","webpack://cosmicLib/./src/convert.js","webpack://cosmicLib/./src/action.js","webpack://cosmicLib/./src/polyfill.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime-module.js","webpack://cosmicLib/(webpack)/buildin/global.js","webpack://cosmicLib/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__10__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","status","node","errorContinuation","error","continuation","Error","update","cosmicLink","console","log","_statusNode","grab","textContent","fail","errorStatus","appendClass","statusNode","errors","push","errorsNode","lineNode","create","append","populateHtmlNode","index","helpers","delay","thunk","firstCall","memoized","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","specs","transactionOptionalFields","operationMandatoryFields","accountMerge","allowTrust","changeTrust","createAccount","createPassiveOffer","inflation","manageData","manageOffer","pathPayment","payment","setOptions","operationOptionalFields","fieldType","amount","asset","assetCode","authorize","buying","clearFlags","destAsset","destAmount","destination","fee","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","maxTime","medThreshold","memo","minTime","network","offerId","price","path","selling","sendAsset","sendMax","sequence","setFlags","signer","source","startingBalance","trustor","fieldDesc","types","field","type","find","entry","_loop","_callee","address","promise","_regenerator2","default","wrap","_context","prev","next","accountCache","accountCacheExpiration","stop","_callee2","account","publicKey","alias","_context2","match","StellarSdk","FederationServer","sent","account_id","memo_type","undefined","aliases","abrupt","t0","_callee7","tdesc","sources","accounts","_context7","operations","map","user","keys","t1","done","Network","useTestNetwork","testServer","usePublicNetwork","publicServer","Server","_ref3","_ref4","_ref5","_ref6","_ref9","_ref10","getSignature","_this","_asyncToGenerator","mark","_callee8","keypair","hint","_context8","transaction","getTdesc","signatures","Keypair","fromPublicKey","signatureHint","toString","signature","addressResolver","cacheAccount","_callee3","server","_context3","loadAccount","_x5","_x6","_x7","apply","arguments","getSourceAccount","_callee4","_context4","getSource","_x8","accountSigners","_callee5","_context5","signers","_x9","_x10","_x11","_callee6","_index","StrKey","_context6","transactionSources","weight","key","replace","decodeSha256Hash","decodePreAuthTx","sort","a","b","_x12","hasSigned","_callee9","_context9","getSigners","t2","_x15","_x16","_x17","_callee10","txHash","caller","_context10","transactions","_x18","_x19","event","handle","element","onClick","handler","trigger","defaultHandler","message","window","alert","issuerNode","style","display","allFormats","handleFormat","format","handlers","then","forEach","callback","catch","addFormatHandler","formatHandlers","removeFormatHandler","filter","callFormatHandlers","_len","formats","Array","_key","childs","child","appendChild","document","createTextNode","newClass","className","clear","innerHTML","copyContent","select","execCommand","attributes","createElement","id","_len2","_key2","concat","destroy","parentNode","removeChild","pattern","querySelector","show","_len3","elements","_key3","hide","_len4","_key4","rewrite","_len5","_key5","addressNode","parent","animation","grandpa","title","memoexports","onclick","_ref","_ref2","check","makeHashNode","hash","textBox","trNode","infoNode","operation","opNode","transactionNode","_x","odesc","sourceNode","meaning","msg","operationMeaning","query","fieldNode","txt","_typeof","signersNode","titleNode","listNode","signerNode","_x2","errorNode","resolveAddressAndUpdate","codeNode","code","assetNode","issuer","assetsArray","assetsArrayNode","date","timestamp","Date","toLocaleString","flags","typeNode","valueNode","checker","number","min","max","num","isNaN","integer","parseInt","toLowerCase","isValid","boolean","threshold","parse","convert","page","_page","encodeURI","makeConverter","_network","dispatch","options","uriToQuery","tx","guessType","parser","typeParser","typeTowardAll","stripSource","stripSequence","stripSignatures","typeTowardXdr","_htmlNode","uri","split","xdrUri","temp","xdr","tdescToJson","typeTowardAllUsingDelayed","delayed","typeTowardUri","json","getJson","jsonToTdesc","from","to","_this2","getFrom","getTo","converter","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","indexOf","JSON","stringify","fn","stylesInDom","isOldIE","all","atob","getElement","target","styleTarget","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","refs","j","parts","addStyle","listToStyles","list","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","idx","splice","createStyleElement","attrs","addAttrs","el","setAttribute","obj","remove","result","transform","styleIndex","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","join","cssNode","childNodes","content","hmr","locals","add","assign","publicKeys","anchorsdestinationsencode","encodedValue","encoder","toISOString","prepare","_x3","preparer","_x4","Asset","native","preparedAsset","Memo","preparedSigner","ed25519PublicKey","sha256Hash","preAuthTx","_x13","_x14","decode","decodeURIComponent","decoder","assetLower","assetsList","timeStamp","numerator","denominator","Operation","opts","loadedAccount","Constructor","baseAccount","builder","memoType","memoValue","timebounds","_baseAccount","__proto__","constructor","TransactionBuilder","addMemo","queryToJson","queries","mode","unshift","checkOperationType","argument","isTransactionField","isOperationField","decodedValue","errorObject","XLM","mandatoryFields","reverse","jsonToTransaction","makeTransactionBuilder","odescToOperation","addOperation","build","transactionToXdr","toEnvelope","toXDR","xdrToTransaction","Transaction","xdrToQuery","transactionToJson","copy","_memo","_switch","_arm","_value","timeBounds","line","jsonToQuery","_loop2","fields","queryToUri","getTransaction","selectNetwork","sign","action","seed","signingPromise","fromSecret","hasSigner","makeSigningPromise","send","response","submitTransaction","predicate","TypeError","len","thisArg","k","kValue","writable","varArgs","nextSource","nextKey","global","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","rootRecord","completion","rval","dispatchException","exception","context","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","err","previousPromise","callInvokeWithMethodAndArg","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","Function","g","hadRuntime","getOwnPropertyNames","oldRuntime","eval","CosmicLink","_classCallCheck","htmlNode","makeHtmlNodes","aliasesArg","array","_transactionNode","_signersNode","nodes","addAliases","removeAliases"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"stellar-sdk\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"stellar-sdk\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory(require(\"stellar-sdk\"));\n\telse\n\t\troot[\"cosmicLib\"] = factory(root[\"stellar-sdk\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__10__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","'use strict'\n\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * This is mostly about error handling.\n *\n * @exports status\n */\nconst status = exports\n\nconst node = require('./node')\n\n/**\n * Set `cosmicLink` status as `status` and update statusNode.\n * All status are considered erroneous.\n * Error status should be recorded using the fail function bellow.\n * A valid cosmic link may have no status at all.\n * `status` changes are logged.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} status\n */\nstatus.update = function (cosmicLink, status) {\n  if (cosmicLink.status) return\n  console.log('Set status: ' + status)\n  if (cosmicLink) cosmicLink.status = status\n\n  if (cosmicLink._statusNode) {\n    const title = node.grab('.CL_status', cosmicLink._statusNode)\n    title.textContent = status\n  }\n}\n\n/**\n * Set `cosmicLink` status as error status `status` and update statusNode.\n * This implies that the cosmic link or the underlying transaction is invalid.\n * Then, call `continuation` if any. `continuation` should be a either a\n * function or 'throw'.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\nstatus.fail = function (cosmicLink, errorStatus, continuation) {\n  status.update(cosmicLink, errorStatus)\n  if (cosmicLink._statusNode) node.appendClass(cosmicLink.statusNode, 'CL_error')\n  errorContinuation(errorStatus, continuation)\n}\n\n/**\n * Append `error` to `cosmicLink`.errors and to the HTML display.\n * Then, call `continuation` if any. `continuation` should be a either a\n * function or 'throw'.\n * `error`s are logged.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\nstatus.error = function (cosmicLink, error, continuation) {\n  console.log(error)\n\n  if (cosmicLink) {\n    if (!cosmicLink.errors) cosmicLink.errors = []\n    cosmicLink.errors.push(error)\n  }\n  if (cosmicLink._statusNode) {\n    const errorsNode = node.grab('.CL_events', cosmicLink._statusNode)\n    const lineNode = node.create('li', '.CL_error', error)\n    node.append(errorsNode, lineNode)\n  }\n\n  errorContinuation(error, continuation)\n}\n\n/**\n * Populate `cosmicLink.statusNode` with status anderrors from\n * `cosmicLink.errors`.\n *\n * @param {CL}\n */\nstatus.populateHtmlNode = function (cosmicLink) {\n  if (cosmicLink.status) {\n    const titleNode = node.grab('.CL_status', cosmicLink.statusNode)\n    titleNode.textContent = cosmicLink.status\n  }\n  if (cosmicLink.errors) {\n    const errorsNode = node.grab('.CL_events', cosmicLink.statusNode)\n    for (let index in cosmicLink.errors) {\n      const error = cosmicLink.errors[index]\n      node.append(errorsNode, node.create('li', '.CL_error', error))\n    }\n  }\n}\n\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with *error as message.\n * If `continuation` is undefined, do nothing.\n *\n * @private\n * @param {string} error\n * @param {function|'throw'} [continuation]\n */\nfunction errorContinuation (error, continuation) {\n  if (continuation) {\n    if (continuation === 'throw') throw new Error(error)\n    else continuation(error)\n  }\n}\n","'use strict'\n/**\n * Various independent helpers.\n *\n * @exports helpers\n */\nconst helpers = exports\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nhelpers.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nhelpers.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nhelpers.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nhelpers.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","'use_strict'\n/**\n * Contains Stellar transactions specification.\n *\n * @export specs\n */\nconst specs = exports\n\n/**\n * Transaction optional fields.\n */\nspecs.transactionOptionalFields = [\n  'network', 'memo', 'source', 'sequence',\n  'minTime', 'maxTime', 'fee'\n]\n\n/**\n * Operation mandatory fields.\n */\nspecs.operationMandatoryFields = {\n  accountMerge: ['destination'],\n  allowTrust: ['assetCode', 'trustor'],\n  changeTrust: ['asset'],\n  createAccount: ['destination', 'startingBalance'],\n  createPassiveOffer: ['selling', 'buying', 'amount', 'price'],\n  inflation: [],\n  manageData: ['name'],\n  manageOffer: ['selling', 'buying', 'amount', 'price'],\n  pathPayment: ['sendAsset', 'sendMax', 'destination', 'destAsset', 'destAmount'],\n  payment: ['asset', 'destination', 'amount'],\n  setOptions: []\n}\n\n/**\n * Operation optionnal fields.\n */\nspecs.operationOptionalFields = {\n  accountMerge: ['source'],\n  allowTrust: ['authorize', 'source'],\n  changeTrust: ['limit', 'source'],\n  createAccount: ['source'],\n  createPassiveOffer: ['source'],\n  inflation: ['source'],\n  manageData: ['value', 'source'],\n  manageOffer: ['offerId', 'source'],\n  pathPayment: ['path', 'source'],\n  payment: ['source'],\n  setOptions: ['inflationDest', 'clearFlags', 'setFlags', 'masterWeight',\n    'lowThreshold', 'medThreshold', 'highThreshold', 'signer', 'homeDomain',\n    'source']\n}\n\n\n\n/**\n * Field types.\n */\nspecs.fieldType = {\n  amount: 'amount',\n  asset: 'asset',\n  assetCode: 'string',\n  authorize: 'boolean',\n  buying: 'asset',\n  clearFlags: 'flags',\n  destAsset: 'asset',\n  destAmount: 'amount',\n  destination: 'address',\n  fee: 'amount',\n  highThreshold: 'threshold',\n  homeDomain: 'string',\n  inflationDest: 'address',\n  limit: 'amount',\n  lowThreshold: 'threshold',\n  masterWeight: 'weight',\n  maxTime: 'date',\n  medThreshold: 'threshold',\n  memo: 'memo',\n  minTime: 'date',\n  network: 'network',\n  offerId: 'string',\n  price: 'price',\n  name: 'string',\n  path: 'assetsArray',\n  selling: 'asset',\n  sendAsset: 'asset',\n  sendMax: 'amount',\n  sequence: 'sequence',\n  setFlags: 'flags',\n  signer: 'signer',\n  source: 'address',\n  startingBalance: 'amount',\n  trustor: 'address',\n  value: 'string'\n}\n\n/**\n * Transaction field meaning.\n */\nspecs.fieldDesc = {\n  source: 'Source',\n  fee: 'Fees',\n  minTime: 'Valid only after',\n  maxTime: 'Valid only before',\n  memo: 'Memo',\n\n  network: 'Network',\n  sequence: 'Sequence'\n}\n\n/**\n * An array of each valid type for fields.\n */\nspecs.types = []\nfor (let field in specs.fieldType) {\n  const type = specs.fieldType[field]\n  specs.types.find(entry => entry === type) || specs.types.push(type)\n}\n","'use strict'\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require('./helpers')\nconst status = require('./status')\n\n\n/**\n * Select the network to be used by `StellarSdk` as being `cosmicLink` current\n * network.\n *\n * @param {CL}\n */\nresolve.network = function (cosmicLink, network) {\n  switch (network) {\n    case 'test':\n      StellarSdk.Network.useTestNetwork()\n      return testServer\n    case 'public':\n      StellarSdk.Network.usePublicNetwork()\n      return publicServer\n    default: throw new Error('Invalid network: ' + network)\n  }\n}\n\nconst testServer = new StellarSdk.Server('https://horizon-testnet.stellar.org')\nconst publicServer = new StellarSdk.Server('https://horizon.stellar.org')\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nresolve.accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function cacheAccount (address, promise) {\n  accountCache[address] = promise\n  await helpers.timeout(resolve.accountCacheExpiration * 1000)\n  delete accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * In case of error, change `cosmicLink` status accordingly.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nresolve.address = function (cosmicLink, address) {\n  if (accountCache[address]) return accountCache[address]\n  const promise = addressResolver(cosmicLink, address)\n  cacheAccount(address, promise)\n  return promise\n}\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address` or write error/status in\n * `cosmicLink`.\n *\n * @private\n * @param {cosmicLink} cosmicLink\n * @param {string} address\n */\nasync function addressResolver (cosmicLink, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.fail(cosmicLink, 'Invalid address(es)')\n    status.error(cosmicLink, 'Invalid address: ' + helpers.shorter(address), 'throw')\n  }\n\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    const publicKey = account.account_id\n    if (!publicKey) throw new Error('Empty account')\n    if (!account.memo_type && account.memo !== undefined) delete account.memo\n    if (address !== publicKey) account.address = address\n    const alias = cosmicLink.aliases[publicKey]\n    if (alias) account.alias = alias\n    return account\n  } catch (error) {\n    console.log(error)\n    status.fail(cosmicLink, 'Unresolved address(es)')\n    status.error(cosmicLink, \"Can't resolve: \" + helpers.shorter(address), 'throw')\n  }\n}\n\n\n/**\n * Return the account object for `address` on `network`.\n *\n * @param {CL}\n * @param {string} address A public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The account response\n */\nresolve.account = async function (cosmicLink, address, network) {\n  const server = resolve.network(cosmicLink, network)\n  const account = await resolve.address(cosmicLink, address)\n  const publicKey = account.account_id\n  try {\n    return server.loadAccount(publicKey)\n  } catch (error) {\n    console.log(error)\n    status.error(cosmicLink, `Can't find account`, 'throw')\n  }\n}\n\n/**\n * Returns the source account object for `cosmicLink`\n *\n * @param {CL}\n * @return {Object} The account response\n */\nresolve.getSourceAccount = async function (cosmicLink) {\n  const source = await cosmicLink.getSource()\n  try {\n    return resolve.account(cosmicLink, source, cosmicLink.network)\n  } catch (error) {\n    status.error(cosmicLink, `Can't find source account on ${cosmicLink.network} network`)\n    status.fail(cosmicLink, 'Empty source account', 'throw')\n  }\n}\n\n/**\n * Return the signers for the account at `address` on `network`.\n *\n * @param {CL}\n * @param {string} address Either a public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The signers object from the account response\n */\nresolve.accountSigners = async function (cosmicLink, address, network) {\n  const account = await resolve.account(cosmicLink, address, network)\n  return account.signers\n}\n\n/**\n * Return an array containing the legit signers for `cosmicLink` transaction.\n *\n * @param {CL}\n * @return {Array} Signers\n */\nresolve.signers = async function (cosmicLink) {\n  const tdesc = await cosmicLink.getTdesc()\n  const sources = await transactionSources(cosmicLink, tdesc)\n\n  const signers = []\n  for (let index in sources) {\n    const source = sources[index]\n    const account = await resolve.account(cosmicLink, source, cosmicLink.network)\n\n    for (let index in account.signers) {\n      const entry = account.signers[index]\n      const StrKey = StellarSdk.StrKey\n      const signer = { weight: entry.weight, value: entry.key }\n      signer.type = entry.type.replace(/^.*_/, '')\n      if (signer.type === 'hash') signer.value = StrKey.decodeSha256Hash(entry.key).toString('hex')\n      if (signer.type === 'tx') {\n        signer.value = StrKey.decodePreAuthTx(entry.key).toString('hex')\n      }\n      signer.getSignature = getSignature(cosmicLink, signer)\n      signers.push(signer)\n    }\n  }\n\n  return signers.sort((a, b) => b.weight - a.weight)\n}\n\nasync function transactionSources (cosmicLink, tdesc) {\n  const sources = tdesc.operations.map(entry => entry.source)\n  sources.push(tdesc.source || cosmicLink.user)\n\n  let accounts = {}\n  for (let index in sources) {\n    const source = sources[index]\n    if (!source) continue\n    const account = await resolve.address(cosmicLink, source)\n    accounts[account.account_id] = account\n  }\n\n  return Object.keys(accounts)\n}\n\nfunction getSignature (cosmicLink, signer) {\n  return helpers.delay(async () => {\n    switch (signer.type) {\n      case 'tx':\n        try {\n          await resolve.transaction(cosmicLink, signer.value)\n          return true\n        } catch (error) {\n          return false\n        }\n      case 'hash': return false\n      case 'key':\n        const tdesc = await cosmicLink.getTdesc()\n        if (!tdesc.signatures) return false\n\n        const keypair = StellarSdk.Keypair.fromPublicKey(signer.value)\n        const hint = keypair.signatureHint().toString('base64')\n        return tdesc.signatures.find(entry => {\n          if (entry.hint === hint) return entry.signature\n        })\n    }\n  })\n}\n\nresolve.hasSigned = async function (cosmicLink, type, value) {\n  const signers = await cosmicLink.getSigners()\n  for (let index in signers) {\n    const signer = signers[index]\n    if (\n      signer.type === type &&\n      signer.value === value &&\n      await signer.getSignature()\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nresolve.transaction = async function (cosmicLink, txHash) {\n  const caller = cosmicLink.server.transactions()\n  return caller.transaction(txHash).call()\n}\n\n//~ async function getThreshold (cosmicLink) {\n  //~ const signers = await cosmicLink.getSigners()\n  //~ const max = signers.reduce((accum, entry) => accum + entry.weight)\n  //~ const current = signers.reduce((accum, entry) => accum + entry.signature ? entry.weight : 0)\n  //~ return { current: current, max: max, required: 0 }\n//~ }\n","'use strict'\n/**\n * Contains the methods to trigger and handle events.\n *\n * @exports event\n */\nconst event = exports\n\nconst helpers = require('./helpers')\nconst node = require('./node')\n\n/**\n * Call handler (in any) defined for `type` in `cosmicLink`. Call it with\n * arguments `cosmicLink`, `value`, `element`; Where `element` is the clicked\n * HTML element and `value` the field value it represents.\n *\n * @param {CL}\n * @param {string} Type The type of `object` as defined in specs.js\n * @param {*}  value Field value in `transaction descriptor` format\n * @param {HTMLElement} element HTML element displaying `value`\n * @return *\n */\nevent.handle = function (cosmicLink, type, value, element) {\n  if (!cosmicLink || !cosmicLink.onClick) return\n  const handler = cosmicLink.onClick[type]\n  if (handler) return handler(cosmicLink, value, element)\n}\n\nevent.trigger = function (cosmicLink, type, value, element) {\n  return () => event.handle(cosmicLink, type, value, element)\n}\n\n/**\n * Default handlers for address and asset onclick events.\n *\n * @namespace\n */\nevent.defaultHandler = {}\n\nevent.defaultHandler.address = function address (cosmicLink, account) {\n  let message = ''\n  for (let field in account) {\n    message += field + ':\\n' + account[field] + '\\n\\n'\n  }\n  window.alert(message)\n}\n\nevent.defaultHandler.asset = function (cosmicLink, asset, element) {\n  const issuerNode = node.grab('.CL_assetIssuer', element)\n  if (issuerNode.style.display === 'inline') issuerNode.style.display = 'none'\n  else issuerNode.style.display = 'inline'\n}\n\n// TODO: implement a complete event handling interface.\n// Possible structure for an event object.\n// ~ {\n// ~ type: 'onClick'\n// ~ node: HTMLElement,\n// ~ operation: 0|undefined,\n// ~ field: 'address',\n// ~ value: 'GAWO...',\n// ~ }\n//\n// event.trigger(cosmicLink, eventType, [operation], [field], [value], [node], [add])\n// event.listen(cosmicLink, eventType, handler))\n\nconst allFormats = ['uri', 'query', 'tdesc', 'json', 'transaction', 'xdr']\n\nevent.addFormatHandler = function (cosmicLink, format, callback) {\n  const handlers = cosmicLink.formatHandlers\n  if (!handlers[format]) handlers[format] = []\n  handlers[format].push(callback)\n\n  handleFormat(cosmicLink, format, [callback])\n}\n\nevent.removeFormatHandler = function (cosmicLink, format, callback) {\n  const handlers = cosmicLink.formatHandlers\n  if (!handlers[format]) return\n\n  handlers[format] = handlers[format].filter(entry => entry !== callback)\n}\n\nevent.callFormatHandlers = function (cosmicLink, ...formats) {\n  if (!formats.length) formats = allFormats\n  const handlers = cosmicLink.formatHandlers\n\n  formats.forEach(entry => {\n    if (handlers[entry]) handleFormat(cosmicLink, entry, handlers[entry])\n  })\n}\n\nfunction handleFormat (cosmicLink, format, handlers) {\n  const getter = cosmicLink['get' + helpers.capitalize(format)]\n  if (!getter) return\n\n  getter().then(value => {\n    const event = { cosmicLink: cosmicLink, value: value }\n    handlers.forEach(callback => callback(event))\n  }).catch(error => {\n    const event = { cosmicLink: cosmicLink, error: error }\n    handlers.forEach(callback => callback(event))\n  })\n}\n","'use_strict'\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports node\n */\nconst node = exports\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nnode.append = function (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === 'string' || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nnode.appendClass = function (element, newClass) {\n  element.className += ' ' + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} element\n * */\nnode.clear = function (element) {\n  element.innerHTML = ''\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nnode.copyContent = function (element) {\n  element.select()\n  return document.execCommand('copy')\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nnode.create = function (name, attributes, ...childs) {\n  if (!name) throw new Error('Missing tag name')\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === 'string') {\n    switch (attributes.substr(0, 1)) {\n      case '#': element.id = attributes.substr(1); break\n      case '.': element.className = attributes.substr(1); break\n      default: throw new Error('Unhandled attribute')\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) node.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nnode.destroy = function (element) {\n  try {\n    element.innerHTML = ''\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (error) { console.log(error) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nnode.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nnode.show = function (...elements) {\n  elements.forEach(element => element.style.display = 'block')\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nnode.hide = function (...elements) {\n  elements.forEach(element => element.style.display = 'none')\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nnode.rewrite = function (element, ...childs) {\n  node.clear(element)\n  node.append(element, ...childs)\n}\n","'use strict'\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @exports format\n */\nconst format = exports\n\nconst helpers = require('./helpers')\nconst node = require('./node')\nconst check = require('./check')\nconst specs = require('./specs')\nconst status = require('./status')\nconst resolve = require('./resolve')\nconst event = require('./event')\n\n\n/**\n * Populate `cosmicLink.transactionNode` with a description of `transaction\n * descriptor`.\n *\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n */\nformat.tdesc = async function (cosmicLink) {\n  const trNode = cosmicLink.transactionNode\n  const tdesc = await cosmicLink.getTdesc()\n  node.clear(trNode)\n\n  let infoNode\n  specs.transactionOptionalFields.forEach(entry => {\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = node.create('ul', '.CL_sideInfo')\n      const lineNode = node.create('li', {},\n        specs.fieldDesc[entry] + ': ',\n        format.field(cosmicLink, entry, tdesc[entry])\n      )\n      node.append(infoNode, lineNode)\n    }\n  })\n  if (infoNode) node.append(trNode, infoNode)\n\n  /// Sort operations so that the ones with declared sources are at the end.\n  /// (makes data presentation better)\n  let operations = tdesc.operations.sort(entry => entry.source ? 1 : 0)\n\n  try {\n    for (let index in operations) {\n      const operation = tdesc.operations[index]\n      const opNode = format.operation(cosmicLink, operation)\n      node.append(trNode, opNode)\n    }\n    format.signatures(cosmicLink)\n  } catch (error) {\n    console.log(error)\n    status.error(cosmicLink, 'Unhandled formatting error')\n  }\n}\n\n/**\n * Return an HTMLElement with `operation` in human language.\n *\n * @param {CL}\n * @param {Object} odesc Operation in cosmic link JSON format\n */\nformat.operation = function (cosmicLink, odesc) {\n  const opNode = node.create('div', '.CL_operation')\n\n  if (odesc.source) {\n    node.appendClass(opNode, 'CL_sourcedOperation')\n    const sourceNode = node.create('div', '.CL_source', 'Source: ')\n    const addressNode = format.field(cosmicLink, 'source', odesc.source)\n    node.append(sourceNode, addressNode)\n    node.append(opNode, sourceNode)\n  }\n\n  let meaning = operationMeaning(odesc)\n  while (meaning) {\n    if (meaning.substr(0, 1) === '{') {\n      const query = meaning.substr(1).replace(/}.*/, '')\n      meaning = meaning.replace(/^[^}]*}/, '')\n      if (query === 'newline') {\n        if (meaning === '') break\n        node.append(opNode, node.create('br'))\n      } else {\n        const fieldNode = format.field(cosmicLink, query, odesc[query])\n        node.append(opNode, fieldNode)\n      }\n    } else {\n      const txt = meaning.replace(/{.*/, '')\n      meaning = meaning.replace(/^[^{]*/, '')\n      node.append(opNode, txt)\n    }\n  }\n  return opNode\n}\n\n/**\n * Return a string that describe the meaning of `operation descriptor`.\n *\n * @private\n * @param {Object} odesc Operation descriptor\n * @return {string} Meaning of `operation descriptor`\n */\nfunction operationMeaning (odesc) {\n  let msg\n  switch (odesc.type) {\n    case 'accountMerge':\n      return 'Merge account inside {destination}'\n    case 'allowTrust':\n      if (odesc.authorize) {\n        return 'Allow usage of your asset {assetCode} to {trustor}'\n      } else {\n        return 'Deny usage of your asset {assetCode} to {trustor}'\n      }\n    case 'changeTrust':\n      if (odesc.limit === '0') {\n        return 'Refuse asset {asset}'\n      } else if (odesc.limit) {\n        return 'Set holding limit as {limit} for asset {asset}'\n      } else {\n        return 'Accept asset {asset}'\n      }\n    case 'createAccount':\n      return 'Create account {destination} and send it {startingBalance} XLM'\n    case 'createPassiveOffer':\n      return 'Passive offer of {amount} {selling} at {price} {buying} / unit'\n    case 'inflation':\n      return 'Run inflation'\n    case 'manageData':\n      if (odesc.value) {\n        return \"Set data entry '{name}' as '{value}'\"\n      } else {\n        return \"Delete data entry '{name}'\"\n      }\n    case 'manageOffer':\n      if (!odesc.offerId || odesc.offerId === '0') {\n        return 'Offer {amount} {selling} at {price} {buying} / unit'\n      } else if (odesc.amount !== '0') {\n        return \"Change offer '{offerId}' to: offer {amount} {selling} at \" +\n          '{price} {buying} / unit'\n      } else {\n        return \"Delete offer '{offerId}'\"\n      }\n    case 'pathPayment':\n      msg = 'Send {destAmount} {destAsset} to {destination} for a maximum ' +\n        'of {sendMax} {sendAsset}'\n      if (odesc.path) msg += ' using conversion path: {path}'\n      return msg\n    case 'payment':\n      return 'Send {amount} {asset} to {destination}'\n    case 'setOptions':\n      msg = ''\n      if (odesc.inflationDest) {\n        msg += 'Set inflation destination to: {inflationDest}{newline}'\n      }\n      if (odesc.clearFlags) msg += 'Clear flag(s): {clearFlags}{newline}'\n      if (odesc.setFlags) msg += 'Set flag(s): {setFlags}{newline}'\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === '0') {\n          msg += 'Delete master key{newline}'\n        } else {\n          msg += 'Set master key weight at: {masterWeight}{newline}'\n        }\n      }\n      ['lowThreshold', 'medThreshold', 'highThreshold'].forEach(field => {\n        if (odesc[field]) msg += 'Set ' + field + ' at: {' + field + '}{newline}'\n      })\n      if (odesc.signer) {\n        if (odesc.signer.weight === '0') msg += 'Remove signer: {signer}{newline}'\n        else msg += 'Set signer: {signer}{newline}'\n      }\n      if (odesc.homeDomain) msg += 'Set home domain: {homeDomain}{newline}'\n      if (odesc.homeDomain === '') msg += 'Unset home domain'\n      if (!msg) msg = 'Do nothing'\n      return msg\n    default:\n      throw new Error('Unknow operation: ' + odesc.type)\n  }\n}\n\n/**\n * Return an HTML element exposing `value`.\n *\n * @param {CL}\n * @param {string} field The field name of `value` as defined in `spec.js`\n * @return {HTLMElement} `value` formatted in HTML/CSS\n */\nformat.field = function (cosmicLink, field, value) {\n  let type = specs.fieldType[field]\n  if (!type) throw new Error('Unknow field: ' + field)\n\n  check.type(cosmicLink, type)\n  if (typeof value === 'object' && value.error) type = 'error'\n  const formatter = format[type] || format.string\n  const fieldNode = formatter(cosmicLink, value)\n\n  fieldNode.className = 'CL_' + type\n  fieldNode.onClick = event.trigger(cosmicLink, type, value, fieldNode)\n  return fieldNode\n}\n\n/**\n * Returns an HTML node that displays signers for the transaction represented by\n * `cosmicLink`.\n *\n * @param {CL}\n * @return {HTMLElement} - A `div` element containing the signers\n */\nformat.signatures = async function (cosmicLink) {\n  const signers = await cosmicLink.getSigners()\n  const tdesc = await cosmicLink.getTdesc()\n  if (signers.length < 2 && !tdesc.signatures) return\n\n  const signersNode = cosmicLink.signersNode\n  node.clear(signersNode)\n\n  const titleNode = node.create('span', '.CL_threshold', 'Signatures')\n  const listNode = node.create('ul', '.CL_signers')\n  node.append(cosmicLink.signersNode, titleNode, listNode)\n\n  signers.forEach(entry => {\n    const signerNode = format.signer(cosmicLink, entry)\n    const animation = node.create('span', '.CL_loadingAnim')\n    const lineNode = node.create('li', null, signerNode, animation)\n    entry.node = lineNode\n    entry.getSignature().then(signature => {\n      signature && node.appendClass(lineNode, 'CL_signed')\n      node.destroy(animation)\n    })\n    node.append(listNode, lineNode)\n  })\n}\n\n/******************************************************************************/\n\nformat.string = function (cosmicLink, string) {\n  return document.createTextNode(string)\n}\n\nformat.error = function (cosmicLink, error) {\n  const errorNode = node.create('span', '.CL_error', error.value)\n  errorNode.title = 'Invalid value'\n  return errorNode\n}\n\nformat.address = function (cosmicLink, address) {\n  const addressNode = node.create('span',\n    { title: 'Resolving...', className: 'CL_address' },\n    helpers.shorter(address),\n    node.create('span', '.CL_loadingAnim')\n  )\n\n  resolveAddressAndUpdate(cosmicLink, address, addressNode)\n  return addressNode\n}\n\nasync function resolveAddressAndUpdate (cosmicLink, address, addressNode) {\n  try {\n    const account = await resolve.address(cosmicLink, address)\n\n    addressNode.title = account.account_id\n    if (account.memo) {\n      addressNode.title += `\\nMemo (${account.memoexports}): ${account.memo}`\n    }\n\n    if (account.address) addressNode.textContent = account.address\n    else if (account.alias) addressNode.textContent = account.alias\n\n    addressNode.onclick = event.trigger(cosmicLink, 'address', account,\n      addressNode)\n  } catch (error) {\n    console.log(error)\n    addressNode.title = \"Can't resolve address\"\n    node.appendClass(addressNode, 'CL_error')\n\n    const parent = addressNode.parentNode\n    if (parent.className === 'CL_assetIssuer') {\n      parent.style.display = 'inline'\n    }\n  }\n\n  const animation = node.grab('.CL_loadingAnim', addressNode)\n  if (animation) node.destroy(animation)\n  const grandpa = addressNode.parentNode.parentNode\n  if (grandpa && grandpa.className === 'CL_asset') {\n    node.destroy(node.grab('.CL_loadingAnim', grandpa))\n  }\n}\n\nformat.asset = function (cosmicLink, asset) {\n  const codeNode = node.create('span', '.CL_assetCode', asset.code)\n  const issuerNode = node.create('span', '.CL_assetIssuer')\n  const assetNode = node.create('span', '.CL_asset', codeNode, issuerNode)\n\n  codeNode.onclick = event.trigger(cosmicLink, 'asset', asset, assetNode)\n\n  if (asset.issuer) {\n    codeNode.title = 'Issued by ' + asset.issuer\n    node.append(issuerNode, ' issued by ')\n    node.append(issuerNode, format.address(cosmicLink, asset.issuer))\n    node.append(codeNode, node.create('span', '.CL_loadingAnim'))\n  } else {\n    codeNode.title = 'Native asset'\n    node.append(issuerNode, ' native asset')\n  }\n\n  return assetNode\n}\n\nformat.assetsArray = function (cosmicLink, assetsArray) {\n  const assetsArrayNode = node.create('span')\n  for (let i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) node.append(assetsArrayNode, ', ')\n    node.append(assetsArrayNode, format.asset(cosmicLink, assetsArray[i]))\n  }\n\n  return assetsArrayNode\n}\n\nformat.date = function (cosmicLink, timestamp) {\n  const date = new Date(timestamp * 1000)\n  return node.create('span', {}, date.toLocaleString())\n}\n\nformat.flags = function (cosmicLink, flags) {\n  let string = ''\n  if (flags >= 4) {\n    string = 'immutable'\n    flags = flags - 4\n  }\n  if (flags >= 2) {\n    if (string) string = ', ' + string\n    string = 'revocable' + string\n    flags = flags - 2\n  }\n  if (+flags === 1) {\n    if (string) string = ', ' + string\n    string = 'required' + string\n  }\n\n  return node.create('span', {}, string)\n}\n\nformat.memo = function (cosmicLink, memo) {\n  const typeNode = node.create('span', '.CL_memoType', memo.type)\n  let valueNode\n  if (memo.value.length > 30) {\n    valueNode = makeHashNode(memo.value)\n    node.appendClass(valueNode, '.CL_memoValue')\n  } else {\n    valueNode = node.create('span', '.CL_memoValue', memo.value)\n  }\n  return node.create('span', {}, '(', typeNode, ') ', valueNode)\n}\n\nformat.price = function (cosmicLink, price) {\n  if (typeof price === 'string') {\n    return node.create('span', {}, price)\n  } else {\n    return node.create('span', {}, price.n / price.d + '')\n  }\n}\n\nformat.signer = function (cosmicLink, signer) {\n  const signerNode = node.create('span')\n  switch (signer.type) {\n    case 'key':\n      node.append(signerNode, 'Account ')\n      node.append(signerNode, format.address(cosmicLink, signer.value))\n      break\n    case 'hash':\n      node.append(signerNode,\n        'Key whose hash is ',\n        makeHashNode(signer.value)\n      )\n      break\n    case 'tx':\n      node.append(signerNode,\n        'Transaction ',\n        makeHashNode(signer.value)\n      )\n  }\n  if (signer.weight > 1) {\n    node.append(signerNode, ' (weight: ' + signer.weight + ')')\n  }\n  return signerNode\n}\n\nfunction makeHashNode (hash) {\n  return node.create('span',\n    { className: 'CL_hash', title: hash, onclick: copier(hash) },\n    helpers.shorter(hash)\n  )\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nfunction copier (string) {\n  return function () {\n    const textBox = node.create('textarea', {}, string)\n    node.append(node.grab('body'), textBox)\n    node.copyContent(textBox)\n    node.destroy(textBox)\n  }\n}\n","'use strict'\n/**\n * Provide checks for varous type of field used in cosmic links. In case of\n * error, `cosmicLink` is updated accordingly.\n *\n * This module may no be type-complete and new type checks got added only when\n * needed.\n *\n * The check apply on values using the cosmic link JSON format.\n *\n * @exports check\n */\nconst check = exports\n\nconst specs = require('./specs')\nconst status = require('./status')\n\n\n/**\n * Check that `field` is a valid transaction/operation field. If `value` is\n * given, check that it is valid for that `field`. If a check doesn't pass, an\n * error is throwed.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {string} [value]\n */\ncheck.field = function (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n  if (value) check.type(cosmicLink, type, value)\n}\n\n/**\n * Check that `type` is a valid transaction/operation field type. If `value` is\n * given, check that it is valid for that `type`. If a check doesn't pass, an\n * error is throwed.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {string} [value]\n */\ncheck.type = function (cosmicLink, type, value) {\n  if (! specs.types.find(entry => entry === type)) {\n    throw new Error('Invalid type: ' + type)\n  }\n  if (value) {\n    check.type(cosmicLink, type)\n    const checker = check[type]\n    if (checker) checker(cosmicLink, value)\n  }\n}\n\n/**\n * Generic check for numbers. Check that `value` is a number or a string\n * representing a number. `type` is for the customization of the message in case\n * of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.number = function (cosmicLink, value, type = 'number', min, max) {\n  const num = +value\n  if (isNaN(num)) {\n    status.error(cosmicLink,\n      `Invalid ${type} (should be a number): ${value}`,\n      'throw'\n    )\n  } else if ((min && num < min) || (max && num > max)) {\n    status.error(cosmicLink,\n      `Invalid ${type} (should be between ${min} and ${max} ): ${value}`,\n      'throw'\n    )\n  }\n}\n\n/**\n * Generic check for integers. Check that `value` is an integer or a string\n * representing an integer. `type` is for the customization of the message in\n * case of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.integer = function (cosmicLink, value, type = 'integer', min, max) {\n  check.number(cosmicLink, value, type, min, max)\n  if (parseInt(value) + '' !== value + '') {\n    status.error(cosmicLink, `Not an integer: ${value}`, 'throw')\n  }\n}\n\n/******************************************************************************/\n\ncheck.asset = function (cosmicLink, asset) {\n  const code = asset.code.toLowerCase()\n  if (!asset.issuer && code !== 'xlm' && code !== 'native') {\n    status.error(cosmicLink, 'Missing issuer for asset: ' + code, 'throw')\n  }\n}\n\ncheck.assetsArray = function (cosmicLink, assetsArray) {\n  let isValid = true\n  for (let index in assetsArray) {\n    try { check.asset(cosmicLink, assetsArray[index]) }\n    catch (error) { isValid = false }\n  }\n  if (!isValid) throw new Error ('Invalid assets array')\n}\n\ncheck.amount = function (cosmicLink, amount) {\n  check.number(cosmicLink, amount, 'amount')\n}\n\ncheck.boolean = function (cosmicLink, boolean) {\n  if (typeof boolean !== 'boolean') {\n    status.error(cosmicLink, 'Invalid boolean: ' + boolean, 'throw')\n  }\n}\n\ncheck.flags = function (cosmicLink, flags) {\n  check.integer(cosmicLink, flags, 'flags', 0, 7)\n}\n\ncheck.price = function (cosmicLink, price) {\n  if (typeof price === 'object') {\n    try {\n      check.price(null, price.n)\n      check.price(null, price.d)\n    } catch (error) {\n      status.error(cosmicLink, 'Invalid price', 'throw')\n    }\n  } else {\n    check.number(cosmicLink, price, 0)\n  }\n}\n\ncheck.signer = function (cosmicLink, signer) {\n  check.weight(cosmicLink, signer.weight)\n  switch (signer.type) {\n    case 'key': break\n    case 'hash':\n    case 'tx':\n      if (signer.value.length !== 64 || !signer.value.match(/[0-9a-f]*/)) {\n        status.error(cosmicLink, 'Invalid hash (expecting sha256sum)', 'throw')\n      }\n      break\n    default:\n      status.error(cosmicLink, 'Invalid signer type: ' + signer.type, 'throw')\n  }\n}\n\ncheck.sequence = function (cosmicLink, sequence) {\n  check.integer(cosmicLink, sequence, 'sequence', 0)\n}\n\ncheck.threshold = function (cosmicLink, threshold) {\n  check.integer(cosmicLink, threshold, 'threshold', 0, 255)\n}\n\ncheck.weight = function (cosmicLink, weight) {\n  check.integer(cosmicLink, weight, 'weight', 0, 255)\n}\n","'use strict'\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @exports parse\n */\nconst parse = exports\n\nconst helpers = require('./helpers')\nconst convert = require('./convert')\nconst format = require('./format')\nconst status = require('./status')\nconst event = require('./event')\n\n/**\n * Set `page` as the base URI for `cosmicLink`. Update the URI getter\n * accordingly.\n *\n * @param {CL}\n * @param {string} page URI basename\n */\nparse.page = function (cosmicLink, page) {\n  cosmicLink._page = encodeURI(page)\n  makeConverter(cosmicLink, 'query', 'uri')\n}\n\n/**\n * Set `cosmicLink` `network`. Throw an error if `network` is not valid.\n *\n * @param {CL}\n * @param {string} network Either `public` or `test`\n */\nparse.network = function (cosmicLink, network) {\n  cosmicLink._network = network\n  if (network === 'test') {\n    cosmicLink.server = new StellarSdk.Server('https://horizon-testnet.stellar.org')\n  } else if (network === 'public') {\n    cosmicLink.server = new StellarSdk.Server('https://horizon.stellar.org')\n  } else {\n    cosmicLink.server = null\n    status.error(cosmicLink, 'Invalid network: ' + network)\n    status.fail(cosmicLink, 'Invalid network', 'throw')\n  }\n}\n\n/**\n * Setup the getters for each format form `cosmicLink`, using `value` and\n * `...options` as input. The six getters are:\n * * CosmicLink.getUri()\n * * CosmicLink.getQuery()\n * * CosmicLink.getTdesc()\n * * CosmicLink.getJson()\n * * CosmicLink.getTransaction()\n * * CosmicLink.getXdr()\n * Each format offers a way to represent the same transaction. This function\n * only setup the getters, which returns a promise resolving to the transaction\n * in the corresponding format. The conversion only occurs if/when the getter\n * is called.\n *\n * @param {CL}\n * @param {string|Object} value A transaction in on of the supported format\n * @param {Object} options The options as specified for CosmicLink constructor\n * @return {void}\n */\nparse.dispatch = function (cosmicLink, value, options = {}) {\n  const type = guessType(value)\n  const parser = typeParser[type]\n\n  /// Get network parameter now.\n  if (\n    (type === 'uri' || type === 'query' || type === 'xdrUri') &&\n    value.match('&network=')\n  ) {\n    const network = value.replace(/.*&network=/, '').replace(/&.*/, '')\n    try { cosmicLink.network = network } catch (error) {}\n  }\n\n  if (parser) parser(cosmicLink, value, options)\n  else parse.typeTowardAll(cosmicLink, type, value, options)\n\n  /// A transaction with sequence number uses xdrUri format.\n  if (type === 'xdr' || type === 'transaction') {\n    if (options.stripSource || options.stripSequence || options.stripSignatures) {\n      typeTowardXdr(cosmicLink, 'json')\n    }\n    if (!options.stripSource && !options.stripSequence) {\n      parse.makeConverter(cosmicLink, 'xdr', 'query', options)\n      parse.makeConverter(cosmicLink, 'query', 'uri')\n    }\n  }\n\n  event.callFormatHandlers(cosmicLink)\n\n  if (cosmicLink._htmlNode) {\n    cosmicLink.getTdesc()\n      .then(tdesc => {\n        try { format.tdesc(cosmicLink) }\n        catch (error) { console.log(error) }\n      })\n      .catch(() => {})\n  }\n}\n\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n *\n * @private\n * @param {string|Object} value Either a cosmic link, a query, a `transaction\n *     descriptor` formatted as object or JSON, a Stellar Transaction object or\n *     a Stellar transaction XDR.\n * @return {string} type Type of `value`\n */\nfunction guessType (value) {\n  let type\n  if (typeof value === 'string') {\n    const query = convert.uriToQuery('', value)\n    if (query && query.substr(0, 5) === '?xdr=') type = 'xdrUri'\n    else if (value.substr(0, 1) === '?') type = 'query'\n    else if (value.substr(0, 1) === '{') type = 'json'\n    else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = 'xdr'\n    else type = 'uri'\n  } else {\n    if (value.tx) type = 'transaction'\n    else type = 'tdesc'\n  }\n  return type\n}\n\n/**\n * Per-type customization of the generic parsing process.\n *\n * @private\n * @namespace\n */\nconst typeParser = {}\n\ntypeParser.uri = function (cosmicLink, uri) {\n  const page = uri.split('?')[0]\n  const query = convert.uriToQuery(cosmicLink, uri)\n  cosmicLink._page = encodeURI(page)\n  parse.typeTowardAll(cosmicLink, 'query', query)\n}\n\ntypeParser.xdrUri = function (cosmicLink, xdrUri) {\n  const page = xdrUri.split('?')[0]\n  if (page) cosmicLink._page = encodeURI(page)\n\n  const query = convert.uriToQuery(cosmicLink, xdrUri)\n  const temp = query.split('&')\n  const xdr = temp[0].substr(5)\n\n  let options = {}\n  temp.slice(1).forEach(entry => {\n    let field = entry.replace(/=.*$/, '')\n    let value = entry.substr(field.length + 1)\n\n    switch (field) {\n      case 'stripSignatures':\n        options.stripSignatures = true\n        break\n      case 'stripSequence':\n        options.stripSequence = true\n        break\n      case 'stripSource':\n        options.stripSource = true\n        break\n      case 'network':\n        options.network = value\n        break\n      default:\n        status.fail(cosmicLink, 'Invalid query')\n        status.error(cosmicLink, 'Unknow option: ' + entry)\n    }\n  })\n\n  parse.dispatch(cosmicLink, xdr, options)\n}\n\n/**\n * Setup all formats getters for `cosmicLink` using entry point `value`, which\n * is a transaction formatted in `type`.\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {*} value The value for `type`\n */\nparse.typeTowardAll = function (cosmicLink, type, value, ...options) {\n  if (type === 'tdesc') {\n    type = 'json'\n    value = convert.tdescToJson(cosmicLink, value, ...options)\n  }\n\n  parse.typeTowardAllUsingDelayed(cosmicLink,\n    type,\n    helpers.delay(() => value),\n    ...options)\n}\n\n/**\n * Setup all formats getters for `cosmicLink` using entry point `delayed`. Here\n * we name `delayed` a function that returns a promise of the transaction\n * formatted in `type`.\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {function} delayed A function that return a promise for `type`\n */\nparse.typeTowardAllUsingDelayed = function (cosmicLink, type, delayed, ...options) {\n  const getter = 'get' + helpers.capitalize(type)\n  cosmicLink[getter] = delayed\n\n  if (type !== 'xdr') typeTowardXdr(cosmicLink, type, ...options)\n  if (type !== 'uri') typeTowardUri(cosmicLink, type, ...options)\n  cosmicLink.getTdesc = async () => {\n    const json = await cosmicLink.getJson()\n    return convert.jsonToTdesc(cosmicLink, json)\n  }\n}\n\n/**\n * Setup format getters for `cosmicLink` starting from the one following `type`\n * until xdr. For example, if `type` is 'query', it will setup\n * `cosmicLink.getJson`, `cosmicLink.getTransaction` and `cosmicLink.getXdr`.\n *\n * @private\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'transaction'\n * @param {*} value The value of `type`\n */\nfunction typeTowardXdr (cosmicLink, type, ...options) {\n  switch (type) {\n    case 'uri': parse.makeConverter(cosmicLink, 'uri', 'query', ...options)\n    case 'query': parse.makeConverter(cosmicLink, 'query', 'json', ...options)\n    case 'json': parse.makeConverter(cosmicLink, 'json', 'transaction', ...options)\n    case 'transaction': parse.makeConverter(cosmicLink, 'transaction', 'xdr', ...options)\n      break\n    default: throw new Error('Invalid type: ' + type)\n  }\n}\n\n/**\n * Setup format getters for `cosmicLink` starting from the one following `type`\n * until xdr. For example, if `type` is 'json', it will setup\n * `cosmicLink.getQuery` and `cosmicLink.getUri`.\n *\n * @private\n * @param {CL}\n * @param {string} type One of 'xdr', 'transaction', 'json', 'query'\n */\nfunction typeTowardUri (cosmicLink, type, ...options) {\n  switch (type) {\n    case 'xdr': parse.makeConverter(cosmicLink, 'xdr', 'transaction', ...options)\n    case 'transaction': parse.makeConverter(cosmicLink, 'transaction', 'json', ...options)\n    case 'json': parse.makeConverter(cosmicLink, 'json', 'query', ...options)\n    case 'query': parse.makeConverter(cosmicLink, 'query', 'uri', ...options)\n      break\n    default: throw new Error('Invalid type: ' + type)\n  }\n}\n\n/**\n * Setup format getter get`to` for `cosmicLink` using `from`. In other words,\n * if `from` is 'uri' and `to` is 'query', it will setup `cosmicLink.getQuery`\n * to be computed from uri.\n *\n * This function uses existing conversion functions in 'convert' module.\n * i.e.: arbitrary conversion like from query to transaction won't do.\n *\n * @param {CL}\n * @param {string} from One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {string} to One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                    'xdr'\n */\nparse.makeConverter = function (cosmicLink, from, to, ...options) {\n  const getFrom = 'get' + helpers.capitalize(from)\n  const getTo = 'get' + helpers.capitalize(to)\n  const converter = from + 'To' + helpers.capitalize(to)\n\n  const getter = cosmicLink[getFrom]\n  cosmicLink[getTo] = helpers.delay(async () => {\n    const value = await getter()\n    return convert[converter](cosmicLink, value, ...options)\n  })\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = \"/* cosmiclib styling */\\n\\n\\n.CL_assetCode,\\n.CL_address\\n{\\n    display: inline-block;\\n    margin: 0.1em;\\n    border: 1px solid lightgrey;\\n    background-color: #F1F1F1;\\n    border-radius: 0.2em;\\n    padding: 0.1em;\\n    color: #4C4C4C;\\n}\\n\\n.CL_assetCode:hover,\\n.CL_address:hover\\n{\\n    cursor: pointer;\\n    background-color: lightgrey;\\n}\\n\\n.CL_asset\\n{\\n    background-color: ghostwhite;\\n    border-left: 0;\\n    border-right: 0;\\n}\\n\\n.CL_assetIssuer\\n{\\n    display: none;\\n}\\n\\n.CL_hash:hover\\n{\\n    background-color: ghostwhite;\\n    cursor: pointer;\\n}\\n\\n.CL_done,\\n.CL_signed\\n{\\n    border: 0.1em solid mediumseagreen;\\n    border-radius: 0.2em;\\n    background-color: lightgreen;\\n    padding: 0.1em;\\n    color: black;\\n}\\n\\n.CL_error\\n{\\n    border: 0.1em solid tomato;\\n    border-radius: 0.2em;\\n    background-color: salmon;\\n    padding: 0.1em;\\n    color: black;\\n}\\n\\n/*** Transaction node styling ***/\\n\\n.CL_transactionNode\\n{\\n    margin: 0.5em 0;\\n}\\n\\n.CL_transactionNode ul.CL_sideInfo,\\n.CL_source\\n{\\n    border-left: 0.2em solid lightgrey;\\n    padding-left: 0.2em;\\n    margin: 0;\\n    list-style-type: none;\\n    list-style-position: inside;\\n/*\\n    font-size: 0.9em;\\n*/\\n}\\n\\n.CL_operation\\n{\\n    margin: 0.5em 0;\\n}\\n\\n.CL_sourcedOperation\\n{\\n    border-left: 0.2em solid lightgrey;\\n    padding-left: 0.2em;\\n    background-color: ghostwhite;\\n\\n}\\n\\n/*** Status/Signers node styling ***/\\n\\n.CL_statusNode,\\n.CL_signersNode\\n{\\n    margin: 0.5em;\\n    padding: 0;\\n}\\n\\n.CL_status,\\n.CL_threshold\\n{\\n    margin: 0;\\n    font-size: 0.85em;\\n    font-weight: bold;\\n    text-transform: uppercase;\\n    font-stretch: condensed;\\n}\\n\\n.CL_statusNode.CL_error\\n{\\n    background-color: white;\\n    border: none;\\n}\\n\\n.CL_events,\\n.CL_signers\\n{\\n    list-style-type: none;\\n    list-style-position: inside;\\n    font-size: 0.9 em;\\n    padding: 0;\\n    margin: 0;\\n}\\n\\n.CL_events li,\\n.CL_signers li\\n{\\n    margin:0 ;\\n    border-width: 0;\\n    padding-left: 0.2em;\\n    border-radius: 0;\\n}\\n\\n.CL_events li.CL_done,\\n.CL_signers li.CL_signed\\n{\\n    border-left: 0.3em solid mediumseagreen;\\n\\n}\\n\\n.CL_events li.CL_error\\n{\\n    border-left: 0.3em solid tomato;\\n}\\n\\n/* Loading animation */\\n\\n.CL_loadingAnim {\\n    display: inline-block;\\n    width: 0.7em;\\n    height: 0.7em;\\n    margin: 0 0.2em;\\n    border: 0.2em solid rgba(105,105,105,1);\\n    border-top-color: rgba(105,105,105,0.4);\\n    border-bottom-color: rgba(105,105,105,0.4);\\n    border-radius: 50%;\\n    -webkit-animation: CL_spin 1s linear infinite;\\n            animation: CL_spin 1s linear infinite;\\n}\\n\\n@-webkit-keyframes CL_spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n\\n@keyframes CL_spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n\"","\nvar content = require(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","'use_strict'\n/**\n * Aliases handlers & most known Stellar addresses. Aliases are put together as\n * an `Object` in the form:\n * ```\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n *\n * @exports aliases\n */\nconst aliases = exports\n\n/**\n * Append `aliases` to `cosmicLink.aliases`.\n *\n * @param {CL}\n * @param {Object} aliases\n */\naliases.add = function (cosmicLink, aliases) {\n  cosmicLink.aliases = Object.assign(cosmicLink.aliases, aliases)\n}\n\n/**\n * Remove `publicKeys` from `cosmicLink.aliases`.\n *\n * @param {CL}\n * @param {Array} publicKeys An array of public keys\n */\naliases.remove = function (cosmicLink, publicKeys) {\n  publicKeys.forEach(entry => delete cosmicLink.aliases[entry])\n}\n\n/**\n * Aliases for most known anchors.\n */\naliases.anchors = {\n  'GAEDLNMCQZOSLY7Y4NW3DTEWQEVVCXYYMBDNGPPGBMQH4GFYECBI7YVK': 'anclax.com',\n  'GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4': 'apay.io',\n  'GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF': 'apay.io',\n  'GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR': 'apay.io',\n  'GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP': 'apay.io',\n  'GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC': 'astral9.io',\n  'GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP': 'charnatoken.top',\n  'GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP': 'coins.asia',\n  'GDPFSEBZO2W4TLWZO7FIMMG3QONHXYVF6LUULI6HUJS6PJLE4TRZEXLF': 'collective21.org',\n  'GA4BYMUO5D7OLGVJWZ2D5FCWU7SB63FNZ4QUU574SMNA6ELK5TZD3SO3': 'cryptomover.com',\n  'GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7': 'cryptotari.io',\n  'GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN': 'equid.co',\n  'GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW': 'flutterwave.com',\n  'GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M': 'frasindo.com',\n  'GCYK67DDGBOANS6UODJ62QWGLEB2A7JQ3XUV25HCMLT7CI23PMMK3W6R': 'golix.io',\n  'GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL': 'irene.energy',\n  'GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX': 'liquido.i-server.org',\n  'GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH': 'mobius.network',\n  'GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK': 'moni.com',\n  'GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH': 'naobtc.com',\n  'GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS': 'naobtc.com',\n  'GDGKBRCPW4C3ENNC5C64PE6U33MG52GBKFXOK5P3OSWF74DAOXRXV6OJ': 'nezly.com',\n  'GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6': 'old.repocoin.io',\n  'GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY': 'pedity.com',\n  'GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5': 'pr.network',\n  'GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B': 'repocoin.io',\n  'GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX': 'ripplefox.com',\n  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io',\n  'GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M': 'stemchain.io',\n  'GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG': 'stronghold.co',\n  'GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI': 'superlumen.org',\n  'GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN': 'sureremit.co',\n  'GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S': 'tempo.eu.com',\n  'GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3': 'thefutbolcoin.io',\n  'GCLRUZDCWBHS7VIFCT43BARPP63BHR32HMEVKXYQODA5BU6SIGFK4HL2': 'tonaira.com',\n  'GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON': 'tontinetrust.com',\n  'GA7FCCMTTSUIC37PODEL6EOOSPDRILP6OQI5FWCWDDVDBLJV72W6RINZ': 'vcbear.net',\n  'GBVAOIACNSB7OVUXJYC5UE2D4YK2F7A24T7EE5YOMN4CE6GCHUTOUQXM': 'vcbear.net',\n  'GDXTJEK4JZNSTNQAWA53RZNS2GIKTDRPEUWDXELFMKU52XNECNVDVXDI': 'vcbear.net',\n  'GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN': 'winsome.gift',\n  'GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM': 'ximcoin.com',\n  'GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5': 'xirkle.com',\n}\n\n/**\n * Aliases for most known destinations (exchanges/inflation pools/services).\n */\naliases.destinations = {\n  'GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2': 'AEX',\n  'GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A': 'Binance',\n  'GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC': 'Binance',\n  'GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL': 'Bitfinex',\n  'GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3': 'Bittrex',\n  'GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM': 'BTC38',\n  'GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7': 'Changelly',\n  'GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH': 'Exrates',\n  'GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S': 'Gate.io',\n  'GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO': 'GOPAX',\n  'GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S': 'Indodax',\n  'GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP': 'KOINEX',\n  'GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM': 'Kraken',\n  'GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT': 'Lumenaut Inflation',\n  'GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH': 'Mobius Issuer',\n  'GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES': 'NaoBTC',\n  'GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB': 'OKEX',\n  'GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L': 'PapayaBot',\n  'GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW': 'PapayaSwap',\n  'GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY': 'Pedity Issuer',\n  'GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW': 'Piiko',\n  'GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2': 'Poloniex',\n  'GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD': 'Stellar Guard',\n  'GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW': 'StellarTerm Inflation',\n  'GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI': 'Superlumen Issuer',\n  'GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM': 'XIM',\n}\n\n/**\n * Concatenated aliases.\n */\naliases.all = Object.assign({}, aliases.anchors, aliases.destinations)\n","'use strict'\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @exports encode\n */\nconst encode = exports\n\nconst check = require('./check')\nconst specs = require('./specs')\n\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {CL}\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.field = function (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n  if (value === undefined) return ''\n  const encodedValue = encode.type(cosmicLink, type, value)\n  if (encodedValue === '' && field !== 'homeDomain') return ''\n  else return `&${field}=${encodedValue}`\n}\n\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {CL}\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.type = function (cosmicLink, type, value) {\n  check.type(cosmicLink, type)\n  if (value === undefined) return ''\n  const encoder = encode[type]\n  if (typeof value === 'string') value = encodeURIComponent(value)\n  if (encoder) value = encoder (cosmicLink, value)\n  if (value === undefined) return ''\n  else return value\n}\n\n/******************************************************************************/\n\nencode.asset = function (cosmicLink, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + ':' + encodeURIComponent(asset.issuer)\n}\n\nencode.assetsArray = function (cosmicLink, assetsArray) {\n  return assetsArray.map(asset => encode.asset(cosmicLink, asset)).toString()\n}\n\nencode.boolean = function (cosmicLink, boolean) {\n  if (boolean === 'false' || !boolean) return 'false'\n}\n\nencode.date = function (cosmicLink, timestamp) {\n  const date = new Date(timestamp * 1000)\n  const isoString = date.toISOString()\n    .replace(/\\.00.000/, '')\n    .replace(/\\.000/, '')\n    .replace(/T00:00:00Z/, '')\n  return isoString\n}\n\nencode.memo = function (cosmicLink, memo) {\n  if (memo.type === 'text') return encodeURIComponent(memo.value)\n  else return memo.type + ':' + encodeURIComponent(memo.value)\n}\n\nencode.signer = function (cosmicLink, signer) {\n  return signer.weight + ':' + signer.type + ':' + signer.value\n}\n","'use strict'\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @exports prepare\n */\nconst prepare = exports\n\nconst specs = require('./specs')\nconst resolve = require('./resolve')\nconst status = require('./status')\n\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {any} value\n */\nprepare.field = async function (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return await prepare.type(cosmicLink, type, value)\n  else status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n}\n\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {any} value\n */\nprepare.type = async function (cosmicLink, type, value) {\n  const preparer = exports[type]\n  if (preparer) return await preparer(cosmicLink, value)\n  else return value\n}\n\n/******************************************************************************/\n\nprepare.address = async function (cosmicLink, address) {\n  const account = await resolve.address(cosmicLink, address)\n  return account.account_id\n}\n\nprepare.asset = async function (cosmicLink, asset) {\n  if (asset.issuer) {\n    const publicKey = await prepare.address(cosmicLink, asset.issuer)\n    return new StellarSdk.Asset(asset.code, publicKey)\n  } else {\n    return StellarSdk.Asset.native()\n  }\n}\n\nprepare.assetsArray = async function (cosmicLink, assetsArray) {\n  let path = []\n  for (let index in assetsArray) {\n    const string = assetsArray[index]\n    const preparedAsset = await prepare.asset(cosmicLink, string)\n    path.push(preparedAsset)\n  }\n  return path\n}\n\nprepare.memo = function (cosmicLink, memo) {\n  return new StellarSdk.Memo(memo.type, memo.value)\n}\n\nprepare.signer = async function (cosmicLink, signer) {\n  let preparedSigner = { weight: signer.weight }\n  switch (signer.type) {\n    case 'key':\n      const publicKey = await prepare.address(cosmicLink, signer.value)\n      preparedSigner.ed25519PublicKey = publicKey\n      break\n    case 'hash':\n      preparedSigner.sha256Hash = signer.value\n      break\n    case 'tx':\n      preparedSigner.preAuthTx = signer.value\n      break\n  }\n  return preparedSigner\n}\n\nprepare.source = prepare.address\n","'use strict'\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `cosmicLink` object\n * and HTML nodes are updated accordingly.\n *\n * @exports decode\n */\nconst decode = exports\n\nconst helpers = require('./helpers')\nconst status = require('./status')\nconst check = require('./check')\nconst specs = require('./specs')\n\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {string} value\n */\ndecode.field = function (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  value = decodeURIComponent(value)\n  if (type) return decode.type(cosmicLink, type, value)\n  /// This error will be handled latter in convert.queryToTdesc()\n  else throw ''\n}\n\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {string} value\n */\ndecode.type = function (cosmicLink, type, value) {\n  check.type(cosmicLink, type)\n  const decoder = decode[type]\n  if (decoder) value = decoder(cosmicLink, value)\n  check.type(cosmicLink, type, value)\n  return value\n}\n\n/******************************************************************************/\n\ndecode.asset = function (cosmicLink, asset) {\n  const assetLower = asset.toLowerCase()\n  if (assetLower === 'xlm' || assetLower === 'native') {\n    return { code: 'XLM' }\n  } else {\n    const temp = asset.split(':')\n    const object = { code: temp[0], issuer: temp[1] }\n    return object\n  }\n}\n\ndecode.assetsArray = function (cosmicLink, assetsList) {\n  const strArray = assetsList.split(',')\n  return strArray.map(entry => decode.asset(cosmicLink, entry))\n}\n\ndecode.boolean = function (cosmicLink, string) {\n  switch (string) {\n    case 'true': return true\n    case 'false': return false\n  }\n}\n\ndecode.date = function (cosmicLink, string) {\n  const timeStamp = Date.parse(string)\n  if (isNaN(timeStamp)) {\n    status.error(cosmicLink, 'Invalid date (expecting ISO format): ' + string, 'throw')\n  }\n  return timeStamp / 1000\n}\n\ndecode.memo = function (cosmicLink, memo) {\n  const type = memo.replace(/:.*/, '')\n  const value = memo.replace(/^[^:]*:/, '')\n  if (type === value) {\n    return { type: 'text', value: value }\n  } else {\n    return { type: type, value: value }\n  }\n}\n\ndecode.price = function (cosmicLink, price) {\n  const numerator = price.replace(/:.*/, '')\n  const denominator = price.replace(/^[^:]*:/, '')\n  if (numerator === denominator) return price\n  else return { n: +numerator, d: +denominator }\n}\n\ndecode.signer = function (cosmicLink, signer) {\n  const temp = signer.split(':')\n  if (temp.length > 3) {\n    status.error(cosmicLink,\n      'Invalid signer: ' + helpers.shorter(signer),\n      'throw'\n    )\n  }\n  const object = { weight: temp[0], type: temp[1], value: temp[2] }\n  return object\n}\n","'use strict'\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @exports convert\n */\nconst convert = exports\n\nimport * as specs from './specs'\nimport * as status from './status'\nimport * as decode from './decode'\nimport * as resolve from './resolve'\nimport * as prepare from './prepare'\nimport * as encode from './encode'\n\n\n/** ****************************    URI -> XDR    ******************************/\n\n/**\n * Extract the query string from `uri`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} uri\n * @return {string} query\n */\n\nconvert.uriToQuery = function (cosmicLink, uri) {\n  if (!uri.match(/\\?/)) return null\n  const query = uri.replace(/^[^?]*/, '')\n  return query\n}\n\n/**\n * Build a `transaction descriptor` object from a cosmic link `query`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} query\n * @return {Object} tdesc\n */\nconvert.queryToJson = function (cosmicLink, query) {\n  if (query.length < 2) status.fail(cosmicLink, 'Empty query', 'throw')\n\n  const tdesc = {}\n  const odesc = []\n  let isValid = true\n\n  let operation = query.substr(1).replace(/&.*/, '')\n  const queries = query.substr(operation.length + 2).split('&')\n  let mode = operation\n  if (operation === 'transaction') {\n    mode = 'transaction'\n  } else {\n    odesc.unshift({ type: mode })\n    checkOperationType(cosmicLink, operation)\n  }\n\n\n  for (let index in queries) {\n    const argument = queries[index]\n    const field = argument.replace(/=.*/, '')\n    let value = argument.replace(/^[^=]*=/, '')\n\n    try {\n      if (!field) continue\n\n      if (!value && field !== 'homeDomain' && field !== 'value') {\n        value = '(empty)'\n        status.error(cosmicLink, 'No value for: ' + field, 'throw')\n      }\n\n      if (mode === 'transaction' && field === 'operation') {\n        operation = value\n        odesc.unshift({ type: value })\n        checkOperationType(cosmicLink, value)\n        continue\n      }\n\n      if (operation === 'transaction' && !isTransactionField(field)) {\n        status.error(cosmicLink, 'Not a valid transaction field: ' + field, 'throw')\n      } else if (mode === 'operation' && !isOperationField(field)) {\n        status\n      }\n\n      const decodedValue = decode.field(cosmicLink, field, value)\n      if (operation === 'transaction') {\n        tdesc[field] = decodedValue\n      } else if (mode !== 'transaction' && isTransactionField(field)) {\n        tdesc[field] = decodedValue\n      } else {\n        odesc[0][field] = decodedValue\n      }\n    } catch (error) {\n      /// At this point decoding errors should already be handled.\n      /// This line catch program error for debugging purpose.\n      if (!cosmicLink.errors) status.error(cosmicLink, error)\n      const errorObject = { error: error, value: value }\n      isValid = false\n\n      if (operation === 'transaction') {\n        tdesc[field] = errorObject\n      } else if (mode !== 'transaction' && isTransactionField(field)) {\n        tdesc[field] = errorObject\n      } else if (field === 'operation') {\n        odesc[0].error = 'Unknow operation'\n      } else {\n        odesc[0][field] = errorObject\n      }\n    }\n  }\n\n  for (let index in odesc) {\n    const operation = odesc[index]\n\n    switch (operation.type) {\n      case 'allowTrust':\n        if (operation.authorize === undefined) operation.authorize = true\n        break\n      case 'createPassiveOffer':\n      case 'manageOffer': {\n        if (operation.buying && !operation.selling) operation.selling = XLM\n        if (operation.selling && !operation.buying) operation.buying = XLM\n        break\n      }\n      case 'manageData':\n        if (!operation.value) operation.value = null\n        break\n      case 'pathPayment':\n        if (operation.destAsset && !operation.sendAsset) operation.sendAsset = XLM\n        if (operation.sendAsset && !operation.destAsset) operation.destAsset = XLM\n        break\n      case 'payment':\n        if (!operation.asset) operation.asset = XLM\n        break\n    }\n\n    const mandatoryFields = specs.operationMandatoryFields[operation.type]\n    mandatoryFields.forEach(field => {\n      if (operation[field] === undefined) {\n        status.error(cosmicLink, 'Missing mandatory field: ' + field)\n        isValid = false\n      }\n    })\n    for (let field in operation) {\n      if (!isOperationField(operation.type, field)) {\n        status.error(cosmicLink, 'Invalid field: ' + field)\n        isValid = false\n      }\n    }\n  }\n\n  tdesc.operations = odesc.reverse()\n  if (!isValid) status.fail(cosmicLink, 'Invalid query')\n  return convert.tdescToJson(cosmicLink, tdesc)\n}\n\nconst XLM = StellarSdk.Asset.native()\n\n/**\n * Throw an error if `type` is not a valid operation type.\n *\n * @private\n * @param {CL}\n * @param {string} type\n */\nfunction checkOperationType (cosmicLink, type) {\n  if (!isOperationTypeValid(type)) {\n    status.error(cosmicLink, 'Unknow operation: ' + type, 'throw')\n  }\n}\n\n/**\n * Returns `true` if `operation` is a valid operation type, `false` otherwise.\n *\n * @private\n * @param {string} string\n * @return {boolean}\n */\nfunction isOperationTypeValid (string) {\n  if (specs.operationMandatoryFields[string]) return true\n  else return false\n}\n\n/**\n * Returns `true` if `string` is a valid transaction field, `false` otherwise.\n *\n * @private\n * @param {string} string\n * @return {boolean}\n */\nfunction isTransactionField (string) {\n  if (specs.transactionOptionalFields.indexOf(string) !== -1) return true\n  else return false\n}\n\n/**\n * Returns `true` if `string` is a valid field for `operation`, `false`\n * otherwise.\n *\n * @private\n * @param {string} operation\n * @param {string} string\n * @return {boolean}\n */\nfunction isOperationField (operation, string) {\n  if (string === 'type') return true\n  else if (\n    specs.operationMandatoryFields[operation].indexOf(string) === -1 &&\n    specs.operationOptionalFields[operation].indexOf(string) === -1\n  ) return false\n  else return true\n}\n\n/**\n * Returns the JSON of cosmic link `transaction descriptor`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {Object} tdesc transaction descriptor\n * @return {string} transaction descriptor JSON\n */\nconvert.tdescToJson = function (cosmicLink, tdesc) {\n  return JSON.stringify(tdesc, null, 2)\n}\n\n/**\n * Returns the Stellar `transaction` object for `cosmicLink`'s\n * `transaction descriptor`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {Object} tdesc transaction descriptor\n * @return {Transaction}\n */\nconvert.jsonToTransaction = async function (cosmicLink, json) {\n  if (cosmicLink.status) throw new Error(cosmicLink.status)\n  const tdesc = convert.jsonToTdesc(cosmicLink, json)\n\n  try {\n    const builder = await makeTransactionBuilder(cosmicLink, tdesc)\n    for (let index in tdesc.operations) {\n      const odesc = tdesc.operations[index]\n      const operation = await odescToOperation(cosmicLink, odesc)\n      builder.addOperation(operation)\n    }\n    return builder.build()\n  } catch (error) {\n    if (!cosmicLink.errors) status.error(cosmicLink, error)\n    if (!cosmicLink.status) status.fail(cosmicLink, \"Can't build transaction\", 'throw')\n    else throw error\n  }\n}\n\n/**\n * Returns an Operation object equivalent to cosmic link `operation descriptor`.\n *\n * @private\n * @param {CL}\n * @param {Object} odesc Operation descriptor\n * @return {Operation}\n */\nasync function odescToOperation (cosmicLink, odesc) {\n  let operation = odesc.type\n  delete odesc.type\n\n  for (let field in odesc) {\n    const value = await prepare.field(cosmicLink, field, odesc[field])\n    odesc[field] = value\n  }\n\n  return StellarSdk.Operation[operation](odesc)\n}\n\n/**\n * Returns a TransactionBuilder for `transaction descriptor`.\n *\n * @private\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n * @return {TransactionBuilder}\n */\nasync function makeTransactionBuilder (cosmicLink, tdesc) {\n  let opts = {}\n  if (tdesc.fee) opts.fee = tdesc.fee\n  if (tdesc.memo) opts.memo = prepare.memo(cosmicLink, tdesc.memo)\n  if (tdesc.minTime || tdesc.maxTime) {\n    opts.timebounds = { minTime: 0, maxTime: 0 }\n    if (tdesc.minTime) opts.timebounds.minTime = tdesc.minTime\n    if (tdesc.maxTime) opts.timebounds.maxTime = tdesc.maxTime\n  }\n\n  const loadedAccount = await cosmicLink.getSourceAccount()\n  if (tdesc.sequence) {\n    const Constructor = loadedAccount._baseAccount.__proto__.constructor\n    const baseAccount = new Constructor(loadedAccount.id, tdesc.sequence - 1 + '')\n    loadedAccount._baseAccount = baseAccount\n  }\n  const builder = new StellarSdk.TransactionBuilder(loadedAccount, opts)\n\n  /// Check if memo is needed for destination account.\n  const operation = tdesc.operations[0]\n  if (operation.destination) {\n    const account = await resolve.address(cosmicLink, operation.destination)\n    if (account.memo) {\n      const memoType = account.memo_type\n      const memoValue = account.memo\n      if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n        status.error(cosmicLink, 'Memo conflict', 'throw')\n      } else {\n        builder.addMemo(new StellarSdk.Memo(memoType, memoValue))\n      }\n    }\n  }\n\n  return builder\n}\n\n/**\n * Return the XDR of `transaction`.\n *\n * @param {CL}\n * @param {Transaction} transaction\n * @return {XDR}\n */\nconvert.transactionToXdr = function (cosmicLink, transaction) {\n  return transaction.toEnvelope().toXDR('base64')\n}\n\n/** ****************************    XDR -> URI    ******************************/\n\n/**\n * Return the Transaction object equivalent to `xdr`.\n *\n * @param {CL}\n * @param {XDR} xdr\n * @return {Transaction}\n */\nconvert.xdrToTransaction = function (cosmicLink, xdr) {\n  try {\n    return new StellarSdk.Transaction(xdr)\n  } catch (error) {\n    console.log(error)\n    status.fail(cosmicLink, 'Invalid XDR', 'throw')\n  }\n}\n\n/**\n * Return the query equivalent to `xdr`.\n *\n * @param {CL}\n * @param {XDR} xdr Transaction envelope\n * @return {String}\n */\nconvert.xdrToQuery = function (cosmicLink, xdr, options = {}) {\n  let query = '?xdr=' + xdr\n  if (options.network) query += '&network=' + options.network\n  return query\n}\n\n/**\n * Return the `transaction descriptor` JSON equivalent to Stellar `Transaction`\n * object.\n *\n * Set options.stripSource to true for a transaction that is account-agnostic,\n * like an exchange operation for example. Ignore it for a transaction that\n * is required to be performed from the source account defined in 'XDR'\n * (example: subscription monthly fee).\n *\n * You may set options.network to the desired network.\n *\n * @param {CL}\n * @param {Transaction} transaction\n * @param {Object} options\n * @return {JSON} transaction descriptor JSON\n */\nconvert.transactionToJson = function (cosmicLink, transaction, options = {}) {\n  const copy = JSON.parse(JSON.stringify(transaction))\n\n  delete copy.tx\n\n  if (!cosmicLink.user) cosmicLink.user = copy.source\n\n  if (options.stripSource) {\n    delete copy.source\n    delete copy.signatures\n    delete copy.sequence\n  }\n  if (options.stripSequence) {\n    delete copy.sequence\n    delete copy.signatures\n  }\n  if (options.stripSignatures) delete copy.signatures\n\n  if (copy.signatures) {\n    copy.signatures = transaction.signatures.map(entry => {\n      return {\n        hint: entry.hint().toString('base64'),\n        signature: entry.signature().toString('base64')\n      }\n    })\n    if (copy.signatures.length === 0) delete copy.signatures\n  }\n\n  if (copy.fee === 100 * copy.operations.length) delete copy.fee\n  if (copy._memo._switch.name !== 'memoNone') {\n    copy.memo = {}\n    copy.memo.type = copy._memo._arm\n    if (copy.memo.type === 'hash' || copy.memo.type === 'retHash') {\n      copy.memo.value = transaction._memo._value.toString('hex')\n      if (copy.memo.type === 'retHash') copy.memo.type = 'return'\n    } else {\n      copy.memo.value = transaction._memo._value.toString()\n    }\n  }\n  delete copy._memo\n\n  if (copy.timeBounds) {\n    if (copy.timeBounds.minTime && copy.timeBounds.minTime !== '0') {\n      copy.minTime = copy.timeBounds.minTime\n    }\n    if (copy.timeBounds.maxTime && copy.timeBounds.maxTime !== '0') {\n      copy.maxTime = copy.timeBounds.maxTime\n    }\n    delete copy.timeBounds\n  }\n\n  for (let index in copy.operations) {\n    const operation = copy.operations[index]\n    if (operation.limit === '922337203685.4775807') delete operation.limit\n    if (operation.value) {\n      operation.value = transaction.operations[index].value.toString()\n    }\n    if (operation.offerId === '0') delete operation.offerId\n    if (operation.path && operation.path.length === 0) delete operation.path\n    if (operation.line) {\n      operation.asset = operation.line\n      delete operation.line\n    }\n    if (operation.signer) {\n      if (operation.signer.ed25519PublicKey) {\n        operation.signer.type = 'key'\n        operation.signer.value = operation.signer.ed25519PublicKey\n        delete operation.signer.ed25519PublicKey\n      } else if (operation.signer.sha256Hash) {\n        operation.signer.type = 'hash'\n        operation.signer.value = transaction.operations[index].signer.sha256Hash.toString('hex')\n        delete operation.signer.sha256Hash\n      } else if (operation.signer.preAuthTx) {\n        operation.signer.type = 'tx'\n        operation.signer.value = transaction.operations[index].signer.preAuthTx.toString('hex')\n        delete operation.signer.preAuthTx\n      }\n    }\n  }\n\n  if (options.network !== undefined) copy.network = options.network\n\n  return JSON.stringify(copy, null, 2)\n}\n\n/**\n * Parse `transaction descriptor` from `JSON`.\n *\n * @param {CL}\n * @param {JSON} JSON transaction descriptior\n * @return {Object} transaction descriptor\n */\nconvert.jsonToTdesc = function (cosmicLink, json) {\n  return JSON.parse(json)\n}\n\n/**\n * Return the cosmic link query equivalent to `transaction descriptor`.\n *\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n * @return {string} query\n */\nconvert.jsonToQuery = function (cosmicLink, json) {\n  const tdesc = convert.jsonToTdesc(cosmicLink, json)\n\n  let query = '?'\n  if (tdesc.operations.length === 1) query += tdesc.operations[0].type\n  else query += 'transaction'\n\n  specs.transactionOptionalFields.forEach(field => {\n    if (tdesc[field] !== undefined) {\n      query += encode.field(cosmicLink, field, tdesc[field])\n    }\n  })\n\n  for (let index in tdesc.operations) {\n    const operation = tdesc.operations[index]\n    const fields = specs.operationMandatoryFields[operation.type]\n      .concat(specs.operationOptionalFields[operation.type])\n\n    if (tdesc.operations.length > 1) query += '&operation=' + operation.type\n    fields.forEach(field => {\n      query += encode.field(cosmicLink, field, operation[field])\n    })\n  }\n\n  return query\n}\n\n/**\n * Return a complete cosmic link URI made of `query` and `cosmicLink.page`.\n * Use `https://cosmic.link/` if `cosmicLink.page` is undefined\n *\n * @param {CL}\n * @param {string} query\n * @param {string} cosmic link URI\n */\nconvert.queryToUri = function (cosmicLink, query) {\n  return cosmicLink.page + query\n}\n","'use strict'\n/**\n * Contains the action methods for CosmicLink.\n *\n * @exports action\n */\nconst action = exports\n\nconst helpers = require('./helpers')\nconst status = require('./status')\nconst resolve = require('./resolve')\nconst parse = require('./parse')\nconst format = require('./format')\nconst event = require('./event')\n\n/**\n * Sign `cosmicLink` using secret `Keypair`.\n * Return a promise that terminate when signing is over, and that resolve to\n * the signed Transaction object.\n *\n * @param {cosmicLink} cosmicLink\n * @param {seed} seed\n * @promise Signed Transaction object\n */\n\naction.sign = async function (cosmicLink, seed) {\n  let keypair, publicKey\n  try {\n    keypair = StellarSdk.Keypair.fromSecret(seed)\n    publicKey = keypair.publicKey()\n  } catch (error) {\n    console.log(error)\n    throw new Error('Invalid secret seed')\n  }\n\n  if (cosmicLink.status) throw new Error(\"Can't sign invalid transaction\")\n  if (!await cosmicLink.hasSigner(publicKey)) {\n    throw new Error('Not a legit signer: ' + helpers.shorter(publicKey))\n  }\n  if (await cosmicLink.hasSigned(publicKey)) {\n    throw new Error('Transaction already signed with this key')\n  }\n\n  const signingPromise = makeSigningPromise(cosmicLink, keypair, publicKey)\n  parse.typeTowardAllUsingDelayed(cosmicLink, 'transaction', () => signingPromise)\n  parse.makeConverter(cosmicLink, 'xdr', 'query')\n  parse.makeConverter(cosmicLink, 'query', 'uri')\n  event.callFormatHandlers(cosmicLink)\n  await signingPromise\n}\n\nasync function makeSigningPromise (cosmicLink, keypair, publicKey) {\n  const transaction = await cosmicLink.getTransaction()\n\n  try {\n    cosmicLink.selectNetwork()\n    transaction.sign(keypair)\n  } catch (error) {\n    console.log(error)\n    status.error(cosmicLink,\n      'Failed to sign with key: ' + helpers.shorter(publicKey),\n      'throw'\n    )\n  }\n\n  cosmicLink.getSigners = helpers.delay(() => resolve.signers(cosmicLink))\n  format.signatures(cosmicLink)\n\n  return transaction\n}\n\n/**\n * Send `cosmicLink`'s transaction to `server`. It should have been signed\n * beforehand.\n * Return a promise that terminate when submission is over.\n *\n * @param {CL}\n * @param {Server} [server=cosmicLink.server] Stellar SDK Server object\n * @return {Object} The server response\n */\naction.send = async function (cosmicLink, server) {\n  if (!server) server = cosmicLink.server\n  const transaction = await cosmicLink.getTransaction()\n  const response = server.submitTransaction(transaction)\n  response.catch(console.log)\n  return response\n}\n","'use_strict'\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined')\n      }\n\n      var o = Object(this)\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function')\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1]\n\n      // 5. Let k be 0.\n      var k = 0\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k]\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue\n        }\n        // e. Increase k by 1.\n        k++\n      }\n\n      // 7. Return undefined.\n      return undefined\n    },\n    configurable: true,\n    writable: true\n  })\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign (target, varArgs) { // .length of function is 2\n      'use strict'\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n\n      var to = Object(target)\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index]\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    },\n    writable: true,\n    configurable: true\n  })\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict'\n\nimport nothing from './polyfill'\n\nconst helpers = require('./helpers')\nconst action = require('./action')\nconst event = require('./event')\nconst parse = require('./parse')\nconst resolve = require('./resolve')\nconst status = require('./status')\nconst aliases = require('./aliases')\n\nlet node, format\nif (typeof document !== 'undefined') {\n  node = require('./node')\n  format = require('./format')\n  require('./cosmic-lib.css')\n} else if (typeof StellarSdk === 'undefined') {\n  global.StellarSdk = require('stellar-sdk')\n}\n\n/**\n * A `CosmicLink` object represents a Stellar transaction. It can be created\n * from an actual cosmic link or any link build with a cosmic link query, but\n * also from a Stellar Transaction object or its XDR representation.\n *\n * Additionally, it can be parsed from a `transaction descriptor`, which the\n * simplified format `CosmicLink`s are using to represent Stellar transaction.\n * This `transaction descriptor` can be written in its objectified form\n * (referred as `tdesc`) or stringified form (referred as `json`).\n *\n * To make a `CosmicLink` object, you'll need to provide the network on wich\n * it is valid, and may want to provide a default user, which could be your\n * accountID or the accountID of anybody using your service.\n *\n * Cheat sheet:\n *```\n// --- Constructor ---\n// new CosmicLink(uri, \"[userNetwork]\", \"[userAddress]\")\n// new CosmicLink(query, \"[userNetwork]\", \"[userAddress]\")\n// new CosmicLink(transaction, \"[userNetwork]\", \"[userAddress]\", {...options})\n// new CosmicLink(xdr, \"[userNetwork]\", \"[userAddress]\", {...options})\n//\n// --- Options for transaction & xdr ---\n// stripSource = true      < Strip out source account\n// stripSequence = true    < Strip out sequence number\n// stripSignatures = true  < Strip out signatures\n// network = ...           < Specify a network for this transaction (kept in URI after conversion)\n//\n// --- Edit ---\n// CosmicLink.parse(any-format, {...options})\n// *CosmicLink.setField(field, value)\n// *CosmicLink.addOperation({...params})\n// *CosmicLink.changeOperation(index, {...params})\n// *CosmicLink.removeOperation(index)\n//\n// --- Formats (get) ---\n// CosmicLink.getUri()          < Return a promise of the URI string\n// CosmicLink.getQuery()        < Return a promise of the query string\n// CosmicLink.getJson()         < Return stringified JSON of the object\n// CosmicLink.getTdesc()        < Return a promise of the transaction descriptor\n// CosmicLink.getTransaction()  < Return a promise of the transaction\n// CosmicLink.getXdr()          < Return a promise of the transaction's XDR\n//\n// --- Handlers ---\n// CosmicLink.addFormatHandler(format, callback)\n// CosmicLink.removeFormatHandler(format, callback)\n// callback will receive event = { cosmicLink: ..., value: ..., error: ... }\n//\n// --- Datas ---           <<< Update everything on the go >>>\n// CosmicLink.user         < User address\n// CosmicLink.network      < Test/Public network\n// CosmicLink.server       < The horizon server to use\n// CosmicLink.page         < The base URI, without the query\n// CosmicLink.status       < Status of the CosmicLink (valid or specific error)\n// CosmicLink.errors       < An array of errors (or undefined if no error)\n//\n// --- Datas (asynchronous) ---\n// CosmicLink.getSource()         < Transaction source\n// CosmicLink.getSourceAccount()  < Transaction source account object\n// CosmicLink.getSigners()        < Array of legit signers\n//\n// --- Aliases ---\n// CosmicLink.aliases                     < Local aliases for public keys\n// CosmicLink.addAliases({id: name,...})  < Append new aliases\n// CosmicLink.removeAliases([id...])      < Remove aliases\n//\n// --- Tests ---\n// CosmicLink.hasSigner(publicKey)   < Test if `publicKey` is a signer for CosmicLink\n// CosmicLink.hasSigned(publicKey)   < Test if `publicKey` signature is available\n//\n// --- Actions ---\n// CosmicLink.selectNetwork()  < Select CosmicLink network for Stellar SDK\n// CosmicLink.sign(seed)       < Sign the transaction\n// CosmicLink.send([server])   < Send the transaction to the network\n//\n// --- Events ---\n// CosmicLink.onClick.type      < For onClick events on the HTML description\n//\n// --- HTML Nodes ---\n// CosmicLink.htmlNode         < HTML element for CosmicLink\n// CosmicLink.transactionNode  < HTML description of the transaction\n// CosmicLink.signersNode      < HTML element for the signers list\n// CosmicLink.statusNode       < HTML element for the transaction status & errors\n * ```\n *\n * @constructor\n * @param {*} transaction\n * @param {test|public} [userNetwork] The Stellar network to use, will be public\n *     by default.\n * @param {string} [userAddress] This is the fallback source address when none\n *     is specified from the transaction.\n * @param {Object} options Additional options\n */\nexport class CosmicLink {\n  constructor (transaction, network, user, options) {\n    if (user) this.user = user\n    if (network) this.network = network\n\n    this.onClick = event.defaultHandler\n    if (!this._page) this._page = CosmicLink.page\n    this.aliases = CosmicLink.aliases\n\n    this.formatHandlers = {}\n    for (let format in CosmicLink.formatHandlers) {\n      const handlers = CosmicLink.formatHandlers[format]\n      this.formatHandlers[format] = handlers.slice(0)\n    }\n\n    if (typeof document !== 'undefined') {\n      let htmlNode = node.grab('#CL_htmlNode')\n      /// Backward compatibility\n      if (!htmlNode) htmlNode = node.grab('#CL_transactionNode')\n      if (htmlNode) makeHtmlNodes(this, htmlNode)\n    }\n\n    parse.dispatch(this, transaction, options)\n\n    /// Fallback only when network is not set from the URI.\n    if (!this.network) this.network = CosmicLink.network\n\n    this.getSourceAccount = helpers.delay(() => resolve.getSourceAccount(this))\n    this.getSigners = helpers.delay(() => resolve.signers(this))\n  }\n\n  parse (transaction, options) {\n    parse.dispatch(this, transaction, options)\n  }\n\n  async getSource () {\n    const tdesc = await this.getTdesc()\n    if (tdesc.source) return tdesc.source\n    else if (this.user) return this.user\n    else throw new Error('No source defined for this transaction')\n  }\n\n  async hasSigner (value, type = 'key') {\n    const signers = await this.getSigners()\n    return signers.find(entry => entry.value === value && entry.type === type)\n  }\n\n  async hasSigned (value, type = 'key') {\n    return await resolve.hasSigned(this, type, value)\n  }\n\n  /// Actions\n  selectNetwork () { resolve.network(this, this.network) }\n  async sign (seed) { await action.sign(this, seed) }\n  async send (server) { await action.send(this, server) }\n\n  /// Aliases\n  addAliases (aliasesArg) { aliases.add(this, aliasesArg) }\n  removeAliases (array) { aliases.remove(this, aliases) }\n\n  /// Datas\n  get page () { return this._page }\n  set page (uri) { parse.page(this, uri) }\n\n  get network () { return this._network }\n  set network (network) { parse.network(this, network) }\n\n  /// HTML\n  get htmlNode () {\n    if (!this._htmlNode) makeHtmlNodes(this)\n    return this._htmlNode\n  }\n  set htmlNode (value) { this._htmlNode = value }\n\n  get transactionNode () {\n    this.htmlNode\n    return this._transactionNode\n  }\n  set transactionNode (value) { this._transactionNode = value }\n\n  get statusNode () {\n    this.htmlNode\n    return this._statusNode\n  }\n  set statusNode (value) { this._statusNode = value }\n\n  get signersNode () {\n    this.htmlNode\n    return this._signersNode\n  }\n  set signersNode (value) { this._signersNode = value }\n}\n\n/// Class-wide configuration\nCosmicLink.page = 'https://cosmic.link/'\nCosmicLink.network = 'public'\n\nCosmicLink.aliases = aliases.all\nCosmicLink.addAliases = function (aliases) { aliases.add(CosmicLink, aliases) }\nCosmicLink.removeAliases = function (array) { aliases.remove(CosmicLink, array) }\n\nCosmicLink.formatHandlers = {}\nCosmicLink.addFormatHandler = function (format, callback) {\n  event.addFormatHandler(CosmicLink, format, callback)\n}\nCosmicLink.removeFormatHandler = function (format, callback) {\n  event.removeFormatHandler(CosmicLink, format, callback)\n}\n\nfunction makeHtmlNodes (cosmicLink, htmlNode) {\n  if (htmlNode) {\n    node.clear(htmlNode)\n    htmlNode.className = 'CL_htmlNode'\n  } else htmlNode = node.create('div', '.CL_htmlNode')\n  cosmicLink._htmlNode = htmlNode\n\n  const nodes = ['_transactionNode', '_statusNode', '_signersNode']\n  for (let index in nodes) {\n    const name = nodes[index]\n    cosmicLink[name] = node.create('div', '.CL' + name)\n    node.append(htmlNode, cosmicLink[name])\n  }\n\n  node.append(cosmicLink._statusNode,\n    node.create('span', '.CL_status'),\n    node.create('ul', '.CL_events')\n  )\n\n  if (cosmicLink.getTdesc) format.tdesc(cosmicLink)\n  status.populateHtmlNode(cosmicLink)\n}\n"],"sourceRoot":""}
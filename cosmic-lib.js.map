{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./es5/specs.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/es5/misc.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/es5/stellar-sdk.js","webpack://cosmicLib/./es5/resolve.js","webpack://cosmicLib/./node_modules/@babel/runtime/regenerator/index.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://cosmicLib/./es5/status.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/es5/env.js","webpack://cosmicLib/./node_modules/@cosmic-plus/domutils/es5/html.js","webpack://cosmicLib/./es5/decode.js","webpack://cosmicLib/./es5/config.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/typeof.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/node_modules/@cosmic-plus/jsutils/es5/env.js","webpack://cosmicLib/./es5/format.js","webpack://cosmicLib/./es5/signers-utils.js","webpack://cosmicLib/./es5/convert.js","webpack://cosmicLib/./es5/check.js","webpack://cosmicLib/./es5/normalize.js","webpack://cosmicLib/./es5/destruct.js","webpack://cosmicLib/./node_modules/process/browser.js","webpack://cosmicLib/(webpack)/buildin/global.js","webpack://cosmicLib/./es5/event.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/createClass.js","webpack://cosmicLib/./es5/construct.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/es5/buffer.js","webpack://cosmicLib/./es5/encode.js","webpack://cosmicLib/./es5/expand.js","webpack://cosmicLib/./es5/index.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/inherits.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://cosmicLib/./node_modules/@cosmic-plus/domutils/es5/polyfill.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/es5/aliases.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/es5/nice.js","webpack://cosmicLib/./es5/cosmiclink.js","webpack://cosmicLib/./es5/action.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/es5/axios.js","webpack://cosmicLib/./es5/parse.js","webpack://cosmicLib/./es5/load.js","webpack://cosmicLib/./node_modules/@cosmic-plus/domutils/es5/load.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","specs","field","transactionOptionalFields","fieldDesc","network","horizon","callback","memo","source","sequence","minTime","maxTime","fee","isTransactionField","find","operationMandatoryFields","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createPassiveOffer","createPassiveSellOffer","inflation","manageData","manageOffer","manageBuyOffer","manageSellOffer","pathPayment","payment","setOptions","operationOptionalFields","operationFields","concat","isOperationField","operation","fieldType","amount","asset","assetCode","assetIssuer","authorize","bumpTo","buyAmount","buying","clearFlags","destAsset","destAmount","destination","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","medThreshold","memoBinary","memoHash","memoId","memoReturn","memoText","memoType","offerId","price","path","selling","sendAsset","sendMax","setFlags","signer","signerHash","signerKey","signerType","signerTx","signerWeight","startingBalance","trustor","types","_loop","_field","type","entry","push","neutralAccountId","sep7MandatoryFields","tx","pay","sep7OptionalFields","sep7IgnoredFields","misc","delay","thunk","memoized","firstCall","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","setHiddenProperty","configurable","deprecated","date","before","after","console","error","useExtra","obj","extraField","isUtf8","match","isBase64","day","time","Date","toISOString","replace","copy","env","isBrowser","undefined","window","StellarSdk","nodeRequire","_regeneratorRuntime","_asyncToGenerator","status","_addressResolver","mark","_callee5","conf","address","account","accountId","wrap","_context5","prev","next","FederationServer","sent","account_id","Error","memo_type","aliases","alias","abrupt","t0","fail","stop","apply","arguments","accountResolver","_x6","_x7","_x8","_accountResolver","_callee6","quietFlag","server","accountResponse","_context6","loadAccount","response","makeAccountResponse","publicKey","Account","cache","id","signers","public_key","weight","resolveTxSource","_x14","_x15","_resolveTxSource","_callee7","_context7","signersTableToSignersList","signersTable","array","forEach","current","Server","useNetwork","passphrase","networkPassphrase","currentPassphrase","log","Network","use","currentNetwork","networkName","index","values","indexOf","keys","promise","_x","_x2","addressResolver","_ref","_callee","_context","_x3","_x4","_x5","isAccountEmpty","then","txSourceAccount","_ref2","_callee2","baseAccount","_context2","sub","_baseAccount","_x9","_x10","_x11","txSources","transaction","extra","operations","a","txSigners","_ref3","_callee3","_context3","t1","done","filter","_x12","_x13","txSignersList","_ref4","_callee4","_context4","_x16","_x17","_cosmicplus","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","fn","args","err","html","errorContinuation","continuation","init","errors","update","_statusNode","grab","textContent","errorStatus","addClass","errorsNode","lineNode","append","makeHtmlNode","statusNode","statusLine","errorLine","process","global","document","isNode","versions","node","isEmbedded","top","stealth_require","eval","addStyles","styles","styleNode","head","element","_len","childs","Array","_key","child","appendChild","convert","className","split","appendClass","clear","_len2","elements","_key2","innerHTML","Element","HTMLDocument","Text","createTextNode","domNode","copyContent","selectionStart","selectionEnd","select","getSelection","range","createRange","selectNode","removeAllRanges","addRange","execCommand","copyString","textBox","body","destroy","attributes","createElement","assign","_len3","_key3","parentNode","removeChild","pattern","parent","querySelector","hide","_len4","_key4","hidden","element1","element2","replaceChild","rewrite","_len5","_key5","show","_len6","_key6","decode","check","normalize","query","tdesc","command","params","param","odesc","decodeURIComponent","assetLower","toLowerCase","code","temp","issuer","assetsArray","assetsList","map","boolean","buffer","matched","numerator","denominator","config","event","page","setupNetwork","Networks","PUBLIC","TESTNET","all","addAliases","definitions","set","removeAliases","remove","clickHandlers","defaultClickHandlers","setClickHandler","clearClickHandler","instance","Constructor","TypeError","_typeof2","iterator","constructor","_typeof","format","nice","signersUtils","parentProperty","infoNode","trNode","_index","opNode","retNode","sourceNode","addressNode","meaning","msg","operationMeaning","fieldNode","txt","signatures","signersNode","utils","signersList","sources","div","accountSignersNode","title","titleNode","listNode","signerNode","hasSigned","insertBefore","firstChild","makeAccountSignersNode","parentOdesc","parentIndex","parentTdesc","eventObject","cosmicLink","onclick","callClickHandler","_resolveAddressAndUpdate","animation","errDesc","errorNode","message","resolveAddressAndUpdate","significant","max","Number","nicified","String","assetNode","assetsArrayNode","hash","toLocaleString","flags","valueNode","typeNode","value1","value2","value3","StrKey","decodeSha256Hash","toString","weightNode","_classCallCheck","_createClass","_resolve","SignersUtils","_resolve2","extendFlag","txHash","utilities","hasSigner","keypair","Keypair","fromPublicKey","verify","signature","construct","destruct","encode","uriToQuery","uri","queryToTdesc","tdescToJson","JSON","stringify","tdescToTransaction","transactionToXdr","toEnvelope","toXDR","xdrToSep7","xdr","options","sep7","encodeURIComponent","url","xdrToTransaction","Transaction","stripSignatures","xdrToQuery","transactionToTdesc","jsonToTdesc","json","parse","tdescToQuery","queryToUri","isValid","txField","e","operationType","operationField","number","min","num","isNaN","integer","parseInt","utf8","base64","_boolean","threshold","removeEmptyFields","dateFields","shifted","setMinutes","getMinutes","Asset","XLM","stripSource","stripSequence","_memo","_switch","timeBounds","op","line","assetPath","timestamp","sdkMemo","_arm","_value","sdkSequence","sdkSigner","ed25519PublicKey","sha256Hash","preAuthTx","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","Function","handler","alert","classList","contains","preimage","prompt","sign","_defineProperties","target","props","descriptor","writable","protoProps","staticProps","Buffer","makeTransactionBuilder","_makeTransactionBuilder","_callee9","baseFee","txOpts","sourceAccount","builder","memoValue","_short","_context9","fetchBaseFee","timebounds","TransactionBuilder","TimeoutInfinite","addMemo","Memo","txBuilder","addOperation","build","t2","Operation","_ref5","_ref6","_ref7","constructedAsset","_x18","from","_ref8","_callee8","_context8","_x19","_x20","__proto__","encodedValue","expand","isArray","_possibleConstructorReturn","_getPrototypeOf","_inherits","exportModule","layer","_config","exposeModule","withConfig","library","_this$module","_class","CosmicLink","load","assertThisInitialized","ReferenceError","setPrototypeOf","getPrototypeOf","subClass","superClass","_setPrototypeOf","NodeList","predicate","thisArg","k","kValue","varArgs","to","nextSource","nextKey","reduce","isEnumerable","propertyIsEnumerable","getOwnPropertyNames","O","v","entries","publicKeysruntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","awrap","async","iter","reverse","pop","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","precisionAuto","opts","precision","str","firstNonZero","search","pointIndex","Math","round","toFixed","action","initCosmicLink","checkLock","splice","lock","keypairs_or_preimage","send","_query","_tdesc","locker","_json","_transaction","_xdr","_sep7","_htmlDescription","makeHtmlDescription","_htmlLink","makeHtmlLink","htmlDescription","formatsFields","dispatch","_transactionNode","_signersNode","htmlLink","href","axios","applyLock","_applyLock","updateSignersNode","sendToHorizon","_sendToHorizon","submitTransaction","sendToStellarGuard","post","data","_args","allFine","keypairsOrPreimage","_short2","_short3","_args2","signHashX","_args3","STELLARGUARD_PUBKEY","encodeURI","formats","guessType","parseFmt","setTdesc","isIgnoredSep7Field","sep7ToXdr","xdrUri","sep7Request","css","linkNode","rel","onload","onerror","js","scriptNode","src"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory();\n\telse\n\t\troot[\"cosmicLib\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","\"use_strict\";\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\n\nvar specs = exports;\n/**\n * Transaction optional fields.\n */\n\nspecs.transactionOptionalFields = [\"network\", \"horizon\", \"callback\", \"memo\", \"source\", \"sequence\", \"minTime\", \"maxTime\", \"fee\"];\n/**\n * Transaction field meaning.\n */\n\nspecs.fieldDesc = {\n  network: \"Network\",\n  horizon: \"Horizon\",\n  callback: \"Callback\",\n  memo: \"Memo\",\n  source: \"Source\",\n  sequence: \"Sequence\",\n  minTime: \"Valid after\",\n  maxTime: \"Valid until\",\n  fee: \"Fees\"\n  /**\n   * @param {string} field\n   * @return {boolean}\n   */\n\n};\n\nspecs.isTransactionField = function (field) {\n  return specs.transactionOptionalFields.find(function (name) {\n    return name === field;\n  });\n};\n/**\n * Operation mandatory fields.\n */\n\n\nspecs.operationMandatoryFields = {\n  accountMerge: [\"destination\"],\n  allowTrust: [\"authorize\", \"assetCode\", \"trustor\"],\n  bumpSequence: [\"bumpTo\"],\n  changeTrust: [\"asset\"],\n  createAccount: [\"destination\", \"startingBalance\"],\n  createPassiveOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  createPassiveSellOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  inflation: [],\n  manageData: [\"name\", \"value\"],\n  manageOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  manageBuyOffer: [\"selling\", \"buying\", \"buyAmount\", \"price\"],\n  manageSellOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  pathPayment: [\"sendAsset\", \"sendMax\", \"destination\", \"destAsset\", \"destAmount\"],\n  payment: [\"asset\", \"destination\", \"amount\"],\n  setOptions: []\n  /**\n   * Operation optionnal fields.\n   */\n\n};\nspecs.operationOptionalFields = {\n  accountMerge: [\"source\"],\n  allowTrust: [\"source\"],\n  bumpSequence: [\"source\"],\n  changeTrust: [\"limit\", \"source\"],\n  createAccount: [\"source\"],\n  createPassiveOffer: [\"source\"],\n  createPassiveSellOffer: [\"source\"],\n  inflation: [\"source\"],\n  manageData: [\"source\"],\n  manageOffer: [\"offerId\", \"source\"],\n  manageBuyOffer: [\"offerId\", \"source\"],\n  manageSellOffer: [\"offerId\", \"source\"],\n  pathPayment: [\"path\", \"source\"],\n  payment: [\"source\"],\n  setOptions: [\"inflationDest\", \"clearFlags\", \"setFlags\", \"masterWeight\", \"lowThreshold\", \"medThreshold\", \"highThreshold\", \"signer\", \"homeDomain\", \"source\"]\n  /**\n   * Operations fields\n   */\n\n};\nspecs.operationFields = {};\n\nfor (var field in specs.operationMandatoryFields) {\n  specs.operationFields[field] = specs.operationMandatoryFields[field].concat(specs.operationOptionalFields[field]);\n}\n/**\n * @param {string} type Operation type\n * @param {string} field\n * @return {boolean}\n */\n\n\nspecs.isOperationField = function (operation, field) {\n  return specs.operationFields[operation].find(function (name) {\n    return name === field;\n  });\n};\n/**\n * Field types.\n */\n\n\nspecs.fieldType = {\n  amount: \"amount\",\n  asset: \"asset\",\n  assetCode: \"string\",\n  assetIssuer: \"address\",\n  authorize: \"boolean\",\n  bumpTo: \"sequence\",\n  buyAmount: \"amount\",\n  buying: \"asset\",\n  callback: \"url\",\n  clearFlags: \"flags\",\n  destAsset: \"asset\",\n  destAmount: \"amount\",\n  destination: \"address\",\n  fee: \"amount\",\n  highThreshold: \"threshold\",\n  homeDomain: \"string\",\n  horizon: \"url\",\n  inflationDest: \"address\",\n  limit: \"amount\",\n  lowThreshold: \"threshold\",\n  masterWeight: \"weight\",\n  maxTime: \"date\",\n  medThreshold: \"threshold\",\n  memo: \"memo\",\n  memoBinary: \"hash\",\n  memoHash: \"hash\",\n  memoId: \"id\",\n  memoReturn: \"hash\",\n  memoText: \"string\",\n  memoType: \"string\",\n  minTime: \"date\",\n  network: \"network\",\n  offerId: \"string\",\n  price: \"price\",\n  name: \"string\",\n  path: \"assetsArray\",\n  selling: \"asset\",\n  sendAsset: \"asset\",\n  sendMax: \"amount\",\n  sequence: \"sequence\",\n  setFlags: \"flags\",\n  signer: \"signer\",\n  signerHash: \"hash\",\n  signerKey: \"address\",\n  signerType: \"string\",\n  signerTx: \"id\",\n  signerWeight: \"weight\",\n  source: \"address\",\n  startingBalance: \"amount\",\n  trustor: \"address\",\n  value: \"buffer\"\n  /**\n   * An array of each valid type for fields.\n   */\n\n};\nspecs.types = [];\n\nvar _loop = function _loop(_field) {\n  var type = specs.fieldType[_field];\n  specs.types.find(function (entry) {\n    return entry === type;\n  }) || specs.types.push(type);\n};\n\nfor (var _field in specs.fieldType) {\n  _loop(_field);\n}\n/**\n * A neutral account ID meant to be replaced before signing & sending the\n * transaction.\n * @static\n */\n\n\nspecs.neutralAccountId = \"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\";\n/**\n * The mandatory fields for each SEP-0007 operation.\n */\n\nspecs.sep7MandatoryFields = {\n  tx: [\"xdr\"],\n  pay: [\"destination\"]\n  /**\n   * The optional fields for each SEP-0007 operation.\n   */\n\n};\nspecs.sep7OptionalFields = {\n  tx: [\"callback\", \"msg\", \"network_passphrase\", \"origin_domain\", \"pubkey\", \"signature\"],\n  pay: [\"amount\", \"asset_code\", \"asset_issuer\", \"callback\", \"memo\", \"memo_type\", \"msg\", \"network_passphrase\", \"origin_domain\", \"signature\"]\n};\nspecs.sep7IgnoredFields = [\"msg\", \"pubkey\", \"origin_domain\", \"signature\"];","\"use strict\";\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\n\nvar misc = exports;\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\n\nmisc.delay = function (thunk) {\n  var firstCall = true;\n  var memoized;\n  return function () {\n    if (firstCall) {\n      firstCall = false;\n      memoized = new Promise(function (resolve) {\n        return resolve(thunk());\n      });\n    }\n\n    return memoized;\n  };\n};\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\n\n\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, x);\n  });\n};\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\n\n\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1);\n};\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\n\n\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + \"...\" + string.substr(-5);\n  } else {\n    return string;\n  }\n};\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\n\n\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n};\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\n\n\nmisc.deprecated = function (date, before, after) {\n  console.error(\"Warning: \".concat(before, \" is deprecated and will be removed after \").concat(date, \". Please use \").concat(after, \" instead.\"));\n};\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\n\n\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) misc.setHiddenProperty(obj, extraField, {});\n  return obj[extraField];\n};\n\nvar extraField = \"@cosmic-plus\";\n/**\n * Test if **string** is made of printable UTF8 characters. This is a simplified\n * test that is not robust.\n *\n * @param {String}\n * @return {Boolean}\n */\n\nmisc.isUtf8 = function (string) {\n  // eslint-disable-next-line no-control-regex\n  return !string.match(/[\\0-\\x1F\\x7F-\\x9F\\xAD\\uD7FC-\\uF8FF]/);\n};\n/**\n * Test if **string** is a base64 string.\n *\n * @param  {String} string\n * @return {Boolean}\n */\n\n\nmisc.isBase64 = function (string) {\n  return !!string.match(/^[0-9a-zA-Z+/]*=*$/);\n};\n/**\n * Return the YYYY-MM-DD date for **time** or for today.\n *\n * @param {String|Number} [time] A valid date/timestamp value\n * @return {String} YYYY-MM-DD date\n */\n\n\nmisc.day = function (time) {\n  var date = time ? new Date(time) : new Date();\n  return date.toISOString().replace(/T.*/, \"\");\n};\n/**\n * Deprecated functions\n */\n\n\nmisc.copy = function () {\n  return console.error(\"misc.copy() have been moved to html.copyString()\");\n};","\"use_strict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  if (window.StellarSdk === undefined) console.error(\"Missing dependency: StellarSdk\");else module.exports = window.StellarSdk;\n} else {\n  module.exports = env.nodeRequire(\"stellar-sdk\");\n}","\"use strict\";\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar resolve = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Returns the\n * [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * for **horizon**, or for **network**, or for the current network.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @param {string} [horizon] A horizon URL\n * @returns {Server} A StellarSdk Server object\n */\n\n\nresolve.server = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var horizon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : conf.horizon;\n  if (!horizon) horizon = resolve.horizon(conf, network);\n  if (!horizon) throw new Error(\"No horizon node defined for selected network.\");\n\n  if (!conf.current.server[horizon]) {\n    conf.current.server[horizon] = new StellarSdk.Server(horizon);\n  } // [WORKAROUND] https://github.com/stellar/js-stellar-sdk/issues/379\n  // return conf.current.server[horizon]\n\n\n  return new StellarSdk.Server(horizon);\n};\n/**\n * Switch to the current network, or to **network** if provided.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @returns {Server} A StellarSdk Server object\n */\n\n\nresolve.useNetwork = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var passphrase = resolve.networkPassphrase(conf, network);\n  var currentPassphrase = resolve.networkPassphrase();\n\n  if (passphrase !== currentPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network);\n    StellarSdk.Network.use(new StellarSdk.Network(passphrase));\n  }\n};\n/**\n * Returns the curent Horizon node URL, or the Horizon node URL for **network**\n * if provided.\n *\n * @param {string} [network] A network name or passphrase.\n */\n\n\nresolve.horizon = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n\n  if (conf.horizon) {\n    return conf.horizon;\n  } else {\n    var passphrase = resolve.networkPassphrase(conf, network);\n\n    if (conf.current && conf.current.horizon[passphrase]) {\n      return conf.current.horizon[passphrase];\n    }\n  }\n};\n/**\n * Returns the current network passphrase, or the passphrase for **network** is\n * provided.\n */\n\n\nresolve.networkPassphrase = function () {\n  var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n\n  if (network === undefined) {\n    var currentNetwork = StellarSdk.Network.current();\n    if (currentNetwork) return currentNetwork.networkPassphrase();\n  } else {\n    return conf.current.passphrase[network] || network;\n  }\n};\n/**\n * Returns the network name for **network passphrase**, or `undefined`.\n *\n * @param {string} networkPassphrase\n * @return {string}\n */\n\n\nresolve.networkName = function () {\n  var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var networkPassphrase = arguments.length > 1 ? arguments[1] : undefined;\n  var index = Object.values(conf.current.passphrase).indexOf(networkPassphrase);\n  if (index === -1) return networkPassphrase;else return Object.keys(conf.current.passphrase)[index];\n};\n/**\n * Returns the federation server\n * [Account]{@link https://stellar.github.io/js-stellar-sdk/Account.html}\n * for **address**.\n *\n * @async\n * @param {string} address A Stellar public key or a federated address\n * @return {} Resolve to federation server response\n */\n\n\nresolve.address = function (conf, address) {\n  var cache = conf.cache;\n  if (cache && cache.destination[address]) return cache.destination[address];\n  var promise = addressResolver(conf, address);\n  if (cache) cache.destination[address] = promise;\n  return promise;\n};\n\nfunction addressResolver(_x, _x2) {\n  return _addressResolver.apply(this, arguments);\n}\n/**\n * Returns the\n * [AccountResponse]{@link https://stellar.github.io/js-stellar-sdk/AccountResponse.html}\n * object for **address**.\n *\n * @param {string} address A public key or a federated address\n * @return {Object} The AccountResponse\n */\n\n\nfunction _addressResolver() {\n  _addressResolver = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf, address) {\n    var account, accountId;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return StellarSdk.FederationServer.resolve(address);\n\n          case 3:\n            account = _context5.sent;\n            accountId = account.account_id;\n\n            if (accountId) {\n              _context5.next = 7;\n              break;\n            }\n\n            throw new Error(\"Unknow address\");\n\n          case 7:\n            if (!account.memo_type) delete account.memo;\n            if (address !== accountId) account.address = address;\n\n            if (conf.aliases && conf.aliases[accountId]) {\n              account.alias = conf.aliases[accountId];\n            }\n\n            return _context5.abrupt(\"return\", account);\n\n          case 13:\n            _context5.prev = 13;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error(_context5.t0);\n            status.error(conf, \"Can't resolve: \" + misc.shorter(address));\n            status.fail(conf, \"Unresolved address\", \"throw\");\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 13]]);\n  }));\n  return _addressResolver.apply(this, arguments);\n}\n\nresolve.account =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, address, quietFlag) {\n    var account, accountId, cache, promise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return resolve.address(conf, address);\n\n          case 2:\n            account = _context.sent;\n            accountId = account.account_id;\n            cache = conf.cache;\n\n            if (!(cache && cache.account[accountId])) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", cache.account[accountId]);\n\n          case 7:\n            promise = accountResolver(conf, accountId, quietFlag);\n            if (cache) cache.account[accountId] = promise;\n            return _context.abrupt(\"return\", promise);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction accountResolver(_x6, _x7, _x8) {\n  return _accountResolver.apply(this, arguments);\n}\n/**\n * Returns `true` if **address** account is empty, `false` otherwise.\n *\n * @async\n * @param {string} address Public key or federated address\n * @return {boolean}\n */\n\n\nfunction _accountResolver() {\n  _accountResolver = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf, accountId, quietFlag) {\n    var server, accountResponse;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            server = resolve.server(conf);\n            _context6.prev = 1;\n            _context6.next = 4;\n            return server.loadAccount(accountId);\n\n          case 4:\n            accountResponse = _context6.sent;\n            return _context6.abrupt(\"return\", accountResponse);\n\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](1);\n\n            if (!quietFlag) {\n              _context6.next = 14;\n              break;\n            }\n\n            throw _context6.t0;\n\n          case 14:\n            if (_context6.t0.response) {\n              status.error(conf, \"Empty account: \" + misc.shorter(accountId), \"throw\");\n            } else {\n              status.error(conf, \"Invalid horizon node: \" + resolve.horizon(conf), \"throw\");\n            }\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 8]]);\n  }));\n  return _accountResolver.apply(this, arguments);\n}\n\nresolve.isAccountEmpty = function (conf, address) {\n  return resolve.account(conf, address, true).then(function () {\n    return false;\n  })[\"catch\"](function () {\n    return true;\n  });\n};\n/**\n * Returns the account object for transaction source **address`** with sequence\n * set at **sequence** if provided. If **address** is not provided, returns the\n * neutral account object instead (as in SEP-0007 specifications).\n *\n * @param {string} [address]\n * @param {string|numbre} [sequence]\n * @return {AccountResponse}\n */\n\n\nresolve.txSourceAccount =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, address, sequence) {\n    var destination, account, baseAccount;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (address) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", makeAccountResponse(conf, specs.neutralAccountId, \"-1\"));\n\n          case 4:\n            _context2.next = 6;\n            return resolve.address(conf, address);\n\n          case 6:\n            destination = _context2.sent;\n            if (destination.memo) status.error(conf, \"Invalid transaction source address (requires a memo)\", \"throw\");\n            _context2.next = 10;\n            return resolve.account(conf, destination.account_id);\n\n          case 10:\n            account = _context2.sent;\n\n            if (sequence) {\n              baseAccount = new StellarSdk.Account(account.id, sequence);\n              baseAccount.sequence = baseAccount.sequence.sub(1);\n              account._baseAccount = baseAccount;\n            }\n\n            return _context2.abrupt(\"return\", account);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x9, _x10, _x11) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Creates an AccountResponse object with signers set for an empty account.\n *\n * @param  {string} publicKey\n * @param  {string} sequence [description]\n * @return {AccountResponse}\n */\n\n\nfunction makeAccountResponse(conf, publicKey, sequence) {\n  var account = new StellarSdk.Account(publicKey, sequence);\n  if (conf.cache) conf.cache.account[publicKey] = account;\n  account.id = publicKey;\n  account.signers = [{\n    public_key: publicKey,\n    weight: 1,\n    key: publicKey,\n    type: \"ed25519_public_key\"\n  }];\n  return account;\n}\n/**\n * Returns the array of all source accounts ID involved in **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\n\n\nresolve.txSources = function (conf, transaction) {\n  if (!transaction.source) throw new Error(\"No source for transaction\");\n  var extra = resolve.extra(conf, transaction);\n  if (extra.cache.txSources) return extra.cache.txSources;\n  var array = extra.cache.txSources = [transaction.source];\n\n  var _loop = function _loop(index) {\n    var source = transaction.operations[index].source;\n    if (source && !array.find(function (a) {\n      return a === source;\n    })) array.push(source);\n  };\n\n  for (var index in transaction.operations) {\n    _loop(index);\n  }\n\n  return array;\n};\n/**\n * Returns an object such as:\n *\n * ```js\n * {\n *    $accountId: $accountSigners\n *    ...\n * }\n * ```\n *\n * @param {Transaction} transaction\n * @return {Object}\n */\n\n\nresolve.txSigners =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, transaction) {\n    var extra, txSources, signers, index, source, account;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            extra = resolve.extra(conf, transaction);\n\n            if (!extra.cache.txSigners) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", extra.cache.txSigners);\n\n          case 3:\n            txSources = resolve.txSources(extra, transaction);\n            signers = extra.cache.txSigners = {};\n            _context3.t0 = _regeneratorRuntime.keys(txSources);\n\n          case 6:\n            if ((_context3.t1 = _context3.t0()).done) {\n              _context3.next = 15;\n              break;\n            }\n\n            index = _context3.t1.value;\n            source = txSources[index];\n            _context3.next = 11;\n            return resolveTxSource(extra, source);\n\n          case 11:\n            account = _context3.sent;\n\n            if (!signers[account.id]) {\n              signers[account.id] = account.signers.filter(function (signer) {\n                return signer.type !== \"preauthTx\";\n              });\n            }\n\n            _context3.next = 6;\n            break;\n\n          case 15:\n            return _context3.abrupt(\"return\", signers);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction resolveTxSource(_x14, _x15) {\n  return _resolveTxSource.apply(this, arguments);\n}\n/**\n * Returns an Array containing the keys for all legit signers of **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\n\n\nfunction _resolveTxSource() {\n  _resolveTxSource = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, address) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return resolve.account(conf, address, \"quiet\");\n\n          case 3:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](0);\n            return _context7.abrupt(\"return\", makeAccountResponse(conf, address, \"0\"));\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 6]]);\n  }));\n  return _resolveTxSource.apply(this, arguments);\n}\n\nresolve.txSignersList =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(conf, transaction) {\n    var extra, txSigners;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            extra = resolve.extra(conf, transaction);\n\n            if (extra.cache.txSignersList) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.next = 4;\n            return resolve.txSigners(extra, transaction);\n\n          case 4:\n            txSigners = _context4.sent;\n            extra.cache.txSignersList = signersTableToSignersList(txSigners);\n\n          case 6:\n            return _context4.abrupt(\"return\", extra.cache.txSignersList);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nfunction signersTableToSignersList(signersTable) {\n  var array = [];\n\n  for (var accountId in signersTable) {\n    signersTable[accountId].forEach(function (signer) {\n      if (!array.find(function (key) {\n        return key === signer.key;\n      })) array.push(signer.key);\n    });\n  }\n\n  return array;\n}\n/**\n * Add an extra field to **object** that embed cache and local configuration.\n *\n * @private\n */\n\n\nresolve.extra = function (conf, object) {\n  if (!object._cosmicplus) {\n    misc.setHiddenProperty(object, \"_cosmicplus\", {});\n    if (conf.cache) object._cosmicplus.cache = conf.cache;else object._cosmicplus.cache = {\n      destination: {},\n      account: {}\n    };\n    object._cosmicplus.network = conf.network;\n    object._cosmicplus.current = conf.current;\n  }\n\n  return object._cosmicplus;\n};","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","\"use strict\";\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * Thoses methods won't have effect unless status reporting is enabled on `conf`\n * object by using `status.init` (wich is done automatically on CosmicLink\n * objects).\n *\n * @private\n * @exports status\n */\n\nvar status = exports;\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar html = env.isBrowser && require(\"@cosmic-plus/domutils/es5/html\");\n/**\n * Initialize `conf.status` & `conf.errors`.\n */\n\n\nstatus.init = function (conf) {\n  conf.status = null;\n  conf.errors = false;\n};\n/**\n * Set `conf` status as `status` and update statusNode. Error status should be\n * recorded using the `status.fail` function bellow. Once a status is set it\n * won't be mutated.\n *\n * @param {string} status\n */\n\n\nstatus.update = function (conf, status) {\n  if (conf.status || conf.status === undefined) return; // eslint-disable-next-line no-console\n\n  console.log(\"Set status: \" + status);\n  conf.status = status;\n\n  if (conf._statusNode) {\n    var title = html.grab(\".cosmiclib_status\", conf._statusNode);\n    title.textContent = status;\n  }\n};\n/**\n * Set `conf` status as error status `status` and update statusNode. This\n * implies that the cosmic link or the underlying transaction is invalid. Then,\n * call `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\n\n\nstatus.fail = function (conf, errorStatus, continuation) {\n  status.update(conf, errorStatus);\n  if (conf._statusNode) html.addClass(conf._statusNode, \"cosmiclib_error\");\n  errorContinuation(errorStatus, continuation);\n};\n/**\n * Append `error` to `conf.errors` and to the HTML display. Then, call\n * `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\n\n\nstatus.error = function (conf, error, continuation) {\n  // eslint-disable-next-line no-console\n  console.log(error);\n\n  if (conf.errors !== undefined) {\n    if (!conf.errors) conf.errors = [];\n    conf.errors.push(error);\n\n    if (conf._statusNode) {\n      var errorsNode = html.grab(\".cosmiclib_errors\", conf._statusNode);\n      var lineNode = html.create(\"li\", null, error);\n      html.append(errorsNode, lineNode);\n    }\n  }\n\n  errorContinuation(error, continuation);\n};\n/**\n * Create & return an HTML element that displays `conf` status and eventual\n * errors.\n *\n * @return {htmlElement}\n */\n\n\nstatus.makeHtmlNode = function (conf) {\n  var statusNode = html.create(\"div\", \".cosmiclib_statusNode\");\n  var statusLine = html.create(\"span\", \".cosmiclib_status\");\n  html.append(statusNode, statusLine);\n  if (conf.status) statusLine.textContent = conf.status;\n  var errorsNode = html.create(\"ul\", \".cosmiclib_errors\");\n  html.append(statusNode, errorsNode);\n\n  if (conf.errors) {\n    conf.errors.forEach(function (error) {\n      var errorLine = html.create(\"li\", null, error);\n      html.append(errorsNode, errorLine);\n    });\n  }\n\n  return statusNode;\n};\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with `error` as message.\n * If `continuation` is undefined, do nothing.\n */\n\n\nfunction errorContinuation(error, continuation) {\n  if (continuation) {\n    if (continuation === \"throw\") throw new Error(error);else continuation(error);\n  }\n}","\"use_strict\";\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\n\nvar env = exports;\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\n\nenv.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\n\nenv.isNode = typeof process !== \"undefined\" && process.versions && process.versions.node;\n/**\n * `true` if current page is embedded.\n */\n\nenv.isEmbedded = env.isBrowser && window.self !== window.top;\n/**\n * The window object, or `undefined`.\n */\n\nenv.window = env.isBrowser && window;\n/**\n * The global objet, or `undefined`.\n */\n\nenv.global = env.isNode && global;\n/**\n * A require that only have effect in Node.js and that is invisible for package\n * bundlers.\n */\n\nenv.nodeRequire = function () {};\n\nif (env.isNode) {\n  var stealth_require = eval(\"require\");\n\n  env.nodeRequire = function (module) {\n    return stealth_require(module);\n  };\n}","\"use_strict\";\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\n\nvar html = exports;\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\"); /// Prevent node failure when accidentaly loading this file.\n\n\nvar document = env.window ? env.window.document : undefined;\n\nif (env.isNode) {\n  console.error(\"@cosmic-plus/domutils is a browser-only module\");\n}\n/**\n * Add `string` as additional CSS definitions for the current document.\n *\n * @param {string} styles CSS definitions\n */\n\n\nhtml.addStyles = function (styles) {\n  var styleNode = html.create(\"style\", {\n    type: \"text/css\"\n  }, styles);\n  html.append(document.head, styleNode);\n};\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\n\n\nhtml.append = function (element) {\n  for (var _len = arguments.length, childs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    childs[_key - 1] = arguments[_key];\n  }\n\n  childs.forEach(function (child) {\n    return element.appendChild(html.convert(child));\n  });\n};\n/**\n * Add `className` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} className\n * */\n\n\nhtml.addClass = function (element, className) {\n  var classes = element.className.split(\" \");\n  if (classes.indexOf(className) === -1) element.className += \" \".concat(className);\n}; // Deprecated since 2019-01-16\n\n\nhtml.appendClass = function (element, className) {\n  misc.deprecated(\"2019-07-16\", \"html.appendClass()\", \"html.addClass()\");\n  return html.addClass(element, className);\n};\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} elements\n * */\n\n\nhtml.clear = function () {\n  for (var _len2 = arguments.length, elements = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    elements[_key2] = arguments[_key2];\n  }\n\n  elements.forEach(function (element) {\n    return element.innerHTML = \"\";\n  });\n};\n/**\n * If **object** is not an *HTMLElement*, convert it to a text DOM node; else\n * return **object**.\n *\n * @param  {Object} object\n * @return {HTMLELement}\n */\n\n\nhtml.convert = function (object) {\n  // https://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object/36894871#36894871\n  if (object instanceof Element || object instanceof HTMLDocument || object instanceof Text) return object;else if (object == null) return document.createTextNode(\"\");else return object.domNode || document.createTextNode(object);\n};\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\n\n\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return;\n\n  if (element.select) {\n    element.select();\n  } else if (window.getSelection) {\n    var range = document.createRange();\n    range.selectNode(element);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(range);\n  } else {\n    return;\n  }\n\n  return document.execCommand(\"copy\");\n};\n/**\n * Copy `string` into user clipboard.\n *\n * @param {string} string\n */\n\n\nhtml.copyString = function (string) {\n  var textBox = html.create(\"textarea\", {}, string);\n  html.append(document.body, textBox);\n  html.copyContent(textBox);\n  html.destroy(textBox);\n};\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\n\n\nhtml.create = function (name, attributes) {\n  var element = document.createElement(name);\n\n  if (typeof attributes === \"string\") {\n    switch (attributes.substr(0, 1)) {\n      case \"#\":\n        element.id = attributes.substr(1);\n        break;\n\n      case \".\":\n        element.className = attributes.substr(1);\n        break;\n\n      default:\n        throw new Error(\"Unhandled attribute\");\n    }\n  } else {\n    Object.assign(element, attributes);\n  }\n\n  for (var _len3 = arguments.length, childs = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    childs[_key3 - 2] = arguments[_key3];\n  }\n\n  if (childs.length > 0) html.append.apply(html, [element].concat(childs));\n  return element;\n};\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\n\n\nhtml.destroy = function (element) {\n  try {\n    if (element.parentNode) element.parentNode.removeChild(element);\n    element.innerHTML = \"\";\n  } catch (error) {\n    console.error(error);\n  }\n};\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\n\n\nhtml.grab = function (pattern) {\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  return parent.querySelector(pattern);\n};\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\n\n\nhtml.hide = function () {\n  for (var _len4 = arguments.length, elements = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    elements[_key4] = arguments[_key4];\n  }\n\n  elements.forEach(function (element) {\n    return element.hidden = true;\n  });\n};\n/**\n * Replace `element1` by `element2`.\n *\n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\n\n\nhtml.replace = function (element1, element2) {\n  var node = html.convert(element2);\n  element1.parentNode.replaceChild(node, element1);\n  return node;\n};\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\n\n\nhtml.rewrite = function (element) {\n  html.clear(element);\n\n  for (var _len5 = arguments.length, childs = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    childs[_key5 - 1] = arguments[_key5];\n  }\n\n  html.append.apply(html, [element].concat(childs));\n};\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\n\n\nhtml.show = function () {\n  for (var _len6 = arguments.length, elements = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    elements[_key6] = arguments[_key6];\n  }\n\n  elements.forEach(function (element) {\n    return element.hidden = false;\n  });\n};","\"use strict\";\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `conf` object\n * and HTML nodes are updated accordingly.\n *\n * @private\n * @exports decode\n */\n\nvar decode = exports;\n\nvar check = require(\"./check\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n\ndecode.query = function (conf) {\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"?\";\n  if (query.substr(0, 1) !== \"?\") status.fail(conf, \"Invalid query\", \"throw\");\n  var operations = [];\n  var tdesc = {};\n  var command = query.substr(1).replace(/&.*/, \"\");\n  var params = query.substr(command.length + 2).split(\"&\");\n  if (command && command !== \"transaction\") operations.push({\n    type: command\n  });\n\n  for (var index in params) {\n    var param = params[index].split(\"=\", 2);\n    var field = param[0];\n    if (!field) continue;\n\n    if (field === \"operation\") {\n      operations.push({\n        type: param[1]\n      });\n      command = \"operation\";\n      continue;\n    }\n\n    var value = decode.field(conf, field, param[1]); /// Multi-operation link.\n\n    if (command === \"transaction\") {\n      tdesc[field] = value;\n    } else if (command === \"operation\") {\n      operations[operations.length - 1][field] = value; /// One-operation link.\n    } else {\n      if (specs.isTransactionField(field)) {\n        tdesc[field] = value;\n      } else {\n        operations[0][field] = value;\n      }\n    }\n  }\n\n  tdesc.operations = operations;\n  normalize.tdesc(conf, tdesc);\n  tdesc.operations.forEach(function (odesc) {\n    return normalize.odesc(conf, odesc);\n  });\n  check.tdesc(conf, tdesc);\n  return tdesc;\n};\n/******************************************************************************/\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\n\n\ndecode.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  return type ? decode.type(conf, type, value) : value;\n};\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {string} type\n * @param {string} value\n */\n\n\ndecode.type = function (conf, type, value) {\n  if (value) {\n    value = decodeURIComponent(value);\n    return process[type] ? process[type](conf, value) : value;\n  } else {\n    return \"\";\n  }\n};\n/******************************************************************************/\n\n\nvar process = {};\n\nprocess.asset = function (conf, asset) {\n  var assetLower = asset.toLowerCase();\n\n  if (assetLower === \"xlm\" || assetLower === \"native\") {\n    return {\n      code: \"XLM\"\n    };\n  } else {\n    var temp = asset.split(\":\");\n    var object = {\n      code: temp[0],\n      issuer: temp[1]\n    };\n    return object;\n  }\n};\n\nprocess.assetsArray = function (conf, assetsList) {\n  var strArray = assetsList.split(\",\");\n  return strArray.map(function (entry) {\n    return decode.asset(conf, entry);\n  });\n};\n\nprocess[\"boolean\"] = function (conf, string) {\n  switch (string) {\n    case \"true\":\n      return true;\n\n    case \"false\":\n      return false;\n  }\n};\n\nprocess.buffer = function (conf, string) {\n  var matched = string.match(/(^[^:]*):/);\n  var type = matched && matched[1];\n\n  switch (type) {\n    case \"base64\":\n      return {\n        type: type,\n        value: string.substr(type.length + 1)\n      };\n\n    case \"text\":\n      string = string.substr(type.length + 1);\n    // Fallthrough\n\n    default:\n      return {\n        type: \"text\",\n        value: process.string(conf, string)\n      };\n  }\n};\n\nprocess.date = function (conf, string) {\n  /// now + {minutes} syntactic sugar\n  if (string.match(/^\\+[0-9]+$/)) return string; /// Use UTC timezone by default.\n\n  if (string.match(/T[^+]*[0-9]$/)) string += \"Z\";\n  return new Date(string).toISOString();\n};\n\nprocess.memo = function (conf, string) {\n  var matched = string.match(/(^[^:]*):/);\n  var type = matched && matched[1];\n\n  switch (type) {\n    case \"base64\":\n    case \"id\":\n    case \"hash\":\n    case \"return\":\n      return {\n        type: type,\n        value: string.substr(type.length + 1)\n      };\n\n    case \"text\":\n      string = string.substr(type.length + 1);\n    // Fallthrough\n\n    default:\n      return {\n        type: \"text\",\n        value: process.string(conf, string)\n      };\n  }\n};\n\nprocess.price = function (conf, price) {\n  var numerator = price.replace(/:.*/, \"\");\n  var denominator = price.replace(/^[^:]*:/, \"\");\n  if (numerator === denominator) return price;else return {\n    n: +numerator,\n    d: +denominator\n  };\n};\n\nprocess.signer = function (conf, signer) {\n  var temp = signer.split(\":\");\n  var object = {\n    weight: temp[0],\n    type: temp[1],\n    value: temp[2]\n  };\n  return object;\n};\n\nprocess.string = function (conf, string) {\n  return string.replace(/\\+/g, \" \");\n};\n\nprocess.network = process.string;\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\nspecs.types.forEach(function (type) {\n  exports[type] = function (conf, value) {\n    return decode.type(conf, type, value);\n  };\n});","\"use_strict\";\n/**\n * Library-wide configuration.\n *\n * @borrows module:aliases.all as aliases\n * @borrows module:aliases.set as addAliases\n * @borrows module:aliases.remove as removeAliases\n *\n * @borrows module:event.defaultClickHandlers as clickHandlers\n * @borrows module:event.setClickHandler as setClickHandler\n * @borrows module:event.clearClickHandler as clearClickHandler\n *\n * @exports config\n */\n\nvar config = exports;\n\nvar aliases = require(\"@cosmic-plus/base/es5/aliases\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar event = env.isBrowser && require(\"./event\");\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\n\n\nconfig.page = \"https://cosmic.link/\";\n/**\n * The default fallback network.\n * @default 'public'\n */\n\nconfig.network = \"public\";\n/**\n * The default fallback source address.\n * @default undefined\n */\n\nconfig.source = undefined;\n/**\n * Networks setup.\n *\n * @private\n */\n\nconfig.current = {\n  passphrase: {},\n  horizon: {},\n  server: {}\n  /**\n   * Set default **passphrase** and **horizon** URL for network **name**.\n   *\n   * Adding custom network this way will enable the use of their name in cosmic\n   * queries (as in `&network=name`). However, please remind that this feature\n   * will works only on your side and could break compatibility with other\n   * services.\n   *\n   * @example\n   * cosmicLib.config.setupNetwork('public', 'https://my-own-horizon-instance.example.org')\n   * cosmicLib.config.setupNetwork('custom', 'https://custom-horizon.example.org', 'My Custom Passphrase')\n   *\n   * @param {string} name Network name (like 'public', 'test')\n   * @param {string} horizon Horizon URL\n   * @param {string} [passphrase] Network passphrase\n   */\n\n};\n\nconfig.setupNetwork = function (name, horizon, passphrase) {\n  if (passphrase) config.current.passphrase[name] = passphrase;else passphrase = config.current.passphrase[name];\n  config.current.horizon[passphrase] = horizon;\n};\n\nconfig.setupNetwork(\"public\", \"https://horizon.stellar.org\", StellarSdk.Networks.PUBLIC);\nconfig.setupNetwork(\"test\", \"https://horizon-testnet.stellar.org\", StellarSdk.Networks.TESTNET);\nconfig.aliases = aliases.all;\n\nconfig.addAliases = function (definitions) {\n  return aliases.set(config, definitions);\n};\n\nconfig.removeAliases = function (array) {\n  return aliases.remove(config, array);\n};\n\nconfig.clickHandlers = event.defaultClickHandlers;\n\nconfig.setClickHandler = function (fieldType, callback) {\n  return event.setClickHandler(config, fieldType, callback);\n};\n\nconfig.clearClickHandler = function (fieldType) {\n  return event.clearClickHandler(config, fieldType);\n};","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","\"use_strict\";\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\n\nvar env = exports;\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\n\nenv.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\n\nenv.isNode = typeof process !== \"undefined\" && process.versions && process.versions.node;\n/**\n * `true` if current page is embedded.\n */\n\nenv.isEmbedded = env.isBrowser && window.self !== window.top;\n/**\n * The window object, or `undefined`.\n */\n\nenv.window = env.isBrowser && window;\n/**\n * The global objet, or `undefined`.\n */\n\nenv.global = env.isNode && global;\n/**\n * A require that only have effect in Node.js and that is invisible for package\n * bundlers.\n */\n\nenv.nodeRequire = function () {};\n\nif (env.isNode) {\n  var stealth_require = eval(\"require\");\n\n  env.nodeRequire = function (module) {\n    return stealth_require(module);\n  };\n}","\"use strict\";\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @private\n * @exports format\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar format = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar nice = require(\"@cosmic-plus/jsutils/es5/nice\");\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar config = require(\"./config\");\n\nvar event = require(\"./event\");\n\nvar resolve = require(\"./resolve\");\n\nvar signersUtils = require(\"./signers-utils\");\n\nvar specs = require(\"./specs\");\n/**\n * Returns an HTML div describing `tdesc`.\n *\n * @param {Object} tdesc Transaction descriptor.\n * @return {HTMLElement} Transaction HTML description.\n */\n\n\nformat.tdesc = function (conf, tdesc) {\n  var trNode = html.create(\"div\", \".cosmiclib_transactionNode\");\n  if (!tdesc) return trNode;\n  var infoNode;\n\n  for (var index in specs.transactionOptionalFields) {\n    var entry = specs.transactionOptionalFields[index];\n    if (entry === \"horizon\" && resolve.horizon(config, conf.network)) continue;\n\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = html.create(\"ul\", \".cosmiclib_sideInfo\");\n      var lineNode = html.create(\"li\", {}, specs.fieldDesc[entry] + \": \", format.field(conf, entry, tdesc[entry]));\n      html.append(infoNode, lineNode);\n    }\n  }\n\n  if (infoNode) html.append(trNode, infoNode);\n\n  try {\n    for (var _index in tdesc.operations) {\n      var operation = tdesc.operations[_index];\n      var opNode = format.odesc(conf, operation);\n      opNode.index = _index;\n      html.append(trNode, opNode);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  if (!tdesc.operations.length) {\n    if (Object.keys(tdesc).length === 1) {\n      html.append(trNode, html.create(\"div\", null, \"No transaction\"));\n    } else {\n      html.append(trNode, html.create(\"div\", \".cosmiclib_operation\", \"No operation\"));\n    }\n  }\n\n  trNode.tdesc = tdesc;\n  return trNode;\n};\n/**\n * Returns an HTML div describing `odesc`.\n *\n * @param {Object} odesc Operation in cosmic link JSON format.\n * @return {HTMLElement} Operation HTML description.\n */\n\n\nformat.odesc = function (conf, odesc) {\n  var opNode = html.create(\"div\", \".cosmiclib_operation\");\n  opNode.odesc = odesc;\n  var retNode = opNode;\n\n  if (odesc.source) {\n    retNode = html.create(\"div\", \".cosmiclib_sourcedOperation\");\n    var sourceNode = html.create(\"div\", \".cosmiclib_sideInfo\", \"Source: \");\n    var addressNode = format.address(conf, odesc.source);\n    html.append(sourceNode, addressNode);\n    html.append(retNode, sourceNode, opNode);\n  }\n\n  var meaning = operationMeaning(odesc);\n\n  while (meaning) {\n    if (meaning.substr(0, 1) === \"{\") {\n      var query = meaning.substr(1).replace(/}.*/, \"\");\n      meaning = meaning.replace(/^[^}]*}/, \"\");\n\n      if (query === \"newline\") {\n        if (meaning === \"\") break;\n        html.append(opNode, html.create(\"br\"));\n      } else {\n        var fieldNode = format.field(conf, query, odesc[query]);\n        html.append(opNode, fieldNode);\n      }\n    } else {\n      var txt = meaning.replace(/{.*/, \"\");\n      meaning = meaning.replace(/^[^{]*/, \"\");\n      html.append(opNode, txt);\n    }\n  }\n\n  return retNode;\n};\n/**\n * Returns a string describing `odesc`.\n *\n * @private\n */\n\n\nfunction operationMeaning(odesc) {\n  var msg = \"\";\n\n  switch (odesc.type) {\n    case \"accountMerge\":\n      return \"Merge account inside {destination}\";\n\n    case \"allowTrust\":\n      if (odesc.authorize) {\n        return \"Allow usage of your asset {assetCode} to {trustor}\";\n      } else {\n        return \"Deny usage of your asset {assetCode} to {trustor}\";\n      }\n\n    case \"bumpSequence\":\n      return \"Set account sequence number to {bumpTo}\";\n\n    case \"changeTrust\":\n      if (odesc.limit === \"0\") {\n        return \"Refuse asset {asset}\";\n      } else if (odesc.limit) {\n        return \"Set holding limit as {limit} for asset {asset}\";\n      } else {\n        return \"Accept asset {asset}\";\n      }\n\n    case \"createAccount\":\n      return \"Create account {destination} and send {startingBalance} XLM to it\";\n\n    case \"createPassiveOffer\":\n    case \"createPassiveSellOffer\":\n      return \"Offer to passively sell {amount} {selling} for {price} {buying} / unit\";\n\n    case \"inflation\":\n      return \"Run inflation\";\n\n    case \"manageData\":\n      if (odesc.value) {\n        if (odesc.value.type === \"text\") {\n          return \"Set data entry '{name}' to: '{value}'\";\n        } else {\n          return \"Set data entry '{name}' to base64: '{value}'\";\n        }\n      } else {\n        return \"Delete data entry '{name}'\";\n      }\n\n    case \"manageOffer\":\n    case \"manageBuyOffer\":\n    case \"manageSellOffer\":\n      if (odesc.amount === \"0\" || odesc.buyAmount === \"0\") {\n        return \"Delete offer '{offerId}'\";\n      } else {\n        if (odesc.offerId) {\n          msg += \"Change offer '{offerId}' into:{newline}\";\n        }\n\n        if (odesc.type === \"manageBuyOffer\") {\n          msg += \"Offer to buy {buyAmount} {buying} for {price} {selling} / unit\";\n        } else {\n          msg += \"Offer to sell {amount} {selling} for {price} {buying} / unit\";\n        }\n\n        return msg;\n      }\n\n    case \"pathPayment\":\n      msg = \"Send {destAmount} {destAsset} to {destination} for a maximum \" + \"of {sendMax} {sendAsset}\";\n      if (odesc.path) msg += \" using conversion path: {path}\";\n      return msg;\n\n    case \"payment\":\n      return \"Send {amount} {asset} to {destination}\";\n\n    case \"setOptions\":\n      if (odesc.inflationDest) {\n        msg += \"Set inflation destination to: {inflationDest}{newline}\";\n      }\n\n      if (odesc.clearFlags) msg += \"Clear flag(s): {clearFlags}{newline}\";\n      if (odesc.setFlags) msg += \"Set flag(s): {setFlags}{newline}\";\n\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === \"0\") {\n          msg += \"Delete master key{newline}\";\n        } else {\n          msg += \"Set master key weight at: {masterWeight}{newline}\";\n        }\n      }\n\n      [\"lowThreshold\", \"medThreshold\", \"highThreshold\"].forEach(function (field) {\n        if (odesc[field]) msg += \"Set \" + field + \" at: {\" + field + \"}{newline}\";\n      });\n\n      if (odesc.signer) {\n        if (odesc.signer.type === \"tx\") {\n          if (odesc.signer.weight === \"0\") msg += \"Remove pre-signed {signer}{newline}\";else msg += \"Pre-sign {signer}{newline}\";\n        } else {\n          if (odesc.signer.weight === \"0\") msg += \"Remove signer: {signer}{newline}\";else msg += \"Set signer: {signer}{newline}\";\n        }\n      }\n\n      if (odesc.homeDomain) msg += \"Set home domain: {homeDomain}{newline}\";\n      if (odesc.homeDomain === \"\") msg += \"Unset home domain\";\n      if (!msg) msg = \"Do nothing\";\n      return msg;\n\n    default:\n      throw new Error(\"Unknow operation: \" + odesc.type);\n  }\n}\n/**\n * Returns an HTML div describing `signers`.\n *\n * @param {Object} signers Signers object as returned by @see{resolve.signers}.\n * @return {HTMLElement} Signers HTML description\n */\n\n\nformat.signatures = function (conf, transaction) {\n  var signersNode = html.create(\"div\", \".cosmiclib_signersNode\");\n  signersUtils[\"for\"](conf, transaction).then(function (utils) {\n    if (utils.signersList.length < 2 && !utils.signatures.length) return;\n    utils.sources.forEach(function (accountId) {\n      if (accountId !== specs.neutralAccountId) {\n        var div = makeAccountSignersNode(conf, utils, accountId);\n        html.append(signersNode, div);\n      }\n    });\n  });\n  return signersNode;\n};\n\nfunction makeAccountSignersNode(conf, utils, accountId) {\n  var accountSignersNode = html.create(\"div\");\n  var title = \"Signers for \" + misc.shorter(accountId);\n  var titleNode = html.create(\"span\", \".cosmiclib_threshold\", title);\n  var listNode = html.create(\"ul\", \".cosmiclib_signers\");\n  html.append(accountSignersNode, titleNode, listNode);\n  utils.signers[accountId].forEach(function (signer) {\n    var signerNode = format.signer(conf, signer);\n    var lineNode = html.create(\"li\", null, signerNode);\n\n    if (utils.hasSigned(signer.key)) {\n      html.addClass(lineNode, \"cosmiclib_signed\");\n      listNode.insertBefore(lineNode, listNode.firstChild);\n    } else {\n      html.append(listNode, lineNode);\n    }\n  });\n  return accountSignersNode;\n}\n/**\n * Retrieves the parent odesc (*Operation Descriptor*) of an HTML element, or\n * returns `undefined` if **element** is not the child of an HTML formatted\n * operation.\n *\n * @param {HTMLElement} element\n * @return {Object} odesc\n */\n\n\nformat.parentOdesc = function (conf, element) {\n  return parentProperty(element, \"odesc\");\n};\n/**\n * Retrieves the parent operation index of an HTML element, or returns\n * `undefined` if **element** is not the child of an HTML formatted operation.\n *\n * @param {HTMLElement} element\n * @return {Number} operation index\n */\n\n\nformat.parentIndex = function (conf, element) {\n  return parentProperty(element, \"index\");\n};\n/**\n * Retrieves the parent tdesc of an HTML element, or returns `undefined`\n * if **element** is not the child of an HTML formatted transaction.\n *\n * @param {HTMLElement} element\n * @return {Object} tdesc\n */\n\n\nformat.parentTdesc = function (conf, element) {\n  return parentProperty(element, \"tdesc\");\n};\n\nfunction parentProperty(element, property) {\n  while (element.parentNode) {\n    if (element.parentNode[property]) return element.parentNode[property];else element = element.parentNode;\n  }\n}\n/******************************************************************************/\n\n/**\n * Returns an HTML div describing `field` `value`.\n *\n * @param {string} field The field name of `value` as defined in `spec.js`.\n * @param {*} value The value of `field`.\n * @return {HTLMElement} `field` `value` HTML description\n */\n\n\nformat.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (!type) throw new Error(\"Unknow field: \" + field);\n  var domNode = format.type(conf, type, value);\n  domNode.field = field;\n  if (field !== type) html.addClass(domNode, \"cosmiclib_\" + field);\n  return domNode;\n};\n\nformat.type = function (conf, type, value) {\n  if (_typeof(value) === \"object\" && value.error) type = \"error\";\n  var formatter = process[type] || process.string;\n  var domNode = formatter(conf, value);\n  html.addClass(domNode, \"cosmiclib_\" + type);\n  var eventObject = {\n    conf: conf,\n    type: type,\n    value: value,\n    domNode: domNode\n  };\n  if (conf.constructor.name === \"CosmicLink\") eventObject.cosmicLink = conf;\n\n  if (event.defaultClickHandlers[type]) {\n    domNode.onclick = function () {\n      return event.callClickHandler(conf, type, eventObject);\n    };\n\n    html.addClass(domNode, \"cosmiclib_clickable\");\n  }\n\n  return domNode;\n}; /// Provide a format method for each data type.\n\n\nspecs.types.forEach(function (type) {\n  format[type] = function (conf, value) {\n    return format.type(conf, type, value);\n  };\n});\n/******************************************************************************/\n\nvar process = {};\n\nprocess.string = function (conf, string) {\n  if (typeof string !== \"string\") string = string + \"\";\n  return html.create(\"span\", null, string);\n};\n\nprocess.error = function (conf, errDesc) {\n  var errorNode = html.create(\"span\", \".cosmiclib_error\");\n  errorNode.textContent = errDesc.value === \"\" ? \"(undefined)\" : errDesc.value.value || errDesc.value;\n  errorNode.title = errDesc.error.message;\n  return errorNode;\n};\n\nprocess.address = function (conf, address) {\n  var addressNode = html.create(\"span\", {\n    title: \"Resolving...\"\n  }, misc.shorter(address), html.create(\"span\", \".cosmiclib_loadingAnim\"));\n  resolveAddressAndUpdate(conf, address, addressNode);\n  return addressNode;\n};\n\nfunction resolveAddressAndUpdate(_x, _x2, _x3) {\n  return _resolveAddressAndUpdate.apply(this, arguments);\n}\n\nfunction _resolveAddressAndUpdate() {\n  _resolveAddressAndUpdate = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, address, addressNode) {\n    var account, animation;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return resolve.address(conf, address);\n\n          case 3:\n            account = _context.sent;\n            addressNode.title = account.account_id;\n\n            if (account.memo) {\n              addressNode.title += \"\\nMemo (\".concat(account.memo_type, \"): \").concat(account.memo);\n            }\n\n            if (account.address) addressNode.textContent = account.address;else if (account.alias) addressNode.textContent = account.alias;\n            addressNode.extra = account;\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            addressNode.title = \"Can't resolve address\";\n            html.addClass(addressNode, \"cosmiclib_error\");\n\n          case 14:\n            animation = html.grab(\".cosmiclib_loadingAnim\", addressNode);\n            if (animation) html.destroy(animation);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _resolveAddressAndUpdate.apply(this, arguments);\n}\n\nprocess.amount = function (conf, amount) {\n  var significant = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  var max = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7;\n  // Hide non-significant numbers\n  if (typeof amount !== \"number\") amount = Number(amount);\n  var nicified = nice(amount, {\n    significant: significant,\n    max: max\n  });\n\n  if (String(amount).length <= nicified.length) {\n    return html.create(\"span\", null, nicified);\n  } else {\n    return html.create(\"span\", {\n      className: \"cosmiclib_clickable\",\n      title: amount\n    }, html.create(\"span\", \".cosmiclib_tilde\", \"~\"), nicified);\n  }\n};\n\nprocess.asset = function (conf, asset) {\n  var assetNode = html.create(\"span\", null, format.field(conf, \"assetCode\", asset.code));\n\n  if (asset.issuer) {\n    html.append(assetNode, \" (\", format.field(conf, \"assetIssuer\", asset.issuer), \")\");\n  }\n\n  return assetNode;\n};\n\nprocess.assetsArray = function (conf, assetsArray) {\n  var assetsArrayNode = html.create(\"span\");\n\n  for (var i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) html.append(assetsArrayNode, \", \");\n    html.append(assetsArrayNode, format.asset(conf, assetsArray[i]));\n  }\n\n  return assetsArrayNode;\n};\n\nprocess.buffer = function (conf, object) {\n  if (object.type === \"base64\") return format.hash(conf, object.value);else return format.string(conf, object.value);\n};\n\nprocess.date = function (conf, date) {\n  return html.create(\"span\", {}, new Date(date).toLocaleString());\n};\n\nprocess.hash = function (conf, hash) {\n  return html.create(\"span\", {\n    title: hash\n  }, misc.shorter(hash));\n};\n\nprocess.id = process.hash;\n\nprocess.flags = function (conf, flags) {\n  var string = \"\";\n\n  if (flags >= 4) {\n    string = \"immutable\";\n    flags = flags - 4;\n  }\n\n  if (flags >= 2) {\n    if (string) string = \", \" + string;\n    string = \"revocable\" + string;\n    flags = flags - 2;\n  }\n\n  if (+flags === 1) {\n    if (string) string = \", \" + string;\n    string = \"required\" + string;\n  }\n\n  return html.create(\"span\", {}, string);\n};\n\nprocess.memo = function (conf, memo) {\n  var typeNode = format.field(conf, \"memoType\", memo.type);\n  var valueNode;\n\n  switch (memo.type) {\n    case \"text\":\n      valueNode = format.field(conf, \"memoText\", memo.value);\n      break;\n\n    case \"base64\":\n      valueNode = format.field(conf, \"memoBinary\", memo.value);\n      break;\n\n    case \"id\":\n      valueNode = format.field(conf, \"memoId\", memo.value);\n      break;\n\n    case \"hash\":\n      valueNode = format.field(conf, \"memoHash\", memo.value);\n      break;\n\n    case \"return\":\n      valueNode = format.field(conf, \"memoReturn\", memo.value);\n  }\n\n  return html.create(\"span\", {}, valueNode, \" (\", typeNode, \")\");\n};\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return process.amount(conf, price, 3, null);else return process.amount(conf, price.n / price.d, 3, null);\n};\n\nprocess.signer = function (conf, signer) {\n  var signerNode = html.create(\"span\");\n\n  switch (signer.type) {\n    case \"key\":\n    case \"ed25519_public_key\":\n      {\n        var value1 = signer.value || signer.key;\n        html.append(signerNode, \"Account \", format.field(conf, \"signerKey\", value1));\n        break;\n      }\n\n    case \"tx\":\n      {\n        var value2 = signer.value || signer.key;\n        html.append(signerNode, \"transaction \", format.field(conf, \"signerTx\", value2));\n        break;\n      }\n\n    case \"hash\":\n    case \"sha256hash\":\n      {\n        var value3 = signer.value || StellarSdk.StrKey.decodeSha256Hash(signer.key).toString(\"hex\");\n        html.append(signerNode, \"key whose hash is \", format.field(conf, \"signerHash\", value3));\n        break;\n      }\n  }\n\n  if (signer.weight > 1) {\n    var weightNode = format.weight(conf, signer.weight);\n    html.append(signerNode, \" (weight: \", weightNode, \")\");\n  }\n\n  return signerNode;\n};","\"use_strict\";\n/**\n * This module provides two ways to generate {@link SignersUtils} for a\n * Transaction object. The first one extends the object and is the intended way\n * to use those utilities. However, as extending objects can sometimes prove\n * inconvenient or intrusive, a second method allows to create a stand-alone\n * {@link SignersUtils} tied to a given transaction.\n *\n * @exports signersUtils\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar signersUtils = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar _resolve = require(\"./resolve\");\n/**\n * **SignersUtils** is a toolbox that aims to ease the handling of\n * multisignature transactions. The idea behind it is to fetch all required\n * data once and to cache the responses into the transaction. Then, all\n * the utilities can function in a synchronous (immediate) manner.\n *\n * Those are automatically available in `cosmicLink.transaction` after\n * `await cosmicLink.lock()` is ran. Alternatively, you can extend a transaction\n * or generate its SignersUtils by using {@link module:signersUtils}. There's no\n * `cosmicLib.SignersUtils` constructor.\n *\n * An instance of SignersUtils is always tied to a given transaction. This is\n * why none of the provided methods take a transaction as parameter.\n *\n * >\n * | Members                                                                     | Methods\n * |-----------------------------------------------------------------------------|-------------\n * | [sources]{@link SignersUtils#sources}: Array of transaction sources         | [hasSigner]{@link SignersUtils#hasSigner}: Test if a key is a legit signer for transaction\n * | [signers]{@link SignersUtils#signers}: Table of transaction signers         | [hasSigned]{@link SignersUtils#hasSigned}: Test if a key has signed transaction\n * | [signersList]{@link SignersUtils#signersList}: Array of transaction signers |\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Donation', maxDate: 2019 })\n *  .addOperation('payment', { destination: 'tips*cosmic.link', amount: 10 })\n *\n * await cosmicLink.lock({ network: 'test', source: 'myaddress*example.org' })\n *\n * console.log(cosmicLink.transaction.signers)\n * console.log(cosmicLink.transaction.hasSigner(GB...DXEZ))\n *\n * @alias SignersUtils\n * @namespace\n */\n\n\nvar SignersUtils =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  _createClass(SignersUtils, null, [{\n    key: \"resolve\",\n    value: function () {\n      var _resolve2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(conf, transaction, extendFlag) {\n        var extra, utils;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                extra = _resolve.extra(conf, transaction);\n\n                if (extra.cache.signersUtils) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _resolve.useNetwork(extra);\n\n                extra.cache.txHash = transaction.hash();\n                utils = new SignersUtils(extra, transaction);\n                /**\n                 * A list of the sources involved in the transaction.\n                 * @alias SignersUtils#sources\n                 * @type {Array}\n                 */\n\n                _context.next = 7;\n                return _resolve.txSources(extra, transaction);\n\n              case 7:\n                utils.sources = _context.sent;\n                _context.next = 10;\n                return _resolve.txSigners(extra, transaction);\n\n              case 10:\n                utils.signers = _context.sent;\n                _context.next = 13;\n                return _resolve.txSignersList(extra, transaction);\n\n              case 13:\n                utils.signersList = _context.sent;\n                Object.assign(utils, utilities);\n                extra.cache.signersUtils = utils;\n\n              case 16:\n                if (!extendFlag) {\n                  _context.next = 21;\n                  break;\n                }\n\n                if (!transaction.hasSigner) Object.assign(transaction, extra.cache.signersUtils);\n                return _context.abrupt(\"return\", transaction);\n\n              case 21:\n                return _context.abrupt(\"return\", extra.cache.signersUtils);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function resolve(_x, _x2, _x3) {\n        return _resolve2.apply(this, arguments);\n      }\n\n      return resolve;\n    }()\n  }]);\n\n  function SignersUtils(conf, transaction) {\n    _classCallCheck(this, SignersUtils);\n\n    this.signatures = transaction.signatures;\n    misc.setHiddenProperty(this, \"_cosmicplus\", transaction._cosmicplus);\n  }\n\n  return SignersUtils;\n}();\n/******************************************************************************/\n\n\nvar utilities = {};\n/**\n * Tests if **accountId** is a legit signer for the transaction.\n *\n * @example\n * if (transaction.hasSigner(GB...DEZX)) console.log('Legit signer')\n *\n * @alias SignersUtils#hasSigner\n * @param {string} accountId\n * @return {boolean}\n */\n\nutilities.hasSigner = function (accountId) {\n  return this.signersList.find(function (key) {\n    return key === accountId;\n  });\n};\n/**\n * Tests if **accountId** has signed the transaction.\n *\n * @example\n * if (transaction.hasSigned(GB...DEZX)) console.log('Has signed')\n *\n * @alias SignersUtils#hasSigned\n * @param {string} accountId\n * @return {boolean}\n */\n\n\nutilities.hasSigned = function (accountId) {\n  if (accountId.substr(0, 1) === \"G\") {\n    var keypair = StellarSdk.Keypair.fromPublicKey(accountId);\n    var txHash = this._cosmicplus.cache.txHash;\n    return !!this.signatures.find(function (entry) {\n      return keypair.verify(txHash, entry.signature());\n    });\n  }\n};\n/******************************************************************************/\n\n/**\n * Returns SignersUtils for **transaction**.\n *\n * @async\n * @param {Transaction} transaction\n * @return {SignersUtils}\n */\n\n\nsignersUtils[\"for\"] = function (conf, transaction) {\n  return SignersUtils.resolve(conf, transaction);\n};\n/**\n * Extends **transaction** with SignersUtils.\n *\n * @async\n * @param {Transaction} transaction\n * @return {Transaction}\n */\n\n\nsignersUtils[\"extends\"] = function (conf, transaction) {\n  return SignersUtils.resolve(conf, transaction, true);\n};","\"use strict\";\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @private\n * @exports convert\n */\n\nvar convert = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar construct = require(\"./construct\");\n\nvar decode = require(\"./decode\");\n\nvar destruct = require(\"./destruct\");\n\nvar encode = require(\"./encode\");\n\nvar resolve = require(\"./resolve\");\n/** ****************************    URI -> XDR    ******************************/\n\n\nconvert.uriToQuery = function (conf, uri) {\n  if (!uri.match(/\\?/)) return null;\n  var query = uri.replace(/^[^?]*/, \"\");\n  return query;\n};\n\nconvert.queryToTdesc = decode.query;\n\nconvert.tdescToJson = function (conf, tdesc) {\n  return JSON.stringify(tdesc, null, 2);\n};\n\nconvert.tdescToTransaction = construct.transaction;\n\nconvert.transactionToXdr = function (conf, transaction) {\n  return transaction.toEnvelope().toXDR(\"base64\");\n};\n\nconvert.xdrToSep7 = function (conf, xdr, options) {\n  var sep7 = \"web+stellar:tx?xdr=\";\n  sep7 += encodeURIComponent(xdr);\n\n  if (options.network && options.network !== \"public\") {\n    var passphrase = resolve.networkPassphrase(conf, options.network);\n    sep7 += \"&network_passphrase=\" + encodeURIComponent(passphrase);\n  }\n\n  if (options.callback) sep7 += \"&callback=url:\" + encode.url(conf, options.callback); // Not part of the standard.\n  // if (options.horizon) sep7 +=\"&horizon=\" + encode.url(conf, options.horizon)\n\n  return sep7;\n};\n/** ****************************    XDR -> URI    ******************************/\n\n\nconvert.xdrToTransaction = function (conf, xdr) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transaction = new StellarSdk.Transaction(xdr);\n  if (options.stripSignatures) transaction.signatures = [];\n  return transaction;\n};\n\nconvert.xdrToQuery = function (conf, xdr) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var query = \"?xdr=\" + xdr;\n  if (options.network) query += \"&network=\" + encodeURIComponent(options.network);\n  if (options.horizon) query += \"&horizon=\" + encode.url(conf, options.horizon);\n  if (options.callback) query += \"&callback=\" + encode.url(conf, options.callback);\n  return query;\n};\n\nconvert.transactionToTdesc = destruct.transaction;\n\nconvert.jsonToTdesc = function (conf, json) {\n  return JSON.parse(json);\n};\n\nconvert.tdescToQuery = encode.query;\n\nconvert.queryToUri = function (conf, query) {\n  var page = conf.page || \"https://cosmic.link\";\n  return page + query;\n};","\"use strict\";\n/**\n * Exposes some of the check routines used by cosmic-lib. Individual type-checks\n * are also available for:\n *\n * > address, amount, asset, assetsArray, boolean, buffer, date, flags, hash,\n * id, memo, network, price, sequence, signer, string, threshold, url, weight\n *\n * All checks are meant to be used on tdesc formatted values. Form example, in\n * tdesc buffer values are not encoded as actual Buffer object but as something\n * like: `{ type: \"text\", value: \"Hello World!\"}`.\n *\n * @example\n * check.field(\"minTime\", \"2018-11\")\n * check.date(\"2018-11\")\n *\n * @private\n * @exports check\n */\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar check = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Check that **tdesc** is valid.\n *\n * @example\n * check.tdesc({\n *   memo: { type: \"text\", value: \"Hello, World!\" },\n *   network: \"public\",\n *   source: \"tips*cosmic.link\",\n *   operations: [{ type: \"setOptions\", homeDomain: \"cosmic.link\" }]\n * })\n *\n * @param  {Object} tdesc\n */\n\n\ncheck.tdesc = function (conf, tdesc) {\n  var isValid = true;\n\n  for (var field in tdesc) {\n    try {\n      check.txField(conf, field, tdesc[field]);\n    } catch (error) {\n      isValid = false;\n      tdesc[field] = errDesc(error, tdesc[field]);\n    }\n  }\n\n  if (tdesc.operations.length > 100) {\n    isValid = false;\n    status.error(conf, \"Too much operations (max 100)\");\n  }\n\n  tdesc.operations.forEach(function (odesc) {\n    try {\n      check.odesc(conf, odesc);\n    } catch (e) {\n      isValid = false;\n    }\n  });\n\n  if (!isValid) {\n    var error = new Error(\"Invalid tdesc\"); // TODO: check if this is really useful\n\n    error.tdesc = tdesc;\n    throw error;\n  }\n};\n/**\n * Check that tdesc operation is valid (referred as **odesc**).\n *\n * @example\n * check.odesc({ type: \"payment\", destination: \"tips*cosmic.link\", amount: \"20\" })\n *\n * @param  {Object} odesc [description]\n */\n\n\ncheck.odesc = function (conf, odesc) {\n  var isValid = true;\n\n  try {\n    check.operationType(conf, odesc.type);\n  } catch (error) {\n    isValid = false;\n    odesc.type = errDesc(error, odesc.type);\n  }\n\n  for (var field in odesc) {\n    try {\n      check.operationField(conf, odesc.type, field, odesc[field]);\n    } catch (error) {\n      isValid = false;\n      odesc[field] = errDesc(error, odesc[field]);\n    }\n  }\n\n  specs.operationMandatoryFields[odesc.type].forEach(function (field) {\n    if (odesc[field] === undefined) {\n      isValid = false;\n      var error = new Error(\"Missing mandatory field: \" + field);\n      odesc[field] = errDesc(error);\n      status.error(conf, error.message);\n    }\n  });\n  if (!isValid) throw new Error(\"Invalid odesc\");\n};\n/**\n * Check that **field** is a valid transaction field and that its **value** is\n * valid.\n *\n * @param  {string} field\n * @param  {*} value\n */\n\n\ncheck.txField = function (conf, field, value) {\n  if (field === \"operations\") return;\n\n  if (!specs.transactionOptionalFields.find(function (name) {\n    return name === field;\n  })) {\n    status.error(conf, \"Invalid transaction field: \" + field, \"throw\");\n  }\n\n  check.field(conf, field, value);\n};\n/**\n * Check that **type** is a valid Stellar Operation type.\n *\n * @param  {String}\n */\n\n\ncheck.operationType = function (conf, type) {\n  if (!specs.operationMandatoryFields[type]) {\n    status.error(conf, \"Invalid operation: \" + type, \"throw\");\n  }\n};\n/**\n * Check that **field** is a valid **operation** field and that its **value** is\n * valid.\n *\n * @param {String} operation\n * @param {String} field\n * @param {*} value\n */\n\n\ncheck.operationField = function (conf, operation, field, value) {\n  if (field === \"type\") return;\n\n  if (!specs.isOperationField(operation, field)) {\n    status.error(conf, \"Invalid field for \".concat(operation, \": \").concat(field), \"throw\");\n  }\n\n  check.field(conf, field, value);\n};\n\nfunction errDesc(error) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return {\n    error: error,\n    value: value\n  };\n}\n/******************************************************************************/\n\n/**\n * Check that **field** **value** is a valid.\n *\n * @example\n * check.field(\"memo\", { type: \"text\", value: \"Hello, World!\" })\n *\n * @param {string} field The name of a Stellar Transaction parameter\n * @param {*} value\n */\n\n\ncheck.field = function (conf, field, value) {\n  if (value === \"\" && field !== \"homeDomain\" && field !== \"value\") {\n    status.error(conf, \"Missing value for field: \".concat(field), \"throw\");\n  }\n\n  var type = specs.fieldType[field];\n  if (!type) status.error(conf, \"Unknow field: \" + field, \"throw\");\n  if (value) check.type(conf, type, value);\n};\n/**\n * Check that **value** is of type **type**.\n *\n * @example\n * check.type(\"date\", \"2018-11-28\")\n *\n * @param {string} type\n * @param {string} value\n */\n\n\ncheck.type = function (conf, type, value) {\n  if (!specs.types.find(function (entry) {\n    return entry === type;\n  })) {\n    throw new Error(\"Invalid type: \" + type);\n  }\n\n  return check[type](conf, value);\n};\n/**\n * Generic check for numbers. Check that **value** is a number or a string\n * representing a number. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction\n * for `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\n\n\ncheck.number = function (conf, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"number\";\n  var min = arguments.length > 3 ? arguments[3] : undefined;\n  var max = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"unlimited\";\n  var num = +value;\n\n  if (isNaN(num)) {\n    status.error(conf, \"Invalid \".concat(type, \" (should be a number): \").concat(value), \"throw\");\n  } else if (min && num < min || max && num > max) {\n    status.error(conf, \"Invalid \".concat(type, \" (should be between \").concat(min, \" and \").concat(max, \" ): \").concat(value), \"throw\");\n  }\n};\n/**\n * Generic check for integers. Check that **value** is an integer or a string\n * representing an integer. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction for\n * **value**.\n *\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\n\n\ncheck.integer = function (conf, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"integer\";\n  var min = arguments.length > 3 ? arguments[3] : undefined;\n  var max = arguments.length > 4 ? arguments[4] : undefined;\n  check.number(conf, value, type, min, max);\n\n  if (parseInt(value) + \"\" !== value + \"\") {\n    status.error(conf, \"Not an integer: \".concat(value), \"throw\");\n  }\n};\n/**\n * Check that **value** is an UTF-8 string.\n *\n * *Note:* This use a weak (simplified) test that may not be accurate for small\n * strings.\n *\n * @param  {String} value\n */\n\n\ncheck.utf8 = function (conf, value) {\n  if (typeof value !== \"string\" || !misc.isUtf8(value)) {\n    status.error(conf, \"Invalid UTF8 string: \".concat(value), \"throw\");\n  }\n};\n/**\n * Check that **value** is a base64 string.\n *\n * @param  {String} value\n */\n\n\ncheck.base64 = function (conf, value) {\n  if (typeof value !== \"string\" || !misc.isBase64(value)) {\n    status.error(conf, \"Invalid base64 string: \".concat(value), \"throw\");\n  }\n};\n/******************************************************************************/\n\n\ncheck.amount = function (conf, amount) {\n  check.number(conf, amount, \"amount\");\n};\n\ncheck.address = function (conf, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.error(conf, \"Invalid address: \" + misc.shorter(address), \"throw\");\n  }\n};\n\ncheck.asset = function (conf, asset) {\n  var code = asset.code.toLowerCase();\n\n  if (!asset.issuer && code !== \"xlm\" && code !== \"native\") {\n    status.error(conf, \"Missing issuer for asset: \" + code, \"throw\");\n  }\n};\n\ncheck.assetsArray = function (conf, assetsArray) {\n  var isValid = true;\n\n  for (var index in assetsArray) {\n    try {\n      check.asset(conf, assetsArray[index]);\n    } catch (error) {\n      console.error(error);\n      isValid = false;\n    }\n  }\n\n  if (!isValid) throw new Error(\"Invalid assets array\");\n};\n\ncheck[\"boolean\"] = function (conf, _boolean) {\n  if (typeof _boolean !== \"boolean\") {\n    status.error(conf, \"Invalid boolean: \" + _boolean, \"throw\");\n  }\n};\n\ncheck.buffer = function (conf, buffer) {\n  switch (buffer.type) {\n    case \"text\":\n      check.utf8(conf, buffer.value);\n      break;\n\n    case \"base64\":\n      check.base64(conf, buffer.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid buffer type: \" + buffer.type, \"throw\");\n  }\n};\n\ncheck.date = function (conf, date) {\n  if (isNaN(Date.parse(date))) {\n    status.error(conf, \"Invalid date: \" + date, \"throw\");\n  }\n};\n\ncheck.flags = function (conf, flags) {\n  check.integer(conf, flags, \"flags\", 0, 7);\n};\n\ncheck.hash = function (conf, hash) {\n  if (hash.length !== 64 || !hash.match(/^[0-9a-f]*$/)) {\n    status.error(conf, \"Invalid hash: \" + hash, \"throw\");\n  }\n};\n\ncheck.id = function (conf, id) {\n  if (!id.match(/^[0-9]*$/)) status.error(conf, \"Invalid id: \" + id, \"throw\");\n};\n\ncheck.memo = function (conf, memo) {\n  switch (memo.type) {\n    case \"text\":\n      check.utf8(conf, memo.value);\n      break;\n\n    case \"base64\":\n      check.base64(conf, memo.value);\n      break;\n\n    case \"hash\":\n    case \"return\":\n      check.hash(conf, memo.value);\n      break;\n\n    case \"id\":\n      check.id(conf, memo.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid memo type: \" + memo.type, \"throw\");\n  }\n};\n\ncheck.price = function (conf, price) {\n  if (_typeof(price) === \"object\") {\n    try {\n      check.price(null, price.n);\n      check.price(null, price.d);\n    } catch (error) {\n      status.error(conf, \"Invalid price: \" + price, \"throw\");\n    }\n  } else {\n    check.number(conf, price, \"price\", 0);\n  }\n};\n\ncheck.signer = function (conf, signer) {\n  check.weight(conf, signer.weight);\n\n  switch (signer.type) {\n    case \"key\":\n      check.address(conf, signer.value);\n      break;\n\n    case \"hash\":\n    case \"tx\":\n      check.hash(conf, signer.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid signer type: \" + signer.type, \"throw\");\n  }\n};\n\ncheck.sequence = function (conf, sequence) {\n  check.number(conf, sequence, \"sequence\", 0);\n};\n\ncheck.threshold = function (conf, threshold) {\n  check.integer(conf, threshold, \"threshold\", 0, 255);\n};\n\ncheck.weight = function (conf, weight) {\n  check.integer(conf, weight, \"weight\", 0, 255);\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use_strict\";\n/**\n * Methods to set tdesc/odesc defaults values and strip out useless data.\n *\n * @exports normalize\n * @private\n */\n\nvar normalize = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar config = require(\"./config\");\n\nvar resolve = require(\"./resolve\");\n\nvar specs = require(\"./specs\");\n/**\n * Setup the default values for `tdesc`.\n */\n\n\nnormalize.tdesc = function (conf, tdesc) {\n  removeEmptyFields(tdesc);\n  if (!tdesc.operations) tdesc.operations = [];\n  if (tdesc.fee === 100 * tdesc.operations.length) delete tdesc.fee;\n  dateFields.forEach(function (field) {\n    if (tdesc[field]) {\n      tdesc[field] = normalize.date(conf, tdesc[field]);\n      if (tdesc[field] === \"1970\") delete tdesc[field];\n    }\n  });\n  if (tdesc.network) tdesc.network = normalize.network(conf, tdesc.network); // When network is neither test nor public, we want to provide a fallback\n  // Horizon URL; else we don't need it.\n\n  if (tdesc.network && tdesc.network !== \"public\" && tdesc.network !== \"test\") {\n    var url = resolve.horizon(config, tdesc.network) || tdesc.horizon;\n    tdesc.horizon = normalize.url(conf, url);\n  } else {\n    delete tdesc.horizon;\n  }\n\n  if (tdesc.callback) tdesc.callback = normalize.url(conf, tdesc.callback);\n};\n\nvar dateFields = [\"minTime\", \"maxTime\"];\n\nnormalize.date = function (conf, date) {\n  if (date.match(/^\\+[0-9]+$/)) {\n    var shifted = new Date();\n    shifted.setMinutes(shifted.getMinutes() + +date.substr(1));\n    date = shifted.toISOString().replace(/\\.[0-9]{3}/, \"\");\n  }\n\n  return date.replace(/:00\\.000/, \"\").replace(/\\.000/, \"\").replace(/T00:00Z/, \"\").replace(/-01$/, \"\").replace(/-01$/, \"\");\n};\n\nnormalize.network = function (conf, network) {\n  var networkName = resolve.networkName(conf, network);\n\n  if (networkName === \"public\" || networkName === \"test\") {\n    return networkName; // In network is neither test nor public, we want to use the network\n    // passphrase as parameter to ensure cross-wallet compatibility.\n  } else {\n    return resolve.networkPassphrase(conf, network);\n  }\n};\n\nnormalize.url = function (conf, url) {\n  if (url) return url.substr(0, 4) === \"http\" ? url : \"https://\" + url;\n};\n/**\n * Add the implicit values for fields made optional in the CosmicLink protocol\n * but required by StellarSdk.\n */\n\n\nnormalize.odesc = function (conf, odesc) {\n  removeEmptyFields(odesc); /// No limit = maximum limit.\n\n  if (odesc.limit === \"922337203685.4775807\") delete odesc.limit; /// New offer.\n\n  if (odesc.offerId === \"0\") delete odesc.offerId; /// Empty asset conversion path.\n\n  if (odesc.path && !odesc.path.length) delete odesc.path; /// Useless denominator.\n\n  if (odesc.price && odesc.price.d === 1) odesc.price = odesc.price.n + \"\";\n\n  switch (odesc.type) {\n    case \"allowTrust\":\n      /// Allow trust by default.\n      if (odesc.authorize === undefined) odesc.authorize = true;\n      break;\n\n    case \"createPassiveOffer\":\n    case \"manageOffer\":\n      /// Protocol 11 update renamed those operations.\n      if (odesc.type === \"manageOffer\") odesc.type = \"manageSellOffer\";else odesc.type = \"createPassiveSellOffer\";\n    // Fall Through\n\n    case \"createPassiveSellOffer\":\n    case \"manageBuyOffer\":\n    case \"manageSellOffer\":\n      /// Syntactic sugar for offer deletion\n      if (odesc.offerId && (odesc.amount === \"0\" || odesc.buyAmount === \"0\")) {\n        if (!odesc.buying && !odesc.selling) {\n          odesc.buying = new StellarSdk.Asset(\"XLM\", specs.neutralAccountId);\n        }\n\n        if (!odesc.price) odesc.price = \"1\";\n      } /// XLM as default asset.\n\n\n      if (odesc.buying && !odesc.selling) odesc.selling = XLM;\n      if (odesc.selling && !odesc.buying) odesc.buying = XLM;\n      break;\n\n    case \"manageData\":\n      /// Delete data entry.\n      if (!odesc.value) odesc.value = \"\";\n      break;\n\n    case \"pathPayment\":\n      /// XLM as default asset.\n      if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = XLM;\n      if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = XLM;\n      break;\n\n    case \"payment\":\n      /// XLM as default asset.\n      if (!odesc.asset) odesc.asset = XLM;\n      break;\n  }\n};\n\nvar XLM = StellarSdk.Asset[\"native\"]();\n\nfunction removeEmptyFields(object) {\n  for (var field in object) {\n    if (object[field] === null || object[field] === undefined) delete object[field];\n  }\n}","\"use strict\";\n/**\n * Contains the methods to convert data from *{@see Transaction}* format to\n * *Tdesc* format.\n *\n * @private\n * @exports destruct\n */\n\nvar destruct = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n/**\n * Convert `tx` into *Tdesc*.\n *\n * @param {Transaction} tx\n * @param {Object} options\n * @return {Object} A tdesc\n */\n\n\ndestruct.transaction = function (conf, tx) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var tdesc = {};\n  if (tx.source === specs.neutralAccountId) options.stripSource = true;\n  if (tx.sequence === \"0\") options.stripSequence = true;\n  tdesc.network = options.network;\n  tdesc.horizon = options.horizon;\n  tdesc.callback = options.callback;\n  if (!options.stripSource) tdesc.source = tx.source;\n\n  if (!options.stripSource && !options.stripSequence) {\n    tdesc.sequence = destruct.sequence(conf, tx.sequence);\n  }\n\n  if (tx._memo._switch.name !== \"memoNone\") tdesc.memo = destruct.memo(conf, tx._memo);\n\n  if (tx.timeBounds) {\n    if (tx.timeBounds.minTime) tdesc.minTime = destruct.date(conf, tx.timeBounds.minTime);\n    if (tx.timeBounds.maxTime) tdesc.maxTime = destruct.date(conf, tx.timeBounds.maxTime);\n  }\n\n  tdesc.fee = tx.fee;\n  tdesc.operations = tx.operations.map(function (op) {\n    return destruct.operation(conf, op);\n  });\n  normalize.tdesc(conf, tdesc);\n  return tdesc;\n};\n/**\n * Convert `op` into odesc format.\n *\n * @param {Object} op A StellarSdk Operation\n * @return {Object} An odesc\n */\n\n\ndestruct.operation = function (conf, op) {\n  var odesc = {};\n\n  for (var field in op) {\n    if (field === \"type\") odesc.type = op.type;else if (field === \"line\") odesc.asset = op.line;else odesc[field] = destruct.field(conf, field, op[field]);\n  }\n\n  normalize.odesc(conf, odesc);\n  return odesc;\n};\n/******************************************************************************/\n\n/**\n * Destruct `value` according to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\n\n\ndestruct.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (type) return destruct.type(conf, type, value);else throw new Error(\"Invalid field: \".concat(field));\n};\n/**\n * Destruct `value` using the destructuring function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\n\n\ndestruct.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value;else return destruct[type](conf, value);\n};\n/******************************************************************************/\n\n\ndestruct.asset = function (conf, asset) {\n  return Object.assign({}, asset);\n};\n\ndestruct.assetPath = function (conf, assetPath) {\n  return assetPath.map(function (asset) {\n    return destruct.asset(asset);\n  });\n};\n\ndestruct.amount = function (conf, amount) {\n  return amount.replace(/\\.?0+$/, \"\");\n};\n\ndestruct.buffer = function (conf, buffer) {\n  if (!buffer) return null;\n  var string = buffer.toString();\n\n  if (misc.isUtf8(string)) {\n    return {\n      type: \"text\",\n      value: string\n    };\n  } else {\n    var value = buffer.toString(\"base64\").replace(/=*$/, \"\");\n    return {\n      type: \"base64\",\n      value: value\n    };\n  }\n};\n\ndestruct.date = function (conf, timestamp) {\n  return new Date(timestamp * 1000).toISOString();\n};\n\ndestruct.memo = function (conf, sdkMemo) {\n  var memo = {};\n\n  if (sdkMemo._switch.name !== \"memoNone\") {\n    memo.type = sdkMemo._arm;\n\n    if (memo.type === \"hash\" || memo.type === \"retHash\") {\n      memo.value = sdkMemo._value.toString(\"hex\");\n      if (memo.type === \"retHash\") memo.type = \"return\";\n    } else if (memo.type === \"text\") {\n      return destruct.buffer(conf, sdkMemo._value);\n    } else {\n      memo.value = sdkMemo._value.toString();\n    }\n  }\n\n  return memo;\n};\n\ndestruct.sequence = function (conf, sdkSequence) {\n  return sdkSequence.toString();\n};\n\ndestruct.signer = function (conf, sdkSigner) {\n  var signer = {\n    weight: sdkSigner.weight\n  };\n\n  if (sdkSigner.ed25519PublicKey) {\n    signer.type = \"key\";\n    signer.value = sdkSigner.ed25519PublicKey;\n  } else if (sdkSigner.sha256Hash) {\n    signer.type = \"hash\";\n    signer.value = sdkSigner.sha256Hash.toString(\"hex\");\n  } else if (sdkSigner.preAuthTx) {\n    signer.type = \"tx\";\n    signer.value = sdkSigner.preAuthTx.toString(\"hex\");\n  }\n\n  return signer;\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n * @exports event\n */\n\nvar event = exports;\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar format = require(\"./format\");\n/** *** Click events *****/\n\n/**\n * Set the click handler for **type** HTML elements as **callback**.\n *\n * @example\n * cosmicLib.config.setClickHandler('address', showAddressPopup)\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\n\n\nevent.setClickHandler = function (conf, type, callback) {\n  conf.clickHandlers[type] = callback;\n};\n/**\n * Remove the current click handler for **type**.\n *\n * @example\n * cosmicLib.config.clearClickHandler('address')\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\n\n\nevent.clearClickHandler = function (conf, type) {\n  conf.clickHandlers[type] = undefined;\n};\n\nevent.callClickHandler = function (conf, type, event) {\n  var handler = conf.clickHandlers[type];\n  event.extra = event.domNode.extra;\n  event.field = event.domNode.field;\n  event.tdesc = format.parentTdesc(conf, event.domNode);\n  event.odesc = format.parentOdesc(conf, event.domNode);\n  event.index = format.parentIndex(conf, event.domNode);\n  if (handler) handler(event);\n};\n/**\n * The active click handlers. Takes the form:\n *\n * ```\n * cosmicLib.config.clickHandlers = {\n *   type1: callback1,\n *   ...\n *   typeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * * **address**: A prompt that shows the address details\n * * **id**: A function that copy the id into the clipboard\n * * **hash**: A function that copy the hash into the clipboard or show a prompt\n *   for preimage signature when relevant\n * ```\n */\n\n\nevent.defaultClickHandlers = {\n  address: function address(event) {\n    if (!event.extra) return;\n    var message = \"\";\n\n    for (var field in event.extra) {\n      message += \"\".concat(field, \":\\n\") + \"\".concat(event.extra[field], \"\\n\\n\");\n    }\n\n    window.alert(message);\n  },\n  hash: function hash(event) {\n    var grandma = event.domNode.parentNode.parentNode.parentNode;\n\n    if (grandma.classList.contains(\"cosmiclib_signers\")) {\n      var preimage = prompt(\"Please enter preimage:\");\n      if (preimage) event.cosmicLink.sign(preimage);\n    } else {\n      html.copyString(event.value);\n    }\n  },\n  id: function id(event) {\n    return html.copyString(event.value);\n  }\n};","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","\"use strict\";\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @private\n * @exports construct\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar construct = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar resolve = require(\"./resolve\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Returns the StellarSdk Transaction built from tdesc.\n *\n * @param {Object} tdesc\n * @return {Transaction}\n */\n\n\nconstruct.transaction =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, tdesc) {\n    var txBuilder, index, odesc, operation;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!conf.status) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error(conf.status);\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return makeTransactionBuilder(conf, tdesc);\n\n          case 5:\n            txBuilder = _context.sent;\n            _context.t0 = _regeneratorRuntime.keys(tdesc.operations);\n\n          case 7:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 16;\n              break;\n            }\n\n            index = _context.t1.value;\n            odesc = tdesc.operations[index];\n            _context.next = 12;\n            return construct.operation(conf, odesc);\n\n          case 12:\n            operation = _context.sent;\n            txBuilder.addOperation(operation);\n            _context.next = 7;\n            break;\n\n          case 16:\n            return _context.abrupt(\"return\", txBuilder.build());\n\n          case 19:\n            _context.prev = 19;\n            _context.t2 = _context[\"catch\"](2);\n\n            if (!conf.errors) {\n              console.error(_context.t2);\n              status.error(conf, _context.t2.message);\n            }\n\n            if (conf.status) {\n              _context.next = 26;\n              break;\n            }\n\n            status.fail(conf, \"Transaction build failed\", \"throw\");\n            _context.next = 27;\n            break;\n\n          case 26:\n            throw _context.t2;\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 19]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Returns the StellarSdk Operation built from `odesc`.\n *\n * @param {Object} odesc\n * @return {Operation}\n */\n\n\nconstruct.operation =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, odesc) {\n    var operation, field;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            operation = odesc.type;\n            delete odesc.type;\n            _context2.t0 = _regeneratorRuntime.keys(odesc);\n\n          case 3:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 10;\n              break;\n            }\n\n            field = _context2.t1.value;\n            _context2.next = 7;\n            return construct.field(conf, field, odesc[field]);\n\n          case 7:\n            odesc[field] = _context2.sent;\n            _context2.next = 3;\n            break;\n\n          case 10:\n            return _context2.abrupt(\"return\", StellarSdk.Operation[operation](odesc));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Returns the TransactionBuilder for `tdesc`.\n */\n\n\nfunction makeTransactionBuilder(_x5, _x6) {\n  return _makeTransactionBuilder.apply(this, arguments);\n}\n/******************************************************************************/\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\n\n\nfunction _makeTransactionBuilder() {\n  _makeTransactionBuilder = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(conf, tdesc) {\n    var server, baseFee, txOpts, sourceAccount, builder, index, operation, destination, memoType, memoValue, _short;\n\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            server = resolve.server(conf);\n            _context9.next = 3;\n            return server.fetchBaseFee();\n\n          case 3:\n            baseFee = _context9.sent;\n            txOpts = {};\n            if (tdesc.fee) txOpts.fee = tdesc.fee;else txOpts.fee = tdesc.operations.length * baseFee;\n            if (tdesc.memo) txOpts.memo = construct.memo(conf, tdesc.memo);\n\n            if (tdesc.minTime || tdesc.maxTime) {\n              txOpts.timebounds = {\n                minTime: 0,\n                maxTime: 0\n              };\n              if (tdesc.minTime) txOpts.timebounds.minTime = construct.date(conf, tdesc.minTime);\n              if (tdesc.maxTime) txOpts.timebounds.maxTime = construct.date(conf, tdesc.maxTime);\n            }\n\n            _context9.next = 10;\n            return resolve.txSourceAccount(conf, tdesc.source, tdesc.sequence);\n\n          case 10:\n            sourceAccount = _context9.sent;\n            builder = new StellarSdk.TransactionBuilder(sourceAccount, txOpts);\n            if (!tdesc.maxTime) builder.setTimeout(StellarSdk.TimeoutInfinite); /// Check if memo is needed for destination account.\n\n            _context9.t0 = _regeneratorRuntime.keys(tdesc.operations);\n\n          case 14:\n            if ((_context9.t1 = _context9.t0()).done) {\n              _context9.next = 24;\n              break;\n            }\n\n            index = _context9.t1.value;\n            operation = tdesc.operations[index];\n\n            if (!operation.destination) {\n              _context9.next = 22;\n              break;\n            }\n\n            _context9.next = 20;\n            return resolve.address(conf, operation.destination);\n\n          case 20:\n            destination = _context9.sent;\n\n            if (destination.memo) {\n              memoType = destination.memo_type;\n              memoValue = destination.memo;\n\n              if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n                _short = misc.shorter(operation.destination);\n                status.error(conf, \"Memo conflict: \".concat(_short, \" requires to set a memo\"), \"throw\");\n              } else {\n                tdesc.memo = {\n                  type: memoType,\n                  value: memoValue\n                };\n                builder.addMemo(new StellarSdk.Memo(memoType, memoValue));\n              }\n            }\n\n          case 22:\n            _context9.next = 14;\n            break;\n\n          case 24:\n            return _context9.abrupt(\"return\", builder);\n\n          case 25:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _makeTransactionBuilder.apply(this, arguments);\n}\n\nconstruct.field =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, field, value) {\n    var type;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            type = specs.fieldType[field];\n\n            if (!type) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", construct.type(conf, type, value));\n\n          case 5:\n            throw new Error(\"Invalid field: \".concat(field));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\n\n\nconstruct.type =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(conf, type, value) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", construct[type](conf, value));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x10, _x11, _x12) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/******************************************************************************/\n\n\nconstruct.address =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf, address) {\n    var account;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return resolve.address(conf, address);\n\n          case 2:\n            account = _context5.sent;\n            return _context5.abrupt(\"return\", account.account_id);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nconstruct.asset =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf, asset) {\n    var publicKey;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!asset.issuer) {\n              _context6.next = 7;\n              break;\n            }\n\n            _context6.next = 3;\n            return construct.address(conf, asset.issuer);\n\n          case 3:\n            publicKey = _context6.sent;\n            return _context6.abrupt(\"return\", new StellarSdk.Asset(asset.code, publicKey));\n\n          case 7:\n            return _context6.abrupt(\"return\", StellarSdk.Asset[\"native\"]());\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nconstruct.assetsArray =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, assetsArray) {\n    var path, index, string, constructedAsset;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            path = [];\n            _context7.t0 = _regeneratorRuntime.keys(assetsArray);\n\n          case 2:\n            if ((_context7.t1 = _context7.t0()).done) {\n              _context7.next = 11;\n              break;\n            }\n\n            index = _context7.t1.value;\n            string = assetsArray[index];\n            _context7.next = 7;\n            return construct.asset(conf, string);\n\n          case 7:\n            constructedAsset = _context7.sent;\n            path.push(constructedAsset);\n            _context7.next = 2;\n            break;\n\n          case 11:\n            return _context7.abrupt(\"return\", path);\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nconstruct.buffer = function (conf, object) {\n  if (object.type === \"base64\") {\n    return Buffer.from(object.value, \"base64\");\n  } else {\n    return object.value || null;\n  }\n};\n\nconstruct.date = function (conf, string) {\n  return Date.parse(string) / 1000;\n};\n\nconstruct.memo = function (conf, memo) {\n  if (memo.type === \"base64\") {\n    return new StellarSdk.Memo(\"text\", Buffer.from(memo.value, \"base64\"));\n  } else {\n    return new StellarSdk.Memo(memo.type, memo.value);\n  }\n};\n\nconstruct.signer =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(conf, signer) {\n    var sdkSigner, publicKey;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            sdkSigner = {\n              weight: +signer.weight\n            };\n\n            if (!(signer.type === \"tx\")) {\n              _context8.next = 5;\n              break;\n            }\n\n            sdkSigner.preAuthTx = signer.value;\n            _context8.next = 14;\n            break;\n\n          case 5:\n            if (!(signer.type === \"hash\")) {\n              _context8.next = 9;\n              break;\n            }\n\n            sdkSigner.sha256Hash = signer.value;\n            _context8.next = 14;\n            break;\n\n          case 9:\n            if (!(signer.type === \"key\")) {\n              _context8.next = 14;\n              break;\n            }\n\n            _context8.next = 12;\n            return construct.address(conf, signer.value);\n\n          case 12:\n            publicKey = _context8.sent;\n            sdkSigner.ed25519PublicKey = publicKey;\n\n          case 14:\n            return _context8.abrupt(\"return\", sdkSigner);\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use_strict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  var StellarSdk = require(\"./stellar-sdk\");\n\n  var hash = \"0000000000000000000000000000000000000000000000000000000000000000\";\n  var memo = new StellarSdk.Memo(\"hash\", hash);\n  module.exports = memo.value.__proto__.constructor;\n} else {\n  module.exports = env.nodeRequire(\"safe-buffer\").Buffer;\n}","\"use strict\";\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @private\n * @exports encode\n */\n\nvar encode = exports;\n\nvar decode = require(\"./decode\");\n\nvar specs = require(\"./specs\");\n\nencode.query = function (conf, tdesc) {\n  if (conf.errors) return undefined;\n  var command;\n\n  if (!tdesc.operations.length || tdesc.operations.length > 1 || tdesc.operations[0].source) {\n    command = \"transaction\";\n  } else {\n    command = tdesc.operations[0].type;\n  }\n\n  var query = \"?\" + command;\n  specs.transactionOptionalFields.forEach(function (field) {\n    if (tdesc[field] !== undefined) query += encode.field(conf, field, tdesc[field]);\n  });\n  tdesc.operations.forEach(function (odesc) {\n    if (command === \"transaction\") query += \"&operation=\" + odesc.type;\n\n    for (var field in odesc) {\n      if (field === \"type\") continue; // Syntactic sugar for offer deletion.\n\n      if (odesc.type === \"manageOffer\" && odesc.amount == \"0\" && odesc.offerId) {\n        if (field === \"price\" && odesc.price === \"1\") continue;\n\n        if (field === \"buying\" && odesc.buying.code === \"XLM\" && odesc.buying.issuer === specs.neutralAccountId) {\n          continue;\n        }\n      }\n\n      query += encode.field(conf, field, odesc[field]);\n    }\n  });\n  return query;\n};\n/******************************************************************************/\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\n\n\nencode.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (!type) throw new Error(\"Invalid field: \".concat(field));\n  var encodedValue = encode.type(conf, type, value);\n  if (encodedValue === \"\" && field !== \"homeDomain\") return \"\";else return \"&\".concat(field, \"=\").concat(encodedValue);\n};\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\n\n\nencode.type = function (conf, type, value) {\n  if (value === undefined) return \"\";\n  var encodedValue = process[type] ? process[type](conf, value) : value;\n  if (encodedValue === undefined) return \"\";else return encodedValue;\n};\n/******************************************************************************/\n\n\nvar process = {};\n\nprocess.asset = function (conf, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + \":\" + encodeURIComponent(asset.issuer);\n};\n\nprocess.assetsArray = function (conf, assetsArray) {\n  return assetsArray.map(function (asset) {\n    return encode.asset(conf, asset);\n  }).toString();\n};\n\nprocess[\"boolean\"] = function (conf, _boolean) {\n  if (_boolean === false) return \"false\";\n};\n\nprocess.buffer = function (conf, buffer) {\n  if (buffer.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    var decoded = decode.buffer(conf, buffer.value);\n    if (decoded.type === \"text\") return encodeURIComponent(buffer.value);\n  } else if (buffer) {\n    return buffer.type + \":\" + encodeURIComponent(buffer.value);\n  }\n};\n\nprocess.date = function (conf, date) {\n  return date.replace(/Z$/, \"\");\n};\n\nprocess.memo = function (conf, memo) {\n  if (memo.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    var decoded = decode.memo(conf, memo.value);\n    if (decoded.type === \"text\") return encodeURIComponent(memo.value);\n  }\n\n  return memo.type + \":\" + encodeURIComponent(memo.value);\n};\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return price;else return price.n + \":\" + price.d;\n};\n\nprocess.signer = function (conf, signer) {\n  return signer.weight + \":\" + signer.type + \":\" + signer.value;\n};\n\nprocess.string = encode.buffer;\n\nprocess.url = function (conf, url) {\n  if (url.substr(0, 8) === \"https://\") url = url.substr(8);\n  return encodeURIComponent(url);\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  exports[type] = function (conf, value) {\n    return encode.type(conf, type, value);\n  };\n});","\"use_strict\";\n/**\n * Methods that expand tdesc paramaters from their query/StellarSdk format into\n * their tdesc equivalent. This allows user to pass value in the format they\n * feel the most confortable with when creating CosmicLinks.\n *\n * @private\n * @exports expand\n */\n\nvar expand = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar decode = require(\"./decode\");\n\nvar destruct = require(\"./destruct\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n/**\n * Replace each tdesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `tdesc` passed in\n * parameter.\n *\n * @param {Object} tdesc\n * @return tdesc\n */\n\n\nexpand.tdesc = function (conf, tdesc) {\n  for (var field in tdesc) {\n    if (field === \"operations\") continue;else tdesc[field] = expand.field(conf, field, tdesc[field]);\n  }\n\n  if (tdesc.operations) tdesc.operations.forEach(function (odesc) {\n    return expand.odesc(conf, odesc);\n  });\n  normalize.tdesc(conf, tdesc);\n  return tdesc;\n};\n/**\n * Replace each odesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `odesc` passed in\n * parameter.\n *\n * @param {Object} odesc\n * @return tdesc\n */\n\n\nexpand.odesc = function (conf, odesc) {\n  for (var field in odesc) {\n    if (field === \"type\") continue;else odesc[field] = expand.field(conf, field, odesc[field]);\n  }\n\n  normalize.odesc(conf, odesc);\n  return odesc;\n};\n/******************************************************************************/\n\n/**\n * Expands `value` to its tdesc format according to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\n\n\nexpand.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (type) return expand.type(conf, type, value);else throw new Error(\"Invalid field: \".concat(field));\n};\n/**\n * Expands `value` to its tdesc format according to `type`.\n *\n * @param {string} type\n * @param {string} value\n */\n\n\nexpand.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value;\n  if (typeof value === \"number\") value = value + \"\";\n  return expand[type] ? expand[type](conf, value) : value + \"\";\n};\n/******************************************************************************/\n\n\nexpand.asset = function (conf, asset) {\n  if (asset instanceof StellarSdk.Asset) return destruct.asset(conf, asset);else if (typeof asset === \"string\") return decode.asset(conf, asset);else return asset;\n};\n\nexpand.assetPath = function (conf, assetPath) {\n  if (Array.isArray(assetPath)) return assetPath.map(function (asset) {\n    return expand.asset(conf, asset);\n  });else if (typeof assetPath === \"string\") return decode.assetPath(conf, assetPath);\n};\n\nexpand.buffer = function (conf, buffer) {\n  if (!buffer) return \"\";\n  if (buffer instanceof Buffer) return destruct.buffer(conf, buffer);else if (typeof buffer === \"string\") return decode.buffer(conf, buffer);else return buffer;\n};\n\nexpand.date = function (conf, date) {\n  if (typeof date === \"number\") date = date + \"\";\n  if (!date.match(/^[0-9]*$/) || date.length < 5) return decode.date(conf, date);else return destruct.date(conf, date);\n};\n\nexpand.memo = function (conf, memo) {\n  if (memo instanceof StellarSdk.Memo) return destruct.memo(conf, memo);else if (typeof memo === \"string\") return decode.memo(conf, memo);else return memo;\n};\n\nexpand.price = function (conf, price) {\n  if (typeof price === \"string\" && price.match(/:/)) {\n    return decode.price(conf, price);\n  } else {\n    return price;\n  }\n};\n\nexpand.signer = function (conf, signer) {\n  if (signer.key) return destruct.signer(conf, signer);else if (typeof signer === \"string\") return decode.signer(conf, signer);else return signer;\n};\n\nexpand.string = function (conf, string) {\n  if (typeof string === \"number\") return string + \"\";else return string;\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) {\n    exports[type] = function (conf, value) {\n      if (typeof value === \"number\") return value + \"\";else return value;\n    };\n  }\n});","\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nif (env.isBrowser) require(\"@cosmic-plus/domutils/es5/polyfill\");\n/**\n * Automatically pass `config` to `module` functions as first argument.\n *\n * @param {Object} module A cosmic-lib module whose functions takes config as\n *   the first argument.\n * @param {Object} config A configuration object similar than config.js module.\n * @private\n */\n\nfunction exposeModule(module) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var layer = Object.assign({}, module);\n  misc.setHiddenProperty(layer, \"_config\", config);\n\n  var _loop = function _loop(name) {\n    if (typeof module[name] === \"function\") {\n      layer[name] = function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return module[name].apply(module, [this._config].concat(params));\n      };\n    } else {\n      layer[name] = module[name];\n    }\n  };\n\n  for (var name in module) {\n    _loop(name);\n  }\n\n  return layer;\n}\n/**\n * Create a clone of the library with an alternative config object derived from\n * **params**. Fields which are not defined in **params** stay in sync with parent\n * configuration.\n *\n * @example\n * const testnet = cosmicLib.withConfig({ network: 'test' })\n * const account = await testnet.resolve.account('tips*cosmic.link')\n *\n * @params {Object} params Alternative configuration\n * @return {Object} A clone of cosmicLib\n */\n\n\nexports.withConfig = function (params) {\n  var library = Object.create(this);\n  library.config = Object.assign({}, this.config, params);\n\n  for (var module in this) {\n    if (this[module].prototype && this[module].prototype.__proto__ === this.config) {\n      library[module] =\n      /*#__PURE__*/\n      function (_this$module) {\n        _inherits(_class, _this$module);\n\n        function _class() {\n          _classCallCheck(this, _class);\n\n          return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n        }\n\n        return _class;\n      }(this[module]);\n\n      Object.assign(library[module].prototype, this[module].prototype);\n      library[module].prototype.__proto__ = library.config;\n    } else if (this[module]._config) {\n      library[module] = Object.create(this[module]);\n      misc.setHiddenProperty(library[module], \"_config\", library.config);\n    }\n  }\n\n  return library;\n};\n/**\n * Export modules **names** after linking them to `config`.\n *\n * @param  {...String} names Module names\n */\n\n\nfunction exportModule(name, module) {\n  exports[name] = exposeModule(module, config);\n} // Export modules.\n\n\nvar config = exports.config = require(\"./config\");\n\nexports.CosmicLink = require(\"./cosmiclink\");\nif (env.isBrowser) exports.load = require(\"./load\");\nexportModule(\"resolve\", require(\"./resolve\"));\nexportModule(\"signersUtils\", require(\"./signers-utils\"));\nexports.specs = require(\"./specs\"); // Export helpers (not documented in the manual - please check the code).\n\nexportModule(\"check\", require(\"./check\"));\nexportModule(\"expand\", require(\"./expand\"));\nexportModule(\"construct\", require(\"./construct\"));\nexportModule(\"destruct\", require(\"./destruct\"));\nexportModule(\"encode\", require(\"./encode\"));\nexportModule(\"decode\", require(\"./decode\"));","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use_strict\";\n\nif (!NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach;\n} /// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n\n\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, \"find\", {\n    value: function value(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError(\"\\\"this\\\" is null or not defined\");\n      }\n\n      var o = Object(this); // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\n      var len = o.length >>> 0; // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n\n      if (typeof predicate !== \"function\") {\n        throw new TypeError(\"predicate must be a function\");\n      } // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\n\n      var thisArg = arguments[1]; // 5. Let k be 0.\n\n      var k = 0; // 6. Repeat, while k < len\n\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        } // e. Increase k by 1.\n\n\n        k++;\n      } // 7. Return undefined.\n\n\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n} /// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    // eslint-disable-next-line no-unused-vars\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      \"use strict\";\n\n      if (target == null) {\n        // TypeError if undefined or null\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) {\n          // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n} // https://github.com/tc39/proposal-object-values-entries/blob/master/polyfill.js\n\n\nvar reduce = Function.bind.call(Function.call, Array.prototype.reduce);\nvar isEnumerable = Function.bind.call(Function.call, Object.prototype.propertyIsEnumerable);\nvar concat = Function.bind.call(Function.call, Array.prototype.concat);\nvar keys = Object.getOwnPropertyNames;\n\nif (!Object.values) {\n  Object.values = function values(O) {\n    return reduce(keys(O), function (v, k) {\n      return concat(v, typeof k === \"string\" && isEnumerable(O, k) ? [O[k]] : []);\n    }, []);\n  };\n}\n\nif (!Object.entries) {\n  Object.entries = function entries(O) {\n    return reduce(keys(O), function (e, k) {\n      return concat(e, typeof k === \"string\" && isEnumerable(O, k) ? [[k, O[k]]] : []);\n    }, []);\n  };\n}","\"use_strict\";\n/**\n * Aliases handlers & most known Stellar addresses.\n *\n * @private\n * @exports aliases\n */\n\nvar aliases = exports;\n/**\n * Add new **aliases** or replace existing ones.\n *\n * @example\n * cosmicLib.config.addAliases({\n *   'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n *   'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io'\n * })\n *\n * @param {Object} aliases An object such as `{ publicKey1: name1, ..., publicKeyN: nameN }`\n */\n\naliases.set = function (conf, aliases) {\n  conf.aliases = Object.assign(conf.aliases, aliases);\n};\n/**\n * Remove **publicKeys** from aliases list.\n *\n * @example\n * cosmicLib.config.removeAliases([\n *  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP',\n *  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5',\n * ])\n *\n * @param {Array} publicKeys An array of public keys\n */\n\n\naliases.remove = function (conf, publicKeys) {\n  publicKeys.forEach(function (entry) {\n    return delete conf.aliases[entry];\n  });\n};\n/**\n * Aliases handlers & most known Stellar addresses. Aliases takes the form:\n *\n * ```js\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n */\n\n\naliases.all = {\n  GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2: \"aex.com\",\n  GASWJWFRYE55KC7MGANZMMRBK5NPXT3HMPDQ6SEXZN6ZPWYXVVYBFRTE: \"anchorusd.com\",\n  GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX: \"anchorusd.com\",\n  GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4: \"apay.io\",\n  GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF: \"apay.io\",\n  GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR: \"apay.io\",\n  GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP: \"apay.io\",\n  GCYKQ2627BPKMSUZJK64GPYVKD4TRNACP45X6B754PR6TCYJXCHGUTWB: \"apiscapitalfunds.com\",\n  GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC: \"astral9.io\",\n  GDZURZR6RZKIQVOWZFWPVAUBMLLBQGXP2K5E5G7PEOV75IYPDFA36WK4: \"atlantisblue.org\",\n  GABQBEZCNQRUHURCG6E2UZC6QXXEPLALHBVA6J6IQNKNJL66VPY7FO7G: \"auskunft.de\",\n  GACVB2E6IEV2UT6IDVOO5B5CNN7WPKJFR36B7KD7ZNXDANPTSYNMZYQM: \"binance.com\",\n  GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A: \"binance.com\",\n  GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC: \"binance.com\",\n  GBOXNWGBB7SG3NVIA7O25M7JIRSXQ4KKU3GYARJEFMQXSR3APF3KRI6S: \"bitbox.one\",\n  GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL: \"bitfinex.com\",\n  GD4J347D3NT267QWCMJDZKJPEQFO2VENLZV6NUHFJQIDVMHGPWYRZ2BC: \"bitgo.com\",\n  GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3: \"bittrex.com\",\n  GDZHCJ73D23MJ76OAR2NQQICB3D3ENUPFT6KVYON3KXY73U6SWN25SU5: \"bittrex.com\",\n  GBBAMI2WU6WJHDL3CQKT4LPXUC76WCEMQJMJIVQGL2G5IKJ2JHEVHG3G: \"bitx.tk\",\n  GATTH3VPK4PMXLE7JSEJ3OC72OYOGJYINLHSCJX365BP6SAV6GKSHJAV: \"bostravel.online\",\n  GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM: \"btc38.com\",\n  GB3RMPTL47E4ULVANHBNCXSXM2ZA5JFY5ISDRERPCXNJUDEO73QFZUNK: \"cex.io\",\n  GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7: \"changelly.com\",\n  GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP: \"charnatoken.top\",\n  GBOAYBE3NJKS4WPIVM2H5DVFIDYLAHHD2DAWYL5LLUVYF77M3JIVGCTR: \"citron.cash\",\n  GCJGYOH2EYW6FFISLBA3L3R3PUYCQ6DQ47GXVAMG7JLLIKPAPV3RLBSV: \"citron.cash\",\n  GBDUXW4E5WRM5EM6UXBLE7Y5XGSXJX472BSSBPKFPQ3PJCJHRIA6SH4C: \"coinbase.com\",\n  GBP4RYNGHJXLLSMUA4ZXE7TZBN7ILFUTLTIKUJFJQGALD3764HJBB5AX: \"coinbase.com\",\n  GDQP2KPQGKIHYJGXNUIYOMHARUARCA7DJT5FO2FFOOKY3B2WSQHG4W37: \"coinbase.com\",\n  GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP: \"coins.asia\",\n  GAWODAROMJ33V5YDFY3NPYTHVYQG7MJXVJ2ND3AOGIHYRWINES6ACCPD: \"cowrie.exchange\",\n  GDMXNQBJMS3FYI4PFSYCCB4XODQMNMTKPQ5HIKOUWBOWJ2P3CF6WASBE: \"cryptomkt.com\",\n  GA4BYMUO5D7OLGVJWZ2D5FCWU7SB63FNZ4QUU574SMNA6ELK5TZD3SO3: \"cryptomover.com\",\n  GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ: \"cryptomover.com\",\n  GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3: \"cryptomover.com\",\n  GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG: \"cryptomover.com\",\n  GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI: \"cryptomover.com\",\n  GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2: \"cryptomover.com\",\n  GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7: \"cryptotari.io\",\n  GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN: \"equid.co\",\n  GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH: \"exrates.me\",\n  GAQ6W5I7LIWQAE47ZY7EQWRVVF2JELYXG6OKL7HHOSL5MWVEIGRPGYCO: \"factrpay.io\",\n  GAZEX2USUBMMWFRZFS77VDJYXUFLXI4ZGFPWX6TBNZCSTEQWNLFZMXFF: \"fchain.io\",\n  GBETHKBL5TCUTQ3JPDIYOZ5RDARTMHMEKIO2QZQ7IOZ4YC5XV3C2IKYU: \"fchain.io\",\n  GCMS2VO5ANJCESJBZVC3INFSETS3K4UWMU47W7KSQ2BYASEQAN4NUSTM: \"fchain.io\",\n  GCNY5OXYSY4FKHOPT2SPOQZAOEIGXB5LBYW3HVU3OWSTQITS65M5RCNY: \"fchain.io\",\n  GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW: \"flutterwave.com\",\n  GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M: \"frasindo.com\",\n  GBUAVXCI7JKH6D2ZHZ6KZ7Z5MHHCXHI4DSUUC4KOISDMRPVY3MRBF3OY: \"freight-coin.com\",\n  GDGDECMFS34OVTQJKTCHORPE7LOYDH2XYNRMUHLGCJFP56VUN6AW5LCF: \"freight-coin.com\",\n  GBUYUAI75XXWDZEKLY66CFYKQPET5JR4EENXZBUZ3YXZ7DS56Z4OKOFU: \"funtracker.site\",\n  GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S: \"gate.io\",\n  GARFMAHQM4JDI55SK2FGEPLOZU7BTEODS3Y5QNT3VMQQIU3WV2HTBA46: \"glitzkoin.com\",\n  GDYNTGXBDWARLJ34GRQ4ON4EGBXSTPR5LEDTD5LLOOHPS6EZU6QXIIYO: \"goodx.network\",\n  GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO: \"gopax.co.kr\",\n  GAJ7V3EMD3FRWAPBEJAP7EC4223XI5EACDZ46RFMY5DYOMCIMWEFR5II: \"gratz.io\",\n  GA6KR5DMGJ6OPPG4OONB65JPU3TZE2CWCLKTBV4DHXFA2Z4XKWQSVCTC: \"heir.io\",\n  GB2X6RCO2VAXOD7GXE5VJWXOUTYDKPHIAHJSM2CGZJXKZSIHREEP4654: \"heir.io\",\n  GB6DMQ5IZUPRRMNTPU4H5FX32DRYCZ447REBEQ32YGVPPGZI5MX4AHOT: \"hotoken.io\",\n  GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S: \"indodax.com\",\n  GCNSGHUCG5VMGLT5RIYYZSO7VQULQKAJ62QA33DBC5PPBSO57LFWVV6P: \"interstellar.exchange\",\n  GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL: \"irene.energy\",\n  GANZBUS4726LBT2CBJ3BGF3TP4NJT5MHZMI423NHMXFRWGO2DCBQEXYZ: \"jetmint.org\",\n  GCQHDR2KSCVNULFX3C2NKFEXNJEUELJVMQAN3OCLAM5KXG4DWQSRMXYZ: \"jetmint.org\",\n  GD4T35DMXYDE7BJWYPUWK43VFJO5IBUQYG2YGMICPTWP4JTNWQELKAVA: \"kava.world\",\n  GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP: \"koinex.in\",\n  GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM: \"kraken.com\",\n  GB6JTIT5PHAZA4VMFI7TGGG44TE3LEDFPG52GSKBZOPDDDMNJAGSF46T: \"kucoin.com\",\n  GBJNV2MQA7M5GNBRDFW46JLXIN7ZLYVVM4UW4CWDZO4KZKXIXCRYHMH2: \"kucoin.com\",\n  GCTLB7LW7B5ON4QIBIDEWA7MC2KJL2NZEXK24RU32QNOB5IMMCGNLMBD: \"kucoin.com\",\n  GC3L2FLR2QMUSOJ6QMQHKIWUKEXGOXSIN2KY72SDUHPC2KO6HOSQIXIF: \"levelg.net\",\n  GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX: \"liquido.cc\",\n  GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT: \"lumenaut.net\",\n  GBVB43NLVIP2USHXSKI7QQCZKZU2Z6U6A5PAHMIW7LLNVMQJTOX2BZI5: \"luxpayband.io\",\n  GDTEQF6YGCKLIBD37RJZE5GTL3ZY6CBQIKH7COAW654SYEBE6XJJOLOW: \"luxpayband.io\",\n  GD2YURFWC5LIRLM4CCVZZHCFV6WXO46VOSBBPTJG6MPQN6ANYZZOLQJL: \"martialartscoin.io\",\n  GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH: \"mobius.network\",\n  GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK: \"moni.com\",\n  GB56YLTH5SDOYTUGPWY5MXJ7VQTY7BEM2YVJZTN5O555VA6DJYCTY2MP: \"moonpool.space\",\n  GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH: \"naobtc.com\",\n  GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS: \"naobtc.com\",\n  GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES: \"naobtc.com\",\n  GD6RMKTCHQGEOGYWIKSY5G7QWXPZOAEZIKPKEVZUAXOQCZRVBRRFGLJM: \"nydro.energy\",\n  GDNXSZSF7HIGVRL2LG6VWXN5PWV3KHI77DQTHLLPKNPLUZFKRRDQJBXP: \"nydro.energy\",\n  GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB: \"okex.com\",\n  GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6: \"old.repocoin.io\",\n  GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN: \"old.sureremit.co\",\n  GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW: \"papayabot.com\",\n  GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L: \"papayabot.com\",\n  GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY: \"pedity.com\",\n  GBIL5TOVTZFNV3XS3E2LWTKU5SYOJ3UBCVBSKAMP4EE4MV2VSZQK7NRZ: \"pigzbe.com\",\n  GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW: \"piiko.co\",\n  GAJWJTV5GW5J2WCBPQNWLAL2EYUIIUB6OIROHOV7YVJJWZXPXQWSMHRH: \"points.network\",\n  GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2: \"poloniex.com\",\n  GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5: \"pr.network\",\n  GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B: \"repocoin.io\",\n  GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX: \"ripplefox.com\",\n  GCLDH6L6FBLTD3H3B23D6TIFVVTFBLZMNBC3ZOI6FGI5GPQROL4FOXIN: \"ripplefox.com\",\n  GB2WB73G5IWRXEUTJANAIF52JFTDXOXORAP4S5HZRW23TZG2ONDVZMVA: \"scopuly.com\",\n  GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z: \"six.network\",\n  GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP: \"smartlands.io\",\n  GAIGG2ICK2ATV7VUQC6MZHOSMRMFJK3T65IVNUZ7EJEEAU5UJQPPDIST: \"steemanchor.com\",\n  GB3KBOFUCVTWEZ7YIZ7PAKLQMKPCTGWU3LOMANMCT7V6I3AAK4USTEEM: \"steemanchor.com\",\n  GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD: \"stellarguard.me\",\n  GA6D2S6XDBT7WZIZNDGUBLXUGDAGLZGZ2SYT2JLXD4BB2W76XS66FZ2S: \"stellar.org\",\n  GAENIE5LBJIXLMJIAJ7225IUPA6CX7EGHUXRX5FLCZFFAQSG2ZUYSWFK: \"stellar.org\",\n  GANOI26P6VAUL4NFVA4FAIOIBOR46NORONBIWUPRIGAMP7T5W5MOY4O6: \"stellar.org\",\n  GAX3BRBNB5WTJ2GNEFFH7A4CZKT2FORYABDDBZR5FIIT3P7FLS2EFOZZ: \"stellar.org\",\n  GAYOCVRRNXGQWREOZBDP4UEW475NKZKLA4EIEIBKBSJN2PQQWUQ5KGUH: \"stellar.org\",\n  GB6NVEN5HSUBKMYCE5ZOWSK5K23TBWRUQLZY3KNMXUZ3AQ2ESC4MY4AQ: \"stellar.org\",\n  GBEZOC5U4TVH7ZY5N3FLYHTCZSI6VFGTULG7PBITLF5ZEBPJXFT46YZM: \"stellar.org\",\n  GBVVWWN4YP76FKGO7RB42FSZDYD2PBXY2PJY3F6JJWLYU74TKUG775UP: \"stellar.org\",\n  GCO4EFT6KUOQKVZO2O4GR5CJKMARBORXRE7KAKH36ZFAX662ZHINQ6UA: \"stellar.org\",\n  GDKIJJIKXLOM2NRMPNQZUUYK24ZPVFC6426GZAEP3KUK6KEJLACCWNMX: \"stellar.org\",\n  GDTNE54IWDB3UQLMIUSBKIDTMUW7FNKBU4VB2GVW4OL65BZN7W5VRNVY: \"stellar.org\",\n  GDUY7J7A33TQWOSOQGDO776GGLM3UQERL4J3SPT56F6YS4ID7MLDERI4: \"stellar.org\",\n  GDWNY2POLGK65VVKIH5KQSH7VWLKRTQ5M6ADLJAYC2UEHEBEARCZJWWI: \"stellar.org\",\n  GA5Z7QOQFSNIFFRZ3CDHLOWRPBWHPX5EGCTKT5KXU2CGJD7EIK2ZMALP: \"stellarpay.org\",\n  GAMA33LC7FK5RF4XE5HOVX456GX4VHDZUCJ7APY4TZ4IHG65ZWVXD333: \"stellarpay.org\",\n  GAYYPNEDENPNDNVPQD7U54JXMZZYTZAHWJLRRWBLP5PU6PBRSLH7LKNA: \"stellarpay.org\",\n  GBNWX7R4WVOWEYVKWN7KJ773X6C7OKNIGMVVDQI4B7XXMR6Y4OCUTBX2: \"stellarpay.org\",\n  GC2PJ6J37QM3DOQ63DVGCXTRC5QOKAJUBQO2XKBXOJCWTCOCP75KWUDX: \"stellarpay.org\",\n  GCAIDZBFE3WEIZSXQONQKUUTG6VLVKG2BBJYGWKEHQ2FZZ76VR326WYW: \"stellarpay.org\",\n  GCE3XS3D2F2W5LQWZHLG25ANAFIQOVMORH46JHVXOMW3FN27IPVJEGGG: \"stellarpay.org\",\n  GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5: \"stellarport.io\",\n  GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW: \"stellarterm.com\",\n  GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M: \"stemchain.io\",\n  GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG: \"stronghold.co\",\n  GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK: \"stronghold.co\",\n  GCSTRLTC73UVXIYPHYTTQUUSDTQU2KQW5VKCE4YCMEHWF44JKDMQAL23: \"stronghold.co\",\n  GDSTRSHXHGJ7ZIVRBXEYE5Q74XUVCUSEKEBR7UCHEUUEK72N7I7KJ6JH: \"stronghold.co\",\n  GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI: \"superlumen.org\",\n  GCZYLNGU4CA5NAWBAVTHMZH4JXWKP2OUJ6OK3I7XXZCNA5622WUJVLTG: \"sureremit.co\",\n  GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N: \"sureremit.co\",\n  GCTXRQIYWEDP6G7OXZI6IXUSIXHHSN5NKYRB3NI5J4Z7G5JMIBHLLBTC: \"tamm.fund\",\n  GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S: \"tempo.eu.com\",\n  GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C: \"ternio.io\",\n  GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3: \"thefutbolcoin.io\",\n  GDSVWEA7XV6M5XNLODVTPCGMAJTNBLZBXOFNQD3BNPNYALEYBNT6CE2V: \"thewwallet.com\",\n  GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON: \"tontinetrust.com\",\n  GAKRDXBHA2TTOYJZQIAQ7ZDS555P24RAYRUUZWU3KHSLIOZMVV4IITXT: \"traxalt.com\",\n  GAW4E6NGM4NPNX2LO2BKDPCCTUX3FJLKWHPU4VQPGBIBQGD6JTVF5C7C: \"upbit.com\",\n  GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN: \"winsome.gift\",\n  GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT: \"wirexapp.com\",\n  GBOFQCVZF2DSFLJPJMKH7CIECCN7TYVAT2CSD73IVEBJJQU2VW6JNFHT: \"wirexapp.com\",\n  GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM: \"ximcoin.com\",\n  GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5: \"xirkle.com\",\n  GA3FUYFOPWZ25YXTCA73RK2UGONHCO27OHQRSGV3VCE67UEPEFEDCOPA: \"xlmpool.com\",\n  GDSRCV5VTM3U7Y3L6DFRP3PEGBNQMGOWSRTGSBWX6Z3H6C7JHRI4XFJP: \"x.token.io\"\n};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\"use_strict\";\n/**\n * Nice formating of numbers.\n *\n * @example\n * nice(35)                     // => 35.00\n * nice(35, 4)                  // => 35.0000\n * nice(35, { significant: 2})  // => 35\n * nice(35, { min: 3 })         // => 35.000\n * nice(35, { max: 1 })         // => 35.0\n *\n * @param  {String|Number} value The value to format\n * @param  {Number} [precision] Short form for `options.precision`\n * @param  {Object} [options]\n * @param  {Number} [options.precision=null] How much digit after the dot.\n *     Override options.significant.\n * @param  {Number} [options.significant=4] How much significant numbers (+/-\n *     one).\n * @param  {Number} [options.min=null] Minimum number of digits after the dot.\n * @param  {Number} [options.max=null] Maximum number of digits after the dot.\n * @return {String} The formatted value\n */\n\nmodule.exports = function (value) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof opts === \"number\") opts = {\n    precision: opts\n  };\n  if (value === undefined || isNaN(value)) return \"...\";else if (value == 0) return 0;\n\n  if (opts.precision == null) {\n    opts.precision = precisionAuto(Number(value), opts);\n  }\n\n  if (opts.min != null) opts.precision = Math.max(opts.min, opts.precision);\n  if (opts.max != null) opts.precision = Math.min(opts.max, opts.precision);\n  return Number(value).toFixed(opts.precision);\n};\n\nfunction precisionAuto(value, opts) {\n  if (opts.significant == null) opts.significant = 4;\n  var precision = 0;\n  var str = String(value);\n  var firstNonZero = str.search(/[^0.]/);\n\n  if (firstNonZero) {\n    precision = firstNonZero + opts.significant - 2;\n  } else {\n    var pointIndex = str.indexOf(\".\");\n\n    if (pointIndex === -1) {\n      precision = opts.significant - str.length;\n    } else if (pointIndex < opts.significant) {\n      precision = opts.significant - pointIndex;\n    }\n  }\n\n  if (precision) precision = Math.round(precision / 2) * 2;\n  return precision > 0 ? precision : 0;\n}","\"use_strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar html = env.isBrowser && require(\"@cosmic-plus/domutils/es5/html\");\n\nvar action = require(\"./action\");\n\nvar config = require(\"./config\");\n\nvar convert = require(\"./convert\");\n\nvar format = env.isBrowser && require(\"./format\");\n\nvar parse = require(\"./parse\");\n\nvar resolve = require(\"./resolve\");\n\nvar status = require(\"./status\");\n/**\n * | Formats                                     | Data                                | Actions                                        | Editor                                       | HTML elements\n * |---------------------------------------------|-------------------------------------|------------------------------------------------|----------------------------------------------|----------------------------------------\n * |-----------------------|-----------------------|-----------------------|-----------------------|-----------------------\n * | [uri]{@link CosmicLink#uri}                 |[page]{@link CosmicLink#page}        |[selectNetwork]{@link CosmicLink#selectNetwork} |[parse]{@link CosmicLink#parse}               |[htmlDescription]{@link CosmicLink#htmlDescription}\n * | [query]{@link CosmicLink#query}             |[network]{@link CosmicLink#network}  |await [lock]{@link CosmicLink#lock}             |[setTxFields]{@link CosmicLink#setTxFields}   |[htmlLink]{@link CosmicLink#htmlLink}\n * | [tdesc]{@link CosmicLink#tdesc}             |[horizon]{@link CosmicLink#horizon}  |[sign]{@link CosmicLink#sign}                   |[addOperation]{@link CosmicLink#addOperation} |\n * | [json]{@link CosmicLink#json}               |[callback]{@link CosmicLink#callback}|await [send]{@link CosmicLink#send}             |[setOperation]{@link CosmicLink#setOperation}\n * | [transaction]{@link CosmicLink#transaction} |[source]{@link CosmicLink#source}    |\n * | [xdr]{@link CosmicLink#xdr}                 |[status]{@link CosmicLink#status}    |\n * | [sep7]{@link CosmicLink#sep7}               |[errors]{@link CosmicLink#errors}    |\n * |                                             |[locker]{@link CosmicLink#locker}\n * |                                             |[cache]{@link CosmicLink#cache}\n * -----\n *\n * The **CosmicLink** class represents Stellar\n * [transactions]{@link https://stellar.org/developers/guides/concepts/transactions.html}\n * encoded in various formats. It allows to convert between those formats, to\n * edit the underlying transaction, to build it, to sign it and to send it to\n * the blockchain.\n *\n * There are 3 main formats from which the other are derived:\n *\n * * The StellarSdk [Transaction]{@link {@link https://stellar.github.io/js-stellar-sdk/Transaction.html}} object. (**transaction**)\n * * The CosmicLink, which is a transaction encoded as a query. (**query**)\n * * The Tdesc, which is an internal JSON-compatible format in-between those two.\n *   It is the easier format to work with. (**tdesc**)\n *\n * Those formats can be derived into other related formats:\n *\n * * The XDR, which's a base64 representation of StellarSdk Transaction. (**xdr**)\n * * The Sep-0007 link, in its XDR form. (**sep7**)\n * * The CosmicLink URL/URI, which is a page plus the query. (**uri**)\n * * The Tdesc JSON, which is its stringified version. (**json**)\n *\n * A CosmicLink object can be created from any of those formats. Some of the\n * other formats are immediately available, while others may need an\n * `await cosmicLink.lock()` operation to become computable:\n *\n * * If you create a CosmicLink from an **uri**, a **query**, a **tdesc** or a\n *   **json**, only those 4 formats are available at first. Transaction, xdr &\n *   sep7 will become available after a `cosmicLink.lock()`. (**free formats**)\n * * If you create a CosmicLink from a **transaction**, an **xdr** or a **sep7**,\n *   all formats will immediately be available. (**locked formats**)\n *\n * For a better efficiency, formats are lazy-evaluated. This means that they are\n * computed once only if/when you call them:\n *\n * ```js\n * const cosmicLink = new CosmicLink(xdr, { network: 'test' })\n * console.log(cosmicLink.query)\n * ```\n *\n * The role of `cosmicLink.lock()` is centric to this class. In practice, the\n * free formats don't have to be tied to a **network**, a **source** or a\n * **sequence number**. For example, the CosmicQuery `?inflation` is a valid\n * generic transaction that can be locked to any network/source/sequence\n * combination.\n *\n * On the other hand, locked formats are always tied to a particular combination\n * of those, hence the need for a **lock** command:\n *\n * ```js\n * const cosmicLib = require('cosmic-lib')\n * cosmicLib.network = 'test'\n * cosmicLib.source = 'tips*cosmic.link'\n *\n * const cosmicLink = new cosmicLib.CosmicLink('?inflation')\n *\n * console.log(cosmicLink.tdesc.source)    // => undefined\n * console.log(cosmicLink.tdesc.network)   // => undefined\n * console.log(cosmicLink.tdesc.sequence)  // => undefined\n * console.log(cosmicLink.xdr)             // => undefined\n *\n * await cosmicLink.lock({)\n *\n * console.log(cosmicLink.tdesc.source)    // => 'GC6Z...2JVW'\n * console.log(cosmicLink.tdesc.network)   // => 'test'\n * console.log(cosmicLink.tdesc.sequence)  // => 29...3903\n * console.log(cosmicLink.xdr)             // => 'AAAA....AA=='\n * ```\n *\n * The **lock** command is asynchronous because free formats accept\n * [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html},\n * but locked formats don't. The library automatically resolve\n * those and this is an asynchronous operation. At the same time, it downloads\n * the required data from the blockchain to handle multi-signers transactions.\n *\n * After the lock operation, all free formats are updated according to the new\n * state of the transaction. It is now possible to `cosmicLink.sign(keypair)`\n * it, and to `cosmicLink.send()` it to the blockchain.\n */\n\n\nvar CosmicLink =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   * Create a new CosmicLink object. **transaction** can be one of the accepted\n   * format: uri, query, json, tdesc, transaction, xdr or sep7.\n   *\n   * @constructor\n   * @param {string|Object|Transaction} transaction A transaction in one of\n   *  thoses formats: uri, query, json, tdesc, transaction, xdr, sep7\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format.\n   * @param {string} options.network For Transaction/XDR formats, the network for\n   *     which it have been created\n   * @param {boolean} options.stripSignatures If set, will strip out signatures\n   *     from XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set, will strip out signatures\n   *     and sequence number from XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set, will strip out signatures,\n   *     sequence number and transaction primary source account from\n   *     XDR/Transaction formats.\n   * @return {CosmicLink}\n   */\n  function CosmicLink(transaction, options) {\n    _classCallCheck(this, CosmicLink);\n\n    initCosmicLink(this, transaction, options);\n  }\n  /**\n   * Refer to the underlying global configuration\n   * @private\n   */\n\n\n  _createClass(CosmicLink, [{\n    key: \"parse\",\n\n    /**\n     * Re-parse this CosmicLink. Useful in implementing transaction editors. The\n     * parameters are the same than [Constructor]{@link CosmicLink#Constructor},\n     * and the result is similar except that no new CosmicLink object is created.\n     */\n    value: function parse(transaction, options) {\n      initCosmicLink(this, transaction, options);\n    } /// Formats\n\n    /**\n     * A CosmicLink is a URI that embed a Cosmic [Query]{@link CosmicLink#query}.\n     * This format is simply the `cosmicLink.query` appended to the\n     * `cosmicLink.page`\n     */\n\n  }, {\n    key: \"setTxFields\",\n    /// Editor\n\n    /**\n     * Add/remove transaction fields and reparse the CosmicLink. **object** should\n     * follow the Tdesc format, but fields values can be written using query or\n     * StellarSdk format as well.\n     *\n     * @example\n     * cosmicLink.setTxFields({ minTime: '2018-10', maxTime: '2019-01' })\n     *\n     * @example\n     * cosmicLink.setTxFields({ minTime: null, maxTime: null })\n     *\n     * @example\n     * cosmicLink.setTxFields({ memo: 'Bonjour!' })\n     *\n     * @param {Object} object Transaction fields definition. Fields can be either\n     *   written using the JSON format or the query format\n     * @return {CosmicLink}\n     */\n    value: function setTxFields(object) {\n      checkLock(this);\n      this.parse(Object.assign(this.tdesc, object));\n      return this;\n    }\n    /**\n     * Add a new operation to CosmicLink. **params** should follow the Tdesc format,\n     * but fields values can be written using query or StellarSdk format as well.\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: 'CNY:admin*ripplefox' })\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: { code: 'CNY', issuer: 'admin*ripplefox } })\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: new StellarSdk.Asset('CNY', ...) })\n     *\n     * @param {string} type The operation type.\n     * @param {Object} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"addOperation\",\n    value: function addOperation(type, params) {\n      checkLock(this);\n      var odesc = Object.assign({\n        type: type\n      }, params);\n      this.tdesc.operations.push(odesc);\n      this.parse(this.tdesc);\n      return this;\n    }\n    /**\n     * Set/remove one of the CosmicLink operations. **params** should follow the\n     * Tdesc format, but fields can be written using query or StellarSdk format\n     * as well. If **type** is set to `null`, the operation at **index**\n     * is deleted.\n     *\n     * @example\n     * cosmicLink.setOperation(1, 'setOptions', { homeDomain: 'example.org' })\n     *\n     * @example\n     * cosmicLink.setOperation(2, null)\n     *\n     * @param {integer} index The operation index.\n     * @param {type} type  The operation type.\n     * @param {params} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"setOperation\",\n    value: function setOperation(index, type, params) {\n      checkLock(this);\n\n      if (!this.tdesc.operations[index]) {\n        throw new Error(\"Operation \".concat(index, \" doesn't exists\"));\n      }\n\n      if (type === null) {\n        this.tdesc.operations.splice(index, 1);\n      } else {\n        this.tdesc.operations[index] = Object.assign({\n          type: type\n        }, params);\n        this.parse(this.tdesc);\n      }\n\n      return this;\n    } /// Actions\n\n    /**\n     * Select the network that this CosmicLink uses.\n     */\n\n  }, {\n    key: \"selectNetwork\",\n    value: function selectNetwork() {\n      return resolve.useNetwork(this);\n    }\n  }, {\n    key: \"lock\",\n    value: function lock(options) {\n      return action.lock(this, options);\n    }\n  }, {\n    key: \"sign\",\n    value: function sign() {\n      for (var _len = arguments.length, keypairs_or_preimage = new Array(_len), _key = 0; _key < _len; _key++) {\n        keypairs_or_preimage[_key] = arguments[_key];\n      }\n\n      return action.sign.apply(action, [this].concat(keypairs_or_preimage));\n    }\n  }, {\n    key: \"send\",\n    value: function send(horizon) {\n      return action.send(this, horizon);\n    }\n    /**\n     * The HTML DOM node that displays a description of the current transaction.\n     * This is a browser-only property.\n     *\n     * If your HTML page contains an element with `id=\"cosmiclink_description\"`,\n     * it will automatically get populated with the description of the last\n     * CosmicLink created.\n     */\n\n  }, {\n    key: \"hasSigned\",\n    value: function hasSigned(accountId) {\n      misc.deprecated(\"2019-03\", \"cosmicLink.hasSigned\", \"cosmicLink.transaction.hasSigned\");\n      return this.transaction.hasSigned(accountId);\n    }\n  }, {\n    key: \"hasSigner\",\n    value: function hasSigner(accountId) {\n      misc.deprecated(\"2019-03\", \"cosmicLink.hasSigner\", \"cosmicLink.transaction.hasSigner\");\n      return this.transaction.hasSigner(accountId);\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      return this.__proto__.__proto__;\n    }\n  }, {\n    key: \"uri\",\n    get: function get() {\n      if (this.query) return this.page + this.query;else return undefined;\n    }\n    /**\n     * CosmicLink's transaction encoded in the Cosmic\n     * [Query]{@link tutorial:specs_query} format. This format allows to\n     * conveniently pass around Stellar transactions over any URI.\n     */\n\n  }, {\n    key: \"query\",\n    get: function get() {\n      if (!this._query) {\n        if (this.xdr) this._query = convert.xdrToQuery(this, this.xdr, this.tdesc);else if (this.tdesc) this._query = convert.tdescToQuery(this, this.tdesc);else return undefined;\n      }\n\n      return this._query;\n    }\n    /**\n     * CosmicLink's transaction in Tdesc format. This is in-between an objectified\n     * query representation and a simplified StellarSdk Transaction object. It has\n     * been created to be convenient to understand, use and manipulate.\n     *\n     * If you need to read the transaction parameters, this is the format of\n     * choice:\n     *\n     * ```js\n     * console.log(cosmicLink.tdesc.network) // Does the transaction enforce a network?\n     * console.log(cosmicLink.tdesc.source)  // Does the transaction enforce a source?\n     * console.log(cosmicLink.tdesc.memo)    // A simplified memo object or undefined\n     * console.log(cosmicLink.operations)    // Transaction operations in simplified format\n     * ```\n     *\n     * This formats authorize [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html}\n     * everywhere StellarSdk Transaction accept public keys. Those addresses are\n     * resolved when running the [lock]{@link CosmicLink#lock} method, and the\n     * tdesc is replaced by a resolved one.\n     *\n     * Tdesc is also very convenient to edit. To keep the CosmicLink in sync, you\n     * either need to [parse]{@link CosmicLink#parse} the edited tdesc, or to edit\n     * it using the dedicated methods:\n     *\n     * * [setTxFields]{@link CosmicLink#setTxFields}: set/clear transaction fields\n     * * [addOperation]{@link CosmicLink#addOperation}: add a new operation\n     * * [setOperation]{@link CosmicLink#setOperation}: edit/clear an operation\n     */\n\n  }, {\n    key: \"tdesc\",\n    get: function get() {\n      if (!this._tdesc) {\n        if (this.transaction) this._tdesc = convert.transactionToTdesc(this, this.transaction, this.locker);else return undefined;\n      }\n\n      return this._tdesc;\n    }\n    /**\n     * CosmicLink's transaction in JSON format. This is a stringified version of\n     * [Tdesc]{@link CosmicLink#tdesc} format.\n     */\n\n  }, {\n    key: \"json\",\n    get: function get() {\n      if (!this._json) this._json = convert.tdescToJson(this, this.tdesc);\n      return this._json;\n    }\n    /**\n     * CosmicLink's transaction in StellarSdk\n     * [Transaction]{@link https://stellar.github.io/js-stellar-sdk/Transaction.html}\n     * format.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"transaction\",\n    get: function get() {\n      return this._transaction;\n    }\n    /**\n     * CosmicLink's transaction in\n     * [XDR]{@link https://stellar.org/developers/guides/concepts/xdr.html}\n     * format.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"xdr\",\n    get: function get() {\n      if (!this._xdr) {\n        if (!this.transaction) return undefined;\n        this._xdr = convert.transactionToXdr(this, this.transaction);\n      }\n\n      return this._xdr;\n    }\n    /**\n     * CosmicLink transaction in\n     * [SEP-0007]{@link https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md}\n     * link format. Only the XDR part of this protocol is currently supported by\n     * CosmicLink, minus the signature verification.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"sep7\",\n    get: function get() {\n      if (!this._sep7) {\n        if (!this.xdr) return undefined;\n        this._sep7 = convert.xdrToSep7(this, this.xdr, this.tdesc);\n      }\n\n      return this._sep7;\n    } /// Data\n\n    /**\n     * The page this CosmicLink uses to construct its [URI]{@link CosmicLink#uri}.\n     *\n     * @var CosmicLink#page\n     */\n\n    /**\n     * The source for this transaction. This can be defined either locally\n     * (`cosmicLink.tdesc.source`) or globally (`cosmicLib.config.source`). The\n     * local configuration takes precedence, or, in other words, the global source\n     * is a fallback value in case the transaction emitter doesn't set one.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"source\",\n    get: function get() {\n      return this.tdesc && this.tdesc.source || this.config.source;\n    }\n    /**\n     * The network for this transaction. This can be defined either locally\n     * (`cosmicLink.tdesc.network`) or globally (`cosmicLib.config.network`). The\n     * local configuration takes precedence, or, in other words, the global\n     * network is a fallback value in case the transaction emitter doesn't set\n     * one.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"network\",\n    get: function get() {\n      return this.tdesc && this.tdesc.network || this.config.network;\n    }\n    /**\n     * The URL of the horizon node from which ledger data will be retrieved, and\n     * to which the signed transaction will be posted if there's no\n     * [callback]{@link CosmicLink#callback}.\n     *\n     * This can be defined either locally (`cosmicLink.tdesc.horizon`) or globally\n     * (using [setupNetwork]{@link module:config.setupNetwork}). This parameter is\n     * special in the sense that it's the only one for which the global\n     * configuration takes precedence.\n     *\n     * The rationale for this behavior is that we want transaction emitter to\n     * provide a fallback Horizon URL in the special case none is known for a\n     * custom network, but generally speaking it won't be right to allow the\n     * transaction emitter to force us to use a particular Horizon node.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"horizon\",\n    get: function get() {\n      return resolve.horizon(this.config, this.network) || this.tdesc && this.tdesc.horizon;\n    }\n    /**\n     * The URL at which the signed transaction will be posted. This can be defined\n     * either locally (`cosmicLink.tdesc.callback`) or globally\n     * (`cosmicLib.config.callback`). The local configuration takes precedence.\n     *\n     * When no callback is defined, the signed transaction is posted to\n     * [Horizon]{@link CosmicLink#horizon}. This is the default behavior.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"callback\",\n    get: function get() {\n      return this.tdesc && this.tdesc.callback || this.config.callback;\n    }\n  }, {\n    key: \"htmlDescription\",\n    get: function get() {\n      if (!this._htmlDescription) makeHtmlDescription(this);\n      return this._htmlDescription;\n    }\n    /**\n     * A link HTML Element that points to `cosmicLink.uri`\n     */\n\n  }, {\n    key: \"htmlLink\",\n    get: function get() {\n      if (!this._htmlLink) makeHtmlLink(this);\n      return this._htmlLink;\n    } /// Backward compatibility (2018-09 -> 2019-03).\n\n  }, {\n    key: \"server\",\n    get: function get() {\n      return resolve.server(this);\n    }\n  }, {\n    key: \"htmlNode\",\n    get: function get() {\n      misc.deprecated(\"2019-03\", \"cosmicLink.htmlNode\", \"cosmicLink.htmlDescription\");\n      return this.htmlDescription;\n    }\n  }, {\n    key: \"transactionNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_transactionNode\", this.htmlDescription);\n    }\n  }, {\n    key: \"statusNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_statusNode\", this.htmlDescription);\n    }\n  }, {\n    key: \"signersNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_signersNode\", this.htmlDescription);\n    }\n  }]);\n\n  return CosmicLink;\n}();\n/**\n * Initialize or reset a CosmicLink.\n *\n * @private\n */\n\n\nfunction initCosmicLink(cosmicLink, transaction) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  checkLock(cosmicLink); /// Reset object in case of reparse.\n\n  formatsFields.forEach(function (type) {\n    return delete cosmicLink[type];\n  });\n  cosmicLink.page = cosmicLink.page || options.page || config.page;\n  /**\n   * The status of a CosmicLink. It becomes non-null in case of failure.\n   * @var CosmicLink#status\n   */\n\n  /**\n   * By default `false`, or an *Array* of errors.\n   * @var CosmicLink#errors\n   */\n\n  status.init(cosmicLink);\n  /**\n   * The CosmicLink cache contains the resolved federations addresses and the\n   * accounts object. Using the same set of data for all the CosmicLink related\n   * computations ensure consistent results.\n   *\n   * @var CosmicLink#cache\n   */\n\n  cosmicLink.cache = {\n    destination: {},\n    account: {}\n  };\n  parse.dispatch(cosmicLink, transaction, options);\n\n  if (env.isBrowser) {\n    makeHtmlLink(cosmicLink);\n\n    if (!cosmicLink._htmlDescription) {\n      /// #cosmiclib_htmlNode: Backward compatibility (2018-09 -> 2019-03).\n      cosmicLink._htmlDescription = html.grab(\"#cosmiclink_description\") || html.grab(\"#CL_htmlNode\");\n    }\n\n    if (cosmicLink._htmlDescription) {\n      if (cosmicLink.htmlDescription.id === \"#CL_htmlNode\") {\n        misc.deprecated(\"2019-03\", \"id=\\\"#CL_htmlNode\\\"\", \"id=\\\"cosmiclink_description\\\"\");\n      }\n\n      makeHtmlDescription(cosmicLink);\n    }\n  }\n}\n\nvar formatsFields = [\"_query\", \"_tdesc\", \"_json\", \"_transaction\", \"_xdr\"];\n/**\n * Initialize CosmicLink html nodes.\n *\n * @private\n */\n\nfunction makeHtmlDescription(cosmicLink) {\n  if (env.isNode) return;\n  var htmlDescription = cosmicLink._htmlDescription;\n\n  if (htmlDescription) {\n    html.clear(htmlDescription);\n    htmlDescription.className = \"cosmiclink_description\";\n  } else {\n    htmlDescription = html.create(\"div\", \".cosmiclink_description\");\n    cosmicLink._htmlDescription = htmlDescription;\n  }\n\n  cosmicLink._transactionNode = format.tdesc(cosmicLink, cosmicLink.tdesc);\n  cosmicLink._statusNode = status.makeHtmlNode(cosmicLink);\n  cosmicLink._signersNode = html.create(\"div\", \".cosmiclib_signersNode\");\n  html.append(htmlDescription, cosmicLink._transactionNode, cosmicLink._statusNode, cosmicLink._signersNode);\n}\n/**\n * Make the HTML link.\n * @private\n */\n\n\nfunction makeHtmlLink(cosmicLink) {\n  if (env.isNode) return;\n  var htmlLink = html.grab(\"#cosmiclink\") || html.create(\"a\");\n  htmlLink.className = \".cosmiclink\";\n  htmlLink.href = cosmicLink.page;\n\n  htmlLink.onclick = function () {\n    return htmlLink.href = cosmicLink.uri;\n  };\n\n  if (!htmlLink.title) htmlLink.title = \"Sign transaction\";\n  if (!htmlLink.textContent) htmlLink.textContent = \"CosmicLink\";\n  cosmicLink._htmlLink = htmlLink;\n  return htmlLink;\n}\n/**\n * Throw an error if CosmicLink is locked.\n * @private\n */\n\n\nfunction checkLock(cosmicLink) {\n  if (cosmicLink.locker) throw new Error(\"Cosmic link is locked.\");\n}\n\nCosmicLink.prototype.__proto__ = config;\nmodule.exports = CosmicLink;","\"use strict\";\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n * @exports action\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar action = exports;\n\nvar axios = require(\"@cosmic-plus/base/es5/axios\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar convert = require(\"./convert\");\n\nvar format = env.isBrowser && require(\"./format\");\n\nvar resolve = require(\"./resolve\");\n\nvar signersUtils = require(\"./signers-utils\");\n\nvar status = require(\"./status\");\n/**\n * Lock a CosmicLink to a network/source pair. If the cosmicLink was created\n * from a query/uri/tdesc/json, it will create the corresponding\n * transaction/xdr/sep7 formats.\n *\n * This operation must be performed by the wallet before signing & sending the\n * transaction.\n *\n * @example\n * cosmicLib.config.network = \"test\"\n * const cosmicLink = new CosmicLink(\"?setOptions\")\n * console.log(cosmicLink.network) // => undefined\n * console.log(cosmicLink.xdr)     // => undefined\n * await cosmicLink.lock()\n * console.log(cosmicLink.network) // => \"test\"\n * console.log(cosmicLink.xdr)     // => \"AAAA...AA==\"\n *\n *\n * @alias CosmicLink#lock\n * @async\n * @param {Object} [options]\n * @param {string} options.network Local fallback network\n * @param {string} options.horizon Local fallback horizon (overwrited by global configuration)\n * @param {string} options.callback Local fallback callback\n * @param {string} options.source Local fallback source\n */\n\n\naction.lock =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(cosmicLink) {\n    var options,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            if (!cosmicLink.status) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(cosmicLink.status);\n\n          case 3:\n            if (!cosmicLink.locker) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"CosmicLink is already locked.\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return applyLock(cosmicLink, options);\n\n          case 8:\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](5);\n\n            if (!cosmicLink.errors) {\n              console.error(_context.t0);\n              status.error(cosmicLink, _context.t0.message);\n            }\n\n            status.fail(cosmicLink, \"Transaction build failed\", \"throw\");\n\n          case 14:\n            updateSignersNode(cosmicLink);\n            return _context.abrupt(\"return\", cosmicLink);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 10]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction applyLock(_x2, _x3) {\n  return _applyLock.apply(this, arguments);\n}\n/**\n * Sign CosmicLink's Transaction with **keypairs_or_preimage** and update the\n * other formats accordingly. Only legit signers are allowed to sign, and a\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before signing.\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|Buffer|string} ...keypairs_or_preimage\n */\n\n\nfunction _applyLock() {\n  _applyLock = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(cosmicLink, options) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            /**\n             * The locker property tells that a CosmicLink have been locked, and exposes\n             * the network & source values to which it have been locked.\n             *\n             * @alias CosmicLink#locker\n             */\n            cosmicLink.locker = {\n              source: cosmicLink.tdesc.source || options.source || cosmicLink.config.source,\n              network: cosmicLink.tdesc.network || options.network || cosmicLink.config.network,\n              horizon: options.horizon || cosmicLink.horizon,\n              callback: cosmicLink.tdesc.callback || options.callback || cosmicLink.config.callback /// Preserve the underlying tdesc object.\n\n            };\n            cosmicLink._tdesc = Object.assign({}, cosmicLink.tdesc, cosmicLink.locker);\n            delete cosmicLink._query;\n            delete cosmicLink._json;\n\n            if (cosmicLink._transaction) {\n              _context4.next = 9;\n              break;\n            }\n\n            _context4.next = 7;\n            return convert.tdescToTransaction(cosmicLink, cosmicLink.tdesc);\n\n          case 7:\n            cosmicLink._transaction = _context4.sent;\n            delete cosmicLink._tdesc;\n\n          case 9:\n            delete cosmicLink._transaction._cosmicplus;\n            _context4.next = 12;\n            return signersUtils[\"extends\"](cosmicLink, cosmicLink._transaction);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _applyLock.apply(this, arguments);\n}\n\naction.sign =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(cosmicLink) {\n    var transaction,\n        allFine,\n        _len,\n        keypairsOrPreimage,\n        _key,\n        index,\n        keypair,\n        publicKey,\n        _short,\n        _short2,\n        _short3,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (cosmicLink.locker) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new Error(\"cosmicLink is not locked.\");\n\n          case 2:\n            resolve.useNetwork(cosmicLink);\n            transaction = cosmicLink.transaction;\n            allFine = true;\n\n            for (_len = _args2.length, keypairsOrPreimage = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              keypairsOrPreimage[_key - 1] = _args2[_key];\n            }\n\n            if (!(typeof keypairsOrPreimage[0] !== \"string\")) {\n              _context2.next = 34;\n              break;\n            }\n\n            _context2.t0 = _regeneratorRuntime.keys(keypairsOrPreimage);\n\n          case 8:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 32;\n              break;\n            }\n\n            index = _context2.t1.value;\n            keypair = keypairsOrPreimage[index];\n            publicKey = keypair.publicKey();\n\n            if (cosmicLink.transaction.hasSigner(publicKey)) {\n              _context2.next = 17;\n              break;\n            }\n\n            _short = misc.shorter(publicKey);\n            status.error(cosmicLink, \"Not a legit signer: \" + _short);\n            allFine = false;\n            return _context2.abrupt(\"continue\", 8);\n\n          case 17:\n            if (!cosmicLink.transaction.hasSigned(publicKey)) {\n              _context2.next = 19;\n              break;\n            }\n\n            return _context2.abrupt(\"continue\", 8);\n\n          case 19:\n            _context2.prev = 19;\n            transaction.sign(keypair);\n            _context2.next = 30;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t2 = _context2[\"catch\"](19);\n            console.error(_context2.t2);\n            _short2 = misc.shorter(publicKey);\n            status.error(cosmicLink, \"Failed to sign with key: \" + _short2);\n            allFine = false;\n            return _context2.abrupt(\"continue\", 8);\n\n          case 30:\n            _context2.next = 8;\n            break;\n\n          case 32:\n            _context2.next = 35;\n            break;\n\n          case 34:\n            try {\n              transaction.signHashX(keypairsOrPreimage[0]);\n            } catch (error) {\n              console.error(error);\n              _short3 = misc.shorter(keypairsOrPreimage[0]);\n              status.error(cosmicLink, \"Failed to sign with preimage: \" + _short3, \"throw\");\n            }\n\n          case 35:\n            /// Update other formats.\n            [\"_query\", \"_xdr\", \"_sep7\"].forEach(function (format) {\n              return delete cosmicLink[format];\n            });\n            updateSignersNode(cosmicLink);\n\n            if (allFine) {\n              _context2.next = 41;\n              break;\n            }\n\n            throw new Error(\"Some signers where invalid\");\n\n          case 41:\n            return _context2.abrupt(\"return\", transaction);\n\n          case 42:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[19, 23]]);\n  }));\n\n  return function (_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction updateSignersNode(cosmicLink) {\n  if (cosmicLink._signersNode) {\n    var signersNode = format.signatures(cosmicLink, cosmicLink._transaction);\n    cosmicLink.htmlDescription.replaceChild(signersNode, cosmicLink._signersNode);\n    cosmicLink._signersNode = signersNode;\n  }\n}\n/**\n * Send CosmicLink's transaction to a blockchain validator, or to\n * [StellarGuard]{@link https://stellarguard.me} when relevant. A\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before sending.\n *\n * Returns a promise that resolve/reject to the horizon server response.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {horizon} [horizon] An horizon node URL\n * @return {Object} The server response\n */\n\n\naction.send =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(cosmicLink) {\n    var horizon,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            horizon = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : cosmicLink.horizon;\n\n            if (cosmicLink.locker) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new Error(\"cosmicLink is not locked.\");\n\n          case 3:\n            _context3.prev = 3;\n\n            if (!cosmicLink.transaction.hasSigner(STELLARGUARD_PUBKEY)) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 7;\n            return sendToStellarGuard(cosmicLink);\n\n          case 7:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 10:\n            if (!cosmicLink.callback) {\n              _context3.next = 16;\n              break;\n            }\n\n            _context3.next = 13;\n            return axios.post(cosmicLink.callback, {\n              xdr: cosmicLink.xdr\n            });\n\n          case 13:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 16:\n            _context3.next = 18;\n            return sendToHorizon(cosmicLink, horizon);\n\n          case 18:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 19:\n            _context3.next = 25;\n            break;\n\n          case 21:\n            _context3.prev = 21;\n            _context3.t0 = _context3[\"catch\"](3);\n            if (_context3.t0.response) console.error(_context3.t0.message, _context3.t0.response);\n            throw _context3.t0;\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 21]]);\n  }));\n\n  return function (_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction sendToHorizon(_x6, _x7) {\n  return _sendToHorizon.apply(this, arguments);\n}\n\nfunction _sendToHorizon() {\n  _sendToHorizon = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(cosmicLink, horizon) {\n    var server;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            server = resolve.server(cosmicLink, horizon); // Keep connection alive until transaction gets validated or a non-504 error\n            // is returned. 504 error means the transaction is still following the\n            // validation process.\n            // eslint-disable-next-line no-constant-condition\n\n          case 1:\n            if (!true) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.prev = 2;\n            _context5.next = 5;\n            return server.submitTransaction(cosmicLink.transaction);\n\n          case 5:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](2);\n\n            if (!(_context5.t0.response.status !== 504)) {\n              _context5.next = 12;\n              break;\n            }\n\n            throw _context5.t0;\n\n          case 12:\n            _context5.next = 1;\n            break;\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 8]]);\n  }));\n  return _sendToHorizon.apply(this, arguments);\n}\n\nfunction sendToStellarGuard(cosmicLink) {\n  var url = cosmicLink.network === \"test\" ? \"https://test.stellarguard.me/api/transactions\" : \"https://stellarguard.me/api/transactions\";\n  return axios.post(url, {\n    xdr: cosmicLink.xdr,\n    callback: cosmicLink.callback\n  }).then(function (result) {\n    return result.data;\n  });\n}\n\nvar STELLARGUARD_PUBKEY = \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\";","\"use_stict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  module.exports = require(\"./stellar-sdk\").axios;\n} else {\n  module.exports = env.nodeRequire(\"axios\");\n}","\"use strict\";\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\n\nvar parse = exports;\n\nvar check = require(\"./check\");\n\nvar convert = require(\"./convert\");\n\nvar decode = require(\"./decode\");\n\nvar expand = require(\"./expand\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Sets cosmicLink page as the base path of `uri`.\n *\n * @param {string} page URI basename\n */\n\n\nparse.page = function (cosmicLink, uri) {\n  var page = uri.split(\"?\")[0];\n  if (page) cosmicLink.page = encodeURI(page);\n};\n/**\n * Call the right functions to setup cosmicLink depending on `options` and\n * `value` type.\n *\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\n\n\nparse.dispatch = function (cosmicLink) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"?\";\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  formats.forEach(function (format) {\n    return delete cosmicLink[format];\n  });\n  var type = guessType(value); // Strip out URL hash\n\n  switch (type) {\n    case \"uri\":\n    case \"query\":\n    case \"xdrUri\":\n    case \"sep7\":\n    case \"sep7Request\":\n      value = value.replace(/#.*$/, \"\");\n  } // Parse transaction\n\n\n  try {\n    if (parseFmt[type]) parseFmt[type](cosmicLink, value, options);else setTdesc(cosmicLink, type, value, options);\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error);\n      status.error(cosmicLink, error.message);\n    }\n\n    status.fail(cosmicLink, \"Invalid \" + type);\n    if (error.tdesc) cosmicLink._tdesc = error.tdesc;\n  }\n\n  if (options.page) parse.page(cosmicLink, options.page);\n};\n\nvar formats = [\"_query\", \"_json\", \"_tdesc\", \"_transaction\", \"_xdr\", \"_sep7\"];\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n */\n\nfunction guessType(value) {\n  var type;\n\n  if (typeof value === \"string\") {\n    var query = convert.uriToQuery(\"\", value);\n    if (value.substr(0, 12) === \"web+stellar:\") type = \"sep7\";else if (query && query.substr(0, 5) === \"?req=\") type = \"sep7Request\";else if (query && query.substr(0, 5) === \"?xdr=\") type = \"xdrUri\";else if (value.substr(0, 1) === \"?\") type = \"query\";else if (value.substr(0, 1) === \"{\") type = \"json\";else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = \"xdr\";else type = \"uri\";\n  } else {\n    if (value.tx) type = \"transaction\";else type = \"tdesc\";\n  }\n\n  return type;\n}\n/******************************************************************************/\n\n\nvar parseFmt = {};\n/**\n * Initialize cosmicLink using `xdrUri`.\n */\n\nparseFmt.xdrUri = function (cosmicLink, xdrUri, options) {\n  parse.page(cosmicLink, xdrUri);\n  var query = convert.uriToQuery(cosmicLink, xdrUri);\n  var temp = query.split(\"&\");\n  var xdr = temp[0].substr(5);\n  temp.slice(1).forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"stripSignatures\":\n        options.stripSignatures = true;\n        break;\n\n      case \"stripSequence\":\n        options.stripSequence = true;\n        break;\n\n      case \"stripSource\":\n        options.stripSource = true;\n        break;\n\n      case \"network\":\n        options.network = decode.network(cosmicLink, value);\n        break;\n\n      case \"horizon\":\n      case \"callback\":\n        options[field] = decode.url(cosmicLink, value);\n        break;\n\n      default:\n        status.error(cosmicLink, \"Unknow option: \" + entry);\n        status.fail(cosmicLink, \"Invalid query\");\n    }\n  });\n  setTdesc(cosmicLink, \"xdr\", xdr, options);\n};\n/**\n * Initialize cosmicLink using `sep7Request`.\n */\n\n\nparseFmt.sep7Request = function (cosmicLink, sep7Request, options) {\n  parse.page(cosmicLink, sep7Request);\n  var query = convert.uriToQuery(cosmicLink, sep7Request);\n  var sep7 = decodeURIComponent(query.substr(5));\n  parseFmt.sep7(cosmicLink, sep7, options);\n};\n/**\n * Initialize cosmicLink using `sep7`.\n */\n\n\nparseFmt.sep7 = function (cosmicLink, sep7) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (sep7.substr(12, 4) === \"pay?\") {\n    throw new Error(\"SEP-0007 'pay' operation is not currently supported.\");\n  } else if (sep7.substr(12, 3) !== \"tx?\") {\n    throw new Error(\"Invalid SEP-0007 link.\");\n  }\n\n  var query = convert.uriToQuery(cosmicLink, sep7);\n  var params = query.substr(1).split(\"&\");\n  if (!options.network) options.network = \"public\";\n  var xdr;\n  params.forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"xdr\":\n        xdr = decodeURIComponent(value);\n        break;\n\n      case \"network_passphrase\":\n        options.network = decode.network(cosmicLink, value);\n        break;\n\n      case \"callback\":\n        if (value.substr(0, 4) !== \"url:\") throw new Error(\"Invalid callback: \" + value);\n        options.callback = decode.url(cosmicLink, value.substr(4));\n        break;\n\n      default:\n        if (isIgnoredSep7Field(field)) {\n          // eslint-disable-next-line no-console\n          console.log(\"Ignored SEP-0007 field: \" + field);\n        } else {\n          throw new Error(\"Invalid SEP-0007 field: \" + field);\n        }\n\n    }\n  });\n  if (!xdr) throw new Error(\"Missing XDR parameter\");\n  setTdesc(cosmicLink, \"xdr\", xdr, options);\n};\n\nfunction isIgnoredSep7Field(field) {\n  return specs.sep7IgnoredFields.find(function (name) {\n    return name === field;\n  });\n}\n/******************************************************************************/\n\n/**\n * Set cosmicLink_tdesc from format `type`. From there, the CosmicLink methods\n * can lazy-evaluate any requested format.\n */\n\n\nfunction setTdesc(cosmicLink, type, value, options) {\n  if (type !== \"uri\") cosmicLink[\"_\" + type] = value;\n\n  switch (type) {\n    case \"uri\":\n      parse.page(cosmicLink, value);\n      cosmicLink._query = convert.uriToQuery(cosmicLink, value, options);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"query\":\n      cosmicLink._tdesc = convert.queryToTdesc(cosmicLink, cosmicLink.query, options);\n      delete cosmicLink._query;\n      break;\n\n    case \"json\":\n      value = convert.jsonToTdesc(cosmicLink, value);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"tdesc\":\n      cosmicLink._tdesc = expand.tdesc(cosmicLink, value);\n      delete cosmicLink._json;\n      check.tdesc(cosmicLink, cosmicLink.tdesc);\n      break;\n\n    case \"sep7\":\n      cosmicLink._xdr = convert.sep7ToXdr(cosmicLink, cosmicLink.sep7);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"xdr\":\n      cosmicLink._transaction = convert.xdrToTransaction(cosmicLink, cosmicLink.xdr, options);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"transaction\":\n      cosmicLink._tdesc = convert.transactionToTdesc(cosmicLink, cosmicLink.transaction, options);\n      delete cosmicLink._sep7;\n\n      if (options.stripSource || options.stripSequence) {\n        delete cosmicLink._xdr;\n        delete cosmicLink._transaction;\n      } else if (options.stripSignatures) {\n        cosmicLink.transaction.signatures = [];\n        delete cosmicLink._xdr;\n      }\n\n  }\n}","\"use_strict\";\n/**\n * Asynchronously load external ressources.\n */\n\n/**/\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar load = require(\"@cosmic-plus/domutils/es5/load\");\n\nmodule.exports = load;\n/**\n *\n * Load cosmic-lib CSS from **href** or from default origin. All subsequent\n * calls will refer to the original request.\n *\n * @example\n * /// Preload at the start of your script:\n * cosmicLib.load.styles('css/cosmic-lib.css')\n *\n * /// Then wait for the request to resolve before you display CosmicLink HTML\n * /// description:\n * await cosmicLib.load.styles()\n *\n * @alias module:load#styles\n * @async\n * @param {string} [href='cosmic-lib.css']\n */\n\nload.styles =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var href,\n      promise,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          href = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"https://cdn.cosmic.plus/cosmic-lib@1.x/cosmic-lib.css\";\n          promise = load.css(href);\n\n          load.styles = function () {\n            return promise;\n          };\n\n          return _context.abrupt(\"return\", promise);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));","\"use_strict\";\n/**\n * Asynchronously load external ressources.\n *\n * @exports load\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar load = exports;\n\nvar html = require(\"./html\");\n/**\n * Asynchronously load a stylesheet from **href**.\n *\n * @example\n * // Load:\n * await load.css(\"my-styles.css\")\n *\n * @example\n * // Preload:\n * const preloader = load.css(\"my-styles.css\")\n *\n * // Then wait for loading to finish:\n * await cssLoader\n *\n * @async\n * @param {String} href\n */\n\n\nload.css =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(href) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var linkNode = html.create(\"link\", {\n                rel: \"stylesheet\",\n                type: \"text/css\",\n                href: href,\n                onload: resolve,\n                onerror: reject\n              });\n              html.append(document.head, linkNode);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Asynchronously load a script from **href**.\n *\n * @example\n * // Load:\n * await load.js(\"my-script.js\")\n *\n * @example\n * // Preload:\n * const preloader = load.js(\"my-script.js\")\n *\n * // Then wait for loading to finish:\n * await preloader\n *\n * @async\n * @param {String} href\n */\n\n\nload.js =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(href) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var scriptNode = html.create(\"script\", {\n                src: href,\n                onload: resolve,\n                onerror: reject\n              });\n              html.append(document.head, scriptNode);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();"],"sourceRoot":""}
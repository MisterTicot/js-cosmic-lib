{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/misc.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/stellar-sdk.js","webpack://cosmicLib/./src/specs.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/env.js","webpack://cosmicLib/./src/resolve.js","webpack://cosmicLib/./node_modules/@babel/runtime/regenerator/index.js","webpack://cosmicLib/./src/status.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/html.js","webpack://cosmicLib/./src/decode.js","webpack://cosmicLib/./src/config.js","webpack://cosmicLib/./src/check.js","webpack://cosmicLib/./src/format.js","webpack://cosmicLib/./src/signers-utils.js","webpack://cosmicLib/./src/convert.js","webpack://cosmicLib/./src/normalize.js","webpack://cosmicLib/./src/destruct.js","webpack://cosmicLib/./src/event.js","webpack://cosmicLib/./src/construct.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/buffer.js","webpack://cosmicLib/./src/encode.js","webpack://cosmicLib/./src/expand.js","webpack://cosmicLib/./src/index.js","webpack://cosmicLib/./node_modules/process/browser.js","webpack://cosmicLib/(webpack)/buildin/global.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/polyfill.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/aliases.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime-module.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/(webpack)/buildin/module.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/nice.js","webpack://cosmicLib/./src/cosmiclink.js","webpack://cosmicLib/./src/action.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/axios.js","webpack://cosmicLib/./src/parse.js","webpack://cosmicLib/./src/load.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/load.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","misc","delay","thunk","memoized","firstCall","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","setHiddenProperty","configurable","deprecated","date","before","after","console","error","concat","useExtra","obj","extraField","isUtf8","match","isBase64","copy","env","require","isBrowser","undefined","window","StellarSdk","nodeRequire","specs","field","transactionOptionalFields","fieldDesc","network","horizon","callback","memo","source","sequence","minTime","maxTime","fee","isTransactionField","find","operationMandatoryFields","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createPassiveOffer","inflation","manageData","manageOffer","pathPayment","payment","setOptions","operationOptionalFields","operationFields","isOperationField","operation","fieldType","amount","asset","assetCode","assetIssuer","authorize","bumpTo","buying","clearFlags","destAsset","destAmount","destination","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","medThreshold","memoBinary","memoHash","memoId","memoReturn","memoText","memoType","offerId","price","path","selling","sendAsset","sendMax","setFlags","signer","signerHash","signerKey","signerType","signerTx","signerWeight","startingBalance","trustor","types","type","entry","push","_loop","neutralAccountId","sep7MandatoryFields","tx","pay","sep7OptionalFields","sep7IgnoredFields","process","global","document","isNode","versions","node","isEmbedded","top","stealth_require","eval","helpers","status","_callee5","conf","address","account","accountId","_regeneratorRuntime","wrap","_context5","prev","next","FederationServer","sent","account_id","Error","memo_type","aliases","alias","abrupt","t0","fail","stop","accountResolver","_callee6","quietFlag","server","accountResponse","_context6","loadAccount","response","makeAccountResponse","publicKey","Account","cache","id","signers","public_key","weight","resolveTxSource","_callee7","_context7","signersTableToSignersList","signersTable","array","forEach","arguments","current","Server","useNetwork","passphrase","networkPassphrase","log","Network","use","currentNetwork","networkName","index","values","indexOf","keys","promise","addressResolver","_ref","_asyncToGenerator","mark","_callee","_context","_x3","_x4","_x5","apply","isAccountEmpty","then","catch","txSourceAccount","_ref2","_callee2","baseAccount","_context2","sub","_baseAccount","_x9","_x10","_x11","txSources","transaction","extra","operations","a","txSigners","_ref3","_callee3","_context3","t1","done","filter","_x12","_x13","txSignersList","_ref4","_callee4","_context4","_x16","_x17","_cosmicplus","html","errorContinuation","continuation","init","errors","update","_statusNode","grab","textContent","errorStatus","addClass","errorsNode","lineNode","append","makeHtmlNode","statusNode","statusLine","errorLine","addStyles","styles","styleNode","head","element","_len","childs","Array","_key","child","appendChild","convert","className","split","appendClass","clear","_len2","elements","_key2","innerHTML","Element","HTMLDocument","Text","createTextNode","domNode","copyContent","selectionStart","selectionEnd","select","getSelection","range","createRange","selectNode","removeAllRanges","addRange","execCommand","copyString","textBox","body","destroy","attributes","createElement","assign","_len3","_key3","parentNode","removeChild","pattern","querySelector","hide","_len4","_key4","hidden","replace","element1","element2","replaceChild","rewrite","_len5","_key5","show","_len6","_key6","decode","check","normalize","query","tdesc","command","params","param","odesc","decodeURIComponent","assetLower","toLowerCase","code","temp","issuer","assetsList","map","matched","Date","toISOString","numerator","denominator","config","event","page","setupNetwork","Networks","PUBLIC","TESTNET","all","addAliases","definitions","set","removeAliases","remove","clickHandlers","defaultClickHandlers","setClickHandler","clearClickHandler","errDesc","isValid","txField","e","operationType","operationField","message","number","min","max","num","isNaN","integer","parseInt","utf8","base64","assetsArray","boolean","buffer","parse","flags","hash","_typeof","threshold","format","nice","signersUtils","parentProperty","infoNode","trNode","opNode","retNode","sourceNode","addressNode","meaning","msg","operationMeaning","fieldNode","txt","signatures","signersNode","for","utils","signersList","sources","div","accountSignersNode","title","titleNode","listNode","signerNode","hasSigned","insertBefore","firstChild","makeAccountSignersNode","parentOdesc","parentIndex","parentTdesc","eventObject","constructor","cosmicLink","onclick","callClickHandler","animation","errorNode","resolveAddressAndUpdate","significant","Number","nicified","String","assetNode","assetsArrayNode","toLocaleString","valueNode","typeNode","value1","value2","value3","StrKey","decodeSha256Hash","toString","weightNode","SignersUtils","_classCallCheck","extendFlag","txHash","utilities","hasSigner","keypair","Keypair","fromPublicKey","verify","signature","extends","construct","destruct","encode","uriToQuery","uri","queryToTdesc","tdescToJson","JSON","stringify","tdescToTransaction","transactionToXdr","toEnvelope","toXDR","xdrToSep7","xdr","options","sep7","encodeURIComponent","url","xdrToTransaction","Transaction","stripSignatures","xdrToQuery","transactionToTdesc","jsonToTdesc","json","tdescToQuery","queryToUri","removeEmptyFields","dateFields","XLM","Asset","native","stripSource","stripSequence","_memo","_switch","timeBounds","op","line","assetPath","timestamp","sdkMemo","_arm","_value","sdkSequence","sdkSigner","ed25519PublicKey","sha256Hash","preAuthTx","handler","alert","classList","contains","preimage","prompt","sign","Buffer","makeTransactionBuilder","_callee9","txOpts","sourceAccount","builder","memoValue","short","_context9","timebounds","TransactionBuilder","TimeoutInfinite","addMemo","Memo","txBuilder","addOperation","build","t2","_x","_x2","Operation","_x7","_x8","_ref5","_x14","_ref6","_x15","_ref7","constructedAsset","_x18","from","_ref8","_callee8","_context8","_x19","_x20","__proto__","encodedValue","expand","isArray","exportModule","layer","_config","exposeModule","withConfig","library","_this$module","_class","_possibleConstructorReturn","_getPrototypeOf","_inherits","CosmicLink","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","args","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","Function","NodeList","predicate","TypeError","thisArg","k","kValue","writable","target","varArgs","to","nextSource","nextKey","publicKeyshadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","webpackPolyfill","deprecate","paths","children","opts","precision","str","firstNonZero","search","pointIndex","Math","round","precisionAuto","toFixed","action","initCosmicLink","checkLock","splice","lock","keypairs_or_preimage","send","_query","_tdesc","locker","_json","_transaction","_xdr","_sep7","_htmlDescription","makeHtmlDescription","_htmlLink","makeHtmlLink","htmlDescription","formatsFields","dispatch","_transactionNode","_signersNode","htmlLink","href","axios","applyLock","updateSignersNode","sendToStellarGuard","post","data","_args","allFine","keypairsOrPreimage","_short","_short2","_args2","signHashX","_args3","STELLARGUARD_PUBKEY","submitTransaction","encodeURI","formats","guessType","parseFmt","setTdesc","sep7ToXdr","xdrUri","sep7Request","isIgnoredSep7Field","parent","load","css","linkNode","rel","onload","onerror"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory();\n\telse\n\t\troot[\"cosmicLib\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","\"use strict\"\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\nconst misc = exports\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nmisc.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + \"...\" + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  })\n}\n\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\nmisc.deprecated = function (date, before, after) {\n  console.error(`Warning: ${before} is deprecated and will be removed after \\\n${date}. Please use ${after} instead.`)\n}\n\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) misc.setHiddenProperty(obj, extraField, {})\n  return obj[extraField]\n}\nconst extraField = \"@cosmic-plus\"\n\n/**\n * Test if **string** is made of printable UTF8 characters. This is a simplified\n * test that is not robust.\n *\n * @param {String}\n * @return {Boolean}\n */\nmisc.isUtf8 = function (string) {\n  // eslint-disable-next-line no-control-regex\n  return !string.match(/[\\0-\\x1F\\x7F-\\x9F\\xAD\\uD7FC-\\uF8FF]/)\n}\n\n/**\n * Test if **string** is a base64 string.\n *\n * @param  {String} string\n * @return {Boolean}\n */\nmisc.isBase64 = function (string) {\n  return !!string.match(/^[0-9a-zA-Z+/]*=*$/)\n}\n\n\n\n/**\n * Deprecated functions\n */\n\nmisc.copy = () => console.error(\"misc.copy() have been moved to html.copyString()\")\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  if (window.StellarSdk === undefined) console.error(\"Missing dependency: StellarSdk\")\n  else module.exports = window.StellarSdk\n} else {\n  module.exports = env.nodeRequire(\"stellar-sdk\")\n}\n","\"use_strict\"\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\nconst specs = exports\n\n/**\n * Transaction optional fields.\n */\nspecs.transactionOptionalFields = [\n  \"network\", \"horizon\", \"callback\",\n  \"memo\", \"source\", \"sequence\", \"minTime\", \"maxTime\", \"fee\"\n]\n\n/**\n * Transaction field meaning.\n */\nspecs.fieldDesc = {\n  network: \"Network\",\n  horizon: \"Horizon\",\n  callback: \"Callback\",\n\n  memo: \"Memo\",\n  source: \"Source\",\n  sequence: \"Sequence\",\n  minTime: \"Valid after\",\n  maxTime: \"Valid until\",\n  fee: \"Fees\"\n}\n\n\n/**\n * @param {string} field\n * @return {boolean}\n */\nspecs.isTransactionField = function (field) {\n  return specs.transactionOptionalFields.find(name => name === field)\n}\n\n/**\n * Operation mandatory fields.\n */\nspecs.operationMandatoryFields = {\n  accountMerge: [\"destination\"],\n  allowTrust: [\"authorize\", \"assetCode\", \"trustor\"],\n  bumpSequence: [\"bumpTo\"],\n  changeTrust: [\"asset\"],\n  createAccount: [\"destination\", \"startingBalance\"],\n  createPassiveOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  inflation: [],\n  manageData: [\"name\", \"value\"],\n  manageOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  pathPayment: [\"sendAsset\", \"sendMax\", \"destination\", \"destAsset\", \"destAmount\"],\n  payment: [\"asset\", \"destination\", \"amount\"],\n  setOptions: []\n}\n\n/**\n * Operation optionnal fields.\n */\nspecs.operationOptionalFields = {\n  accountMerge: [\"source\"],\n  allowTrust: [\"source\"],\n  bumpSequence: [\"source\"],\n  changeTrust: [\"limit\", \"source\"],\n  createAccount: [\"source\"],\n  createPassiveOffer: [\"source\"],\n  inflation: [\"source\"],\n  manageData: [\"source\"],\n  manageOffer: [\"offerId\", \"source\"],\n  pathPayment: [\"path\", \"source\"],\n  payment: [\"source\"],\n  setOptions: [\"inflationDest\", \"clearFlags\", \"setFlags\", \"masterWeight\",\n    \"lowThreshold\", \"medThreshold\", \"highThreshold\", \"signer\", \"homeDomain\",\n    \"source\"]\n}\n\n/**\n * Operations fields\n */\nspecs.operationFields = {}\nfor (let field in specs.operationMandatoryFields) {\n  specs.operationFields[field] = specs.operationMandatoryFields[field]\n    .concat(specs.operationOptionalFields[field])\n}\n\n/**\n * @param {string} type Operation type\n * @param {string} field\n * @return {boolean}\n */\nspecs.isOperationField = function (operation, field) {\n  return specs.operationFields[operation].find(name => name === field)\n}\n\n/**\n * Field types.\n */\nspecs.fieldType = {\n  amount: \"amount\",\n  asset: \"asset\",\n  assetCode: \"string\",\n  assetIssuer: \"address\",\n  authorize: \"boolean\",\n  bumpTo: \"sequence\",\n  buying: \"asset\",\n  callback: \"url\",\n  clearFlags: \"flags\",\n  destAsset: \"asset\",\n  destAmount: \"amount\",\n  destination: \"address\",\n  fee: \"amount\",\n  highThreshold: \"threshold\",\n  homeDomain: \"string\",\n  horizon: \"url\",\n  inflationDest: \"address\",\n  limit: \"amount\",\n  lowThreshold: \"threshold\",\n  masterWeight: \"weight\",\n  maxTime: \"date\",\n  medThreshold: \"threshold\",\n  memo: \"memo\",\n  memoBinary: \"hash\",\n  memoHash: \"hash\",\n  memoId: \"id\",\n  memoReturn: \"hash\",\n  memoText: \"string\",\n  memoType: \"string\",\n  minTime: \"date\",\n  network: \"network\",\n  offerId: \"string\",\n  price: \"price\",\n  name: \"string\",\n  path: \"assetsArray\",\n  selling: \"asset\",\n  sendAsset: \"asset\",\n  sendMax: \"amount\",\n  sequence: \"sequence\",\n  setFlags: \"flags\",\n  signer: \"signer\",\n  signerHash: \"hash\",\n  signerKey: \"address\",\n  signerType: \"string\",\n  signerTx: \"id\",\n  signerWeight: \"weight\",\n  source: \"address\",\n  startingBalance: \"amount\",\n  trustor: \"address\",\n  value: \"buffer\"\n}\n\n/**\n * An array of each valid type for fields.\n */\nspecs.types = []\nfor (let field in specs.fieldType) {\n  const type = specs.fieldType[field]\n  specs.types.find(entry => entry === type) || specs.types.push(type)\n}\n\n/**\n * A neutral account ID meant to be replaced before signing & sending the\n * transaction.\n * @static\n */\nspecs.neutralAccountId = \"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\"\n\n/**\n * The mandatory fields for each SEP-0007 operation.\n */\nspecs.sep7MandatoryFields = {\n  tx: [ \"xdr\" ],\n  pay: [ \"destination\" ]\n}\n\n/**\n * The optional fields for each SEP-0007 operation.\n */\nspecs.sep7OptionalFields = {\n  tx: [ \"callback\", \"pubkey\", \"network_passphrase\", \"origin_domain\", \"signature\" ],\n  pay: [ \"amount\", \"asset_code\", \"asset_issuer\", \"memo\", \"memo_type\", \"callback\",\n    \"network_passphrase\", \"origin_domain\", \"signature\" ]\n}\n\nspecs.sep7IgnoredFields = [ \"message\", \"pubkey\", \"origin_domain\", \"signature\" ]\n","\"use_strict\"\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\nconst env = exports\n\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\nenv.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\"\n\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\nenv.isNode = typeof process !== \"undefined\" && process.versions && process.versions.node\n\n/**\n * `true` if current page is embedded.\n */\nenv.isEmbedded = env.isBrowser && window.self !== window.top\n\n/**\n * The window object, or `undefined`.\n */\nenv.window = env.isBrowser && window\n\n/**\n * The global objet, or `undefined`.\n */\nenv.global = env.isNode && global\n\n/**\n * A require that only have effect in Node.js and that is invisible for package\n * bundlers.\n */\nenv.nodeRequire = () => {}\nif (env.isNode) {\n  const stealth_require = eval(\"require\")\n  env.nodeRequire = (module) => stealth_require(module)\n}\n","\"use strict\"\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\n/**\n * Returns the\n * [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * for **horizon**, or for **network**, or for the current network.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @param {string} [horizon] A horizon URL\n * @returns {Server} A StellarSdk Server object\n */\nresolve.server = function (conf, network = conf.network, horizon = conf.horizon) {\n  if (!horizon) horizon = resolve.horizon(conf, network)\n  if (!horizon) throw new Error(\"No horizon node defined for selected network.\")\n  if (!conf.current.server[horizon]) conf.current.server[horizon] = new StellarSdk.Server(horizon)\n  return conf.current.server[horizon]\n}\n\n/**\n * Switch to the current network, or to **network** if provided.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @returns {Server} A StellarSdk Server object\n */\nresolve.useNetwork = function (conf, network = conf.network) {\n  const passphrase = resolve.networkPassphrase(conf, network)\n  const currentPassphrase = resolve.networkPassphrase()\n  if (passphrase !== currentPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network)\n    StellarSdk.Network.use(new StellarSdk.Network(passphrase))\n  }\n}\n\n/**\n * Returns the curent Horizon node URL, or the Horizon node URL for **network**\n * if provided.\n *\n * @param {string} [network] A network name or passphrase.\n */\nresolve.horizon = function (conf, network = conf.network) {\n  if (conf.horizon) {\n    return conf.horizon\n  } else {\n    const passphrase = resolve.networkPassphrase(conf, network)\n    if (conf.current && conf.current.horizon[passphrase]) {\n      return conf.current.horizon[passphrase]\n    }\n  }\n}\n\n/**\n * Returns the current network passphrase, or the passphrase for **network** is\n * provided.\n */\nresolve.networkPassphrase = function (conf = {}, network = conf.network) {\n  if (network === undefined) {\n    const currentNetwork = StellarSdk.Network.current()\n    if (currentNetwork) return currentNetwork.networkPassphrase()\n  } else {\n    return conf.current.passphrase[network] || network\n  }\n}\n\n/**\n * Returns the network name for **network passphrase**, or `undefined`.\n *\n * @param {string} networkPassphrase\n * @return {string}\n */\nresolve.networkName = function (conf = {}, networkPassphrase) {\n  const index = Object.values(conf.current.passphrase).indexOf(networkPassphrase)\n  if (index === -1) return networkPassphrase\n  else return Object.keys(conf.current.passphrase)[index]\n}\n\n/**\n * Returns the federation server\n * [Account]{@link https://stellar.github.io/js-stellar-sdk/Account.html}\n * for **address**.\n *\n * @async\n * @param {string} address A Stellar public key or a federated address\n * @return {} Resolve to federation server response\n */\nresolve.address = function (conf, address) {\n  const cache = conf.cache\n  if (cache && cache.destination[address]) return cache.destination[address]\n\n  const promise = addressResolver(conf, address)\n  if (cache) cache.destination[address] = promise\n  return promise\n}\n\nasync function addressResolver (conf, address) {\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    const accountId = account.account_id\n    if (!accountId) throw new Error(\"Unknow address\")\n    if (!account.memo_type) delete account.memo\n    if (address !== accountId) account.address = address\n    if (conf.aliases && conf.aliases[accountId]) {\n      account.alias = conf.aliases[accountId]\n    }\n    return account\n  } catch (error) {\n    console.error(error)\n    status.error(conf, \"Can't resolve: \" + helpers.shorter(address))\n    status.fail(conf, \"Unresolved address\", \"throw\")\n  }\n}\n\n/**\n * Returns the\n * [AccountResponse]{@link https://stellar.github.io/js-stellar-sdk/AccountResponse.html}\n * object for **address**.\n *\n * @param {string} address A public key or a federated address\n * @return {Object} The AccountResponse\n */\nresolve.account = async function (conf, address, quietFlag) {\n  const account = await resolve.address(conf, address)\n  const accountId = account.account_id\n  const cache = conf.cache\n  if (cache && cache.account[accountId]) return cache.account[accountId]\n\n  const promise = accountResolver(conf, accountId, quietFlag)\n  if (cache) cache.account[accountId] = promise\n  return promise\n}\n\nasync function accountResolver (conf, accountId, quietFlag) {\n  const server = resolve.server(conf)\n  try {\n    const accountResponse = await server.loadAccount(accountId)\n    return accountResponse\n  } catch (error) {\n    if (quietFlag) {\n      throw error\n    } else {\n      if (error.response) {\n        status.error(conf, \"Empty account: \" + helpers.shorter(accountId), \"throw\")\n      } else {\n        status.error(conf, \"Invalid horizon node: \" + resolve.horizon(conf), \"throw\")\n      }\n    }\n  }\n}\n\n/**\n * Returns `true` if **address** account is empty, `false` otherwise.\n *\n * @async\n * @param {string} address Public key or federated address\n * @return {boolean}\n */\nresolve.isAccountEmpty = function (conf, address) {\n  return resolve.account(conf, address, true).then(() => false).catch(() => true)\n}\n\n/**\n * Returns the account object for transaction source **address`** with sequence\n * set at **sequence** if provided. If **address** is not provided, returns the\n * neutral account object instead (as in SEP-0007 specifications).\n *\n * @param {string} [address]\n * @param {string|numbre} [sequence]\n * @return {AccountResponse}\n */\nresolve.txSourceAccount = async function (conf, address, sequence) {\n  if (!address) {\n    return makeAccountResponse(conf, specs.neutralAccountId, \"-1\")\n  } else {\n    const destination = await resolve.address(conf, address)\n    if (destination.memo) status.error(conf, \"Invalid transaction source address (requires a memo)\", \"throw\")\n    const account = await resolve.account(conf, destination.account_id)\n    if (sequence) {\n      const baseAccount = new StellarSdk.Account(account.id, sequence)\n      baseAccount.sequence = baseAccount.sequence.sub(1)\n      account._baseAccount = baseAccount\n    }\n    return account\n  }\n}\n\n/**\n * Creates an AccountResponse object with signers set for an empty account.\n *\n * @param  {string} publicKey\n * @param  {string} sequence [description]\n * @return {AccountResponse}\n */\nfunction makeAccountResponse (conf, publicKey, sequence) {\n  const account = new StellarSdk.Account(publicKey, sequence)\n  if (conf.cache) conf.cache.account[publicKey] = account\n  account.id = publicKey\n\n  account.signers = [{\n    public_key: publicKey,\n    weight: 1,\n    key: publicKey,\n    type: \"ed25519_public_key\"\n  }]\n\n  return account\n}\n\n/**\n * Returns the array of all source accounts ID involved in **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\nresolve.txSources = function (conf, transaction) {\n  if (!transaction.source) throw new Error(\"No source for transaction\")\n\n  const extra = resolve.extra(conf, transaction)\n  if (extra.cache.txSources) return extra.cache.txSources\n\n  const array = extra.cache.txSources = [ transaction.source ]\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  return array\n}\n\n/**\n * Returns an object such as:\n *\n * ```js\n * {\n *    $accountId: $accountSigners\n *    ...\n * }\n * ```\n *\n * @param {Transaction} transaction\n * @return {Object}\n */\nresolve.txSigners = async function (conf, transaction) {\n  const extra = resolve.extra(conf, transaction)\n  if (extra.cache.txSigners) return extra.cache.txSigners\n\n  const txSources = resolve.txSources(extra, transaction)\n  const signers = extra.cache.txSigners = {}\n\n  for (let index in txSources) {\n    const source = txSources[index]\n    const account = await resolveTxSource(extra, source)\n    if (!signers[account.id]) {\n      signers[account.id] = account.signers.filter(signer => {\n        return signer.type !== \"preauthTx\"\n      })\n    }\n  }\n\n  return signers\n}\n\nasync function resolveTxSource (conf, address) {\n  try {\n    return await resolve.account(conf, address, \"quiet\")\n  } catch (error) {\n    return makeAccountResponse(conf, address, \"0\")\n  }\n}\n\n/**\n * Returns an Array containing the keys for all legit signers of **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = resolve.extra(conf, transaction)\n  if (!extra.cache.txSignersList) {\n    const txSigners = await resolve.txSigners(extra, transaction)\n    extra.cache.txSignersList = signersTableToSignersList(txSigners)\n  }\n  return extra.cache.txSignersList\n}\n\nfunction signersTableToSignersList (signersTable) {\n  const array = []\n  for (let accountId in signersTable) {\n    signersTable[accountId].forEach(signer => {\n      if (!array.find(key => key === signer.key)) array.push(signer.key)\n    })\n  }\n  return array\n}\n\n/**\n * Add an extra field to **object** that embed cache and local configuration.\n *\n * @private\n */\nresolve.extra = function (conf, object) {\n  if (!object._cosmicplus) {\n    helpers.setHiddenProperty(object, \"_cosmicplus\", {})\n    if (conf.cache) object._cosmicplus.cache = conf.cache\n    else object._cosmicplus.cache = { destination: {}, account: {} }\n    object._cosmicplus.network = conf.network\n    object._cosmicplus.current = conf.current\n  }\n  return object._cosmicplus\n}\n","module.exports = require(\"regenerator-runtime\");\n","\"use strict\"\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * Thoses methods won't have effect unless status reporting is enabled on `conf`\n * object by using `status.init` (wich is done automatically on CosmicLink\n * objects).\n *\n * @private\n * @exports status\n */\nconst status = exports\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst html = env.isBrowser && require(\"@cosmic-plus/jsutils/html\")\n\n/**\n * Initialize `conf.status` & `conf.errors`.\n */\nstatus.init = function (conf) {\n  conf.status = null\n  conf.errors = false\n}\n\n/**\n * Set `conf` status as `status` and update statusNode. Error status should be\n * recorded using the `status.fail` function bellow. Once a status is set it\n * won't be mutated.\n *\n * @param {string} status\n */\nstatus.update = function (conf, status) {\n  if (conf.status || conf.status === undefined) return\n\n  // eslint-disable-next-line no-console\n  console.log(\"Set status: \" + status)\n  conf.status = status\n\n  if (conf._statusNode) {\n    const title = html.grab(\".cosmiclib_status\", conf._statusNode)\n    title.textContent = status\n  }\n}\n\n/**\n * Set `conf` status as error status `status` and update statusNode. This\n * implies that the cosmic link or the underlying transaction is invalid. Then,\n * call `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\nstatus.fail = function (conf, errorStatus, continuation) {\n  status.update(conf, errorStatus)\n  if (conf._statusNode) html.addClass(conf._statusNode, \"cosmiclib_error\")\n  errorContinuation(errorStatus, continuation)\n}\n\n/**\n * Append `error` to `conf.errors` and to the HTML display. Then, call\n * `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\nstatus.error = function (conf, error, continuation) {\n  // eslint-disable-next-line no-console\n  console.log(error)\n\n  if (conf.errors !== undefined) {\n    if (!conf.errors) conf.errors = []\n\n    conf.errors.push(error)\n\n    if (conf._statusNode) {\n      const errorsNode = html.grab(\".cosmiclib_errors\", conf._statusNode)\n      const lineNode = html.create(\"li\", null, error)\n      html.append(errorsNode, lineNode)\n    }\n  }\n\n  errorContinuation(error, continuation)\n}\n\n/**\n * Create & return an HTML element that displays `conf` status and eventual\n * errors.\n *\n * @return {htmlElement}\n */\nstatus.makeHtmlNode = function (conf) {\n  const statusNode = html.create(\"div\", \".cosmiclib_statusNode\")\n\n  const statusLine = html.create(\"span\", \".cosmiclib_status\")\n  html.append(statusNode, statusLine)\n  if (conf.status) statusLine.textContent = conf.status\n\n  const errorsNode = html.create(\"ul\", \".cosmiclib_errors\")\n  html.append(statusNode, errorsNode)\n  if (conf.errors) {\n    conf.errors.forEach(error => {\n      const errorLine = html.create(\"li\", null, error)\n      html.append(errorsNode, errorLine)\n    })\n  }\n\n  return statusNode\n}\n\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with `error` as message.\n * If `continuation` is undefined, do nothing.\n */\nfunction errorContinuation (error, continuation) {\n  if (continuation) {\n    if (continuation === \"throw\") throw new Error(error)\n    else continuation(error)\n  }\n}\n","\"use_strict\"\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\nconst html = exports\n\nconst { deprecated } = require(\"./misc.js\")\n\n/// Prevent node failure when accidentaly loading this file.\nconst env = require(\"./env\")\nconst document = env.window ? env.window.document : undefined\nif (env.isNode) console.error(\"@cosmic-plus/jsutils/html is a browser-only module\")\n\n/**\n * Add `string` as additional CSS definitions for the current document.\n *\n * @param {string} styles CSS definitions\n */\nhtml.addStyles = function (styles) {\n  const styleNode = html.create(\"style\", { type: \"text/css\" }, styles)\n  html.append(document.head, styleNode)\n}\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nhtml.append = function (element, ...childs) {\n  childs.forEach(child => { element.appendChild(html.convert(child)) })\n}\n\n/**\n * Add `className` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} className\n * */\nhtml.addClass = function (element, className) {\n  const classes = element.className.split(\" \")\n  if (classes.indexOf(className) === -1) element.className += ` ${className}`\n}\n\n// Deprecated since 2019-01-16\nhtml.appendClass = function (element, className) {\n  deprecated(\"2019-07-16\", \"html.appendClass()\", \"html.addClass()\")\n  return html.addClass(element, className)\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} elements\n * */\nhtml.clear = function (...elements) {\n  elements.forEach(element => { element.innerHTML = \"\" })\n}\n\n/**\n * If **object** is not an *HTMLElement*, convert it to a text DOM node; else\n * return **object**.\n *\n * @param  {Object} object\n * @return {HTMLELement}\n */\nhtml.convert = function (object) {\n  // https://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object/36894871#36894871\n  if (\n    object instanceof Element\n    || object instanceof HTMLDocument\n    || object instanceof Text\n  ) return object\n  else if (object == null) return document.createTextNode(\"\")\n  else return object.domNode || document.createTextNode(object)\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return\n\n  if (element.select) {\n    element.select()\n  } else if (window.getSelection) {\n    const range = document.createRange()\n    range.selectNode(element)\n    window.getSelection().removeAllRanges()\n    window.getSelection().addRange(range)\n  } else {\n    return\n  }\n  return document.execCommand(\"copy\")\n}\n\n/**\n * Copy `string` into user clipboard.\n *\n * @param {string} string\n */\nhtml.copyString = function (string) {\n  const textBox = html.create(\"textarea\", {}, string)\n  html.append(document.body, textBox)\n  html.copyContent(textBox)\n  html.destroy(textBox)\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nhtml.create = function (name, attributes, ...childs) {\n  const element = document.createElement(name)\n\n  if (typeof attributes === \"string\") {\n    switch (attributes.substr(0, 1)) {\n    case \"#\": element.id = attributes.substr(1); break\n    case \".\": element.className = attributes.substr(1); break\n    default: throw new Error(\"Unhandled attribute\")\n    }\n  } else {\n    Object.assign(element, attributes)\n  }\n\n  if (childs.length > 0) html.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.destroy = function (element) {\n  try {\n    if (element.parentNode) element.parentNode.removeChild(element)\n    element.innerHTML = \"\"\n  } catch (error) {\n    console.error(error)\n  }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nhtml.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.hide = function (...elements) {\n  elements.forEach(element => element.hidden = true)\n}\n\n/**\n * Replace `element1` by `element2`.\n *\n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\nhtml.replace = function (element1, element2) {\n  const node = html.convert(element2)\n  element1.parentNode.replaceChild(node, element1)\n  return node\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nhtml.rewrite = function (element, ...childs) {\n  html.clear(element)\n  html.append(element, ...childs)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.show = function (...elements) {\n  elements.forEach(element => element.hidden = false)\n}\n","\"use strict\"\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `conf` object\n * and HTML nodes are updated accordingly.\n *\n * @private\n * @exports decode\n */\nconst decode = exports\n\nconst check = require(\"./check\")\nconst normalize = require(\"./normalize\")\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\ndecode.query = function (conf, query = \"?\") {\n  if (query.substr(0, 1) !== \"?\") status.fail(conf, \"Invalid query\", \"throw\")\n\n  const operations = []\n  const tdesc = {}\n\n  let command = query.substr(1).replace(/&.*/, \"\")\n  const params = query.substr(command.length + 2).split(\"&\")\n  if (command && command !== \"transaction\") operations.push({ type: command })\n\n  for (let index in params) {\n    const param = params[index].split(\"=\", 2)\n    const field = param[0]\n    if (!field) continue\n\n    if (field === \"operation\") {\n      operations.push({ type: param[1] })\n      command = \"operation\"\n      continue\n    }\n\n    const value = decode.field(conf, field, param[1])\n\n    /// Multi-operation link.\n    if (command === \"transaction\") {\n      tdesc[field] = value\n    } else if (command === \"operation\") {\n      operations[operations.length - 1][field] = value\n    /// One-operation link.\n    } else {\n      if (specs.isTransactionField(field)) {\n        tdesc[field] = value\n      } else {\n        operations[0][field] = value\n      }\n    }\n  }\n\n  tdesc.operations = operations\n  normalize.tdesc(conf, tdesc)\n  tdesc.operations.forEach(odesc => normalize.odesc(conf, odesc))\n  check.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/******************************************************************************/\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\ndecode.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  return type ? decode.type(conf, type, value) : value\n}\n\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {string} type\n * @param {string} value\n */\ndecode.type = function (conf, type, value) {\n  if (value) {\n    value = decodeURIComponent(value)\n    return process[type] ? process[type](conf, value) : value\n  } else {\n    return \"\"\n  }\n}\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.asset = function (conf, asset) {\n  const assetLower = asset.toLowerCase()\n  if (assetLower === \"xlm\" || assetLower === \"native\") {\n    return { code: \"XLM\" }\n  } else {\n    const temp = asset.split(\":\")\n    const object = { code: temp[0], issuer: temp[1] }\n    return object\n  }\n}\n\nprocess.assetsArray = function (conf, assetsList) {\n  const strArray = assetsList.split(\",\")\n  return strArray.map(entry => decode.asset(conf, entry))\n}\n\nprocess.boolean = function (conf, string) {\n  switch (string) {\n  case \"true\": return true\n  case \"false\": return false\n  }\n}\n\nprocess.buffer = function (conf, string) {\n  const matched = string.match(/(^[^:]*):/)\n  const type = matched && matched[1]\n  switch (type) {\n  case \"text\": case \"base64\":\n    return { type: type, value: string.substr(type.length + 1)}\n  default:\n    return { type: \"text\", value: string }\n  }\n}\n\nprocess.date = function (conf, string) {\n  /// Use UTC timezone by default.\n  if (string.match(/T[^+]*[0-9]$/)) string += \"Z\"\n  return new Date(string).toISOString()\n}\n\nprocess.memo = function (conf, string) {\n  const matched = string.match(/(^[^:]*):/)\n  const type = matched && matched[1]\n  switch (type) {\n  case \"text\": case \"base64\": case \"id\": case \"hash\": case \"return\":\n    return { type: type, value: string.substr(type.length + 1)}\n  default:\n    return { type: \"text\", value: string }\n  }\n}\n\nprocess.price = function (conf, price) {\n  const numerator = price.replace(/:.*/, \"\")\n  const denominator = price.replace(/^[^:]*:/, \"\")\n  if (numerator === denominator) return price\n  else return { n: +numerator, d: +denominator }\n}\n\nprocess.signer = function (conf, signer) {\n  const temp = signer.split(\":\")\n  const object = { weight: temp[0], type: temp[1], value: temp[2] }\n  return object\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  exports[type] = (conf, value) => decode.type(conf, type, value)\n})\n","\"use_strict\"\n/**\n * Library-wide configuration.\n *\n * @borrows module:aliases.all as aliases\n * @borrows module:aliases.set as addAliases\n * @borrows module:aliases.remove as removeAliases\n *\n * @borrows module:event.defaultClickHandlers as clickHandlers\n * @borrows module:event.setClickHandler as setClickHandler\n * @borrows module:event.clearClickHandler as clearClickHandler\n *\n * @exports config\n */\nconst config = exports\n\nconst aliases = require(\"@cosmic-plus/base/aliases\")\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst event = env.isBrowser && require(\"./event\")\n\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\nconfig.page = \"https://cosmic.link/\"\n/**\n * The default fallback network.\n * @default 'public'\n */\nconfig.network = \"public\"\n/**\n * The default fallback source address.\n * @default undefined\n */\nconfig.source = undefined\n\n/**\n * Networks setup.\n *\n * @private\n */\nconfig.current = {\n  passphrase: {},\n  horizon: {},\n  server: {}\n}\n\n/**\n * Set default **passphrase** and **horizon** URL for network **name**.\n *\n * Adding custom network this way will enable the use of their name in cosmic\n * queries (as in `&network=name`). However, please remind that this feature\n * will works only on your side and could break compatibility with other\n * services.\n *\n * @example\n * cosmicLib.config.setupNetwork('public', 'https://my-own-horizon-instance.example.org')\n * cosmicLib.config.setupNetwork('custom', 'https://custom-horizon.example.org', 'My Custom Passphrase')\n *\n * @param {string} name Network name (like 'public', 'test')\n * @param {string} horizon Horizon URL\n * @param {string} [passphrase] Network passphrase\n */\nconfig.setupNetwork = function (name, horizon, passphrase) {\n  if (passphrase) config.current.passphrase[name] = passphrase\n  else passphrase = config.current.passphrase[name]\n  config.current.horizon[passphrase] = horizon\n}\n\nconfig.setupNetwork(\"public\", \"https://horizon.stellar.org\", StellarSdk.Networks.PUBLIC)\nconfig.setupNetwork(\"test\", \"https://horizon-testnet.stellar.org\", StellarSdk.Networks.TESTNET)\n\nconfig.aliases = aliases.all\nconfig.addAliases = (definitions) => aliases.set(config, definitions)\nconfig.removeAliases = (array) => aliases.remove(config, array)\n\nconfig.clickHandlers = event.defaultClickHandlers\nconfig.setClickHandler = (fieldType, callback) => event.setClickHandler(config, fieldType, callback)\nconfig.clearClickHandler = (fieldType) => event.clearClickHandler(config, fieldType)\n","\"use strict\"\n/**\n * Exposes some of the check routines used by cosmic-lib. Individual type-checks\n * are also available for:\n *\n * > address, amount, asset, assetsArray, boolean, buffer, date, flags, hash,\n * id, memo, network, price, sequence, signer, string, threshold, url, weight\n *\n * All checks are meant to be used on tdesc formatted values. Form example, in\n * tdesc buffer values are not encoded as actual Buffer object but as something\n * like: `{ type: \"text\", value: \"Hello World!\"}`.\n *\n * @example\n * check.field(\"minTime\", \"2018-11\")\n * check.date(\"2018-11\")\n *\n * @private\n * @exports check\n */\nconst check = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst { isUtf8, isBase64 } = require(\"@cosmic-plus/jsutils/misc\")\n\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\n/**\n * Check that **tdesc** is valid.\n *\n * @example\n * check.tdesc({\n *   memo: { type: \"text\", value: \"Hello, World!\" },\n *   network: \"public\",\n *   source: \"tips*cosmic.link\",\n *   operations: [{ type: \"setOptions\", homeDomain: \"cosmic.link\" }]\n * })\n *\n * @param  {Object} tdesc\n */\ncheck.tdesc = function (conf, tdesc) {\n  let isValid = true\n\n  for (let field in tdesc) {\n    try {\n      check.txField(conf, field, tdesc[field])\n    } catch (error) {\n      isValid = false\n      tdesc[field] = errDesc(error, tdesc[field])\n    }\n  }\n\n  if (tdesc.operations.length > 100) {\n    isValid = false\n    status.error(conf, \"Too much operations (max 100)\")\n  }\n\n  tdesc.operations.forEach(odesc => {\n    try {\n      check.odesc(conf, odesc)\n    } catch (e) {\n      isValid = false\n    }\n  })\n\n  if (!isValid) {\n    const error = new Error(\"Invalid tdesc\")\n    // TODO: check if this is really useful\n    error.tdesc = tdesc\n    throw error\n  }\n}\n\n/**\n * Check that tdesc operation is valid (referred as **odesc**).\n *\n * @example\n * check.odesc({ type: \"payment\", destination: \"tips*cosmic.link\", amount: \"20\" })\n *\n * @param  {Object} odesc [description]\n */\ncheck.odesc = function (conf, odesc) {\n  let isValid = true\n\n  try {\n    check.operationType(conf, odesc.type)\n  } catch (error) {\n    isValid = false\n    odesc.type = errDesc(error, odesc.type)\n  }\n\n  for (let field in odesc) {\n    try {\n      check.operationField(conf, odesc.type, field, odesc[field])\n    } catch (error) {\n      isValid = false\n      odesc[field] = errDesc(error, odesc[field])\n    }\n  }\n\n  specs.operationMandatoryFields[odesc.type].forEach(field => {\n    if (odesc[field] === undefined) {\n      isValid = false\n      const error = new Error(\"Missing mandatory field: \" + field)\n      odesc[field] = errDesc(error)\n      status.error(conf, error.message)\n    }\n  })\n\n  if (!isValid) throw new Error(\"Invalid odesc\")\n}\n\n/**\n * Check that **field** is a valid transaction field and that its **value** is\n * valid.\n *\n * @param  {string} field\n * @param  {*} value\n */\ncheck.txField = function (conf, field, value) {\n  if (field === \"operations\") return\n  if (!specs.transactionOptionalFields.find(name => name === field)) {\n    status.error(conf, \"Invalid transaction field: \" + field, \"throw\")\n  }\n  check.field(conf, field, value)\n}\n\n/**\n * Check that **type** is a valid Stellar Operation type.\n *\n * @param  {String}\n */\ncheck.operationType = function (conf, type) {\n  if (!specs.operationMandatoryFields[type]) {\n    status.error(conf, \"Invalid operation: \" + type, \"throw\")\n  }\n}\n\n/**\n * Check that **field** is a valid **operation** field and that its **value** is\n * valid.\n *\n * @param {String} operation\n * @param {String} field\n * @param {*} value\n */\ncheck.operationField = function (conf, operation, field, value) {\n  if (field === \"type\") return\n  if (!specs.isOperationField(operation, field)) {\n    status.error(conf, `Invalid field for ${operation}: ${field}`, \"throw\")\n  }\n  check.field(conf, field, value)\n}\n\nfunction errDesc (error, value = \"\") {\n  return { error: error, value: value }\n}\n\n/******************************************************************************/\n\n/**\n * Check that **field** **value** is a valid.\n *\n * @example\n * check.field(\"memo\", { type: \"text\", value: \"Hello, World!\" })\n *\n * @param {string} field The name of a Stellar Transaction parameter\n * @param {*} value\n */\ncheck.field = function (conf, field, value) {\n  if (value === \"\" && field !== \"homeDomain\" && field !== \"value\") {\n    status.error(conf, `Missing value for field: ${field}`, \"throw\")\n  }\n\n  const type = specs.fieldType[field]\n  if (!type) status.error(conf, \"Unknow field: \" + field, \"throw\")\n  if (value) check.type(conf, type, value)\n}\n\n/**\n * Check that **value** is of type **type**.\n *\n * @example\n * check.type(\"date\", \"2018-11-28\")\n *\n * @param {string} type\n * @param {string} value\n */\ncheck.type = function (conf, type, value) {\n  if (!specs.types.find(entry => entry === type)) {\n    throw new Error(\"Invalid type: \" + type)\n  }\n  return check[type](conf, value)\n}\n\n/**\n * Generic check for numbers. Check that **value** is a number or a string\n * representing a number. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction\n * for `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.number = function (conf, value, type = \"number\", min, max = \"unlimited\") {\n  const num = +value\n  if (isNaN(num)) {\n    status.error(conf,\n      `Invalid ${type} (should be a number): ${value}`,\n      \"throw\"\n    )\n  } else if ((min && num < min) || (max && num > max)) {\n    status.error(conf,\n      `Invalid ${type} (should be between ${min} and ${max} ): ${value}`,\n      \"throw\"\n    )\n  }\n}\n\n/**\n * Generic check for integers. Check that **value** is an integer or a string\n * representing an integer. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction for\n * **value**.\n *\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.integer = function (conf, value, type = \"integer\", min, max) {\n  check.number(conf, value, type, min, max)\n  if (parseInt(value) + \"\" !== value + \"\") {\n    status.error(conf, `Not an integer: ${value}`, \"throw\")\n  }\n}\n\n/**\n * Check that **value** is an UTF-8 string.\n *\n * *Note:* This use a weak (simplified) test that may not be accurate for small\n * strings.\n *\n * @param  {String} value\n */\ncheck.utf8 = function (conf, value) {\n  if (typeof value !== \"string\" || !isUtf8(value)) {\n    status.error(conf, `Invalid UTF8 string: ${value}`, \"throw\")\n  }\n}\n\n/**\n * Check that **value** is a base64 string.\n *\n * @param  {String} value\n */\ncheck.base64 = function (conf, value) {\n  if (typeof value !== \"string\" || !isBase64(value)) {\n    status.error(conf, `Invalid base64 string: ${value}`, \"throw\")\n  }\n}\n\n/******************************************************************************/\n\ncheck.amount = function (conf, amount) {\n  check.number(conf, amount, \"amount\")\n}\n\ncheck.address = function (conf, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.error(conf, \"Invalid address: \" + helpers.shorter(address), \"throw\")\n  }\n}\n\ncheck.asset = function (conf, asset) {\n  const code = asset.code.toLowerCase()\n  if (!asset.issuer && code !== \"xlm\" && code !== \"native\") {\n    status.error(conf, \"Missing issuer for asset: \" + code, \"throw\")\n  }\n}\n\ncheck.assetsArray = function (conf, assetsArray) {\n  let isValid = true\n  for (let index in assetsArray) {\n    try {\n      check.asset(conf, assetsArray[index])\n    } catch (error) {\n      console.error(error)\n      isValid = false\n    }\n  }\n  if (!isValid) throw new Error(\"Invalid assets array\")\n}\n\ncheck.boolean = function (conf, boolean) {\n  if (typeof boolean !== \"boolean\") {\n    status.error(conf, \"Invalid boolean: \" + boolean, \"throw\")\n  }\n}\n\ncheck.buffer = function (conf, buffer) {\n  switch (buffer.type) {\n  case \"text\": check.utf8(conf, buffer.value); break\n  case \"base64\": check.base64(conf, buffer.value); break\n  default: status.error(conf, \"Invalid buffer type: \" + buffer.type, \"throw\")\n  }\n}\n\ncheck.date = function (conf, date) {\n  if (isNaN(Date.parse(date))) {\n    status.error(conf, \"Invalid date: \" + date, \"throw\")\n  }\n}\n\ncheck.flags = function (conf, flags) {\n  check.integer(conf, flags, \"flags\", 0, 7)\n}\n\ncheck.hash = function (conf, hash) {\n  if (hash.length !== 64 || !hash.match(/^[0-9a-f]*$/)) {\n    status.error(conf, \"Invalid hash: \" + hash, \"throw\")\n  }\n}\n\ncheck.id = function (conf, id) {\n  if (!id.match(/^[0-9]*$/)) status.error(conf, \"Invalid id: \" + id, \"throw\")\n}\n\ncheck.memo = function (conf, memo) {\n  switch (memo.type) {\n  case \"text\": check.utf8(conf, memo.value); break\n  case \"base64\": check.base64(conf, memo.value); break\n  case \"hash\": case \"return\": check.hash(conf, memo.value); break\n  case \"id\": check.id(conf, memo.value); break\n  default: status.error(conf, \"Invalid memo type: \" + memo.type, \"throw\")\n  }\n}\n\n\ncheck.price = function (conf, price) {\n  if (typeof price === \"object\") {\n    try {\n      check.price(null, price.n)\n      check.price(null, price.d)\n    } catch (error) {\n      status.error(conf, \"Invalid price: \" + price, \"throw\")\n    }\n  } else {\n    check.number(conf, price, \"price\", 0)\n  }\n}\n\ncheck.signer = function (conf, signer) {\n  check.weight(conf, signer.weight)\n  switch (signer.type) {\n  case \"key\":\n    check.address(conf, signer.value)\n    break\n  case \"hash\":\n  case \"tx\":\n    check.hash(conf, signer.value)\n    break\n  default:\n    status.error(conf, \"Invalid signer type: \" + signer.type, \"throw\")\n  }\n}\n\ncheck.sequence = function (conf, sequence) {\n  check.number(conf, sequence, \"sequence\", 0)\n}\n\ncheck.threshold = function (conf, threshold) {\n  check.integer(conf, threshold, \"threshold\", 0, 255)\n}\n\ncheck.weight = function (conf, weight) {\n  check.integer(conf, weight, \"weight\", 0, 255)\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","\"use strict\"\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @private\n * @exports format\n */\nconst format = exports\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst html = require(\"@cosmic-plus/jsutils/html\")\nconst nice = require(\"@cosmic-plus/jsutils/nice\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst config = require(\"./config\")\nconst event = require(\"./event\")\nconst resolve = require(\"./resolve\")\nconst signersUtils = require(\"./signers-utils\")\nconst specs = require(\"./specs\")\n\n/**\n * Returns an HTML div describing `tdesc`.\n *\n * @param {Object} tdesc Transaction descriptor.\n * @return {HTMLElement} Transaction HTML description.\n */\nformat.tdesc = function (conf, tdesc) {\n  const trNode = html.create(\"div\", \".cosmiclib_transactionNode\")\n  if (!tdesc) return trNode\n\n  let infoNode\n  for (let index in specs.transactionOptionalFields) {\n    const entry = specs.transactionOptionalFields[index]\n    if (entry === \"horizon\" && resolve.horizon(config, conf.network)) continue\n\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = html.create(\"ul\", \".cosmiclib_sideInfo\")\n      const lineNode = html.create(\"li\", {},\n        specs.fieldDesc[entry] + \": \",\n        format.field(conf, entry, tdesc[entry])\n      )\n      html.append(infoNode, lineNode)\n    }\n  }\n  if (infoNode) html.append(trNode, infoNode)\n\n  try {\n    for (let index in tdesc.operations) {\n      const operation = tdesc.operations[index]\n      const opNode = format.odesc(conf, operation)\n      opNode.index = index\n      html.append(trNode, opNode)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  if (!tdesc.operations.length) {\n    if (Object.keys(tdesc).length === 1) {\n      html.append(trNode, html.create(\"div\", null, \"No transaction\"))\n    } else {\n      html.append(trNode, html.create(\"div\", \".cosmiclib_operation\", \"No operation\"))\n    }\n  }\n\n  trNode.tdesc = tdesc\n  return trNode\n}\n\n/**\n * Returns an HTML div describing `odesc`.\n *\n * @param {Object} odesc Operation in cosmic link JSON format.\n * @return {HTMLElement} Operation HTML description.\n */\nformat.odesc = function (conf, odesc) {\n  const opNode = html.create(\"div\", \".cosmiclib_operation\")\n  opNode.odesc = odesc\n  let retNode = opNode\n\n  if (odesc.source) {\n    retNode = html.create(\"div\", \".cosmiclib_sourcedOperation\")\n    const sourceNode = html.create(\"div\", \".cosmiclib_sideInfo\", \"Source: \")\n    const addressNode = format.address(conf, odesc.source)\n    html.append(sourceNode, addressNode)\n    html.append(retNode, sourceNode, opNode)\n  }\n\n  let meaning = operationMeaning(odesc)\n  while (meaning) {\n    if (meaning.substr(0, 1) === \"{\") {\n      const query = meaning.substr(1).replace(/}.*/, \"\")\n      meaning = meaning.replace(/^[^}]*}/, \"\")\n      if (query === \"newline\") {\n        if (meaning === \"\") break\n        html.append(opNode, html.create(\"br\"))\n      } else {\n        const fieldNode = format.field(conf, query, odesc[query])\n        html.append(opNode, fieldNode)\n      }\n    } else {\n      const txt = meaning.replace(/{.*/, \"\")\n      meaning = meaning.replace(/^[^{]*/, \"\")\n      html.append(opNode, txt)\n    }\n  }\n  return retNode\n}\n\n/**\n * Returns a string describing `odesc`.\n *\n * @private\n */\nfunction operationMeaning (odesc) {\n  let msg\n  switch (odesc.type) {\n  case \"accountMerge\":\n    return \"Merge account inside {destination}\"\n  case \"allowTrust\":\n    if (odesc.authorize) {\n      return \"Allow usage of your asset {assetCode} to {trustor}\"\n    } else {\n      return \"Deny usage of your asset {assetCode} to {trustor}\"\n    }\n  case \"bumpSequence\":\n    return \"Set account sequence number to {bumpTo}\"\n  case \"changeTrust\":\n    if (odesc.limit === \"0\") {\n      return \"Refuse asset {asset}\"\n    } else if (odesc.limit) {\n      return \"Set holding limit as {limit} for asset {asset}\"\n    } else {\n      return \"Accept asset {asset}\"\n    }\n  case \"createAccount\":\n    return \"Create account {destination} and send {startingBalance} XLM to it\"\n  case \"createPassiveOffer\":\n    return \"Passive offer of {amount} {selling} at {price} {buying} / unit\"\n  case \"inflation\":\n    return \"Run inflation\"\n  case \"manageData\":\n    if (odesc.value) {\n      if (odesc.value.type === \"text\") {\n        return \"Set data entry '{name}' to: '{value}'\"\n      } else {\n        return \"Set data entry '{name}' to base64: '{value}'\"\n      }\n    } else {\n      return \"Delete data entry '{name}'\"\n    }\n  case \"manageOffer\":\n    if (!odesc.offerId || odesc.offerId === \"0\") {\n      return \"Offer {amount} {selling} at {price} {buying} / unit\"\n    } else if (odesc.amount !== \"0\") {\n      return \"Change offer '{offerId}' to: offer {amount} {selling} at \" +\n          \"{price} {buying} / unit\"\n    } else {\n      return \"Delete offer '{offerId}'\"\n    }\n  case \"pathPayment\":\n    msg = \"Send {destAmount} {destAsset} to {destination} for a maximum \" +\n        \"of {sendMax} {sendAsset}\"\n    if (odesc.path) msg += \" using conversion path: {path}\"\n    return msg\n  case \"payment\":\n    return \"Send {amount} {asset} to {destination}\"\n  case \"setOptions\":\n    msg = \"\"\n    if (odesc.inflationDest) {\n      msg += \"Set inflation destination to: {inflationDest}{newline}\"\n    }\n    if (odesc.clearFlags) msg += \"Clear flag(s): {clearFlags}{newline}\"\n    if (odesc.setFlags) msg += \"Set flag(s): {setFlags}{newline}\"\n    if (odesc.masterWeight) {\n      if (odesc.masterWeight === \"0\") {\n        msg += \"Delete master key{newline}\"\n      } else {\n        msg += \"Set master key weight at: {masterWeight}{newline}\"\n      }\n    }\n    [\"lowThreshold\", \"medThreshold\", \"highThreshold\"].forEach(field => {\n      if (odesc[field]) msg += \"Set \" + field + \" at: {\" + field + \"}{newline}\"\n    })\n    if (odesc.signer) {\n      if (odesc.signer.type === \"tx\") {\n        if (odesc.signer.weight === \"0\") msg += \"Remove pre-signed {signer}{newline}\"\n        else msg += \"Pre-sign {signer}{newline}\"\n      } else {\n        if (odesc.signer.weight === \"0\") msg += \"Remove signer: {signer}{newline}\"\n        else msg += \"Set signer: {signer}{newline}\"\n      }\n    }\n    if (odesc.homeDomain) msg += \"Set home domain: {homeDomain}{newline}\"\n    if (odesc.homeDomain === \"\") msg += \"Unset home domain\"\n    if (!msg) msg = \"Do nothing\"\n    return msg\n  default:\n    throw new Error(\"Unknow operation: \" + odesc.type)\n  }\n}\n\n/**\n * Returns an HTML div describing `signers`.\n *\n * @param {Object} signers Signers object as returned by @see{resolve.signers}.\n * @return {HTMLElement} Signers HTML description\n */\nformat.signatures = function (conf, transaction) {\n  const signersNode = html.create(\"div\", \".cosmiclib_signersNode\")\n\n  signersUtils.for(conf, transaction).then(utils => {\n    if (utils.signersList.length < 2 && !utils.signatures.length) return\n\n    utils.sources.forEach(accountId => {\n      if (accountId !== specs.neutralAccountId) {\n        const div = makeAccountSignersNode(conf, utils, accountId)\n        html.append(signersNode, div)\n      }\n    })\n  })\n\n  return signersNode\n}\n\nfunction makeAccountSignersNode (conf, utils, accountId) {\n  const accountSignersNode = html.create(\"div\")\n\n  const title = \"Signers for \" + helpers.shorter(accountId)\n  const titleNode = html.create(\"span\", \".cosmiclib_threshold\", title)\n  const listNode = html.create(\"ul\", \".cosmiclib_signers\")\n  html.append(accountSignersNode, titleNode, listNode)\n\n  utils.signers[accountId].forEach(signer => {\n    const signerNode = format.signer(conf, signer)\n    const lineNode = html.create(\"li\", null, signerNode)\n    if (utils.hasSigned(signer.key)) {\n      html.addClass(lineNode, \"cosmiclib_signed\")\n      listNode.insertBefore(lineNode, listNode.firstChild)\n    } else {\n      html.append(listNode, lineNode)\n    }\n  })\n\n  return accountSignersNode\n}\n\n/**\n * Retrieves the parent odesc (*Operation Descriptor*) of an HTML element, or\n * returns `undefined` if **element** is not the child of an HTML formatted\n * operation.\n *\n * @param {HTMLElement} element\n * @return {Object} odesc\n */\nformat.parentOdesc = (conf, element) => parentProperty(element, \"odesc\")\n\n/**\n * Retrieves the parent operation index of an HTML element, or returns\n * `undefined` if **element** is not the child of an HTML formatted operation.\n *\n * @param {HTMLElement} element\n * @return {Number} operation index\n */\nformat.parentIndex = (conf, element) => parentProperty(element, \"index\")\n\n/**\n * Retrieves the parent tdesc of an HTML element, or returns `undefined`\n * if **element** is not the child of an HTML formatted transaction.\n *\n * @param {HTMLElement} element\n * @return {Object} tdesc\n */\nformat.parentTdesc = (conf, element) => parentProperty(element, \"tdesc\")\n\nfunction parentProperty (element, property) {\n  while (element.parentNode) {\n    if (element.parentNode[property]) return element.parentNode[property]\n    else element = element.parentNode\n  }\n}\n\n/******************************************************************************/\n\n/**\n * Returns an HTML div describing `field` `value`.\n *\n * @param {string} field The field name of `value` as defined in `spec.js`.\n * @param {*} value The value of `field`.\n * @return {HTLMElement} `field` `value` HTML description\n */\nformat.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) throw new Error(\"Unknow field: \" + field)\n\n  const domNode = format.type(conf, type, value)\n  domNode.field = field\n  if (field !== type) html.addClass(domNode, \"cosmiclib_\" + field)\n\n  return domNode\n}\n\nformat.type = function (conf, type, value) {\n  if (typeof value === \"object\" && value.error) type = \"error\"\n  const formatter = process[type] || process.string\n  const domNode = formatter(conf, value)\n  html.addClass(domNode, \"cosmiclib_\" + type)\n\n  const eventObject = {\n    conf: conf,\n    type: type,\n    value: value,\n    domNode: domNode\n  }\n  if (conf.constructor.name === \"CosmicLink\") eventObject.cosmicLink = conf\n  if (event.defaultClickHandlers[type]) {\n    domNode.onclick = () => event.callClickHandler(conf, type, eventObject)\n    html.addClass(domNode, \"cosmiclib_clickable\")\n  }\n  return domNode\n}\n\n/// Provide a format method for each data type.\nspecs.types.forEach(type => {\n  format[type] = (conf, value) => format.type(conf, type, value)\n})\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.string = function (conf, string) {\n  if (typeof string !== \"string\") string = string + \"\"\n  return html.create(\"span\", null, string)\n}\n\nprocess.error = function (conf, errDesc) {\n  const errorNode = html.create(\"span\", \".cosmiclib_error\")\n  errorNode.textContent = errDesc.value === \"\" ? \"(undefined)\"\n    : errDesc.value.value  || errDesc.value\n  errorNode.title = errDesc.error.message\n  return errorNode\n}\n\nprocess.address = function (conf, address) {\n  const addressNode = html.create(\"span\",\n    { title: \"Resolving...\" },\n    helpers.shorter(address),\n    html.create(\"span\", \".cosmiclib_loadingAnim\")\n  )\n\n  resolveAddressAndUpdate(conf, address, addressNode)\n  return addressNode\n}\n\nasync function resolveAddressAndUpdate (conf, address, addressNode) {\n  try {\n    const account = await resolve.address(conf, address)\n\n    addressNode.title = account.account_id\n    if (account.memo) {\n      addressNode.title += `\\nMemo (${account.memo_type}): ${account.memo}`\n    }\n\n    if (account.address) addressNode.textContent = account.address\n    else if (account.alias) addressNode.textContent = account.alias\n    addressNode.extra = account\n\n  } catch (error) {\n    addressNode.title = \"Can't resolve address\"\n    html.addClass(addressNode, \"cosmiclib_error\")\n  }\n\n  const animation = html.grab(\".cosmiclib_loadingAnim\", addressNode)\n  if (animation) html.destroy(animation)\n}\n\nprocess.amount = function (conf, amount, significant = 3, max = 7) {\n  // Hide non-significant numbers\n  if (typeof amount !== \"number\") amount = Number(amount)\n  const nicified = nice(amount, { significant, max })\n  if (String(amount).length <= nicified.length) {\n    return html.create(\"span\", null, nicified)\n  } else {\n    return html.create(\"span\",\n      { className: \"cosmiclib_clickable\", title: amount },\n      nicified, html.create(\"span\", \".cosmiclib_ellipsis\", \"...\"))\n  }\n}\n\nprocess.asset = function (conf, asset) {\n  const assetNode = html.create(\"span\", null,\n    format.field(conf, \"assetCode\", asset.code))\n\n  if (asset.issuer) {\n    html.append(assetNode,\n      \" (\", format.field(conf, \"assetIssuer\", asset.issuer), \")\")\n  }\n\n  return assetNode\n}\n\nprocess.assetsArray = function (conf, assetsArray) {\n  const assetsArrayNode = html.create(\"span\")\n  for (let i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) html.append(assetsArrayNode, \", \")\n    html.append(assetsArrayNode, format.asset(conf, assetsArray[i]))\n  }\n\n  return assetsArrayNode\n}\n\nprocess.buffer = function (conf, object) {\n  if (object.type === \"base64\") return format.hash(conf, object.value)\n  else return format.string(conf, object.value)\n}\n\nprocess.date = function (conf, date) {\n  return html.create(\"span\", {}, new Date(date).toLocaleString())\n}\n\nprocess.hash = function (conf, hash) {\n  return html.create(\"span\", { title: hash }, helpers.shorter(hash))\n}\n\nprocess.id = process.hash\n\nprocess.flags = function (conf, flags) {\n  let string = \"\"\n  if (flags >= 4) {\n    string = \"immutable\"\n    flags = flags - 4\n  }\n  if (flags >= 2) {\n    if (string) string = \", \" + string\n    string = \"revocable\" + string\n    flags = flags - 2\n  }\n  if (+flags === 1) {\n    if (string) string = \", \" + string\n    string = \"required\" + string\n  }\n\n  return html.create(\"span\", {}, string)\n}\n\nprocess.memo = function (conf, memo) {\n  const typeNode = format.field(conf, \"memoType\", memo.type)\n  let valueNode\n  switch (memo.type) {\n  case \"text\":\n    valueNode = format.field(conf, \"memoText\", memo.value)\n    break\n  case \"base64\":\n    valueNode = format.field(conf, \"memoBinary\", memo.value)\n    break\n  case \"id\":\n    valueNode = format.field(conf, \"memoId\", memo.value)\n    break\n  case \"hash\":\n    valueNode = format.field(conf, \"memoHash\", memo.value)\n    break\n  case \"return\":\n    valueNode = format.field(conf, \"memoReturn\", memo.value)\n  }\n  return html.create(\"span\", {}, valueNode, \" (\", typeNode, \")\")\n}\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return process.amount(conf, price, 3, null)\n  else return process.amount(conf, price.n / price.d, 3, null)\n}\n\nprocess.signer = function (conf, signer) {\n  const signerNode = html.create(\"span\")\n  switch (signer.type) {\n  case \"key\":\n  case \"ed25519_public_key\": {\n    const value1 = signer.value || signer.key\n    html.append(signerNode, \"Account \", format.field(conf, \"signerKey\", value1))\n    break\n  }\n  case \"tx\": {\n    const value2 = signer.value || signer.key\n    html.append(signerNode, \"transaction \", format.field(conf, \"signerTx\", value2))\n    break\n  }\n  case \"hash\":\n  case \"sha256hash\": {\n    const value3 = signer.value || StellarSdk.StrKey.decodeSha256Hash(signer.key).toString(\"hex\")\n    html.append(signerNode, \"key whose hash is \", format.field(conf, \"signerHash\", value3))\n    break\n  }\n  }\n  if (signer.weight > 1) {\n    const weightNode = format.weight(conf, signer.weight)\n    html.append(signerNode, \" (weight: \", weightNode, \")\")\n  }\n  return signerNode\n}\n","\"use_strict\"\n/**\n * This module provides two ways to generate {@link SignersUtils} for a\n * Transaction object. The first one extends the object and is the intended way\n * to use those utilities. However, as extending objects can sometimes prove\n * inconvenient or intrusive, a second method allows to create a stand-alone\n * {@link SignersUtils} tied to a given transaction.\n *\n * @exports signersUtils\n */\nconst signersUtils = exports\n\nconst resolve = require(\"./resolve\")\n\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\n/**\n * **SignersUtils** is a toolbox that aims to ease the handling of\n * multisignature transactions. The idea behind it is to fetch all required\n * data once and to cache the responses into the transaction. Then, all\n * the utilities can function in a synchronous (immediate) manner.\n *\n * Those are automatically available in `cosmicLink.transaction` after\n * `await cosmicLink.lock()` is ran. Alternatively, you can extend a transaction\n * or generate its SignersUtils by using {@link module:signersUtils}. There's no\n * `cosmicLib.SignersUtils` constructor.\n *\n * An instance of SignersUtils is always tied to a given transaction. This is\n * why none of the provided methods take a transaction as parameter.\n *\n * >\n * | Members                                                                     | Methods\n * |-----------------------------------------------------------------------------|-------------\n * | [sources]{@link SignersUtils#sources}: Array of transaction sources         | [hasSigner]{@link SignersUtils#hasSigner}: Test if a key is a legit signer for transaction\n * | [signers]{@link SignersUtils#signers}: Table of transaction signers         | [hasSigned]{@link SignersUtils#hasSigned}: Test if a key has signed transaction\n * | [signersList]{@link SignersUtils#signersList}: Array of transaction signers |\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Donation', maxDate: 2019 })\n *  .addOperation('payment', { destination: 'tips*cosmic.link', amount: 10 })\n *\n * await cosmicLink.lock({ network: 'test', source: 'myaddress*example.org' })\n *\n * console.log(cosmicLink.transaction.signers)\n * console.log(cosmicLink.transaction.hasSigner(GB...DXEZ))\n *\n * @alias SignersUtils\n * @namespace\n */\nclass SignersUtils {\n  static async resolve (conf, transaction, extendFlag) {\n    const extra = resolve.extra(conf, transaction)\n\n    if (!extra.cache.signersUtils) {\n      resolve.useNetwork(extra)\n      extra.cache.txHash = transaction.hash()\n      const utils = new SignersUtils(extra, transaction)\n      /**\n       * A list of the sources involved in the transaction.\n       * @alias SignersUtils#sources\n       * @type {Array}\n       */\n      utils.sources = await resolve.txSources(extra, transaction)\n      /**\n       * A table of the signers for each transaction source.\n       * @alias SignersUtils#signers\n       * @type {Object}\n       */\n      utils.signers = await resolve.txSigners(extra, transaction)\n      /**\n       * A list of the legit signers for the transaction.\n       * @alias SignersUtils#signersList\n       * @type {Array}\n       */\n      utils.signersList = await resolve.txSignersList(extra, transaction)\n      Object.assign(utils, utilities)\n      extra.cache.signersUtils = utils\n    }\n\n    if (extendFlag) {\n      if (!transaction.hasSigner) Object.assign(transaction, extra.cache.signersUtils)\n      return transaction\n    } else {\n      return extra.cache.signersUtils\n    }\n  }\n\n  constructor (conf, transaction) {\n    this.signatures = transaction.signatures\n    helpers.setHiddenProperty(this, \"_cosmicplus\", transaction._cosmicplus)\n  }\n}\n\n/******************************************************************************/\n\nconst utilities = {}\n\n/**\n * Tests if **accountId** is a legit signer for the transaction.\n *\n * @example\n * if (transaction.hasSigner(GB...DEZX)) console.log('Legit signer')\n *\n * @alias SignersUtils#hasSigner\n * @param {string} accountId\n * @return {boolean}\n */\nutilities.hasSigner = function (accountId) {\n  return this.signersList.find(key => key === accountId)\n}\n\n/**\n * Tests if **accountId** has signed the transaction.\n *\n * @example\n * if (transaction.hasSigned(GB...DEZX)) console.log('Has signed')\n *\n * @alias SignersUtils#hasSigned\n * @param {string} accountId\n * @return {boolean}\n */\nutilities.hasSigned = function (accountId) {\n  if (accountId.substr(0, 1) === \"G\") {\n    const keypair = StellarSdk.Keypair.fromPublicKey(accountId)\n    const txHash = this._cosmicplus.cache.txHash\n    return !!this.signatures.find(entry => keypair.verify(txHash, entry.signature()))\n  }\n}\n\n/******************************************************************************/\n\n/**\n * Returns SignersUtils for **transaction**.\n *\n * @async\n * @param {Transaction} transaction\n * @return {SignersUtils}\n */\nsignersUtils.for = (conf, transaction) => SignersUtils.resolve(conf, transaction)\n\n/**\n * Extends **transaction** with SignersUtils.\n *\n * @async\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nsignersUtils.extends = (conf, transaction) => SignersUtils.resolve(conf, transaction, true)\n","\"use strict\"\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @private\n * @exports convert\n */\nconst convert = exports\n\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst construct = require(\"./construct\")\nconst decode = require(\"./decode\")\nconst destruct = require(\"./destruct\")\nconst encode = require(\"./encode\")\nconst resolve = require(\"./resolve\")\n\n/** ****************************    URI -> XDR    ******************************/\n\nconvert.uriToQuery = function (conf, uri) {\n  if (!uri.match(/\\?/)) return null\n  const query = uri.replace(/^[^?]*/, \"\")\n  return query\n}\n\nconvert.queryToTdesc = decode.query\n\nconvert.tdescToJson = function (conf, tdesc) {\n  return JSON.stringify(tdesc, null, 2)\n}\n\nconvert.tdescToTransaction = construct.transaction\n\nconvert.transactionToXdr = function (conf, transaction) {\n  return transaction.toEnvelope().toXDR(\"base64\")\n}\n\nconvert.xdrToSep7 = function (conf, xdr, options) {\n  let sep7 = \"web+stellar:tx?xdr=\"\n  sep7 += encodeURIComponent(xdr)\n  if (options.network && options.network !== \"public\") {\n    const passphrase = resolve.networkPassphrase(conf, options.network)\n    sep7 += \"&network_passphrase=\" + encodeURIComponent(passphrase)\n  }\n  if (options.callback) sep7 += \"&callback=url:\" + encode.url(conf, options.callback)\n  // Not part of the standard.\n  // if (options.horizon) sep7 +=\"&horizon=\" + encode.url(conf, options.horizon)\n\n  return sep7\n}\n\n/** ****************************    XDR -> URI    ******************************/\n\nconvert.xdrToTransaction = function (conf, xdr, options = {}) {\n  const transaction = new StellarSdk.Transaction(xdr)\n  if (options.stripSignatures) transaction.signatures = []\n  return transaction\n}\n\nconvert.xdrToQuery = function (conf, xdr, options = {}) {\n  let query = \"?xdr=\" + xdr\n  if (options.network) query += \"&network=\" + encodeURIComponent(options.network)\n  if (options.horizon) query += \"&horizon=\" + encode.url(conf, options.horizon)\n  if (options.callback) query += \"&callback=\" + encode.url(conf, options.callback)\n  return query\n}\n\nconvert.transactionToTdesc = destruct.transaction\n\nconvert.jsonToTdesc = function (conf, json) {\n  return JSON.parse(json)\n}\n\nconvert.tdescToQuery = encode.query\n\nconvert.queryToUri = function (conf, query) {\n  const page = conf.page || \"https://cosmic.link\"\n  return page + query\n}\n","\"use_strict\"\n/**\n * Methods to set tdesc/odesc defaults values and strip out useless data.\n *\n * @exports normalize\n * @private\n */\nconst normalize = exports\n\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst config = require(\"./config\")\nconst resolve = require(\"./resolve\")\n\n/**\n * Setup the default values for `tdesc`.\n */\nnormalize.tdesc = function (conf, tdesc) {\n  removeEmptyFields(tdesc)\n  if (!tdesc.operations) tdesc.operations = []\n\n  if (tdesc.fee === 100 * tdesc.operations.length) delete tdesc.fee\n  dateFields.forEach(field => {\n    if (tdesc[field]) {\n      tdesc[field] = normalize.date(conf, tdesc[field])\n      if (tdesc[field] === \"1970\") delete tdesc[field]\n    }\n  })\n\n  if (tdesc.network) tdesc.network = normalize.network(conf, tdesc.network)\n\n  // When network is neither test nor public, we want to provide a fallback\n  // Horizon URL; else we don't need it.\n  if (tdesc.network && tdesc.network !== \"public\" && tdesc.network !== \"test\") {\n    const url = resolve.horizon(config, tdesc.network) || tdesc.horizon\n    tdesc.horizon = normalize.url(conf, url)\n  } else {\n    delete tdesc.horizon\n  }\n\n  if (tdesc.callback) tdesc.callback = normalize.url(conf, tdesc.callback)\n}\n\nconst dateFields = [\"minTime\", \"maxTime\"]\n\nnormalize.date = function (conf, date) {\n  return date.replace(/:00\\.000/, \"\").replace(/\\.000/, \"\")\n    .replace(/T00:00Z/, \"\").replace(/-01$/, \"\").replace(/-01$/, \"\")\n}\n\nnormalize.network = function (conf, network) {\n  const networkName = resolve.networkName(conf, network)\n  if (networkName === \"public\" || networkName === \"test\") {\n    return networkName\n  // In network is neither test nor public, we want to use the network\n  // passphrase as parameter to ensure cross-wallet compatibility.\n  } else {\n    return resolve.networkPassphrase(conf, network)\n  }\n}\n\nnormalize.url = function (conf, url) {\n  if (url) return (url.substr(0,4) === \"http\") ? url : \"https://\" + url\n}\n\n/**\n * Add the implicit values for fields made optional in the CosmicLink protocol\n * but required by StellarSdk.\n */\nnormalize.odesc = function (conf, odesc) {\n  removeEmptyFields(odesc)\n  /// No limit = maximum limit.\n  if (odesc.limit === \"922337203685.4775807\") delete odesc.limit\n  /// New offer.\n  if (odesc.offerId === \"0\") delete odesc.offerId\n  /// Empty asset conversion path.\n  if (odesc.path && !odesc.path.length) delete odesc.path\n  /// Useless denominator.\n  if (odesc.price && odesc.price.d === 1) odesc.price = odesc.price.n + \"\"\n\n  switch (odesc.type) {\n  case \"allowTrust\":\n    /// Allow trust by default.\n    if (odesc.authorize === undefined) odesc.authorize = true\n    break\n  case \"createPassiveOffer\":\n  case \"manageOffer\": {\n    /// XLM as default asset.\n    if (odesc.buying && !odesc.selling) odesc.selling = XLM\n    if (odesc.selling && !odesc.buying) odesc.buying = XLM\n    break\n  }\n  case \"manageData\":\n    /// Delete data entry.\n    if (!odesc.value) odesc.value = \"\"\n    break\n  case \"pathPayment\":\n    /// XLM as default asset.\n    if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = XLM\n    if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = XLM\n    break\n  case \"payment\":\n    /// XLM as default asset.\n    if (!odesc.asset) odesc.asset = XLM\n    break\n  }\n}\n\nconst XLM = StellarSdk.Asset.native()\n\nfunction removeEmptyFields (object) {\n  for (let field in object) {\n    if (object[field] === null || object[field] === undefined) delete object[field]\n  }\n}\n","\"use strict\"\n/**\n * Contains the methods to convert data from *{@see Transaction}* format to\n * *Tdesc* format.\n *\n * @private\n * @exports destruct\n */\nconst destruct = exports\n\nconst { isUtf8 } = require(\"@cosmic-plus/jsutils/misc\")\n\nconst normalize = require(\"./normalize\")\nconst specs = require(\"./specs\")\n\n/**\n * Convert `tx` into *Tdesc*.\n *\n * @param {Transaction} tx\n * @param {Object} options\n * @return {Object} A tdesc\n */\ndestruct.transaction = function (conf, tx, options = {}) {\n  const tdesc = {}\n\n  if (tx.source === specs.neutralAccountId) options.stripSource = true\n  if (tx.sequence === \"0\") options.stripSequence = true\n\n  tdesc.network = options.network\n  tdesc.horizon = options.horizon\n  tdesc.callback = options.callback\n  if (!options.stripSource) tdesc.source = tx.source\n  if (!options.stripSource && !options.stripSequence) {\n    tdesc.sequence = destruct.sequence(conf, tx.sequence)\n  }\n\n  if (tx._memo._switch.name !== \"memoNone\") tdesc.memo = destruct.memo(conf, tx._memo)\n  if (tx.timeBounds) {\n    if (tx.timeBounds.minTime) tdesc.minTime = destruct.date(conf, tx.timeBounds.minTime)\n    if (tx.timeBounds.maxTime) tdesc.maxTime = destruct.date(conf, tx.timeBounds.maxTime)\n  }\n  tdesc.fee = tx.fee\n\n  tdesc.operations = tx.operations.map(op => destruct.operation(conf, op))\n\n  normalize.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/**\n * Convert `op` into odesc format.\n *\n * @param {Object} op A StellarSdk Operation\n * @return {Object} An odesc\n */\ndestruct.operation = function (conf, op) {\n  const odesc = {}\n\n  for (let field in op) {\n    if (field === \"type\") odesc.type = op.type\n    else if (field === \"line\") odesc.asset = op.line\n    else odesc[field] = destruct.field(conf, field, op[field])\n  }\n\n  normalize.odesc(conf, odesc)\n  return odesc\n}\n\n/******************************************************************************/\n\n/**\n * Destruct `value` according to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\ndestruct.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return destruct.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Destruct `value` using the destructuring function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\ndestruct.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value\n  else return destruct[type](conf, value)\n}\n\n/******************************************************************************/\n\ndestruct.asset = function (conf, asset) {\n  return Object.assign({}, asset)\n}\n\ndestruct.assetPath = function (conf, assetPath) {\n  return assetPath.map(asset => destruct.asset(asset))\n}\n\ndestruct.buffer = function (conf, buffer) {\n  if (!buffer) return null\n  const string = buffer.toString()\n  if (isUtf8(string)) {\n    return { type: \"text\", value: string }\n  } else {\n    const value = buffer.toString(\"base64\").replace(/=*$/,\"\")\n    return { type: \"base64\", value: value }\n  }\n}\n\ndestruct.date = function (conf, timestamp) {\n  return new Date(timestamp * 1000).toISOString()\n}\n\ndestruct.memo = function (conf, sdkMemo) {\n  const memo = {}\n  if (sdkMemo._switch.name !== \"memoNone\") {\n    memo.type = sdkMemo._arm\n    if (memo.type === \"hash\" || memo.type === \"retHash\") {\n      memo.value = sdkMemo._value.toString(\"hex\")\n      if (memo.type === \"retHash\") memo.type = \"return\"\n    } else if (memo.type === \"text\") {\n      return destruct.buffer(conf, sdkMemo._value)\n    } else {\n      memo.value = sdkMemo._value.toString()\n    }\n  }\n  return memo\n}\n\ndestruct.sequence = function (conf, sdkSequence) {\n  return sdkSequence.toString()\n}\n\ndestruct.signer = function (conf, sdkSigner) {\n  const signer = { weight: sdkSigner.weight }\n  if (sdkSigner.ed25519PublicKey) {\n    signer.type = \"key\"\n    signer.value = sdkSigner.ed25519PublicKey\n  } else if (sdkSigner.sha256Hash) {\n    signer.type = \"hash\"\n    signer.value = sdkSigner.sha256Hash.toString(\"hex\")\n  } else if (sdkSigner.preAuthTx) {\n    signer.type = \"tx\"\n    signer.value = sdkSigner.preAuthTx.toString(\"hex\")\n  }\n  return signer\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","\"use strict\"\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n * @exports event\n */\nconst event = exports\n\nconst html = require(\"@cosmic-plus/jsutils/html\")\n\nconst format = require(\"./format\")\n\n/** *** Click events *****/\n\n/**\n * Set the click handler for **type** HTML elements as **callback**.\n *\n * @example\n * cosmicLib.config.setClickHandler('address', showAddressPopup)\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\nevent.setClickHandler = function (conf, type, callback) {\n  conf.clickHandlers[type] = callback\n}\n\n/**\n * Remove the current click handler for **type**.\n *\n * @example\n * cosmicLib.config.clearClickHandler('address')\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\nevent.clearClickHandler = function (conf, type) {\n  conf.clickHandlers[type] = undefined\n}\n\nevent.callClickHandler = function (conf, type, event) {\n  const handler = conf.clickHandlers[type]\n  event.extra = event.domNode.extra\n  event.field = event.domNode.field\n  event.tdesc = format.parentTdesc(conf, event.domNode)\n  event.odesc = format.parentOdesc(conf, event.domNode)\n  event.index = format.parentIndex(conf, event.domNode)\n  if (handler) handler(event)\n}\n\n/**\n * The active click handlers. Takes the form:\n *\n * ```\n * cosmicLib.config.clickHandlers = {\n *   type1: callback1,\n *   ...\n *   typeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * * **address**: A prompt that shows the address details\n * * **id**: A function that copy the id into the clipboard\n * * **hash**: A function that copy the hash into the clipboard or show a prompt\n *   for preimage signature when relevant\n * ```\n */\nevent.defaultClickHandlers = {\n  address: function (event) {\n    if (!event.extra) return\n    let message = \"\"\n    for (let field in event.extra) {\n      message += `${field}:\\n` + `${event.extra[field]}\\n\\n`\n    }\n    window.alert(message)\n  },\n  hash: function (event) {\n    const grandma = event.domNode.parentNode.parentNode.parentNode\n    if (grandma.classList.contains(\"cosmiclib_signers\")) {\n      const preimage = prompt(\"Please enter preimage:\")\n      if (preimage) event.cosmicLink.sign(preimage)\n    } else {\n      html.copyString(event.value)\n    }\n  },\n  id: event => html.copyString(event.value)\n}\n","\"use strict\"\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @private\n * @exports construct\n */\nconst construct = exports\n\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst resolve = require(\"./resolve\")\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\n/**\n * Returns the StellarSdk Transaction built from tdesc.\n *\n * @param {Object} tdesc\n * @return {Transaction}\n */\nconstruct.transaction = async function (conf, tdesc) {\n  if (conf.status) throw new Error(conf.status)\n\n  try {\n    const txBuilder = await makeTransactionBuilder(conf, tdesc)\n    for (let index in tdesc.operations) {\n      const odesc = tdesc.operations[index]\n      const operation = await construct.operation(conf, odesc)\n      txBuilder.addOperation(operation)\n    }\n    return txBuilder.build()\n  } catch (error) {\n    if (!conf.errors) {\n      console.error(error)\n      status.error(conf, error.message)\n    }\n    if (!conf.status) status.fail(conf, \"Transaction build failed\", \"throw\")\n    else throw error\n  }\n}\n\n/**\n * Returns the StellarSdk Operation built from `odesc`.\n *\n * @param {Object} odesc\n * @return {Operation}\n */\nconstruct.operation = async function (conf, odesc) {\n  const operation = odesc.type\n  delete odesc.type\n\n  for (let field in odesc) {\n    odesc[field] = await construct.field(conf, field, odesc[field])\n  }\n\n  return StellarSdk.Operation[operation](odesc)\n}\n\n/**\n * Returns the TransactionBuilder for `tdesc`.\n */\nasync function makeTransactionBuilder (conf, tdesc) {\n  let txOpts = {}\n  if (tdesc.fee) txOpts.fee = tdesc.fee\n  if (tdesc.memo) txOpts.memo = construct.memo(conf, tdesc.memo)\n  if (tdesc.minTime || tdesc.maxTime) {\n    txOpts.timebounds = { minTime: 0, maxTime: 0 }\n    if (tdesc.minTime) txOpts.timebounds.minTime = construct.date(conf, tdesc.minTime)\n    if (tdesc.maxTime) txOpts.timebounds.maxTime = construct.date(conf, tdesc.maxTime)\n  }\n\n  const sourceAccount = await resolve.txSourceAccount(conf, tdesc.source, tdesc.sequence)\n  const builder = new StellarSdk.TransactionBuilder(sourceAccount, txOpts)\n  if (!tdesc.maxTime) builder.setTimeout(StellarSdk.TimeoutInfinite)\n\n  /// Check if memo is needed for destination account.\n  for (let index in tdesc.operations) {\n    const operation = tdesc.operations[index]\n    if (operation.destination) {\n      const destination = await resolve.address(conf, operation.destination)\n      if (destination.memo) {\n        const memoType = destination.memo_type\n        const memoValue = destination.memo\n        if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n          const short = helpers.shorter(operation.destination)\n          status.error(conf, `Memo conflict: ${short} requires to set a memo`, \"throw\")\n        } else {\n          tdesc.memo = { type: memoType, value: memoValue }\n          builder.addMemo(new StellarSdk.Memo(memoType, memoValue))\n        }\n      }\n    }\n  }\n\n  return builder\n}\n\n/******************************************************************************/\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\nconstruct.field = async function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return construct.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\nconstruct.type = async function (conf, type, value) {\n  return construct[type](conf, value)\n}\n\n/******************************************************************************/\n\nconstruct.address = async function (conf, address) {\n  const account = await resolve.address(conf, address)\n  return account.account_id\n}\n\nconstruct.asset = async function (conf, asset) {\n  if (asset.issuer) {\n    const publicKey = await construct.address(conf, asset.issuer)\n    return new StellarSdk.Asset(asset.code, publicKey)\n  } else {\n    return StellarSdk.Asset.native()\n  }\n}\n\nconstruct.assetsArray = async function (conf, assetsArray) {\n  let path = []\n  for (let index in assetsArray) {\n    const string = assetsArray[index]\n    const constructedAsset = await construct.asset(conf, string)\n    path.push(constructedAsset)\n  }\n  return path\n}\n\nconstruct.buffer = function (conf, object) {\n  if (object.type === \"base64\") {\n    return Buffer.from(object.value, \"base64\")\n  } else {\n    return object.value || null\n  }\n}\n\nconstruct.date = function (conf, string) {\n  return Date.parse(string) / 1000\n}\n\nconstruct.memo = function (conf, memo) {\n  if (memo.type === \"base64\") {\n    return new StellarSdk.Memo(\"text\", Buffer.from(memo.value, \"base64\"))\n  } else {\n    return new StellarSdk.Memo(memo.type, memo.value)\n  }\n}\n\nconstruct.signer = async function (conf, signer) {\n  let sdkSigner = { weight: +signer.weight }\n  if (signer.type === \"tx\") sdkSigner.preAuthTx = signer.value\n  else if (signer.type === \"hash\") sdkSigner.sha256Hash = signer.value\n  else if (signer.type === \"key\") {\n    const publicKey = await construct.address(conf, signer.value)\n    sdkSigner.ed25519PublicKey = publicKey\n  }\n  return sdkSigner\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  const StellarSdk = require(\"./stellar-sdk\")\n  const hash = \"0000000000000000000000000000000000000000000000000000000000000000\"\n  const memo = new StellarSdk.Memo(\"hash\", hash)\n  module.exports = memo.value.__proto__.constructor\n} else {\n  module.exports = env.nodeRequire(\"safe-buffer\").Buffer\n}\n","\"use strict\"\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @private\n * @exports encode\n */\nconst encode = exports\n\nconst decode = require(\"./decode\")\nconst specs = require(\"./specs\")\n\nencode.query = function (conf, tdesc) {\n  if (conf.errors) return undefined\n\n  let command\n  if (!tdesc.operations.length || tdesc.operations.length > 1 || tdesc.operations[0].source) {\n    command = \"transaction\"\n  } else {\n    command = tdesc.operations[0].type\n  }\n  let query = \"?\" + command\n\n  specs.transactionOptionalFields.forEach(field => {\n    if (tdesc[field] !== undefined) query += encode.field(conf, field, tdesc[field])\n  })\n\n  tdesc.operations.forEach(odesc => {\n    if (command === \"transaction\") query += \"&operation=\" + odesc.type\n    for (let field in odesc) {\n      if (field === \"type\") continue\n      query += encode.field(conf, field, odesc[field])\n    }\n  })\n\n  return query\n}\n\n/******************************************************************************/\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) throw new Error(`Invalid field: ${field}`)\n\n  const encodedValue = encode.type(conf, type, value)\n  if (encodedValue === \"\" && field !== \"homeDomain\") return \"\"\n  else return `&${field}=${encodedValue}`\n}\n\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.type = function (conf, type, value) {\n  if (value === undefined) return \"\"\n\n  const encodedValue = process[type] ? process[type](conf, value) : value\n  if (encodedValue === undefined) return \"\"\n  else return encodedValue\n}\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.asset = function (conf, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + \":\" + encodeURIComponent(asset.issuer)\n}\n\nprocess.assetsArray = function (conf, assetsArray) {\n  return assetsArray.map(asset => encode.asset(conf, asset)).toString()\n}\n\nprocess.boolean = function (conf, boolean) {\n  if (boolean === false) return \"false\"\n}\n\nprocess.buffer = function (conf, buffer) {\n  if (buffer.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    const decoded = decode.buffer(conf, buffer.value)\n    if (decoded.type === \"text\") return encodeURIComponent(buffer.value)\n  } else if (buffer) {\n    return buffer.type + \":\" + encodeURIComponent(buffer.value)\n  }\n}\n\nprocess.date = function (conf, date) {\n  return date.replace(/Z$/, \"\")\n}\n\nprocess.memo = function (conf, memo) {\n  if (memo.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    const decoded = decode.memo(conf, memo.value)\n    if (decoded.type === \"text\") return encodeURIComponent(memo.value)\n  }\n  return memo.type + \":\" + encodeURIComponent(memo.value)\n}\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return price\n  else return price.n + \":\" + price.d\n}\n\nprocess.signer = function (conf, signer) {\n  return signer.weight + \":\" + signer.type + \":\" + signer.value\n}\n\nprocess.string = encode.buffer\n\nprocess.url = function (conf, url) {\n  if (url.substr(0, 8) === \"https://\") url = url.substr(8)\n  return encodeURIComponent(url)\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  exports[type] = (conf, value) => encode.type(conf, type, value)\n})\n","\"use_strict\"\n/**\n * Methods that expand tdesc paramaters from their query/StellarSdk format into\n * their tdesc equivalent. This allows user to pass value in the format they\n * feel the most confortable with when creating CosmicLinks.\n *\n * @private\n * @exports expand\n */\nconst expand = exports\n\nconst Buffer = require(\"@cosmic-plus/base/buffer\")\nconst StellarSdk = require(\"@cosmic-plus/base/stellar-sdk\")\n\nconst decode = require(\"./decode\")\nconst destruct = require(\"./destruct\")\nconst normalize = require(\"./normalize\")\nconst specs = require(\"./specs\")\n\n/**\n * Replace each tdesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `tdesc` passed in\n * parameter.\n *\n * @param {Object} tdesc\n * @return tdesc\n */\nexpand.tdesc = function (conf, tdesc) {\n  for (let field in tdesc) {\n    if (field === \"operations\") continue\n    else tdesc[field] = expand.field(conf, field, tdesc[field])\n  }\n  if (tdesc.operations) tdesc.operations.forEach(odesc => expand.odesc(conf, odesc))\n  normalize.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/**\n * Replace each odesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `odesc` passed in\n * parameter.\n *\n * @param {Object} odesc\n * @return tdesc\n */\nexpand.odesc = function (conf, odesc) {\n  for (let field in odesc) {\n    if (field === \"type\") continue\n    else odesc[field] = expand.field(conf, field, odesc[field])\n  }\n  normalize.odesc(conf, odesc)\n  return odesc\n}\n\n/******************************************************************************/\n\n/**\n * Expands `value` to its tdesc format according to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\nexpand.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return expand.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Expands `value` to its tdesc format according to `type`.\n *\n * @param {string} type\n * @param {string} value\n */\nexpand.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value\n  if (typeof value === \"number\") value = value + \"\"\n  return expand[type] ? expand[type](conf, value) : value + \"\"\n}\n\n/******************************************************************************/\n\nexpand.asset = function (conf, asset) {\n  if (asset instanceof StellarSdk.Asset) return destruct.asset(conf, asset)\n  else if (typeof asset === \"string\") return decode.asset(conf, asset)\n  else return asset\n}\n\nexpand.assetPath = function (conf, assetPath) {\n  if (Array.isArray(assetPath)) return assetPath.map(asset => expand.asset(conf, asset))\n  else if (typeof assetPath === \"string\") return decode.assetPath(conf, assetPath)\n}\n\nexpand.buffer = function (conf, buffer) {\n  if (!buffer) return \"\"\n  if (buffer instanceof Buffer) return destruct.buffer(conf, buffer)\n  else if (typeof buffer === \"string\") return decode.buffer(conf, buffer)\n  else return buffer\n}\n\nexpand.date = function (conf, date) {\n  if (typeof date === \"number\") date = date + \"\"\n  if (!date.match(/^[0-9]*$/) || date.length < 5) return decode.date(conf, date)\n  else return destruct.date(conf, date)\n}\n\nexpand.memo = function (conf, memo) {\n  if (memo instanceof StellarSdk.Memo) return destruct.memo(conf, memo)\n  else if (typeof memo === \"string\") return decode.memo(conf, memo)\n  else return memo\n}\n\nexpand.price = function (conf, price) {\n  if (typeof price === \"string\" && price.match(/:/)) {\n    return decode.price(conf, price)\n  } else {\n    return price\n  }\n}\n\nexpand.signer = function (conf, signer) {\n  if (signer.key) return destruct.signer(conf, signer)\n  else if (typeof signer === \"string\") return decode.signer(conf, signer)\n  else return signer\n}\n\nexpand.string = function (conf, string) {\n  if (typeof string === \"number\") return string + \"\"\n  else return string\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) {\n    exports[type] = (conf, value) => {\n      if (typeof value === \"number\") return value + \"\"\n      else return value\n    }\n  }\n})\n","\"use strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\n\nif (env.isBrowser) require(\"@cosmic-plus/jsutils/polyfill\")\n\n/**\n * Automatically pass `config` to `module` functions as first argument.\n *\n * @param {Object} module A cosmic-lib module whose functions takes config as\n *   the first argument.\n * @param {Object} config A configuration object similar than config.js module.\n * @private\n */\nfunction exposeModule (module, config = {}) {\n  const layer = Object.assign({}, module)\n  helpers.setHiddenProperty(layer, \"_config\", config)\n  for (let name in module) {\n    if (typeof module[name] === \"function\") {\n      layer[name] = function (...params) { return module[name](this._config, ...params) }\n    } else {\n      layer[name] = module[name]\n    }\n  }\n  return layer\n}\n\n/**\n * Create a clone of the library with an alternative config object derived from\n * **params**. Fields which are not defined in **params** stay in sync with parent\n * configuration.\n *\n * @example\n * const testnet = cosmicLib.withConfig({ network: 'test' })\n * const account = await testnet.resolve.account('tips*cosmic.link')\n *\n * @params {Object} params Alternative configuration\n * @return {Object} A clone of cosmicLib\n */\nexports.withConfig = function (params) {\n  const library = Object.create(this)\n  library.config = Object.assign({}, this.config, params)\n\n  for (let module in this) {\n    if (this[module].prototype && this[module].prototype.__proto__ === this.config) {\n      library[module] = class extends this[module] {}\n      Object.assign(library[module].prototype, this[module].prototype)\n      library[module].prototype.__proto__ = library.config\n    } else if (this[module]._config) {\n      library[module] = Object.create(this[module])\n      helpers.setHiddenProperty(library[module], \"_config\", library.config)\n    }\n  }\n\n  return library\n}\n\n/**\n * Export modules **names** after linking them to `config`.\n *\n * @param  {...String} names Module names\n */\nfunction exportModule (name, module) {\n  exports[name] = exposeModule(module, config)\n}\n\n// Export modules.\n\nconst config = exports.config = require(\"./config\")\nexportModule(\"check\", require(\"./check\"))\nexports.CosmicLink = require(\"./cosmiclink\")\nif (env.isBrowser) exportModule(\"load\", require(\"./load\"))\nexportModule(\"resolve\", require(\"./resolve\"))\nexportModule(\"signersUtils\", require(\"./signers-utils\"))\nexports.specs = require(\"./specs\")\n\n// Export helpers (not documented in the manual - please check the code).\nexportModule(\"check\", require(\"./check\"))\nexportModule(\"expand\", require(\"./expand\"))\nexportModule(\"construct\", require(\"./construct\"))\nexportModule(\"destruct\", require(\"./destruct\"))\nexportModule(\"encode\", require(\"./encode\"))\nexportModule(\"decode\", require(\"./decode\"))\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use_strict\"\n\nif (!NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, \"find\", {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError(\"\\\"this\\\" is null or not defined\")\n      }\n\n      var o = Object(this)\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== \"function\") {\n        throw new TypeError(\"predicate must be a function\")\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1]\n\n      // 5. Let k be 0.\n      var k = 0\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k]\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue\n        }\n        // e. Increase k by 1.\n        k++\n      }\n\n      // 7. Return undefined.\n      return undefined\n    },\n    configurable: true,\n    writable: true\n  })\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    value: function assign (target, varArgs) { // .length of function is 2\n      \"use strict\"\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError(\"Cannot convert undefined or null to object\")\n      }\n\n      var to = Object(target)\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index]\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    },\n    writable: true,\n    configurable: true\n  })\n}\n\nif (!Object.values) {\n  Object.values = function values(obj) {\n    return Object.keys(obj).map(e => obj[e])\n  }\n}","\"use_strict\"\n/**\n * Aliases handlers & most known Stellar addresses.\n *\n * @private\n * @exports aliases\n */\nconst aliases = exports\n\n/**\n * Add new **aliases** or replace existing ones.\n *\n * @example\n * cosmicLib.config.addAliases({\n *   'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n *   'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io'\n * })\n *\n * @param {Object} aliases An object such as `{ publicKey1: name1, ..., publicKeyN: nameN }`\n */\naliases.set = function (conf, aliases) {\n  conf.aliases = Object.assign(conf.aliases, aliases)\n}\n\n/**\n * Remove **publicKeys** from aliases list.\n *\n * @example\n * cosmicLib.config.removeAliases([\n *  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP',\n *  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5',\n * ])\n *\n * @param {Array} publicKeys An array of public keys\n */\naliases.remove = function (conf, publicKeys) {\n  publicKeys.forEach(entry => delete conf.aliases[entry])\n}\n\n/**\n * Aliases handlers & most known Stellar addresses. Aliases takes the form:\n *\n * ```js\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n */\naliases.all = {\n  \"GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2\": \"aex.com\",\n  \"GASWJWFRYE55KC7MGANZMMRBK5NPXT3HMPDQ6SEXZN6ZPWYXVVYBFRTE\": \"anchorusd.com\",\n  \"GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX\": \"anchorusd.com\",\n  \"GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4\": \"apay.io\",\n  \"GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF\": \"apay.io\",\n  \"GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR\": \"apay.io\",\n  \"GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP\": \"apay.io\",\n  \"GCYKQ2627BPKMSUZJK64GPYVKD4TRNACP45X6B754PR6TCYJXCHGUTWB\": \"apiscapitalfunds.com\",\n  \"GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC\": \"astral9.io\",\n  \"GDZURZR6RZKIQVOWZFWPVAUBMLLBQGXP2K5E5G7PEOV75IYPDFA36WK4\": \"atlantisblue.org\",\n  \"GABQBEZCNQRUHURCG6E2UZC6QXXEPLALHBVA6J6IQNKNJL66VPY7FO7G\": \"auskunft.de\",\n  \"GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A\": \"binance.com\",\n  \"GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC\": \"binance.com\",\n  \"GBOXNWGBB7SG3NVIA7O25M7JIRSXQ4KKU3GYARJEFMQXSR3APF3KRI6S\": \"bitbox.one\",\n  \"GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL\": \"bitfinex.com\",\n  \"GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3\": \"bittrex.com\",\n  \"GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM\": \"btc38.com\",\n  \"GB3RMPTL47E4ULVANHBNCXSXM2ZA5JFY5ISDRERPCXNJUDEO73QFZUNK\": \"cex.io\",\n  \"GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7\": \"changelly.com\",\n  \"GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP\": \"charnatoken.top\",\n  \"GBOAYBE3NJKS4WPIVM2H5DVFIDYLAHHD2DAWYL5LLUVYF77M3JIVGCTR\": \"citron.cash\",\n  \"GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP\": \"coins.asia\",\n  \"GAWODAROMJ33V5YDFY3NPYTHVYQG7MJXVJ2ND3AOGIHYRWINES6ACCPD\": \"cowrie.exchange\",\n  \"GDMXNQBJMS3FYI4PFSYCCB4XODQMNMTKPQ5HIKOUWBOWJ2P3CF6WASBE\": \"cryptomkt.com\",\n  \"GA4BYMUO5D7OLGVJWZ2D5FCWU7SB63FNZ4QUU574SMNA6ELK5TZD3SO3\": \"cryptomover.com\",\n  \"GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ\": \"cryptomover.com\",\n  \"GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3\": \"cryptomover.com\",\n  \"GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG\": \"cryptomover.com\",\n  \"GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI\": \"cryptomover.com\",\n  \"GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2\": \"cryptomover.com\",\n  \"GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7\": \"cryptotari.io\",\n  \"GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN\": \"equid.co\",\n  \"GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH\": \"exrates.me\",\n  \"GAZEX2USUBMMWFRZFS77VDJYXUFLXI4ZGFPWX6TBNZCSTEQWNLFZMXFF\": \"fchain.io\",\n  \"GBETHKBL5TCUTQ3JPDIYOZ5RDARTMHMEKIO2QZQ7IOZ4YC5XV3C2IKYU\": \"fchain.io\",\n  \"GCNY5OXYSY4FKHOPT2SPOQZAOEIGXB5LBYW3HVU3OWSTQITS65M5RCNY\": \"fchain.io\",\n  \"GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW\": \"flutterwave.com\",\n  \"GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M\": \"frasindo.com\",\n  \"GBUAVXCI7JKH6D2ZHZ6KZ7Z5MHHCXHI4DSUUC4KOISDMRPVY3MRBF3OY\": \"freight-coin.com\",\n  \"GDGDECMFS34OVTQJKTCHORPE7LOYDH2XYNRMUHLGCJFP56VUN6AW5LCF\": \"freight-coin.com\",\n  \"GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S\": \"gate.io\",\n  \"GARFMAHQM4JDI55SK2FGEPLOZU7BTEODS3Y5QNT3VMQQIU3WV2HTBA46\": \"glitzkoin.com\",\n  \"GDYNTGXBDWARLJ34GRQ4ON4EGBXSTPR5LEDTD5LLOOHPS6EZU6QXIIYO\": \"goodx.network\",\n  \"GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO\": \"gopax.co.kr\",\n  \"GA6KR5DMGJ6OPPG4OONB65JPU3TZE2CWCLKTBV4DHXFA2Z4XKWQSVCTC\": \"heir.io\",\n  \"GB2X6RCO2VAXOD7GXE5VJWXOUTYDKPHIAHJSM2CGZJXKZSIHREEP4654\": \"heir.io\",\n  \"GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S\": \"indodax.com\",\n  \"GCNSGHUCG5VMGLT5RIYYZSO7VQULQKAJ62QA33DBC5PPBSO57LFWVV6P\": \"interstellar.exchange\",\n  \"GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL\": \"irene.energy\",\n  \"GANZBUS4726LBT2CBJ3BGF3TP4NJT5MHZMI423NHMXFRWGO2DCBQEXYZ\": \"jetmint.org\",\n  \"GD4T35DMXYDE7BJWYPUWK43VFJO5IBUQYG2YGMICPTWP4JTNWQELKAVA\": \"kava.world\",\n  \"GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP\": \"koinex.in\",\n  \"GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM\": \"kraken.com\",\n  \"GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX\": \"liquido.cc\",\n  \"GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT\": \"lumenaut.net\",\n  \"GBVB43NLVIP2USHXSKI7QQCZKZU2Z6U6A5PAHMIW7LLNVMQJTOX2BZI5\": \"luxpayband.io\",\n  \"GDTEQF6YGCKLIBD37RJZE5GTL3ZY6CBQIKH7COAW654SYEBE6XJJOLOW\": \"luxpayband.io\",\n  \"GD2YURFWC5LIRLM4CCVZZHCFV6WXO46VOSBBPTJG6MPQN6ANYZZOLQJL\": \"martialartscoin.io\",\n  \"GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH\": \"mobius.network\",\n  \"GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK\": \"moni.com\",\n  \"GB56YLTH5SDOYTUGPWY5MXJ7VQTY7BEM2YVJZTN5O555VA6DJYCTY2MP\": \"moonpool.space\",\n  \"GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH\": \"naobtc.com\",\n  \"GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS\": \"naobtc.com\",\n  \"GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES\": \"naobtc.com\",\n  \"GD6RMKTCHQGEOGYWIKSY5G7QWXPZOAEZIKPKEVZUAXOQCZRVBRRFGLJM\": \"nydro.energy\",\n  \"GDNXSZSF7HIGVRL2LG6VWXN5PWV3KHI77DQTHLLPKNPLUZFKRRDQJBXP\": \"nydro.energy\",\n  \"GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB\": \"okex.com\",\n  \"GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6\": \"old.repocoin.io\",\n  \"GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN\": \"old.sureremit.co\",\n  \"GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW\": \"papayabot.com\",\n  \"GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L\": \"papayabot.com\",\n  \"GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY\": \"pedity.com\",\n  \"GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW\": \"piiko.co\",\n  \"GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2\": \"poloniex.com\",\n  \"GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5\": \"pr.network\",\n  \"GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B\": \"repocoin.io\",\n  \"GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX\": \"ripplefox.com\",\n  \"GCLDH6L6FBLTD3H3B23D6TIFVVTFBLZMNBC3ZOI6FGI5GPQROL4FOXIN\": \"ripplefox.com\",\n  \"GB2WB73G5IWRXEUTJANAIF52JFTDXOXORAP4S5HZRW23TZG2ONDVZMVA\": \"scopuly.com\",\n  \"GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z\": \"six.network\",\n  \"GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP\": \"smartlands.io\",\n  \"GAIGG2ICK2ATV7VUQC6MZHOSMRMFJK3T65IVNUZ7EJEEAU5UJQPPDIST\": \"steemanchor.com\",\n  \"GB3KBOFUCVTWEZ7YIZ7PAKLQMKPCTGWU3LOMANMCT7V6I3AAK4USTEEM\": \"steemanchor.com\",\n  \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\": \"stellarguard.me\",\n  \"GA6D2S6XDBT7WZIZNDGUBLXUGDAGLZGZ2SYT2JLXD4BB2W76XS66FZ2S\": \"stellar.org\",\n  \"GAENIE5LBJIXLMJIAJ7225IUPA6CX7EGHUXRX5FLCZFFAQSG2ZUYSWFK\": \"stellar.org\",\n  \"GANOI26P6VAUL4NFVA4FAIOIBOR46NORONBIWUPRIGAMP7T5W5MOY4O6\": \"stellar.org\",\n  \"GAX3BRBNB5WTJ2GNEFFH7A4CZKT2FORYABDDBZR5FIIT3P7FLS2EFOZZ\": \"stellar.org\",\n  \"GAYOCVRRNXGQWREOZBDP4UEW475NKZKLA4EIEIBKBSJN2PQQWUQ5KGUH\": \"stellar.org\",\n  \"GB6NVEN5HSUBKMYCE5ZOWSK5K23TBWRUQLZY3KNMXUZ3AQ2ESC4MY4AQ\": \"stellar.org\",\n  \"GBEZOC5U4TVH7ZY5N3FLYHTCZSI6VFGTULG7PBITLF5ZEBPJXFT46YZM\": \"stellar.org\",\n  \"GBVVWWN4YP76FKGO7RB42FSZDYD2PBXY2PJY3F6JJWLYU74TKUG775UP\": \"stellar.org\",\n  \"GCO4EFT6KUOQKVZO2O4GR5CJKMARBORXRE7KAKH36ZFAX662ZHINQ6UA\": \"stellar.org\",\n  \"GDKIJJIKXLOM2NRMPNQZUUYK24ZPVFC6426GZAEP3KUK6KEJLACCWNMX\": \"stellar.org\",\n  \"GDTNE54IWDB3UQLMIUSBKIDTMUW7FNKBU4VB2GVW4OL65BZN7W5VRNVY\": \"stellar.org\",\n  \"GDUY7J7A33TQWOSOQGDO776GGLM3UQERL4J3SPT56F6YS4ID7MLDERI4\": \"stellar.org\",\n  \"GDWNY2POLGK65VVKIH5KQSH7VWLKRTQ5M6ADLJAYC2UEHEBEARCZJWWI\": \"stellar.org\",\n  \"GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5\": \"stellarport.io\",\n  \"GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW\": \"stellarterm.com\",\n  \"GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M\": \"stemchain.io\",\n  \"GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG\": \"stronghold.co\",\n  \"GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK\": \"stronghold.co\",\n  \"GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI\": \"superlumen.org\",\n  \"GCZYLNGU4CA5NAWBAVTHMZH4JXWKP2OUJ6OK3I7XXZCNA5622WUJVLTG\": \"sureremit.co\",\n  \"GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N\": \"sureremit.co\",\n  \"GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S\": \"tempo.eu.com\",\n  \"GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C\": \"ternio.io\",\n  \"GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3\": \"thefutbolcoin.io\",\n  \"GDSVWEA7XV6M5XNLODVTPCGMAJTNBLZBXOFNQD3BNPNYALEYBNT6CE2V\": \"thewwallet.com\",\n  \"GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON\": \"tontinetrust.com\",\n  \"GAKRDXBHA2TTOYJZQIAQ7ZDS555P24RAYRUUZWU3KHSLIOZMVV4IITXT\": \"traxalt.com\",\n  \"GAW4E6NGM4NPNX2LO2BKDPCCTUX3FJLKWHPU4VQPGBIBQGD6JTVF5C7C\": \"upbit.com\",\n  \"GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN\": \"winsome.gift\",\n  \"GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM\": \"ximcoin.com\",\n  \"GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5\": \"xirkle.com\",\n  \"GA3FUYFOPWZ25YXTCA73RK2UGONHCO27OHQRSGV3VCE67UEPEFEDCOPA\": \"xlmpool.com\"\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use_strict\"\n/**\n * Nice formating of numbers.\n *\n * @example\n * nice(35)                     // => 35.00\n * nice(35, 4)                  // => 35.0000\n * nice(35, { significant: 2})  // => 35\n * nice(35, { min: 3 })         // => 35.000\n * nice(35, { max: 1 })         // => 35.0\n *\n * @param  {String|Number} value The value to format\n * @param  {Number} [precision] Short form for `options.precision`\n * @param  {Object} [options]\n * @param  {Number} [options.precision=null] How much digit after the dot.\n *     Override options.significant.\n * @param  {Number} [options.significant=4] How much significant numbers (+/-\n *     one).\n * @param  {Number} [options.min=null] Minimum number of digits after the dot.\n * @param  {Number} [options.max=null] Maximum number of digits after the dot.\n * @return {String} The formatted value\n */\nmodule.exports = function (value, opts = {}) {\n  if (typeof opts === \"number\") opts = { precision: opts }\n\n  if (value === undefined || isNaN(value)) return \"...\"\n  else if (value == 0) return 0\n\n  let precision = opts.precision || precisionAuto(Number(value), opts)\n  if (opts.min) precision = Math.max(opts.min, precision)\n  if (opts.max) precision = Math.min(opts.max, precision)\n  return Number(value).toFixed(precision)\n}\n\n\nfunction precisionAuto (value, opts) {\n  if (!opts.significant) opts.significant = 4\n  let precision = 0\n\n  const str = String(value)\n  const firstNonZero = str.search(/[^0.]/)\n  if (firstNonZero) {\n    precision = firstNonZero + opts.significant - 2\n  } else {\n    const pointIndex = str.indexOf(\".\")\n    if (pointIndex === -1) {\n      precision = opts.significant - str.length\n    } else if (pointIndex < opts.significant) {\n      precision = opts.significant - pointIndex\n    }\n  }\n\n  if (precision) precision = Math.round(precision / 2) * 2\n  return precision > 0 ? precision : 0\n}\n","\"use_strict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst html = env.isBrowser && require(\"@cosmic-plus/jsutils/html\")\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\n\nconst action = require(\"./action\")\nconst config = require(\"./config\")\nconst convert = require(\"./convert\")\nconst format = env.isBrowser && require(\"./format\")\nconst parse = require(\"./parse\")\nconst resolve = require(\"./resolve\")\nconst status = require(\"./status\")\n\n/**\n * | Formats                                     | Data                                | Actions                                        | Editor                                       | HTML elements\n * |---------------------------------------------|-------------------------------------|------------------------------------------------|----------------------------------------------|----------------------------------------\n * |-----------------------|-----------------------|-----------------------|-----------------------|-----------------------\n * | [uri]{@link CosmicLink#uri}                 |[page]{@link CosmicLink#page}        |[selectNetwork]{@link CosmicLink#selectNetwork} |[parse]{@link CosmicLink#parse}               |[htmlDescription]{@link CosmicLink#htmlDescription}\n * | [query]{@link CosmicLink#query}             |[network]{@link CosmicLink#network}  |await [lock]{@link CosmicLink#lock}             |[setTxFields]{@link CosmicLink#setTxFields}   |[htmlLink]{@link CosmicLink#htmlLink}\n * | [tdesc]{@link CosmicLink#tdesc}             |[horizon]{@link CosmicLink#horizon}  |[sign]{@link CosmicLink#sign}                   |[addOperation]{@link CosmicLink#addOperation} |\n * | [json]{@link CosmicLink#json}               |[callback]{@link CosmicLink#callback}|await [send]{@link CosmicLink#send}             |[setOperation]{@link CosmicLink#setOperation}\n * | [transaction]{@link CosmicLink#transaction} |[source]{@link CosmicLink#source}    |\n * | [xdr]{@link CosmicLink#xdr}                 |[status]{@link CosmicLink#status}    |\n * | [sep7]{@link CosmicLink#sep7}               |[errors]{@link CosmicLink#errors}    |\n * |                                             |[locker]{@link CosmicLink#locker}\n * |                                             |[cache]{@link CosmicLink#cache}\n * -----\n *\n * The **CosmicLink** class represents Stellar\n * [transactions]{@link https://stellar.org/developers/guides/concepts/transactions.html}\n * encoded in various formats. It allows to convert between those formats, to\n * edit the underlying transaction, to build it, to sign it and to send it to\n * the blockchain.\n *\n * There are 3 main formats from which the other are derived:\n *\n * * The StellarSdk [Transaction]{@link {@link https://stellar.github.io/js-stellar-sdk/Transaction.html}} object. (**transaction**)\n * * The CosmicLink, which is a transaction encoded as a query. (**query**)\n * * The Tdesc, which is an internal JSON-compatible format in-between those two.\n *   It is the easier format to work with. (**tdesc**)\n *\n * Those formats can be derived into other related formats:\n *\n * * The XDR, which's a base64 representation of StellarSdk Transaction. (**xdr**)\n * * The Sep-0007 link, in its XDR form. (**sep7**)\n * * The CosmicLink URL/URI, which is a page plus the query. (**uri**)\n * * The Tdesc JSON, which is its stringified version. (**json**)\n *\n * A CosmicLink object can be created from any of those formats. Some of the\n * other formats are immediately available, while others may need an\n * `await cosmicLink.lock()` operation to become computable:\n *\n * * If you create a CosmicLink from an **uri**, a **query**, a **tdesc** or a\n *   **json**, only those 4 formats are available at first. Transaction, xdr &\n *   sep7 will become available after a `cosmicLink.lock()`. (**free formats**)\n * * If you create a CosmicLink from a **transaction**, an **xdr** or a **sep7**,\n *   all formats will immediately be available. (**locked formats**)\n *\n * For a better efficiency, formats are lazy-evaluated. This means that they are\n * computed once only if/when you call them:\n *\n * ```js\n * const cosmicLink = new CosmicLink(xdr, { network: 'test' })\n * console.log(cosmicLink.query)\n * ```\n *\n * The role of `cosmicLink.lock()` is centric to this class. In practice, the\n * free formats don't have to be tied to a **network**, a **source** or a\n * **sequence number**. For example, the CosmicQuery `?inflation` is a valid\n * generic transaction that can be locked to any network/source/sequence\n * combination.\n *\n * On the other hand, locked formats are always tied to a particular combination\n * of those, hence the need for a **lock** command:\n *\n * ```js\n * const cosmicLib = require('cosmic-lib')\n * cosmicLib.network = 'test'\n * cosmicLib.source = 'tips*cosmic.link'\n *\n * const cosmicLink = new cosmicLib.CosmicLink('?inflation')\n *\n * console.log(cosmicLink.tdesc.source)    // => undefined\n * console.log(cosmicLink.tdesc.network)   // => undefined\n * console.log(cosmicLink.tdesc.sequence)  // => undefined\n * console.log(cosmicLink.xdr)             // => undefined\n *\n * await cosmicLink.lock({)\n *\n * console.log(cosmicLink.tdesc.source)    // => 'GC6Z...2JVW'\n * console.log(cosmicLink.tdesc.network)   // => 'test'\n * console.log(cosmicLink.tdesc.sequence)  // => 29...3903\n * console.log(cosmicLink.xdr)             // => 'AAAA....AA=='\n * ```\n *\n * The **lock** command is asynchronous because free formats accept\n * [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html},\n * but locked formats don't. The library automatically resolve\n * those and this is an asynchronous operation. At the same time, it downloads\n * the required data from the blockchain to handle multi-signers transactions.\n *\n * After the lock operation, all free formats are updated according to the new\n * state of the transaction. It is now possible to `cosmicLink.sign(keypair)`\n * it, and to `cosmicLink.send()` it to the blockchain.\n */\nclass CosmicLink {\n  /**\n   * Create a new CosmicLink object. **transaction** can be one of the accepted\n   * format: uri, query, json, tdesc, transaction, xdr or sep7.\n   *\n   * @constructor\n   * @param {string|Object|Transaction} transaction A transaction in one of\n   *  thoses formats: uri, query, json, tdesc, transaction, xdr, sep7\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format.\n   * @param {string} options.network For Transaction/XDR formats, the network for\n   *     which it have been created\n   * @param {boolean} options.stripSignatures If set, will strip out signatures\n   *     from XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set, will strip out signatures\n   *     and sequence number from XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set, will strip out signatures,\n   *     sequence number and transaction primary source account from\n   *     XDR/Transaction formats.\n   * @return {CosmicLink}\n   */\n  constructor (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /**\n   * Refer to the underlying global configuration\n   * @private\n   */\n  get config () {\n    return this.__proto__.__proto__\n  }\n\n  /**\n   * Re-parse this CosmicLink. Useful in implementing transaction editors. The\n   * parameters are the same than [Constructor]{@link CosmicLink#Constructor},\n   * and the result is similar except that no new CosmicLink object is created.\n   */\n  parse (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /// Formats\n  /**\n   * A CosmicLink is a URI that embed a Cosmic [Query]{@link CosmicLink#query}.\n   * This format is simply the `cosmicLink.query` appended to the\n   * `cosmicLink.page`\n   */\n  get uri () {\n    if (this.query) return this.page + this.query\n    else return undefined\n  }\n\n  /**\n   * CosmicLink's transaction encoded in the Cosmic\n   * [Query]{@link tutorial:specs_query} format. This format allows to\n   * conveniently pass around Stellar transactions over any URI.\n   */\n  get query () {\n    if (!this._query) {\n      if (this.xdr) this._query = convert.xdrToQuery(this, this.xdr, this.tdesc)\n      else if (this.tdesc) this._query = convert.tdescToQuery(this, this.tdesc)\n      else return undefined\n    }\n    return this._query\n  }\n\n  /**\n   * CosmicLink's transaction in Tdesc format. This is in-between an objectified\n   * query representation and a simplified StellarSdk Transaction object. It has\n   * been created to be convenient to understand, use and manipulate.\n   *\n   * If you need to read the transaction parameters, this is the format of\n   * choice:\n   *\n   * ```js\n   * console.log(cosmicLink.tdesc.network) // Does the transaction enforce a network?\n   * console.log(cosmicLink.tdesc.source)  // Does the transaction enforce a source?\n   * console.log(cosmicLink.tdesc.memo)    // A simplified memo object or undefined\n   * console.log(cosmicLink.operations)    // Transaction operations in simplified format\n   * ```\n   *\n   * This formats authorize [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html}\n   * everywhere StellarSdk Transaction accept public keys. Those addresses are\n   * resolved when running the [lock]{@link CosmicLink#lock} method, and the\n   * tdesc is replaced by a resolved one.\n   *\n   * Tdesc is also very convenient to edit. To keep the CosmicLink in sync, you\n   * either need to [parse]{@link CosmicLink#parse} the edited tdesc, or to edit\n   * it using the dedicated methods:\n   *\n   * * [setTxFields]{@link CosmicLink#setTxFields}: set/clear transaction fields\n   * * [addOperation]{@link CosmicLink#addOperation}: add a new operation\n   * * [setOperation]{@link CosmicLink#setOperation}: edit/clear an operation\n   */\n  get tdesc () {\n    if (!this._tdesc) {\n      if (this.transaction) this._tdesc = convert.transactionToTdesc(this, this.transaction, this.locker)\n      else return undefined\n    }\n    return this._tdesc\n  }\n\n  /**\n   * CosmicLink's transaction in JSON format. This is a stringified version of\n   * [Tdesc]{@link CosmicLink#tdesc} format.\n   */\n  get json () {\n    if (!this._json) this._json = convert.tdescToJson(this, this.tdesc)\n    return this._json\n  }\n\n  /**\n   * CosmicLink's transaction in StellarSdk\n   * [Transaction]{@link https://stellar.github.io/js-stellar-sdk/Transaction.html}\n   * format.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get transaction () {\n    return this._transaction\n  }\n\n  /**\n   * CosmicLink's transaction in\n   * [XDR]{@link https://stellar.org/developers/guides/concepts/xdr.html}\n   * format.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get xdr () {\n    if (!this._xdr) {\n      if (!this.transaction) return undefined\n      this._xdr = convert.transactionToXdr(this, this.transaction)\n    }\n    return this._xdr\n  }\n\n  /**\n   * CosmicLink transaction in\n   * [SEP-0007]{@link https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md}\n   * link format. Only the XDR part of this protocol is currently supported by\n   * CosmicLink, minus the signature verification.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get sep7 () {\n    if (!this._sep7) {\n      if (!this.xdr) return undefined\n      this._sep7 = convert.xdrToSep7(this, this.xdr, this.tdesc)\n    }\n    return this._sep7\n  }\n\n  /// Data\n  /**\n   * The page this CosmicLink uses to construct its [URI]{@link CosmicLink#uri}.\n   *\n   * @var CosmicLink#page\n   */\n\n  /**\n   * The source for this transaction. This can be defined either locally\n   * (`cosmicLink.tdesc.source`) or globally (`cosmicLib.config.source`). The\n   * local configuration takes precedence, or, in other words, the global source\n   * is a fallback value in case the transaction emitter doesn't set one.\n   *\n   * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n   * CosmicLink#setTxFields}.\n   */\n  get source () {\n    return (this.tdesc && this.tdesc.source) || this.config.source\n  }\n\n  /**\n   * The network for this transaction. This can be defined either locally\n   * (`cosmicLink.tdesc.network`) or globally (`cosmicLib.config.network`). The\n   * local configuration takes precedence, or, in other words, the global\n   * network is a fallback value in case the transaction emitter doesn't set\n   * one.\n   *\n   * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n   * CosmicLink#setTxFields}.\n   */\n  get network () {\n    return (this.tdesc && this.tdesc.network) || this.config.network\n  }\n\n  /**\n   * The URL of the horizon node from which ledger data will be retrieved, and\n   * to which the signed transaction will be posted if there's no\n   * [callback]{@link CosmicLink#callback}.\n   *\n   * This can be defined either locally (`cosmicLink.tdesc.horizon`) or globally\n   * (using [setupNetwork]{@link module:config.setupNetwork}). This parameter is\n   * special in the sense that it's the only one for which the global\n   * configuration takes precedence.\n   *\n   * The rationale for this behavior is that we want transaction emitter to\n   * provide a fallback Horizon URL in the special case none is known for a\n   * custom network, but generally speaking it won't be right to allow the\n   * transaction emitter to force us to use a particular Horizon node.\n   *\n   * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n   * CosmicLink#setTxFields}.\n   */\n  get horizon () {\n    return resolve.horizon(this.config, this.network) || (this.tdesc && this.tdesc.horizon)\n  }\n\n  /**\n   * The URL at which the signed transaction will be posted. This can be defined\n   * either locally (`cosmicLink.tdesc.callback`) or globally\n   * (`cosmicLib.config.callback`). The local configuration takes precedence.\n   *\n   * When no callback is defined, the signed transaction is posted to\n   * [Horizon]{@link CosmicLink#horizon}. This is the default behavior.\n   *\n   * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n   * CosmicLink#setTxFields}.\n   */\n  get callback () {\n    return (this.tdesc && this.tdesc.callback) || this.config.callback\n  }\n\n  /// Editor\n  /**\n   * Add/remove transaction fields and reparse the CosmicLink. **object** should\n   * follow the Tdesc format, but fields values can be written using query or\n   * StellarSdk format as well.\n   *\n   * @example\n   * cosmicLink.setTxFields({ minTime: '2018-10', maxTime: '2019-01' })\n   *\n   * @example\n   * cosmicLink.setTxFields({ minTime: null, maxTime: null })\n   *\n   * @example\n   * cosmicLink.setTxFields({ memo: 'Bonjour!' })\n   *\n   * @param {Object} object Transaction fields definition. Fields can be either\n   *   written using the JSON format or the query format\n   * @return {CosmicLink}\n   */\n  setTxFields (object) {\n    checkLock(this)\n    this.parse(Object.assign(this.tdesc, object))\n    return this\n  }\n\n  /**\n   * Add a new operation to CosmicLink. **params** should follow the Tdesc format,\n   * but fields values can be written using query or StellarSdk format as well.\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: 'CNY:admin*ripplefox' })\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: { code: 'CNY', issuer: 'admin*ripplefox } })\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: new StellarSdk.Asset('CNY', ...) })\n   *\n   * @param {string} type The operation type.\n   * @param {Object} params The operation parameters.\n   * @return {CosmicLink}\n   */\n  addOperation (type, params) {\n    checkLock(this)\n    const odesc = Object.assign({ type: type }, params)\n    this.tdesc.operations.push(odesc)\n    this.parse(this.tdesc)\n    return this\n  }\n\n  /**\n   * Set/remove one of the CosmicLink operations. **params** should follow the\n   * Tdesc format, but fields can be written using query or StellarSdk format\n   * as well. If **type** is set to `null`, the operation at **index**\n   * is deleted.\n   *\n   * @example\n   * cosmicLink.setOperation(1, 'setOptions', { homeDomain: 'example.org' })\n   *\n   * @example\n   * cosmicLink.setOperation(2, null)\n   *\n   * @param {integer} index The operation index.\n   * @param {type} type  The operation type.\n   * @param {params} params The operation parameters.\n   * @return {CosmicLink}\n   */\n  setOperation (index, type, params) {\n    checkLock(this)\n    if (!this.tdesc.operations[index]) {\n      throw new Error(`Operation ${index} doesn't exists`)\n    }\n\n    if (type === null) {\n      this.tdesc.operations.splice(index, 1)\n    } else {\n      this.tdesc.operations[index] = Object.assign({ type: type }, params)\n      this.parse(this.tdesc)\n    }\n    return this\n  }\n\n  /// Actions\n  /**\n   * Select the network that this CosmicLink uses.\n   */\n  selectNetwork () { return resolve.useNetwork(this) }\n  lock (options) { return action.lock(this, options) }\n  sign (...keypairs_or_preimage) { return action.sign(this, ...keypairs_or_preimage) }\n  send (horizon) { return action.send(this, horizon) }\n\n  /**\n   * The HTML DOM node that displays a description of the current transaction.\n   * This is a browser-only property.\n   *\n   * If your HTML page contains an element with `id=\"cosmiclink_description\"`,\n   * it will automatically get populated with the description of the last\n   * CosmicLink created.\n   */\n  get htmlDescription () {\n    if (!this._htmlDescription) makeHtmlDescription(this)\n    return this._htmlDescription\n  }\n\n  /**\n   * A link HTML Element that points to `cosmicLink.uri`\n   */\n  get htmlLink () {\n    if (!this._htmlLink) makeHtmlLink(this)\n    return this._htmlLink\n  }\n\n  /// Backward compatibility (2018-09 -> 2019-03).\n  get server () {\n    return resolve.server(this)\n  }\n\n  get htmlNode () {\n    helpers.deprecated(\"2019-03\", \"cosmicLink.htmlNode\", \"cosmicLink.htmlDescription\")\n    return this.htmlDescription\n  }\n  get transactionNode () { return html.grab(\".cosmiclib_transactionNode\", this.htmlDescription) }\n  get statusNode () { return html.grab(\".cosmiclib_statusNode\", this.htmlDescription) }\n  get signersNode () { return html.grab(\".cosmiclib_signersNode\", this.htmlDescription) }\n\n  hasSigned (accountId) {\n    helpers.deprecated(\"2019-03\", \"cosmicLink.hasSigned\", \"cosmicLink.transaction.hasSigned\")\n    return this.transaction.hasSigned(accountId)\n  }\n  hasSigner (accountId) {\n    helpers.deprecated(\"2019-03\", \"cosmicLink.hasSigner\", \"cosmicLink.transaction.hasSigner\")\n    return this.transaction.hasSigner(accountId)\n  }\n}\n\n/**\n * Initialize or reset a CosmicLink.\n *\n * @private\n */\nfunction initCosmicLink (cosmicLink, transaction, options = {}) {\n  checkLock(cosmicLink)\n\n  /// Reset object in case of reparse.\n  formatsFields.forEach(type => delete cosmicLink[type])\n  cosmicLink.page = cosmicLink.page || options.page || config.page\n  /**\n   * The status of a CosmicLink. It becomes non-null in case of failure.\n   * @var CosmicLink#status\n   */\n  /**\n   * By default `false`, or an *Array* of errors.\n   * @var CosmicLink#errors\n   */\n  status.init(cosmicLink)\n\n  /**\n   * The CosmicLink cache contains the resolved federations addresses and the\n   * accounts object. Using the same set of data for all the CosmicLink related\n   * computations ensure consistent results.\n   *\n   * @var CosmicLink#cache\n   */\n  cosmicLink.cache = { destination: {}, account: {} }\n\n  parse.dispatch(cosmicLink, transaction, options)\n\n  if (env.isBrowser) {\n    makeHtmlLink(cosmicLink)\n    if (!cosmicLink._htmlDescription) {\n      /// #cosmiclib_htmlNode: Backward compatibility (2018-09 -> 2019-03).\n      cosmicLink._htmlDescription = html.grab(\"#cosmiclink_description\") || html.grab(\"#CL_htmlNode\")\n    }\n    if (cosmicLink._htmlDescription) {\n      if (cosmicLink.htmlDescription.id === \"#CL_htmlNode\") {\n        helpers.deprecated(\"2019-03\", \"id=\\\"#CL_htmlNode\\\"\", \"id=\\\"cosmiclink_description\\\"\")\n      }\n      makeHtmlDescription(cosmicLink)\n    }\n  }\n}\nconst formatsFields = [\"_query\", \"_tdesc\", \"_json\", \"_transaction\", \"_xdr\"]\n\n/**\n * Initialize CosmicLink html nodes.\n *\n * @private\n */\nfunction makeHtmlDescription (cosmicLink) {\n  if (env.isNode) return\n  let htmlDescription = cosmicLink._htmlDescription\n\n  if (htmlDescription) {\n    html.clear(htmlDescription)\n    htmlDescription.className = \"cosmiclink_description\"\n  } else {\n    htmlDescription = html.create(\"div\", \".cosmiclink_description\")\n    cosmicLink._htmlDescription = htmlDescription\n  }\n\n  cosmicLink._transactionNode = format.tdesc(cosmicLink, cosmicLink.tdesc)\n  cosmicLink._statusNode = status.makeHtmlNode(cosmicLink)\n  cosmicLink._signersNode = html.create(\"div\", \".cosmiclib_signersNode\")\n\n  html.append(htmlDescription,\n    cosmicLink._transactionNode, cosmicLink._statusNode, cosmicLink._signersNode)\n}\n\n/**\n * Make the HTML link.\n * @private\n */\nfunction makeHtmlLink (cosmicLink) {\n  if (env.isNode) return\n\n  const htmlLink = html.grab(\"#cosmiclink\") || html.create(\"a\")\n  htmlLink.className = \".cosmiclink\"\n  htmlLink.href = cosmicLink.page\n  htmlLink.onclick = () => htmlLink.href = cosmicLink.uri\n  if (!htmlLink.title) htmlLink.title = \"Sign transaction\"\n  if (!htmlLink.textContent) htmlLink.textContent = \"CosmicLink\"\n\n  cosmicLink._htmlLink = htmlLink\n  return htmlLink\n}\n\n/**\n * Throw an error if CosmicLink is locked.\n * @private\n */\nfunction checkLock (cosmicLink) {\n  if (cosmicLink.locker) throw new Error(\"Cosmic link is locked.\")\n}\n\nCosmicLink.prototype.__proto__ = config\nmodule.exports = CosmicLink\n","\"use strict\"\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n * @exports action\n */\nconst action = exports\n\nconst axios = require(\"@cosmic-plus/base/axios\")\nconst env = require(\"@cosmic-plus/jsutils/env\")\nconst helpers = require(\"@cosmic-plus/jsutils/misc\")\n\nconst convert = require(\"./convert\")\nconst format = env.isBrowser && require(\"./format\")\nconst resolve = require(\"./resolve\")\nconst signersUtils = require(\"./signers-utils\")\nconst status = require(\"./status\")\n\n/**\n * Lock a CosmicLink to a network/source pair. If the cosmicLink was created\n * from a query/uri/tdesc/json, it will create the corresponding\n * transaction/xdr/sep7 formats.\n *\n * This operation must be performed by the wallet before signing & sending the\n * transaction.\n *\n * @example\n * cosmicLib.config.network = \"test\"\n * const cosmicLink = new CosmicLink(\"?setOptions\")\n * console.log(cosmicLink.network) // => undefined\n * console.log(cosmicLink.xdr)     // => undefined\n * await cosmicLink.lock()\n * console.log(cosmicLink.network) // => \"test\"\n * console.log(cosmicLink.xdr)     // => \"AAAA...AA==\"\n *\n *\n * @alias CosmicLink#lock\n * @async\n * @param {Object} [options]\n * @param {string} options.network Local fallback network\n * @param {string} options.horizon Local fallback horizon (overwrited by global configuration)\n * @param {string} options.callback Local fallback callback\n * @param {string} options.source Local fallback source\n */\naction.lock = async function (cosmicLink, options = {}) {\n  if (cosmicLink.status) throw new Error(cosmicLink.status)\n  if (cosmicLink.locker) throw new Error(\"CosmicLink is already locked.\")\n\n  try {\n    await applyLock(cosmicLink, options)\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error)\n      status.error(cosmicLink, error.message)\n    }\n    status.fail(cosmicLink, \"Transaction build failed\", \"throw\")\n  }\n\n  updateSignersNode(cosmicLink)\n\n  return cosmicLink\n}\n\nasync function applyLock (cosmicLink, options) {\n  /**\n   * The locker property tells that a CosmicLink have been locked, and exposes\n   * the network & source values to which it have been locked.\n   *\n   * @alias CosmicLink#locker\n   */\n  cosmicLink.locker = {\n    source: cosmicLink.tdesc.source || options.source || cosmicLink.config.source,\n    network: cosmicLink.tdesc.network || options.network || cosmicLink.config.network,\n    horizon: options.horizon || cosmicLink.horizon,\n    callback: cosmicLink.tdesc.callback || options.callback || cosmicLink.config.callback\n  }\n\n  /// Preserve the underlying tdesc object.\n  cosmicLink._tdesc = Object.assign({}, cosmicLink.tdesc, cosmicLink.locker)\n  delete cosmicLink._query\n  delete cosmicLink._json\n\n  if (!cosmicLink._transaction) {\n    cosmicLink._transaction = await convert.tdescToTransaction(cosmicLink, cosmicLink.tdesc)\n    delete cosmicLink._tdesc\n  }\n\n  delete cosmicLink._transaction._cosmicplus\n  await signersUtils.extends(cosmicLink, cosmicLink._transaction)\n}\n\n/**\n * Sign CosmicLink's Transaction with **keypairs_or_preimage** and update the\n * other formats accordingly. Only legit signers are allowed to sign, and a\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before signing.\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|Buffer|string} ...keypairs_or_preimage\n */\naction.sign = async function (cosmicLink, ...keypairsOrPreimage) {\n  if (!cosmicLink.locker) throw new Error(\"cosmicLink is not locked.\")\n  resolve.useNetwork(cosmicLink)\n\n  const transaction = cosmicLink.transaction\n  let allFine = true\n\n  if (typeof keypairsOrPreimage[0] !== \"string\") {\n    for (let index in keypairsOrPreimage) {\n      const keypair = keypairsOrPreimage[index]\n      const publicKey = keypair.publicKey()\n\n      if (!cosmicLink.transaction.hasSigner(publicKey)) {\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, \"Not a legit signer: \" + short)\n        allFine = false\n        continue\n      }\n\n      if (cosmicLink.transaction.hasSigned(publicKey)) continue\n\n      try {\n        transaction.sign(keypair)\n      } catch (error) {\n        console.error(error)\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, \"Failed to sign with key: \" + short)\n        allFine = false\n        continue\n      }\n    }\n  } else {\n    try {\n      transaction.signHashX(keypairsOrPreimage[0])\n    } catch (error) {\n      console.error(error)\n      const short = helpers.shorter(keypairsOrPreimage[0])\n      status.error(cosmicLink, \"Failed to sign with preimage: \" + short, \"throw\")\n    }\n  }\n\n  /// Update other formats.\n  [\"_query\", \"_xdr\", \"_sep7\"].forEach(format => delete cosmicLink[format])\n  updateSignersNode(cosmicLink)\n\n  if (!allFine) throw new Error(\"Some signers where invalid\")\n  else return transaction\n}\n\nfunction updateSignersNode (cosmicLink) {\n  if (cosmicLink._signersNode) {\n    const signersNode = format.signatures(cosmicLink, cosmicLink._transaction)\n    cosmicLink.htmlDescription.replaceChild(signersNode, cosmicLink._signersNode)\n    cosmicLink._signersNode = signersNode\n  }\n}\n\n/**\n * Send CosmicLink's transaction to a blockchain validator, or to\n * [StellarGuard]{@link https://stellarguard.me} when relevant. A\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before sending.\n *\n * Returns a promise that resolve/reject to the horizon server response.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {horizon} [horizon] An horizon node URL\n * @return {Object} The server response\n */\naction.send = async function (cosmicLink, horizon = cosmicLink.horizon) {\n  if (!cosmicLink.locker) throw new Error(\"cosmicLink is not locked.\")\n  const server = resolve.server(cosmicLink, horizon)\n\n  if (cosmicLink.transaction.hasSigner(STELLARGUARD_PUBKEY)) {\n    return sendToStellarGuard(cosmicLink)\n  } else if (cosmicLink.callback) {\n    return axios.post(cosmicLink.callback, { xdr: cosmicLink.xdr })\n  } else {\n    return server.submitTransaction(cosmicLink.transaction)\n  }\n}\n\nfunction sendToStellarGuard (cosmicLink) {\n  const url = cosmicLink.network === \"test\"\n    ? \"https://test.stellarguard.me/api/transactions\"\n    : \"https://stellarguard.me/api/transactions\"\n  return axios.post(url, {\n    xdr: cosmicLink.xdr, callback: cosmicLink.callback\n  }).then(result => result.data)\n}\n\nconst STELLARGUARD_PUBKEY = \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\"\n","\"use_stict\"\n\nconst env = require(\"@cosmic-plus/jsutils/env\")\n\nif (env.isBrowser) {\n  module.exports = require(\"./stellar-sdk\").axios\n} else {\n  module.exports = env.nodeRequire(\"axios\")\n}\n","\"use strict\"\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\nconst parse = exports\n\nconst check = require(\"./check\")\nconst convert = require(\"./convert\")\nconst decode = require(\"./decode\")\nconst expand = require(\"./expand\")\nconst specs = require(\"./specs\")\nconst status = require(\"./status\")\n\n/**\n * Sets cosmicLink page as the base path of `uri`.\n *\n * @param {string} page URI basename\n */\nparse.page = function (cosmicLink, uri) {\n  const page = uri.split(\"?\")[0]\n  if (page) cosmicLink.page = encodeURI(page)\n}\n\n/**\n * Call the right functions to setup cosmicLink depending on `options` and\n * `value` type.\n *\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\nparse.dispatch = function (cosmicLink, value = \"?\", options = {}) {\n  formats.forEach(format => delete cosmicLink[format])\n  const type = guessType(value)\n\n  // Strip out URL hash\n  switch (type) {\n  case \"uri\": case \"query\": case \"xdrUri\": case \"sep7\": case \"sep7Request\":\n    value = value.replace(/#.*$/, \"\")\n  }\n\n  // Parse transaction\n  try {\n    if (parseFmt[type]) parseFmt[type](cosmicLink, value, options)\n    else setTdesc(cosmicLink, type, value, options)\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error)\n      status.error(cosmicLink, error.message)\n    }\n    status.fail(cosmicLink, \"Invalid \" + type)\n    if (error.tdesc) cosmicLink._tdesc = error.tdesc\n  }\n\n  if (options.page) parse.page(cosmicLink, options.page)\n}\n\nconst formats = [\"_query\", \"_json\", \"_tdesc\", \"_transaction\", \"_xdr\", \"_sep7\"]\n\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n */\nfunction guessType (value) {\n  let type\n  if (typeof value === \"string\") {\n    const query = convert.uriToQuery(\"\", value)\n    if (value.substr(0, 12) === \"web+stellar:\") type = \"sep7\"\n    else if (query && query.substr(0, 5) === \"?req=\") type = \"sep7Request\"\n    else if (query && query.substr(0, 5) === \"?xdr=\") type = \"xdrUri\"\n    else if (value.substr(0, 1) === \"?\") type = \"query\"\n    else if (value.substr(0, 1) === \"{\") type = \"json\"\n    else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = \"xdr\"\n    else type = \"uri\"\n  } else {\n    if (value.tx) type = \"transaction\"\n    else type = \"tdesc\"\n  }\n  return type\n}\n\n/******************************************************************************/\n\nconst parseFmt = {}\n\n/**\n * Initialize cosmicLink using `xdrUri`.\n */\nparseFmt.xdrUri = function (cosmicLink, xdrUri, options) {\n  parse.page(cosmicLink, xdrUri)\n\n  const query = convert.uriToQuery(cosmicLink, xdrUri)\n  const temp = query.split(\"&\")\n  const xdr = temp[0].substr(5)\n\n  temp.slice(1).forEach(entry => {\n    let field = entry.replace(/=.*$/, \"\")\n    let value = entry.substr(field.length + 1)\n\n    switch (field) {\n    case \"stripSignatures\":\n      options.stripSignatures = true\n      break\n    case \"stripSequence\":\n      options.stripSequence = true\n      break\n    case \"stripSource\":\n      options.stripSource = true\n      break\n    case \"network\":\n      options.network = decode.network(cosmicLink, value)\n      break\n    case \"horizon\": case \"callback\":\n      options[field] = decode.url(cosmicLink, value)\n      break\n    default:\n      status.error(cosmicLink, \"Unknow option: \" + entry)\n      status.fail(cosmicLink, \"Invalid query\")\n    }\n  })\n\n  setTdesc(cosmicLink, \"xdr\", xdr, options)\n}\n\n/**\n * Initialize cosmicLink using `sep7Request`.\n */\nparseFmt.sep7Request = function (cosmicLink, sep7Request, options) {\n  parse.page(cosmicLink, sep7Request)\n\n  const query = convert.uriToQuery(cosmicLink, sep7Request)\n  const sep7 = decodeURIComponent(query.substr(5))\n  parseFmt.sep7(cosmicLink, sep7, options)\n}\n\n/**\n * Initialize cosmicLink using `sep7`.\n */\nparseFmt.sep7 = function (cosmicLink, sep7, options = {}) {\n  if (sep7.substr(12, 4) === \"pay?\") {\n    throw new Error(\"SEP-0007 'pay' operation is not currently supported.\")\n  } else if (sep7.substr(12, 3) !== \"tx?\") {\n    throw new Error(\"Invalid SEP-0007 link.\")\n  }\n\n  const query = convert.uriToQuery(cosmicLink, sep7)\n  const params = query.substr(1).split(\"&\")\n  if (!options.network) options.network = \"public\"\n  let xdr\n\n  params.forEach(entry => {\n    const field = entry.replace(/=.*$/, \"\")\n    const value = entry.substr(field.length + 1)\n\n    switch (field) {\n    case \"xdr\":\n      xdr = decodeURIComponent(value)\n      break\n    case \"network_passphrase\":\n      options.network = decode.network(cosmicLink, value)\n      break\n    case \"callback\":\n      if (value.substr(0,4) !== \"url:\") throw new Error(\"Invalid callback: \" + value)\n      options.callback = decode.url(cosmicLink, value.substr(4))\n      break\n    default:\n      if (isIgnoredSep7Field(field)) {\n        // eslint-disable-next-line no-console\n        console.log(\"Ignored SEP-0007 field: \" + field)\n      } else {\n        throw new Error(\"Invalid SEP-0007 field: \" + field)\n      }\n    }\n  })\n\n  if (!xdr) throw new Error(\"Missing XDR parameter\")\n  setTdesc(cosmicLink, \"xdr\", xdr, options)\n}\n\nfunction isIgnoredSep7Field (field) {\n  return specs.sep7IgnoredFields.find(name => name === field)\n}\n\n/******************************************************************************/\n\n/**\n * Set cosmicLink_tdesc from format `type`. From there, the CosmicLink methods\n * can lazy-evaluate any requested format.\n */\nfunction setTdesc (cosmicLink, type, value, options) {\n  if (type !== \"uri\") cosmicLink[\"_\" + type] = value\n\n  switch (type) {\n  case \"uri\":\n    parse.page(cosmicLink, value)\n    cosmicLink._query = convert.uriToQuery(cosmicLink, value, options)\n    // eslint-disable-next-line no-fallthrough\n  case \"query\":\n    cosmicLink._tdesc = convert.queryToTdesc(cosmicLink, cosmicLink.query, options)\n    delete cosmicLink._query\n    break\n  case \"json\":\n    value = convert.jsonToTdesc(cosmicLink, value)\n    // eslint-disable-next-line no-fallthrough\n  case \"tdesc\":\n    cosmicLink._tdesc = expand.tdesc(cosmicLink, value)\n    delete cosmicLink._json\n    check.tdesc(cosmicLink, cosmicLink.tdesc)\n    break\n  case \"sep7\":\n    cosmicLink._xdr = convert.sep7ToXdr(cosmicLink, cosmicLink.sep7)\n    // eslint-disable-next-line no-fallthrough\n  case \"xdr\":\n    cosmicLink._transaction = convert.xdrToTransaction(cosmicLink, cosmicLink.xdr, options)\n    // eslint-disable-next-line no-fallthrough\n  case \"transaction\":\n    cosmicLink._tdesc = convert.transactionToTdesc(cosmicLink, cosmicLink.transaction, options)\n    delete cosmicLink._sep7\n    if (options.stripSource || options.stripSequence) {\n      delete cosmicLink._xdr\n      delete cosmicLink._transaction\n    } else if (options.stripSignatures) {\n      cosmicLink.transaction.signatures = []\n      delete cosmicLink._xdr\n    }\n  }\n}\n","\"use_strict\"\n/**\n * Asynchronously load external ressources.\n */\n\n/**/\nconst parent = require(\"@cosmic-plus/jsutils/load\")\nconst load = module.exports\n\n/**\n *\n * Load cosmic-lib CSS from **href** or from default origin. All subsequent\n * calls will refer to the original request.\n *\n * @example\n * /// Preload at the start of your script:\n * cosmicLib.load.styles('css/cosmic-lib.css')\n *\n * /// Then wait for the request to resolve before you display CosmicLink HTML\n * /// description:\n * await cosmicLib.load.styles()\n *\n * @alias module:load#styles\n * @async\n * @param {string} [href='cosmic-lib.css']\n */\nload.styles = async function (conf, href = \"https://cosmic.plus/cosmic-lib/cosmic-lib.css\") {\n  const promise = parent.css(href)\n  load.styles = () => promise\n  return promise\n}\n\n// Make other member compatible with how cosmic-lib exposes modules.\nload.css = (conf, href) => parent.css(href)\n","\"use_strict\"\n/**\n * Asynchronously load external ressources.\n *\n * @exports load\n */\nconst load = exports\n\nconst html = require(\"./html\")\n\n/**\n * Asynchronously load a stylesheet from **href**.\n *\n * @example\n * // Load:\n * await load.css(\"my-styles.css\")\n *\n * @example\n * // Preload:\n * const preloader = load.css(\"my-styles.css\")\n *\n * // Then wait for loading to finish:\n * await cssLoader\n *\n * @async\n * @param {String} href\n */\nload.css = async function (href) {\n  return new Promise(function (resolve, reject) {\n    const linkNode = html.create(\"link\", {\n      rel: \"stylesheet\", type: \"text/css\", href: href,\n      onload: resolve, onerror: reject\n    })\n    html.append(document.head, linkNode)\n  })\n}\n"],"sourceRoot":""}
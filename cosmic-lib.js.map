{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./es5/specs.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/es5/misc.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/es5/stellar-sdk.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/es5/env.js","webpack://cosmicLib/./es5/resolve.js","webpack://cosmicLib/./node_modules/@babel/runtime/regenerator/index.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://cosmicLib/./es5/status.js","webpack://cosmicLib/./node_modules/@cosmic-plus/domutils/es5/html.js","webpack://cosmicLib/./es5/decode.js","webpack://cosmicLib/./es5/config.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/typeof.js","webpack://cosmicLib/./es5/format.js","webpack://cosmicLib/./es5/signers-utils.js","webpack://cosmicLib/./es5/convert.js","webpack://cosmicLib/./es5/check.js","webpack://cosmicLib/./es5/normalize.js","webpack://cosmicLib/./es5/destruct.js","webpack://cosmicLib/./es5/event.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/createClass.js","webpack://cosmicLib/./es5/construct.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/es5/buffer.js","webpack://cosmicLib/./es5/encode.js","webpack://cosmicLib/./es5/expand.js","webpack://cosmicLib/./es5/index.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/inherits.js","webpack://cosmicLib/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://cosmicLib/./node_modules/process/browser.js","webpack://cosmicLib/(webpack)/buildin/global.js","webpack://cosmicLib/./node_modules/@cosmic-plus/domutils/es5/polyfill.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/es5/aliases.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/es5/nice.js","webpack://cosmicLib/./es5/cosmiclink.js","webpack://cosmicLib/./es5/action.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/es5/axios.js","webpack://cosmicLib/./es5/parse.js","webpack://cosmicLib/./es5/load.js","webpack://cosmicLib/./node_modules/@cosmic-plus/domutils/es5/load.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","specs","field","transactionOptionalFields","fieldDesc","network","horizon","callback","memo","source","sequence","minTime","maxTime","fee","isTransactionField","find","operationMandatoryFields","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createPassiveOffer","createPassiveSellOffer","inflation","manageData","manageOffer","manageBuyOffer","manageSellOffer","pathPayment","payment","setOptions","operationOptionalFields","operationFields","concat","isOperationField","operation","fieldType","amount","asset","assetCode","assetIssuer","authorize","bumpTo","buyAmount","buying","clearFlags","destAsset","destAmount","destination","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","medThreshold","memoBinary","memoHash","memoId","memoReturn","memoText","memoType","offerId","price","path","selling","sendAsset","sendMax","setFlags","signer","signerHash","signerKey","signerType","signerTx","signerWeight","startingBalance","trustor","types","_loop","_field","type","entry","push","neutralAccountId","sep7MandatoryFields","tx","pay","sep7OptionalFields","sep7IgnoredFields","misc","delay","thunk","memoized","firstCall","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","setHiddenProperty","configurable","deprecated","date","before","after","console","error","useExtra","obj","extraField","isUtf8","match","isBase64","day","time","Date","toISOString","replace","copy","env","isBrowser","undefined","window","StellarSdk","nodeRequire","process","global","document","isNode","versions","node","isEmbedded","top","stealth_require","eval","_regeneratorRuntime","_asyncToGenerator","status","_addressResolver","mark","_callee5","conf","address","account","accountId","wrap","_context5","prev","next","FederationServer","sent","account_id","Error","memo_type","aliases","alias","abrupt","t0","fail","stop","apply","arguments","accountResolver","_x6","_x7","_x8","_accountResolver","_callee6","quietFlag","server","accountResponse","_context6","loadAccount","response","makeAccountResponse","publicKey","Account","cache","id","signers","public_key","weight","resolveTxSource","_x14","_x15","_resolveTxSource","_callee7","_context7","signersTableToSignersList","signersTable","array","forEach","current","Server","useNetwork","passphrase","networkPassphrase","log","Network","use","currentNetwork","networkName","index","values","indexOf","keys","promise","_x","_x2","addressResolver","_ref","_callee","_context","_x3","_x4","_x5","isAccountEmpty","then","txSourceAccount","_ref2","_callee2","baseAccount","_context2","sub","_baseAccount","_x9","_x10","_x11","txSources","transaction","extra","operations","a","txSigners","_ref3","_callee3","_context3","t1","done","filter","_x12","_x13","txSignersList","_ref4","_callee4","_context4","_x16","_x17","_cosmicplus","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","fn","args","err","html","errorContinuation","continuation","init","errors","update","_statusNode","grab","textContent","errorStatus","addClass","errorsNode","lineNode","append","makeHtmlNode","statusNode","statusLine","errorLine","addStyles","styles","styleNode","head","element","_len","childs","Array","_key","child","appendChild","convert","className","split","appendClass","clear","_len2","elements","_key2","innerHTML","Element","HTMLDocument","Text","createTextNode","domNode","copyContent","selectionStart","selectionEnd","select","getSelection","range","createRange","selectNode","removeAllRanges","addRange","execCommand","copyString","textBox","body","destroy","attributes","createElement","assign","_len3","_key3","parentNode","removeChild","pattern","querySelector","hide","_len4","_key4","hidden","element1","element2","replaceChild","rewrite","_len5","_key5","show","_len6","_key6","decode","check","normalize","query","tdesc","command","params","param","odesc","decodeURIComponent","assetLower","toLowerCase","code","temp","issuer","assetsArray","assetsList","map","boolean","buffer","matched","numerator","denominator","config","event","page","setupNetwork","Networks","PUBLIC","TESTNET","all","addAliases","definitions","set","removeAliases","remove","clickHandlers","defaultClickHandlers","setClickHandler","clearClickHandler","instance","Constructor","TypeError","_typeof2","iterator","constructor","_typeof","format","nice","signersUtils","parentProperty","infoNode","trNode","_index","opNode","retNode","sourceNode","addressNode","meaning","msg","operationMeaning","fieldNode","txt","signatures","signersNode","utils","signersList","sources","div","accountSignersNode","title","titleNode","listNode","signerNode","hasSigned","insertBefore","firstChild","makeAccountSignersNode","parentOdesc","parentIndex","parentTdesc","eventObject","cosmicLink","onclick","callClickHandler","_resolveAddressAndUpdate","animation","errDesc","errorNode","message","resolveAddressAndUpdate","significant","max","Number","nicified","String","assetNode","assetsArrayNode","hash","toLocaleString","flags","valueNode","typeNode","value1","value2","value3","StrKey","decodeSha256Hash","toString","weightNode","_classCallCheck","_createClass","_resolve","SignersUtils","_resolve2","extendFlag","txHash","utilities","hasSigner","keypair","Keypair","fromPublicKey","verify","signature","construct","destruct","encode","uriToQuery","uri","queryToTdesc","tdescToJson","JSON","stringify","tdescToTransaction","transactionToXdr","toEnvelope","toXDR","xdrToSep7","xdr","options","sep7","encodeURIComponent","url","xdrToTransaction","Transaction","stripSignatures","xdrToQuery","transactionToTdesc","jsonToTdesc","json","parse","tdescToQuery","queryToUri","isValid","txField","e","operationType","operationField","number","min","num","isNaN","integer","parseInt","utf8","base64","_boolean","threshold","removeEmptyFields","dateFields","shifted","setMinutes","getMinutes","Asset","XLM","stripSource","stripSequence","_memo","_switch","timeBounds","op","line","assetPath","timestamp","sdkMemo","_arm","_value","sdkSequence","sdkSigner","ed25519PublicKey","sha256Hash","preAuthTx","handler","alert","classList","contains","preimage","prompt","sign","_defineProperties","target","props","descriptor","writable","protoProps","staticProps","Buffer","makeTransactionBuilder","_makeTransactionBuilder","_callee9","baseFee","txOpts","sourceAccount","builder","memoValue","_short","_context9","fetchBaseFee","timebounds","TransactionBuilder","TimeoutInfinite","addMemo","Memo","txBuilder","addOperation","build","t2","Operation","_ref5","_ref6","_ref7","constructedAsset","_x18","from","_ref8","_callee8","_context8","_x19","_x20","__proto__","encodedValue","expand","isArray","_possibleConstructorReturn","_getPrototypeOf","_inherits","exportModule","layer","_config","exposeModule","withConfig","library","_this$module","_class","CosmicLink","load","assertThisInitialized","ReferenceError","setPrototypeOf","getPrototypeOf","subClass","superClass","_setPrototypeOf","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","noop","nextTick","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","Function","NodeList","predicate","thisArg","k","kValue","varArgs","to","nextSource","nextKey","reduce","isEnumerable","propertyIsEnumerable","getOwnPropertyNames","O","v","entries","publicKeys","GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2","GASWJWFRYE55KC7MGANZMMRBK5NPXT3HMPDQ6SEXZN6ZPWYXVVYBFRTE","GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX","GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4","GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF","GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR","GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP","GCYKQ2627BPKMSUZJK64GPYVKD4TRNACP45X6B754PR6TCYJXCHGUTWB","GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC","GDZURZR6RZKIQVOWZFWPVAUBMLLBQGXP2K5E5G7PEOV75IYPDFA36WK4","GABQBEZCNQRUHURCG6E2UZC6QXXEPLALHBVA6J6IQNKNJL66VPY7FO7G","GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A","GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC","GBOXNWGBB7SG3NVIA7O25M7JIRSXQ4KKU3GYARJEFMQXSR3APF3KRI6S","GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL","GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3","GATTH3VPK4PMXLE7JSEJ3OC72OYOGJYINLHSCJX365BP6SAV6GKSHJAV","GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM","GB3RMPTL47E4ULVANHBNCXSXM2ZA5JFY5ISDRERPCXNJUDEO73QFZUNK","GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7","GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP","GBOAYBE3NJKS4WPIVM2H5DVFIDYLAHHD2DAWYL5LLUVYF77M3JIVGCTR","GCJGYOH2EYW6FFISLBA3L3R3PUYCQ6DQ47GXVAMG7JLLIKPAPV3RLBSV","GBDUXW4E5WRM5EM6UXBLE7Y5XGSXJX472BSSBPKFPQ3PJCJHRIA6SH4C","GDQP2KPQGKIHYJGXNUIYOMHARUARCA7DJT5FO2FFOOKY3B2WSQHG4W37","GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP","GAWODAROMJ33V5YDFY3NPYTHVYQG7MJXVJ2ND3AOGIHYRWINES6ACCPD","GDMXNQBJMS3FYI4PFSYCCB4XODQMNMTKPQ5HIKOUWBOWJ2P3CF6WASBE","GA4BYMUO5D7OLGVJWZ2D5FCWU7SB63FNZ4QUU574SMNA6ELK5TZD3SO3","GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ","GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3","GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG","GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI","GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2","GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7","GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN","GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH","GAZEX2USUBMMWFRZFS77VDJYXUFLXI4ZGFPWX6TBNZCSTEQWNLFZMXFF","GBETHKBL5TCUTQ3JPDIYOZ5RDARTMHMEKIO2QZQ7IOZ4YC5XV3C2IKYU","GCNY5OXYSY4FKHOPT2SPOQZAOEIGXB5LBYW3HVU3OWSTQITS65M5RCNY","GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW","GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M","GBUAVXCI7JKH6D2ZHZ6KZ7Z5MHHCXHI4DSUUC4KOISDMRPVY3MRBF3OY","GDGDECMFS34OVTQJKTCHORPE7LOYDH2XYNRMUHLGCJFP56VUN6AW5LCF","GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S","GARFMAHQM4JDI55SK2FGEPLOZU7BTEODS3Y5QNT3VMQQIU3WV2HTBA46","GDYNTGXBDWARLJ34GRQ4ON4EGBXSTPR5LEDTD5LLOOHPS6EZU6QXIIYO","GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO","GA6KR5DMGJ6OPPG4OONB65JPU3TZE2CWCLKTBV4DHXFA2Z4XKWQSVCTC","GB2X6RCO2VAXOD7GXE5VJWXOUTYDKPHIAHJSM2CGZJXKZSIHREEP4654","GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S","GCNSGHUCG5VMGLT5RIYYZSO7VQULQKAJ62QA33DBC5PPBSO57LFWVV6P","GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL","GANZBUS4726LBT2CBJ3BGF3TP4NJT5MHZMI423NHMXFRWGO2DCBQEXYZ","GD4T35DMXYDE7BJWYPUWK43VFJO5IBUQYG2YGMICPTWP4JTNWQELKAVA","GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP","GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM","GC3L2FLR2QMUSOJ6QMQHKIWUKEXGOXSIN2KY72SDUHPC2KO6HOSQIXIF","GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX","GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT","GBVB43NLVIP2USHXSKI7QQCZKZU2Z6U6A5PAHMIW7LLNVMQJTOX2BZI5","GDTEQF6YGCKLIBD37RJZE5GTL3ZY6CBQIKH7COAW654SYEBE6XJJOLOW","GD2YURFWC5LIRLM4CCVZZHCFV6WXO46VOSBBPTJG6MPQN6ANYZZOLQJL","GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH","GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK","GB56YLTH5SDOYTUGPWY5MXJ7VQTY7BEM2YVJZTN5O555VA6DJYCTY2MP","GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH","GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS","GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES","GD6RMKTCHQGEOGYWIKSY5G7QWXPZOAEZIKPKEVZUAXOQCZRVBRRFGLJM","GDNXSZSF7HIGVRL2LG6VWXN5PWV3KHI77DQTHLLPKNPLUZFKRRDQJBXP","GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB","GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6","GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN","GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW","GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L","GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY","GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW","GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2","GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5","GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B","GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX","GCLDH6L6FBLTD3H3B23D6TIFVVTFBLZMNBC3ZOI6FGI5GPQROL4FOXIN","GB2WB73G5IWRXEUTJANAIF52JFTDXOXORAP4S5HZRW23TZG2ONDVZMVA","GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z","GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP","GAIGG2ICK2ATV7VUQC6MZHOSMRMFJK3T65IVNUZ7EJEEAU5UJQPPDIST","GB3KBOFUCVTWEZ7YIZ7PAKLQMKPCTGWU3LOMANMCT7V6I3AAK4USTEEM","GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD","GA6D2S6XDBT7WZIZNDGUBLXUGDAGLZGZ2SYT2JLXD4BB2W76XS66FZ2S","GAENIE5LBJIXLMJIAJ7225IUPA6CX7EGHUXRX5FLCZFFAQSG2ZUYSWFK","GANOI26P6VAUL4NFVA4FAIOIBOR46NORONBIWUPRIGAMP7T5W5MOY4O6","GAX3BRBNB5WTJ2GNEFFH7A4CZKT2FORYABDDBZR5FIIT3P7FLS2EFOZZ","GAYOCVRRNXGQWREOZBDP4UEW475NKZKLA4EIEIBKBSJN2PQQWUQ5KGUH","GB6NVEN5HSUBKMYCE5ZOWSK5K23TBWRUQLZY3KNMXUZ3AQ2ESC4MY4AQ","GBEZOC5U4TVH7ZY5N3FLYHTCZSI6VFGTULG7PBITLF5ZEBPJXFT46YZM","GBVVWWN4YP76FKGO7RB42FSZDYD2PBXY2PJY3F6JJWLYU74TKUG775UP","GCO4EFT6KUOQKVZO2O4GR5CJKMARBORXRE7KAKH36ZFAX662ZHINQ6UA","GDKIJJIKXLOM2NRMPNQZUUYK24ZPVFC6426GZAEP3KUK6KEJLACCWNMX","GDTNE54IWDB3UQLMIUSBKIDTMUW7FNKBU4VB2GVW4OL65BZN7W5VRNVY","GDUY7J7A33TQWOSOQGDO776GGLM3UQERL4J3SPT56F6YS4ID7MLDERI4","GDWNY2POLGK65VVKIH5KQSH7VWLKRTQ5M6ADLJAYC2UEHEBEARCZJWWI","GA5Z7QOQFSNIFFRZ3CDHLOWRPBWHPX5EGCTKT5KXU2CGJD7EIK2ZMALP","GAMA33LC7FK5RF4XE5HOVX456GX4VHDZUCJ7APY4TZ4IHG65ZWVXD333","GAYYPNEDENPNDNVPQD7U54JXMZZYTZAHWJLRRWBLP5PU6PBRSLH7LKNA","GBNWX7R4WVOWEYVKWN7KJ773X6C7OKNIGMVVDQI4B7XXMR6Y4OCUTBX2","GCAIDZBFE3WEIZSXQONQKUUTG6VLVKG2BBJYGWKEHQ2FZZ76VR326WYW","GCE3XS3D2F2W5LQWZHLG25ANAFIQOVMORH46JHVXOMW3FN27IPVJEGGG","GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5","GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW","GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M","GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG","GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK","GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI","GCZYLNGU4CA5NAWBAVTHMZH4JXWKP2OUJ6OK3I7XXZCNA5622WUJVLTG","GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N","GCTXRQIYWEDP6G7OXZI6IXUSIXHHSN5NKYRB3NI5J4Z7G5JMIBHLLBTC","GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S","GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C","GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3","GDSVWEA7XV6M5XNLODVTPCGMAJTNBLZBXOFNQD3BNPNYALEYBNT6CE2V","GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON","GAKRDXBHA2TTOYJZQIAQ7ZDS555P24RAYRUUZWU3KHSLIOZMVV4IITXT","GAW4E6NGM4NPNX2LO2BKDPCCTUX3FJLKWHPU4VQPGBIBQGD6JTVF5C7C","GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN","GBOFQCVZF2DSFLJPJMKH7CIECCN7TYVAT2CSD73IVEBJJQU2VW6JNFHT","GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM","GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5","GA3FUYFOPWZ25YXTCA73RK2UGONHCO27OHQRSGV3VCE67UEPEFEDCOPA","GDSRCV5VTM3U7Y3L6DFRP3PEGBNQMGOWSRTGSBWX6Z3H6C7JHRI4XFJP","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","awrap","async","iter","reverse","pop","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","opts","precision","str","firstNonZero","search","pointIndex","Math","round","precisionAuto","toFixed","action","initCosmicLink","checkLock","splice","lock","keypairs_or_preimage","send","_query","_tdesc","locker","_json","_transaction","_xdr","_sep7","_htmlDescription","makeHtmlDescription","_htmlLink","makeHtmlLink","htmlDescription","formatsFields","dispatch","_transactionNode","_signersNode","htmlLink","href","axios","applyLock","_applyLock","updateSignersNode","sendToHorizon","_sendToHorizon","submitTransaction","sendToStellarGuard","post","data","_args","allFine","keypairsOrPreimage","_short2","_short3","_args2","signHashX","_args3","STELLARGUARD_PUBKEY","encodeURI","formats","guessType","parseFmt","setTdesc","sep7ToXdr","xdrUri","sep7Request","isIgnoredSep7Field","css","linkNode","rel","onload","onerror","js","scriptNode","src"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory();\n\telse\n\t\troot[\"cosmicLib\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","\"use_strict\";\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\n\nvar specs = exports;\n/**\n * Transaction optional fields.\n */\n\nspecs.transactionOptionalFields = [\"network\", \"horizon\", \"callback\", \"memo\", \"source\", \"sequence\", \"minTime\", \"maxTime\", \"fee\"];\n/**\n * Transaction field meaning.\n */\n\nspecs.fieldDesc = {\n  network: \"Network\",\n  horizon: \"Horizon\",\n  callback: \"Callback\",\n  memo: \"Memo\",\n  source: \"Source\",\n  sequence: \"Sequence\",\n  minTime: \"Valid after\",\n  maxTime: \"Valid until\",\n  fee: \"Fees\"\n  /**\n   * @param {string} field\n   * @return {boolean}\n   */\n\n};\n\nspecs.isTransactionField = function (field) {\n  return specs.transactionOptionalFields.find(function (name) {\n    return name === field;\n  });\n};\n/**\n * Operation mandatory fields.\n */\n\n\nspecs.operationMandatoryFields = {\n  accountMerge: [\"destination\"],\n  allowTrust: [\"authorize\", \"assetCode\", \"trustor\"],\n  bumpSequence: [\"bumpTo\"],\n  changeTrust: [\"asset\"],\n  createAccount: [\"destination\", \"startingBalance\"],\n  createPassiveOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  createPassiveSellOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  inflation: [],\n  manageData: [\"name\", \"value\"],\n  manageOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  manageBuyOffer: [\"selling\", \"buying\", \"buyAmount\", \"price\"],\n  manageSellOffer: [\"selling\", \"buying\", \"amount\", \"price\"],\n  pathPayment: [\"sendAsset\", \"sendMax\", \"destination\", \"destAsset\", \"destAmount\"],\n  payment: [\"asset\", \"destination\", \"amount\"],\n  setOptions: []\n  /**\n   * Operation optionnal fields.\n   */\n\n};\nspecs.operationOptionalFields = {\n  accountMerge: [\"source\"],\n  allowTrust: [\"source\"],\n  bumpSequence: [\"source\"],\n  changeTrust: [\"limit\", \"source\"],\n  createAccount: [\"source\"],\n  createPassiveOffer: [\"source\"],\n  createPassiveSellOffer: [\"source\"],\n  inflation: [\"source\"],\n  manageData: [\"source\"],\n  manageOffer: [\"offerId\", \"source\"],\n  manageBuyOffer: [\"offerId\", \"source\"],\n  manageSellOffer: [\"offerId\", \"source\"],\n  pathPayment: [\"path\", \"source\"],\n  payment: [\"source\"],\n  setOptions: [\"inflationDest\", \"clearFlags\", \"setFlags\", \"masterWeight\", \"lowThreshold\", \"medThreshold\", \"highThreshold\", \"signer\", \"homeDomain\", \"source\"]\n  /**\n   * Operations fields\n   */\n\n};\nspecs.operationFields = {};\n\nfor (var field in specs.operationMandatoryFields) {\n  specs.operationFields[field] = specs.operationMandatoryFields[field].concat(specs.operationOptionalFields[field]);\n}\n/**\n * @param {string} type Operation type\n * @param {string} field\n * @return {boolean}\n */\n\n\nspecs.isOperationField = function (operation, field) {\n  return specs.operationFields[operation].find(function (name) {\n    return name === field;\n  });\n};\n/**\n * Field types.\n */\n\n\nspecs.fieldType = {\n  amount: \"amount\",\n  asset: \"asset\",\n  assetCode: \"string\",\n  assetIssuer: \"address\",\n  authorize: \"boolean\",\n  bumpTo: \"sequence\",\n  buyAmount: \"amount\",\n  buying: \"asset\",\n  callback: \"url\",\n  clearFlags: \"flags\",\n  destAsset: \"asset\",\n  destAmount: \"amount\",\n  destination: \"address\",\n  fee: \"amount\",\n  highThreshold: \"threshold\",\n  homeDomain: \"string\",\n  horizon: \"url\",\n  inflationDest: \"address\",\n  limit: \"amount\",\n  lowThreshold: \"threshold\",\n  masterWeight: \"weight\",\n  maxTime: \"date\",\n  medThreshold: \"threshold\",\n  memo: \"memo\",\n  memoBinary: \"hash\",\n  memoHash: \"hash\",\n  memoId: \"id\",\n  memoReturn: \"hash\",\n  memoText: \"string\",\n  memoType: \"string\",\n  minTime: \"date\",\n  network: \"network\",\n  offerId: \"string\",\n  price: \"price\",\n  name: \"string\",\n  path: \"assetsArray\",\n  selling: \"asset\",\n  sendAsset: \"asset\",\n  sendMax: \"amount\",\n  sequence: \"sequence\",\n  setFlags: \"flags\",\n  signer: \"signer\",\n  signerHash: \"hash\",\n  signerKey: \"address\",\n  signerType: \"string\",\n  signerTx: \"id\",\n  signerWeight: \"weight\",\n  source: \"address\",\n  startingBalance: \"amount\",\n  trustor: \"address\",\n  value: \"buffer\"\n  /**\n   * An array of each valid type for fields.\n   */\n\n};\nspecs.types = [];\n\nvar _loop = function _loop(_field) {\n  var type = specs.fieldType[_field];\n  specs.types.find(function (entry) {\n    return entry === type;\n  }) || specs.types.push(type);\n};\n\nfor (var _field in specs.fieldType) {\n  _loop(_field);\n}\n/**\n * A neutral account ID meant to be replaced before signing & sending the\n * transaction.\n * @static\n */\n\n\nspecs.neutralAccountId = \"GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF\";\n/**\n * The mandatory fields for each SEP-0007 operation.\n */\n\nspecs.sep7MandatoryFields = {\n  tx: [\"xdr\"],\n  pay: [\"destination\"]\n  /**\n   * The optional fields for each SEP-0007 operation.\n   */\n\n};\nspecs.sep7OptionalFields = {\n  tx: [\"callback\", \"msg\", \"network_passphrase\", \"origin_domain\", \"pubkey\", \"signature\"],\n  pay: [\"amount\", \"asset_code\", \"asset_issuer\", \"callback\", \"memo\", \"memo_type\", \"msg\", \"network_passphrase\", \"origin_domain\", \"signature\"]\n};\nspecs.sep7IgnoredFields = [\"msg\", \"pubkey\", \"origin_domain\", \"signature\"];","\"use strict\";\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\n\nvar misc = exports;\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\n\nmisc.delay = function (thunk) {\n  var firstCall = true;\n  var memoized;\n  return function () {\n    if (firstCall) {\n      firstCall = false;\n      memoized = new Promise(function (resolve) {\n        return resolve(thunk());\n      });\n    }\n\n    return memoized;\n  };\n};\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\n\n\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, x);\n  });\n};\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\n\n\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1);\n};\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\n\n\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + \"...\" + string.substr(-5);\n  } else {\n    return string;\n  }\n};\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\n\n\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, {\n    value: value,\n    enumerable: false,\n    configurable: true\n  });\n};\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\n\n\nmisc.deprecated = function (date, before, after) {\n  console.error(\"Warning: \".concat(before, \" is deprecated and will be removed after \").concat(date, \". Please use \").concat(after, \" instead.\"));\n};\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\n\n\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) misc.setHiddenProperty(obj, extraField, {});\n  return obj[extraField];\n};\n\nvar extraField = \"@cosmic-plus\";\n/**\n * Test if **string** is made of printable UTF8 characters. This is a simplified\n * test that is not robust.\n *\n * @param {String}\n * @return {Boolean}\n */\n\nmisc.isUtf8 = function (string) {\n  // eslint-disable-next-line no-control-regex\n  return !string.match(/[\\0-\\x1F\\x7F-\\x9F\\xAD\\uD7FC-\\uF8FF]/);\n};\n/**\n * Test if **string** is a base64 string.\n *\n * @param  {String} string\n * @return {Boolean}\n */\n\n\nmisc.isBase64 = function (string) {\n  return !!string.match(/^[0-9a-zA-Z+/]*=*$/);\n};\n/**\n * Return the YYYY-MM-DD date for **time** or for today.\n *\n * @param {String|Number} [time] A valid date/timestamp value\n * @return {String} YYYY-MM-DD date\n */\n\n\nmisc.day = function (time) {\n  var date = time ? new Date(time) : new Date();\n  return date.toISOString().replace(/T.*/, \"\");\n};\n/**\n * Deprecated functions\n */\n\n\nmisc.copy = function () {\n  return console.error(\"misc.copy() have been moved to html.copyString()\");\n};","\"use_strict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  if (window.StellarSdk === undefined) console.error(\"Missing dependency: StellarSdk\");else module.exports = window.StellarSdk;\n} else {\n  module.exports = env.nodeRequire(\"stellar-sdk\");\n}","\"use_strict\";\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\n\nvar env = exports;\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\n\nenv.isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\n\nenv.isNode = typeof process !== \"undefined\" && process.versions && process.versions.node;\n/**\n * `true` if current page is embedded.\n */\n\nenv.isEmbedded = env.isBrowser && window.self !== window.top;\n/**\n * The window object, or `undefined`.\n */\n\nenv.window = env.isBrowser && window;\n/**\n * The global objet, or `undefined`.\n */\n\nenv.global = env.isNode && global;\n/**\n * A require that only have effect in Node.js and that is invisible for package\n * bundlers.\n */\n\nenv.nodeRequire = function () {};\n\nif (env.isNode) {\n  var stealth_require = eval(\"require\");\n\n  env.nodeRequire = function (module) {\n    return stealth_require(module);\n  };\n}","\"use strict\";\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar resolve = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Returns the\n * [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * for **horizon**, or for **network**, or for the current network.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @param {string} [horizon] A horizon URL\n * @returns {Server} A StellarSdk Server object\n */\n\n\nresolve.server = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var horizon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : conf.horizon;\n  if (!horizon) horizon = resolve.horizon(conf, network);\n  if (!horizon) throw new Error(\"No horizon node defined for selected network.\");\n  if (!conf.current.server[horizon]) conf.current.server[horizon] = new StellarSdk.Server(horizon);\n  return conf.current.server[horizon];\n};\n/**\n * Switch to the current network, or to **network** if provided.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @returns {Server} A StellarSdk Server object\n */\n\n\nresolve.useNetwork = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n  var passphrase = resolve.networkPassphrase(conf, network);\n  var currentPassphrase = resolve.networkPassphrase();\n\n  if (passphrase !== currentPassphrase) {\n    // eslint-disable-next-line no-console\n    console.log(\"Switch to network: \" + network);\n    StellarSdk.Network.use(new StellarSdk.Network(passphrase));\n  }\n};\n/**\n * Returns the curent Horizon node URL, or the Horizon node URL for **network**\n * if provided.\n *\n * @param {string} [network] A network name or passphrase.\n */\n\n\nresolve.horizon = function (conf) {\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n\n  if (conf.horizon) {\n    return conf.horizon;\n  } else {\n    var passphrase = resolve.networkPassphrase(conf, network);\n\n    if (conf.current && conf.current.horizon[passphrase]) {\n      return conf.current.horizon[passphrase];\n    }\n  }\n};\n/**\n * Returns the current network passphrase, or the passphrase for **network** is\n * provided.\n */\n\n\nresolve.networkPassphrase = function () {\n  var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : conf.network;\n\n  if (network === undefined) {\n    var currentNetwork = StellarSdk.Network.current();\n    if (currentNetwork) return currentNetwork.networkPassphrase();\n  } else {\n    return conf.current.passphrase[network] || network;\n  }\n};\n/**\n * Returns the network name for **network passphrase**, or `undefined`.\n *\n * @param {string} networkPassphrase\n * @return {string}\n */\n\n\nresolve.networkName = function () {\n  var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var networkPassphrase = arguments.length > 1 ? arguments[1] : undefined;\n  var index = Object.values(conf.current.passphrase).indexOf(networkPassphrase);\n  if (index === -1) return networkPassphrase;else return Object.keys(conf.current.passphrase)[index];\n};\n/**\n * Returns the federation server\n * [Account]{@link https://stellar.github.io/js-stellar-sdk/Account.html}\n * for **address**.\n *\n * @async\n * @param {string} address A Stellar public key or a federated address\n * @return {} Resolve to federation server response\n */\n\n\nresolve.address = function (conf, address) {\n  var cache = conf.cache;\n  if (cache && cache.destination[address]) return cache.destination[address];\n  var promise = addressResolver(conf, address);\n  if (cache) cache.destination[address] = promise;\n  return promise;\n};\n\nfunction addressResolver(_x, _x2) {\n  return _addressResolver.apply(this, arguments);\n}\n/**\n * Returns the\n * [AccountResponse]{@link https://stellar.github.io/js-stellar-sdk/AccountResponse.html}\n * object for **address**.\n *\n * @param {string} address A public key or a federated address\n * @return {Object} The AccountResponse\n */\n\n\nfunction _addressResolver() {\n  _addressResolver = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf, address) {\n    var account, accountId;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return StellarSdk.FederationServer.resolve(address);\n\n          case 3:\n            account = _context5.sent;\n            accountId = account.account_id;\n\n            if (accountId) {\n              _context5.next = 7;\n              break;\n            }\n\n            throw new Error(\"Unknow address\");\n\n          case 7:\n            if (!account.memo_type) delete account.memo;\n            if (address !== accountId) account.address = address;\n\n            if (conf.aliases && conf.aliases[accountId]) {\n              account.alias = conf.aliases[accountId];\n            }\n\n            return _context5.abrupt(\"return\", account);\n\n          case 13:\n            _context5.prev = 13;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error(_context5.t0);\n            status.error(conf, \"Can't resolve: \" + misc.shorter(address));\n            status.fail(conf, \"Unresolved address\", \"throw\");\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 13]]);\n  }));\n  return _addressResolver.apply(this, arguments);\n}\n\nresolve.account =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, address, quietFlag) {\n    var account, accountId, cache, promise;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return resolve.address(conf, address);\n\n          case 2:\n            account = _context.sent;\n            accountId = account.account_id;\n            cache = conf.cache;\n\n            if (!(cache && cache.account[accountId])) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", cache.account[accountId]);\n\n          case 7:\n            promise = accountResolver(conf, accountId, quietFlag);\n            if (cache) cache.account[accountId] = promise;\n            return _context.abrupt(\"return\", promise);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction accountResolver(_x6, _x7, _x8) {\n  return _accountResolver.apply(this, arguments);\n}\n/**\n * Returns `true` if **address** account is empty, `false` otherwise.\n *\n * @async\n * @param {string} address Public key or federated address\n * @return {boolean}\n */\n\n\nfunction _accountResolver() {\n  _accountResolver = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf, accountId, quietFlag) {\n    var server, accountResponse;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            server = resolve.server(conf);\n            _context6.prev = 1;\n            _context6.next = 4;\n            return server.loadAccount(accountId);\n\n          case 4:\n            accountResponse = _context6.sent;\n            return _context6.abrupt(\"return\", accountResponse);\n\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](1);\n\n            if (!quietFlag) {\n              _context6.next = 14;\n              break;\n            }\n\n            throw _context6.t0;\n\n          case 14:\n            if (_context6.t0.response) {\n              status.error(conf, \"Empty account: \" + misc.shorter(accountId), \"throw\");\n            } else {\n              status.error(conf, \"Invalid horizon node: \" + resolve.horizon(conf), \"throw\");\n            }\n\n          case 15:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[1, 8]]);\n  }));\n  return _accountResolver.apply(this, arguments);\n}\n\nresolve.isAccountEmpty = function (conf, address) {\n  return resolve.account(conf, address, true).then(function () {\n    return false;\n  })[\"catch\"](function () {\n    return true;\n  });\n};\n/**\n * Returns the account object for transaction source **address`** with sequence\n * set at **sequence** if provided. If **address** is not provided, returns the\n * neutral account object instead (as in SEP-0007 specifications).\n *\n * @param {string} [address]\n * @param {string|numbre} [sequence]\n * @return {AccountResponse}\n */\n\n\nresolve.txSourceAccount =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, address, sequence) {\n    var destination, account, baseAccount;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (address) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", makeAccountResponse(conf, specs.neutralAccountId, \"-1\"));\n\n          case 4:\n            _context2.next = 6;\n            return resolve.address(conf, address);\n\n          case 6:\n            destination = _context2.sent;\n            if (destination.memo) status.error(conf, \"Invalid transaction source address (requires a memo)\", \"throw\");\n            _context2.next = 10;\n            return resolve.account(conf, destination.account_id);\n\n          case 10:\n            account = _context2.sent;\n\n            if (sequence) {\n              baseAccount = new StellarSdk.Account(account.id, sequence);\n              baseAccount.sequence = baseAccount.sequence.sub(1);\n              account._baseAccount = baseAccount;\n            }\n\n            return _context2.abrupt(\"return\", account);\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x9, _x10, _x11) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Creates an AccountResponse object with signers set for an empty account.\n *\n * @param  {string} publicKey\n * @param  {string} sequence [description]\n * @return {AccountResponse}\n */\n\n\nfunction makeAccountResponse(conf, publicKey, sequence) {\n  var account = new StellarSdk.Account(publicKey, sequence);\n  if (conf.cache) conf.cache.account[publicKey] = account;\n  account.id = publicKey;\n  account.signers = [{\n    public_key: publicKey,\n    weight: 1,\n    key: publicKey,\n    type: \"ed25519_public_key\"\n  }];\n  return account;\n}\n/**\n * Returns the array of all source accounts ID involved in **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\n\n\nresolve.txSources = function (conf, transaction) {\n  if (!transaction.source) throw new Error(\"No source for transaction\");\n  var extra = resolve.extra(conf, transaction);\n  if (extra.cache.txSources) return extra.cache.txSources;\n  var array = extra.cache.txSources = [transaction.source];\n\n  var _loop = function _loop(index) {\n    var source = transaction.operations[index].source;\n    if (source && !array.find(function (a) {\n      return a === source;\n    })) array.push(source);\n  };\n\n  for (var index in transaction.operations) {\n    _loop(index);\n  }\n\n  return array;\n};\n/**\n * Returns an object such as:\n *\n * ```js\n * {\n *    $accountId: $accountSigners\n *    ...\n * }\n * ```\n *\n * @param {Transaction} transaction\n * @return {Object}\n */\n\n\nresolve.txSigners =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, transaction) {\n    var extra, txSources, signers, index, source, account;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            extra = resolve.extra(conf, transaction);\n\n            if (!extra.cache.txSigners) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", extra.cache.txSigners);\n\n          case 3:\n            txSources = resolve.txSources(extra, transaction);\n            signers = extra.cache.txSigners = {};\n            _context3.t0 = _regeneratorRuntime.keys(txSources);\n\n          case 6:\n            if ((_context3.t1 = _context3.t0()).done) {\n              _context3.next = 15;\n              break;\n            }\n\n            index = _context3.t1.value;\n            source = txSources[index];\n            _context3.next = 11;\n            return resolveTxSource(extra, source);\n\n          case 11:\n            account = _context3.sent;\n\n            if (!signers[account.id]) {\n              signers[account.id] = account.signers.filter(function (signer) {\n                return signer.type !== \"preauthTx\";\n              });\n            }\n\n            _context3.next = 6;\n            break;\n\n          case 15:\n            return _context3.abrupt(\"return\", signers);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction resolveTxSource(_x14, _x15) {\n  return _resolveTxSource.apply(this, arguments);\n}\n/**\n * Returns an Array containing the keys for all legit signers of **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\n\n\nfunction _resolveTxSource() {\n  _resolveTxSource = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, address) {\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return resolve.account(conf, address, \"quiet\");\n\n          case 3:\n            return _context7.abrupt(\"return\", _context7.sent);\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](0);\n            return _context7.abrupt(\"return\", makeAccountResponse(conf, address, \"0\"));\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 6]]);\n  }));\n  return _resolveTxSource.apply(this, arguments);\n}\n\nresolve.txSignersList =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(conf, transaction) {\n    var extra, txSigners;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            extra = resolve.extra(conf, transaction);\n\n            if (extra.cache.txSignersList) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.next = 4;\n            return resolve.txSigners(extra, transaction);\n\n          case 4:\n            txSigners = _context4.sent;\n            extra.cache.txSignersList = signersTableToSignersList(txSigners);\n\n          case 6:\n            return _context4.abrupt(\"return\", extra.cache.txSignersList);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x16, _x17) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nfunction signersTableToSignersList(signersTable) {\n  var array = [];\n\n  for (var accountId in signersTable) {\n    signersTable[accountId].forEach(function (signer) {\n      if (!array.find(function (key) {\n        return key === signer.key;\n      })) array.push(signer.key);\n    });\n  }\n\n  return array;\n}\n/**\n * Add an extra field to **object** that embed cache and local configuration.\n *\n * @private\n */\n\n\nresolve.extra = function (conf, object) {\n  if (!object._cosmicplus) {\n    misc.setHiddenProperty(object, \"_cosmicplus\", {});\n    if (conf.cache) object._cosmicplus.cache = conf.cache;else object._cosmicplus.cache = {\n      destination: {},\n      account: {}\n    };\n    object._cosmicplus.network = conf.network;\n    object._cosmicplus.current = conf.current;\n  }\n\n  return object._cosmicplus;\n};","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","\"use strict\";\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * Thoses methods won't have effect unless status reporting is enabled on `conf`\n * object by using `status.init` (wich is done automatically on CosmicLink\n * objects).\n *\n * @private\n * @exports status\n */\n\nvar status = exports;\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar html = env.isBrowser && require(\"@cosmic-plus/domutils/es5/html\");\n/**\n * Initialize `conf.status` & `conf.errors`.\n */\n\n\nstatus.init = function (conf) {\n  conf.status = null;\n  conf.errors = false;\n};\n/**\n * Set `conf` status as `status` and update statusNode. Error status should be\n * recorded using the `status.fail` function bellow. Once a status is set it\n * won't be mutated.\n *\n * @param {string} status\n */\n\n\nstatus.update = function (conf, status) {\n  if (conf.status || conf.status === undefined) return; // eslint-disable-next-line no-console\n\n  console.log(\"Set status: \" + status);\n  conf.status = status;\n\n  if (conf._statusNode) {\n    var title = html.grab(\".cosmiclib_status\", conf._statusNode);\n    title.textContent = status;\n  }\n};\n/**\n * Set `conf` status as error status `status` and update statusNode. This\n * implies that the cosmic link or the underlying transaction is invalid. Then,\n * call `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\n\n\nstatus.fail = function (conf, errorStatus, continuation) {\n  status.update(conf, errorStatus);\n  if (conf._statusNode) html.addClass(conf._statusNode, \"cosmiclib_error\");\n  errorContinuation(errorStatus, continuation);\n};\n/**\n * Append `error` to `conf.errors` and to the HTML display. Then, call\n * `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\n\n\nstatus.error = function (conf, error, continuation) {\n  // eslint-disable-next-line no-console\n  console.log(error);\n\n  if (conf.errors !== undefined) {\n    if (!conf.errors) conf.errors = [];\n    conf.errors.push(error);\n\n    if (conf._statusNode) {\n      var errorsNode = html.grab(\".cosmiclib_errors\", conf._statusNode);\n      var lineNode = html.create(\"li\", null, error);\n      html.append(errorsNode, lineNode);\n    }\n  }\n\n  errorContinuation(error, continuation);\n};\n/**\n * Create & return an HTML element that displays `conf` status and eventual\n * errors.\n *\n * @return {htmlElement}\n */\n\n\nstatus.makeHtmlNode = function (conf) {\n  var statusNode = html.create(\"div\", \".cosmiclib_statusNode\");\n  var statusLine = html.create(\"span\", \".cosmiclib_status\");\n  html.append(statusNode, statusLine);\n  if (conf.status) statusLine.textContent = conf.status;\n  var errorsNode = html.create(\"ul\", \".cosmiclib_errors\");\n  html.append(statusNode, errorsNode);\n\n  if (conf.errors) {\n    conf.errors.forEach(function (error) {\n      var errorLine = html.create(\"li\", null, error);\n      html.append(errorsNode, errorLine);\n    });\n  }\n\n  return statusNode;\n};\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with `error` as message.\n * If `continuation` is undefined, do nothing.\n */\n\n\nfunction errorContinuation(error, continuation) {\n  if (continuation) {\n    if (continuation === \"throw\") throw new Error(error);else continuation(error);\n  }\n}","\"use_strict\";\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\n\nvar html = exports;\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\"); /// Prevent node failure when accidentaly loading this file.\n\n\nvar document = env.window ? env.window.document : undefined;\n\nif (env.isNode) {\n  console.error(\"@cosmic-plus/domutils is a browser-only module\");\n}\n/**\n * Add `string` as additional CSS definitions for the current document.\n *\n * @param {string} styles CSS definitions\n */\n\n\nhtml.addStyles = function (styles) {\n  var styleNode = html.create(\"style\", {\n    type: \"text/css\"\n  }, styles);\n  html.append(document.head, styleNode);\n};\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\n\n\nhtml.append = function (element) {\n  for (var _len = arguments.length, childs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    childs[_key - 1] = arguments[_key];\n  }\n\n  childs.forEach(function (child) {\n    return element.appendChild(html.convert(child));\n  });\n};\n/**\n * Add `className` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} className\n * */\n\n\nhtml.addClass = function (element, className) {\n  var classes = element.className.split(\" \");\n  if (classes.indexOf(className) === -1) element.className += \" \".concat(className);\n}; // Deprecated since 2019-01-16\n\n\nhtml.appendClass = function (element, className) {\n  misc.deprecated(\"2019-07-16\", \"html.appendClass()\", \"html.addClass()\");\n  return html.addClass(element, className);\n};\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} elements\n * */\n\n\nhtml.clear = function () {\n  for (var _len2 = arguments.length, elements = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    elements[_key2] = arguments[_key2];\n  }\n\n  elements.forEach(function (element) {\n    return element.innerHTML = \"\";\n  });\n};\n/**\n * If **object** is not an *HTMLElement*, convert it to a text DOM node; else\n * return **object**.\n *\n * @param  {Object} object\n * @return {HTMLELement}\n */\n\n\nhtml.convert = function (object) {\n  // https://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object/36894871#36894871\n  if (object instanceof Element || object instanceof HTMLDocument || object instanceof Text) return object;else if (object == null) return document.createTextNode(\"\");else return object.domNode || document.createTextNode(object);\n};\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\n\n\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return;\n\n  if (element.select) {\n    element.select();\n  } else if (window.getSelection) {\n    var range = document.createRange();\n    range.selectNode(element);\n    window.getSelection().removeAllRanges();\n    window.getSelection().addRange(range);\n  } else {\n    return;\n  }\n\n  return document.execCommand(\"copy\");\n};\n/**\n * Copy `string` into user clipboard.\n *\n * @param {string} string\n */\n\n\nhtml.copyString = function (string) {\n  var textBox = html.create(\"textarea\", {}, string);\n  html.append(document.body, textBox);\n  html.copyContent(textBox);\n  html.destroy(textBox);\n};\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\n\n\nhtml.create = function (name, attributes) {\n  var element = document.createElement(name);\n\n  if (typeof attributes === \"string\") {\n    switch (attributes.substr(0, 1)) {\n      case \"#\":\n        element.id = attributes.substr(1);\n        break;\n\n      case \".\":\n        element.className = attributes.substr(1);\n        break;\n\n      default:\n        throw new Error(\"Unhandled attribute\");\n    }\n  } else {\n    Object.assign(element, attributes);\n  }\n\n  for (var _len3 = arguments.length, childs = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    childs[_key3 - 2] = arguments[_key3];\n  }\n\n  if (childs.length > 0) html.append.apply(html, [element].concat(childs));\n  return element;\n};\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\n\n\nhtml.destroy = function (element) {\n  try {\n    if (element.parentNode) element.parentNode.removeChild(element);\n    element.innerHTML = \"\";\n  } catch (error) {\n    console.error(error);\n  }\n};\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\n\n\nhtml.grab = function (pattern) {\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  return parent.querySelector(pattern);\n};\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\n\n\nhtml.hide = function () {\n  for (var _len4 = arguments.length, elements = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    elements[_key4] = arguments[_key4];\n  }\n\n  elements.forEach(function (element) {\n    return element.hidden = true;\n  });\n};\n/**\n * Replace `element1` by `element2`.\n *\n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\n\n\nhtml.replace = function (element1, element2) {\n  var node = html.convert(element2);\n  element1.parentNode.replaceChild(node, element1);\n  return node;\n};\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\n\n\nhtml.rewrite = function (element) {\n  html.clear(element);\n\n  for (var _len5 = arguments.length, childs = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    childs[_key5 - 1] = arguments[_key5];\n  }\n\n  html.append.apply(html, [element].concat(childs));\n};\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\n\n\nhtml.show = function () {\n  for (var _len6 = arguments.length, elements = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    elements[_key6] = arguments[_key6];\n  }\n\n  elements.forEach(function (element) {\n    return element.hidden = false;\n  });\n};","\"use strict\";\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `conf` object\n * and HTML nodes are updated accordingly.\n *\n * @private\n * @exports decode\n */\n\nvar decode = exports;\n\nvar check = require(\"./check\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n\ndecode.query = function (conf) {\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"?\";\n  if (query.substr(0, 1) !== \"?\") status.fail(conf, \"Invalid query\", \"throw\");\n  var operations = [];\n  var tdesc = {};\n  var command = query.substr(1).replace(/&.*/, \"\");\n  var params = query.substr(command.length + 2).split(\"&\");\n  if (command && command !== \"transaction\") operations.push({\n    type: command\n  });\n\n  for (var index in params) {\n    var param = params[index].split(\"=\", 2);\n    var field = param[0];\n    if (!field) continue;\n\n    if (field === \"operation\") {\n      operations.push({\n        type: param[1]\n      });\n      command = \"operation\";\n      continue;\n    }\n\n    var value = decode.field(conf, field, param[1]); /// Multi-operation link.\n\n    if (command === \"transaction\") {\n      tdesc[field] = value;\n    } else if (command === \"operation\") {\n      operations[operations.length - 1][field] = value; /// One-operation link.\n    } else {\n      if (specs.isTransactionField(field)) {\n        tdesc[field] = value;\n      } else {\n        operations[0][field] = value;\n      }\n    }\n  }\n\n  tdesc.operations = operations;\n  normalize.tdesc(conf, tdesc);\n  tdesc.operations.forEach(function (odesc) {\n    return normalize.odesc(conf, odesc);\n  });\n  check.tdesc(conf, tdesc);\n  return tdesc;\n};\n/******************************************************************************/\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\n\n\ndecode.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  return type ? decode.type(conf, type, value) : value;\n};\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {string} type\n * @param {string} value\n */\n\n\ndecode.type = function (conf, type, value) {\n  if (value) {\n    value = decodeURIComponent(value);\n    return process[type] ? process[type](conf, value) : value;\n  } else {\n    return \"\";\n  }\n};\n/******************************************************************************/\n\n\nvar process = {};\n\nprocess.asset = function (conf, asset) {\n  var assetLower = asset.toLowerCase();\n\n  if (assetLower === \"xlm\" || assetLower === \"native\") {\n    return {\n      code: \"XLM\"\n    };\n  } else {\n    var temp = asset.split(\":\");\n    var object = {\n      code: temp[0],\n      issuer: temp[1]\n    };\n    return object;\n  }\n};\n\nprocess.assetsArray = function (conf, assetsList) {\n  var strArray = assetsList.split(\",\");\n  return strArray.map(function (entry) {\n    return decode.asset(conf, entry);\n  });\n};\n\nprocess[\"boolean\"] = function (conf, string) {\n  switch (string) {\n    case \"true\":\n      return true;\n\n    case \"false\":\n      return false;\n  }\n};\n\nprocess.buffer = function (conf, string) {\n  var matched = string.match(/(^[^:]*):/);\n  var type = matched && matched[1];\n\n  switch (type) {\n    case \"base64\":\n      return {\n        type: type,\n        value: string.substr(type.length + 1)\n      };\n\n    case \"text\":\n      string = string.substr(type.length + 1);\n    // Fallthrough\n\n    default:\n      return {\n        type: \"text\",\n        value: process.string(conf, string)\n      };\n  }\n};\n\nprocess.date = function (conf, string) {\n  /// now + {minutes} syntactic sugar\n  if (string.match(/^\\+[0-9]+$/)) return string; /// Use UTC timezone by default.\n\n  if (string.match(/T[^+]*[0-9]$/)) string += \"Z\";\n  return new Date(string).toISOString();\n};\n\nprocess.memo = function (conf, string) {\n  var matched = string.match(/(^[^:]*):/);\n  var type = matched && matched[1];\n\n  switch (type) {\n    case \"base64\":\n    case \"id\":\n    case \"hash\":\n    case \"return\":\n      return {\n        type: type,\n        value: string.substr(type.length + 1)\n      };\n\n    case \"text\":\n      string = string.substr(type.length + 1);\n    // Fallthrough\n\n    default:\n      return {\n        type: \"text\",\n        value: process.string(conf, string)\n      };\n  }\n};\n\nprocess.price = function (conf, price) {\n  var numerator = price.replace(/:.*/, \"\");\n  var denominator = price.replace(/^[^:]*:/, \"\");\n  if (numerator === denominator) return price;else return {\n    n: +numerator,\n    d: +denominator\n  };\n};\n\nprocess.signer = function (conf, signer) {\n  var temp = signer.split(\":\");\n  var object = {\n    weight: temp[0],\n    type: temp[1],\n    value: temp[2]\n  };\n  return object;\n};\n\nprocess.string = function (conf, string) {\n  return string.replace(/\\+/g, \" \");\n};\n\nprocess.network = process.string;\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\nspecs.types.forEach(function (type) {\n  exports[type] = function (conf, value) {\n    return decode.type(conf, type, value);\n  };\n});","\"use_strict\";\n/**\n * Library-wide configuration.\n *\n * @borrows module:aliases.all as aliases\n * @borrows module:aliases.set as addAliases\n * @borrows module:aliases.remove as removeAliases\n *\n * @borrows module:event.defaultClickHandlers as clickHandlers\n * @borrows module:event.setClickHandler as setClickHandler\n * @borrows module:event.clearClickHandler as clearClickHandler\n *\n * @exports config\n */\n\nvar config = exports;\n\nvar aliases = require(\"@cosmic-plus/base/es5/aliases\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar event = env.isBrowser && require(\"./event\");\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\n\n\nconfig.page = \"https://cosmic.link/\";\n/**\n * The default fallback network.\n * @default 'public'\n */\n\nconfig.network = \"public\";\n/**\n * The default fallback source address.\n * @default undefined\n */\n\nconfig.source = undefined;\n/**\n * Networks setup.\n *\n * @private\n */\n\nconfig.current = {\n  passphrase: {},\n  horizon: {},\n  server: {}\n  /**\n   * Set default **passphrase** and **horizon** URL for network **name**.\n   *\n   * Adding custom network this way will enable the use of their name in cosmic\n   * queries (as in `&network=name`). However, please remind that this feature\n   * will works only on your side and could break compatibility with other\n   * services.\n   *\n   * @example\n   * cosmicLib.config.setupNetwork('public', 'https://my-own-horizon-instance.example.org')\n   * cosmicLib.config.setupNetwork('custom', 'https://custom-horizon.example.org', 'My Custom Passphrase')\n   *\n   * @param {string} name Network name (like 'public', 'test')\n   * @param {string} horizon Horizon URL\n   * @param {string} [passphrase] Network passphrase\n   */\n\n};\n\nconfig.setupNetwork = function (name, horizon, passphrase) {\n  if (passphrase) config.current.passphrase[name] = passphrase;else passphrase = config.current.passphrase[name];\n  config.current.horizon[passphrase] = horizon;\n};\n\nconfig.setupNetwork(\"public\", \"https://horizon.stellar.org\", StellarSdk.Networks.PUBLIC);\nconfig.setupNetwork(\"test\", \"https://horizon-testnet.stellar.org\", StellarSdk.Networks.TESTNET);\nconfig.aliases = aliases.all;\n\nconfig.addAliases = function (definitions) {\n  return aliases.set(config, definitions);\n};\n\nconfig.removeAliases = function (array) {\n  return aliases.remove(config, array);\n};\n\nconfig.clickHandlers = event.defaultClickHandlers;\n\nconfig.setClickHandler = function (fieldType, callback) {\n  return event.setClickHandler(config, fieldType, callback);\n};\n\nconfig.clearClickHandler = function (fieldType) {\n  return event.clearClickHandler(config, fieldType);\n};","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","\"use strict\";\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @private\n * @exports format\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar format = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar nice = require(\"@cosmic-plus/jsutils/es5/nice\");\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar config = require(\"./config\");\n\nvar event = require(\"./event\");\n\nvar resolve = require(\"./resolve\");\n\nvar signersUtils = require(\"./signers-utils\");\n\nvar specs = require(\"./specs\");\n/**\n * Returns an HTML div describing `tdesc`.\n *\n * @param {Object} tdesc Transaction descriptor.\n * @return {HTMLElement} Transaction HTML description.\n */\n\n\nformat.tdesc = function (conf, tdesc) {\n  var trNode = html.create(\"div\", \".cosmiclib_transactionNode\");\n  if (!tdesc) return trNode;\n  var infoNode;\n\n  for (var index in specs.transactionOptionalFields) {\n    var entry = specs.transactionOptionalFields[index];\n    if (entry === \"horizon\" && resolve.horizon(config, conf.network)) continue;\n\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = html.create(\"ul\", \".cosmiclib_sideInfo\");\n      var lineNode = html.create(\"li\", {}, specs.fieldDesc[entry] + \": \", format.field(conf, entry, tdesc[entry]));\n      html.append(infoNode, lineNode);\n    }\n  }\n\n  if (infoNode) html.append(trNode, infoNode);\n\n  try {\n    for (var _index in tdesc.operations) {\n      var operation = tdesc.operations[_index];\n      var opNode = format.odesc(conf, operation);\n      opNode.index = _index;\n      html.append(trNode, opNode);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  if (!tdesc.operations.length) {\n    if (Object.keys(tdesc).length === 1) {\n      html.append(trNode, html.create(\"div\", null, \"No transaction\"));\n    } else {\n      html.append(trNode, html.create(\"div\", \".cosmiclib_operation\", \"No operation\"));\n    }\n  }\n\n  trNode.tdesc = tdesc;\n  return trNode;\n};\n/**\n * Returns an HTML div describing `odesc`.\n *\n * @param {Object} odesc Operation in cosmic link JSON format.\n * @return {HTMLElement} Operation HTML description.\n */\n\n\nformat.odesc = function (conf, odesc) {\n  var opNode = html.create(\"div\", \".cosmiclib_operation\");\n  opNode.odesc = odesc;\n  var retNode = opNode;\n\n  if (odesc.source) {\n    retNode = html.create(\"div\", \".cosmiclib_sourcedOperation\");\n    var sourceNode = html.create(\"div\", \".cosmiclib_sideInfo\", \"Source: \");\n    var addressNode = format.address(conf, odesc.source);\n    html.append(sourceNode, addressNode);\n    html.append(retNode, sourceNode, opNode);\n  }\n\n  var meaning = operationMeaning(odesc);\n\n  while (meaning) {\n    if (meaning.substr(0, 1) === \"{\") {\n      var query = meaning.substr(1).replace(/}.*/, \"\");\n      meaning = meaning.replace(/^[^}]*}/, \"\");\n\n      if (query === \"newline\") {\n        if (meaning === \"\") break;\n        html.append(opNode, html.create(\"br\"));\n      } else {\n        var fieldNode = format.field(conf, query, odesc[query]);\n        html.append(opNode, fieldNode);\n      }\n    } else {\n      var txt = meaning.replace(/{.*/, \"\");\n      meaning = meaning.replace(/^[^{]*/, \"\");\n      html.append(opNode, txt);\n    }\n  }\n\n  return retNode;\n};\n/**\n * Returns a string describing `odesc`.\n *\n * @private\n */\n\n\nfunction operationMeaning(odesc) {\n  var msg = \"\";\n\n  switch (odesc.type) {\n    case \"accountMerge\":\n      return \"Merge account inside {destination}\";\n\n    case \"allowTrust\":\n      if (odesc.authorize) {\n        return \"Allow usage of your asset {assetCode} to {trustor}\";\n      } else {\n        return \"Deny usage of your asset {assetCode} to {trustor}\";\n      }\n\n    case \"bumpSequence\":\n      return \"Set account sequence number to {bumpTo}\";\n\n    case \"changeTrust\":\n      if (odesc.limit === \"0\") {\n        return \"Refuse asset {asset}\";\n      } else if (odesc.limit) {\n        return \"Set holding limit as {limit} for asset {asset}\";\n      } else {\n        return \"Accept asset {asset}\";\n      }\n\n    case \"createAccount\":\n      return \"Create account {destination} and send {startingBalance} XLM to it\";\n\n    case \"createPassiveOffer\":\n    case \"createPassiveSellOffer\":\n      return \"Offer to passively sell {amount} {selling} for {price} {buying} / unit\";\n\n    case \"inflation\":\n      return \"Run inflation\";\n\n    case \"manageData\":\n      if (odesc.value) {\n        if (odesc.value.type === \"text\") {\n          return \"Set data entry '{name}' to: '{value}'\";\n        } else {\n          return \"Set data entry '{name}' to base64: '{value}'\";\n        }\n      } else {\n        return \"Delete data entry '{name}'\";\n      }\n\n    case \"manageOffer\":\n    case \"manageBuyOffer\":\n    case \"manageSellOffer\":\n      if (odesc.amount === \"0\" || odesc.buyAmount === \"0\") {\n        return \"Delete offer '{offerId}'\";\n      } else {\n        if (odesc.offerId) {\n          msg += \"Change offer '{offerId}' into:{newline}\";\n        }\n\n        if (odesc.type === \"manageBuyOffer\") {\n          msg += \"Offer to buy {buyAmount} {buying} for {price} {selling} / unit\";\n        } else {\n          msg += \"Offer to sell {amount} {selling} for {price} {buying} / unit\";\n        }\n\n        return msg;\n      }\n\n    case \"pathPayment\":\n      msg = \"Send {destAmount} {destAsset} to {destination} for a maximum \" + \"of {sendMax} {sendAsset}\";\n      if (odesc.path) msg += \" using conversion path: {path}\";\n      return msg;\n\n    case \"payment\":\n      return \"Send {amount} {asset} to {destination}\";\n\n    case \"setOptions\":\n      if (odesc.inflationDest) {\n        msg += \"Set inflation destination to: {inflationDest}{newline}\";\n      }\n\n      if (odesc.clearFlags) msg += \"Clear flag(s): {clearFlags}{newline}\";\n      if (odesc.setFlags) msg += \"Set flag(s): {setFlags}{newline}\";\n\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === \"0\") {\n          msg += \"Delete master key{newline}\";\n        } else {\n          msg += \"Set master key weight at: {masterWeight}{newline}\";\n        }\n      }\n\n      [\"lowThreshold\", \"medThreshold\", \"highThreshold\"].forEach(function (field) {\n        if (odesc[field]) msg += \"Set \" + field + \" at: {\" + field + \"}{newline}\";\n      });\n\n      if (odesc.signer) {\n        if (odesc.signer.type === \"tx\") {\n          if (odesc.signer.weight === \"0\") msg += \"Remove pre-signed {signer}{newline}\";else msg += \"Pre-sign {signer}{newline}\";\n        } else {\n          if (odesc.signer.weight === \"0\") msg += \"Remove signer: {signer}{newline}\";else msg += \"Set signer: {signer}{newline}\";\n        }\n      }\n\n      if (odesc.homeDomain) msg += \"Set home domain: {homeDomain}{newline}\";\n      if (odesc.homeDomain === \"\") msg += \"Unset home domain\";\n      if (!msg) msg = \"Do nothing\";\n      return msg;\n\n    default:\n      throw new Error(\"Unknow operation: \" + odesc.type);\n  }\n}\n/**\n * Returns an HTML div describing `signers`.\n *\n * @param {Object} signers Signers object as returned by @see{resolve.signers}.\n * @return {HTMLElement} Signers HTML description\n */\n\n\nformat.signatures = function (conf, transaction) {\n  var signersNode = html.create(\"div\", \".cosmiclib_signersNode\");\n  signersUtils[\"for\"](conf, transaction).then(function (utils) {\n    if (utils.signersList.length < 2 && !utils.signatures.length) return;\n    utils.sources.forEach(function (accountId) {\n      if (accountId !== specs.neutralAccountId) {\n        var div = makeAccountSignersNode(conf, utils, accountId);\n        html.append(signersNode, div);\n      }\n    });\n  });\n  return signersNode;\n};\n\nfunction makeAccountSignersNode(conf, utils, accountId) {\n  var accountSignersNode = html.create(\"div\");\n  var title = \"Signers for \" + misc.shorter(accountId);\n  var titleNode = html.create(\"span\", \".cosmiclib_threshold\", title);\n  var listNode = html.create(\"ul\", \".cosmiclib_signers\");\n  html.append(accountSignersNode, titleNode, listNode);\n  utils.signers[accountId].forEach(function (signer) {\n    var signerNode = format.signer(conf, signer);\n    var lineNode = html.create(\"li\", null, signerNode);\n\n    if (utils.hasSigned(signer.key)) {\n      html.addClass(lineNode, \"cosmiclib_signed\");\n      listNode.insertBefore(lineNode, listNode.firstChild);\n    } else {\n      html.append(listNode, lineNode);\n    }\n  });\n  return accountSignersNode;\n}\n/**\n * Retrieves the parent odesc (*Operation Descriptor*) of an HTML element, or\n * returns `undefined` if **element** is not the child of an HTML formatted\n * operation.\n *\n * @param {HTMLElement} element\n * @return {Object} odesc\n */\n\n\nformat.parentOdesc = function (conf, element) {\n  return parentProperty(element, \"odesc\");\n};\n/**\n * Retrieves the parent operation index of an HTML element, or returns\n * `undefined` if **element** is not the child of an HTML formatted operation.\n *\n * @param {HTMLElement} element\n * @return {Number} operation index\n */\n\n\nformat.parentIndex = function (conf, element) {\n  return parentProperty(element, \"index\");\n};\n/**\n * Retrieves the parent tdesc of an HTML element, or returns `undefined`\n * if **element** is not the child of an HTML formatted transaction.\n *\n * @param {HTMLElement} element\n * @return {Object} tdesc\n */\n\n\nformat.parentTdesc = function (conf, element) {\n  return parentProperty(element, \"tdesc\");\n};\n\nfunction parentProperty(element, property) {\n  while (element.parentNode) {\n    if (element.parentNode[property]) return element.parentNode[property];else element = element.parentNode;\n  }\n}\n/******************************************************************************/\n\n/**\n * Returns an HTML div describing `field` `value`.\n *\n * @param {string} field The field name of `value` as defined in `spec.js`.\n * @param {*} value The value of `field`.\n * @return {HTLMElement} `field` `value` HTML description\n */\n\n\nformat.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (!type) throw new Error(\"Unknow field: \" + field);\n  var domNode = format.type(conf, type, value);\n  domNode.field = field;\n  if (field !== type) html.addClass(domNode, \"cosmiclib_\" + field);\n  return domNode;\n};\n\nformat.type = function (conf, type, value) {\n  if (_typeof(value) === \"object\" && value.error) type = \"error\";\n  var formatter = process[type] || process.string;\n  var domNode = formatter(conf, value);\n  html.addClass(domNode, \"cosmiclib_\" + type);\n  var eventObject = {\n    conf: conf,\n    type: type,\n    value: value,\n    domNode: domNode\n  };\n  if (conf.constructor.name === \"CosmicLink\") eventObject.cosmicLink = conf;\n\n  if (event.defaultClickHandlers[type]) {\n    domNode.onclick = function () {\n      return event.callClickHandler(conf, type, eventObject);\n    };\n\n    html.addClass(domNode, \"cosmiclib_clickable\");\n  }\n\n  return domNode;\n}; /// Provide a format method for each data type.\n\n\nspecs.types.forEach(function (type) {\n  format[type] = function (conf, value) {\n    return format.type(conf, type, value);\n  };\n});\n/******************************************************************************/\n\nvar process = {};\n\nprocess.string = function (conf, string) {\n  if (typeof string !== \"string\") string = string + \"\";\n  return html.create(\"span\", null, string);\n};\n\nprocess.error = function (conf, errDesc) {\n  var errorNode = html.create(\"span\", \".cosmiclib_error\");\n  errorNode.textContent = errDesc.value === \"\" ? \"(undefined)\" : errDesc.value.value || errDesc.value;\n  errorNode.title = errDesc.error.message;\n  return errorNode;\n};\n\nprocess.address = function (conf, address) {\n  var addressNode = html.create(\"span\", {\n    title: \"Resolving...\"\n  }, misc.shorter(address), html.create(\"span\", \".cosmiclib_loadingAnim\"));\n  resolveAddressAndUpdate(conf, address, addressNode);\n  return addressNode;\n};\n\nfunction resolveAddressAndUpdate(_x, _x2, _x3) {\n  return _resolveAddressAndUpdate.apply(this, arguments);\n}\n\nfunction _resolveAddressAndUpdate() {\n  _resolveAddressAndUpdate = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, address, addressNode) {\n    var account, animation;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return resolve.address(conf, address);\n\n          case 3:\n            account = _context.sent;\n            addressNode.title = account.account_id;\n\n            if (account.memo) {\n              addressNode.title += \"\\nMemo (\".concat(account.memo_type, \"): \").concat(account.memo);\n            }\n\n            if (account.address) addressNode.textContent = account.address;else if (account.alias) addressNode.textContent = account.alias;\n            addressNode.extra = account;\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            addressNode.title = \"Can't resolve address\";\n            html.addClass(addressNode, \"cosmiclib_error\");\n\n          case 14:\n            animation = html.grab(\".cosmiclib_loadingAnim\", addressNode);\n            if (animation) html.destroy(animation);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _resolveAddressAndUpdate.apply(this, arguments);\n}\n\nprocess.amount = function (conf, amount) {\n  var significant = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n  var max = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7;\n  // Hide non-significant numbers\n  if (typeof amount !== \"number\") amount = Number(amount);\n  var nicified = nice(amount, {\n    significant: significant,\n    max: max\n  });\n\n  if (String(amount).length <= nicified.length) {\n    return html.create(\"span\", null, nicified);\n  } else {\n    return html.create(\"span\", {\n      className: \"cosmiclib_clickable\",\n      title: amount\n    }, html.create(\"span\", \".cosmiclib_tilde\", \"~\"), nicified);\n  }\n};\n\nprocess.asset = function (conf, asset) {\n  var assetNode = html.create(\"span\", null, format.field(conf, \"assetCode\", asset.code));\n\n  if (asset.issuer) {\n    html.append(assetNode, \" (\", format.field(conf, \"assetIssuer\", asset.issuer), \")\");\n  }\n\n  return assetNode;\n};\n\nprocess.assetsArray = function (conf, assetsArray) {\n  var assetsArrayNode = html.create(\"span\");\n\n  for (var i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) html.append(assetsArrayNode, \", \");\n    html.append(assetsArrayNode, format.asset(conf, assetsArray[i]));\n  }\n\n  return assetsArrayNode;\n};\n\nprocess.buffer = function (conf, object) {\n  if (object.type === \"base64\") return format.hash(conf, object.value);else return format.string(conf, object.value);\n};\n\nprocess.date = function (conf, date) {\n  return html.create(\"span\", {}, new Date(date).toLocaleString());\n};\n\nprocess.hash = function (conf, hash) {\n  return html.create(\"span\", {\n    title: hash\n  }, misc.shorter(hash));\n};\n\nprocess.id = process.hash;\n\nprocess.flags = function (conf, flags) {\n  var string = \"\";\n\n  if (flags >= 4) {\n    string = \"immutable\";\n    flags = flags - 4;\n  }\n\n  if (flags >= 2) {\n    if (string) string = \", \" + string;\n    string = \"revocable\" + string;\n    flags = flags - 2;\n  }\n\n  if (+flags === 1) {\n    if (string) string = \", \" + string;\n    string = \"required\" + string;\n  }\n\n  return html.create(\"span\", {}, string);\n};\n\nprocess.memo = function (conf, memo) {\n  var typeNode = format.field(conf, \"memoType\", memo.type);\n  var valueNode;\n\n  switch (memo.type) {\n    case \"text\":\n      valueNode = format.field(conf, \"memoText\", memo.value);\n      break;\n\n    case \"base64\":\n      valueNode = format.field(conf, \"memoBinary\", memo.value);\n      break;\n\n    case \"id\":\n      valueNode = format.field(conf, \"memoId\", memo.value);\n      break;\n\n    case \"hash\":\n      valueNode = format.field(conf, \"memoHash\", memo.value);\n      break;\n\n    case \"return\":\n      valueNode = format.field(conf, \"memoReturn\", memo.value);\n  }\n\n  return html.create(\"span\", {}, valueNode, \" (\", typeNode, \")\");\n};\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return process.amount(conf, price, 3, null);else return process.amount(conf, price.n / price.d, 3, null);\n};\n\nprocess.signer = function (conf, signer) {\n  var signerNode = html.create(\"span\");\n\n  switch (signer.type) {\n    case \"key\":\n    case \"ed25519_public_key\":\n      {\n        var value1 = signer.value || signer.key;\n        html.append(signerNode, \"Account \", format.field(conf, \"signerKey\", value1));\n        break;\n      }\n\n    case \"tx\":\n      {\n        var value2 = signer.value || signer.key;\n        html.append(signerNode, \"transaction \", format.field(conf, \"signerTx\", value2));\n        break;\n      }\n\n    case \"hash\":\n    case \"sha256hash\":\n      {\n        var value3 = signer.value || StellarSdk.StrKey.decodeSha256Hash(signer.key).toString(\"hex\");\n        html.append(signerNode, \"key whose hash is \", format.field(conf, \"signerHash\", value3));\n        break;\n      }\n  }\n\n  if (signer.weight > 1) {\n    var weightNode = format.weight(conf, signer.weight);\n    html.append(signerNode, \" (weight: \", weightNode, \")\");\n  }\n\n  return signerNode;\n};","\"use_strict\";\n/**\n * This module provides two ways to generate {@link SignersUtils} for a\n * Transaction object. The first one extends the object and is the intended way\n * to use those utilities. However, as extending objects can sometimes prove\n * inconvenient or intrusive, a second method allows to create a stand-alone\n * {@link SignersUtils} tied to a given transaction.\n *\n * @exports signersUtils\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar signersUtils = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar _resolve = require(\"./resolve\");\n/**\n * **SignersUtils** is a toolbox that aims to ease the handling of\n * multisignature transactions. The idea behind it is to fetch all required\n * data once and to cache the responses into the transaction. Then, all\n * the utilities can function in a synchronous (immediate) manner.\n *\n * Those are automatically available in `cosmicLink.transaction` after\n * `await cosmicLink.lock()` is ran. Alternatively, you can extend a transaction\n * or generate its SignersUtils by using {@link module:signersUtils}. There's no\n * `cosmicLib.SignersUtils` constructor.\n *\n * An instance of SignersUtils is always tied to a given transaction. This is\n * why none of the provided methods take a transaction as parameter.\n *\n * >\n * | Members                                                                     | Methods\n * |-----------------------------------------------------------------------------|-------------\n * | [sources]{@link SignersUtils#sources}: Array of transaction sources         | [hasSigner]{@link SignersUtils#hasSigner}: Test if a key is a legit signer for transaction\n * | [signers]{@link SignersUtils#signers}: Table of transaction signers         | [hasSigned]{@link SignersUtils#hasSigned}: Test if a key has signed transaction\n * | [signersList]{@link SignersUtils#signersList}: Array of transaction signers |\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Donation', maxDate: 2019 })\n *  .addOperation('payment', { destination: 'tips*cosmic.link', amount: 10 })\n *\n * await cosmicLink.lock({ network: 'test', source: 'myaddress*example.org' })\n *\n * console.log(cosmicLink.transaction.signers)\n * console.log(cosmicLink.transaction.hasSigner(GB...DXEZ))\n *\n * @alias SignersUtils\n * @namespace\n */\n\n\nvar SignersUtils =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  _createClass(SignersUtils, null, [{\n    key: \"resolve\",\n    value: function () {\n      var _resolve2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(conf, transaction, extendFlag) {\n        var extra, utils;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                extra = _resolve.extra(conf, transaction);\n\n                if (extra.cache.signersUtils) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _resolve.useNetwork(extra);\n\n                extra.cache.txHash = transaction.hash();\n                utils = new SignersUtils(extra, transaction);\n                /**\n                 * A list of the sources involved in the transaction.\n                 * @alias SignersUtils#sources\n                 * @type {Array}\n                 */\n\n                _context.next = 7;\n                return _resolve.txSources(extra, transaction);\n\n              case 7:\n                utils.sources = _context.sent;\n                _context.next = 10;\n                return _resolve.txSigners(extra, transaction);\n\n              case 10:\n                utils.signers = _context.sent;\n                _context.next = 13;\n                return _resolve.txSignersList(extra, transaction);\n\n              case 13:\n                utils.signersList = _context.sent;\n                Object.assign(utils, utilities);\n                extra.cache.signersUtils = utils;\n\n              case 16:\n                if (!extendFlag) {\n                  _context.next = 21;\n                  break;\n                }\n\n                if (!transaction.hasSigner) Object.assign(transaction, extra.cache.signersUtils);\n                return _context.abrupt(\"return\", transaction);\n\n              case 21:\n                return _context.abrupt(\"return\", extra.cache.signersUtils);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function resolve(_x, _x2, _x3) {\n        return _resolve2.apply(this, arguments);\n      }\n\n      return resolve;\n    }()\n  }]);\n\n  function SignersUtils(conf, transaction) {\n    _classCallCheck(this, SignersUtils);\n\n    this.signatures = transaction.signatures;\n    misc.setHiddenProperty(this, \"_cosmicplus\", transaction._cosmicplus);\n  }\n\n  return SignersUtils;\n}();\n/******************************************************************************/\n\n\nvar utilities = {};\n/**\n * Tests if **accountId** is a legit signer for the transaction.\n *\n * @example\n * if (transaction.hasSigner(GB...DEZX)) console.log('Legit signer')\n *\n * @alias SignersUtils#hasSigner\n * @param {string} accountId\n * @return {boolean}\n */\n\nutilities.hasSigner = function (accountId) {\n  return this.signersList.find(function (key) {\n    return key === accountId;\n  });\n};\n/**\n * Tests if **accountId** has signed the transaction.\n *\n * @example\n * if (transaction.hasSigned(GB...DEZX)) console.log('Has signed')\n *\n * @alias SignersUtils#hasSigned\n * @param {string} accountId\n * @return {boolean}\n */\n\n\nutilities.hasSigned = function (accountId) {\n  if (accountId.substr(0, 1) === \"G\") {\n    var keypair = StellarSdk.Keypair.fromPublicKey(accountId);\n    var txHash = this._cosmicplus.cache.txHash;\n    return !!this.signatures.find(function (entry) {\n      return keypair.verify(txHash, entry.signature());\n    });\n  }\n};\n/******************************************************************************/\n\n/**\n * Returns SignersUtils for **transaction**.\n *\n * @async\n * @param {Transaction} transaction\n * @return {SignersUtils}\n */\n\n\nsignersUtils[\"for\"] = function (conf, transaction) {\n  return SignersUtils.resolve(conf, transaction);\n};\n/**\n * Extends **transaction** with SignersUtils.\n *\n * @async\n * @param {Transaction} transaction\n * @return {Transaction}\n */\n\n\nsignersUtils[\"extends\"] = function (conf, transaction) {\n  return SignersUtils.resolve(conf, transaction, true);\n};","\"use strict\";\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @private\n * @exports convert\n */\n\nvar convert = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar construct = require(\"./construct\");\n\nvar decode = require(\"./decode\");\n\nvar destruct = require(\"./destruct\");\n\nvar encode = require(\"./encode\");\n\nvar resolve = require(\"./resolve\");\n/** ****************************    URI -> XDR    ******************************/\n\n\nconvert.uriToQuery = function (conf, uri) {\n  if (!uri.match(/\\?/)) return null;\n  var query = uri.replace(/^[^?]*/, \"\");\n  return query;\n};\n\nconvert.queryToTdesc = decode.query;\n\nconvert.tdescToJson = function (conf, tdesc) {\n  return JSON.stringify(tdesc, null, 2);\n};\n\nconvert.tdescToTransaction = construct.transaction;\n\nconvert.transactionToXdr = function (conf, transaction) {\n  return transaction.toEnvelope().toXDR(\"base64\");\n};\n\nconvert.xdrToSep7 = function (conf, xdr, options) {\n  var sep7 = \"web+stellar:tx?xdr=\";\n  sep7 += encodeURIComponent(xdr);\n\n  if (options.network && options.network !== \"public\") {\n    var passphrase = resolve.networkPassphrase(conf, options.network);\n    sep7 += \"&network_passphrase=\" + encodeURIComponent(passphrase);\n  }\n\n  if (options.callback) sep7 += \"&callback=url:\" + encode.url(conf, options.callback); // Not part of the standard.\n  // if (options.horizon) sep7 +=\"&horizon=\" + encode.url(conf, options.horizon)\n\n  return sep7;\n};\n/** ****************************    XDR -> URI    ******************************/\n\n\nconvert.xdrToTransaction = function (conf, xdr) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transaction = new StellarSdk.Transaction(xdr);\n  if (options.stripSignatures) transaction.signatures = [];\n  return transaction;\n};\n\nconvert.xdrToQuery = function (conf, xdr) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var query = \"?xdr=\" + xdr;\n  if (options.network) query += \"&network=\" + encodeURIComponent(options.network);\n  if (options.horizon) query += \"&horizon=\" + encode.url(conf, options.horizon);\n  if (options.callback) query += \"&callback=\" + encode.url(conf, options.callback);\n  return query;\n};\n\nconvert.transactionToTdesc = destruct.transaction;\n\nconvert.jsonToTdesc = function (conf, json) {\n  return JSON.parse(json);\n};\n\nconvert.tdescToQuery = encode.query;\n\nconvert.queryToUri = function (conf, query) {\n  var page = conf.page || \"https://cosmic.link\";\n  return page + query;\n};","\"use strict\";\n/**\n * Exposes some of the check routines used by cosmic-lib. Individual type-checks\n * are also available for:\n *\n * > address, amount, asset, assetsArray, boolean, buffer, date, flags, hash,\n * id, memo, network, price, sequence, signer, string, threshold, url, weight\n *\n * All checks are meant to be used on tdesc formatted values. Form example, in\n * tdesc buffer values are not encoded as actual Buffer object but as something\n * like: `{ type: \"text\", value: \"Hello World!\"}`.\n *\n * @example\n * check.field(\"minTime\", \"2018-11\")\n * check.date(\"2018-11\")\n *\n * @private\n * @exports check\n */\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar check = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Check that **tdesc** is valid.\n *\n * @example\n * check.tdesc({\n *   memo: { type: \"text\", value: \"Hello, World!\" },\n *   network: \"public\",\n *   source: \"tips*cosmic.link\",\n *   operations: [{ type: \"setOptions\", homeDomain: \"cosmic.link\" }]\n * })\n *\n * @param  {Object} tdesc\n */\n\n\ncheck.tdesc = function (conf, tdesc) {\n  var isValid = true;\n\n  for (var field in tdesc) {\n    try {\n      check.txField(conf, field, tdesc[field]);\n    } catch (error) {\n      isValid = false;\n      tdesc[field] = errDesc(error, tdesc[field]);\n    }\n  }\n\n  if (tdesc.operations.length > 100) {\n    isValid = false;\n    status.error(conf, \"Too much operations (max 100)\");\n  }\n\n  tdesc.operations.forEach(function (odesc) {\n    try {\n      check.odesc(conf, odesc);\n    } catch (e) {\n      isValid = false;\n    }\n  });\n\n  if (!isValid) {\n    var error = new Error(\"Invalid tdesc\"); // TODO: check if this is really useful\n\n    error.tdesc = tdesc;\n    throw error;\n  }\n};\n/**\n * Check that tdesc operation is valid (referred as **odesc**).\n *\n * @example\n * check.odesc({ type: \"payment\", destination: \"tips*cosmic.link\", amount: \"20\" })\n *\n * @param  {Object} odesc [description]\n */\n\n\ncheck.odesc = function (conf, odesc) {\n  var isValid = true;\n\n  try {\n    check.operationType(conf, odesc.type);\n  } catch (error) {\n    isValid = false;\n    odesc.type = errDesc(error, odesc.type);\n  }\n\n  for (var field in odesc) {\n    try {\n      check.operationField(conf, odesc.type, field, odesc[field]);\n    } catch (error) {\n      isValid = false;\n      odesc[field] = errDesc(error, odesc[field]);\n    }\n  }\n\n  specs.operationMandatoryFields[odesc.type].forEach(function (field) {\n    if (odesc[field] === undefined) {\n      isValid = false;\n      var error = new Error(\"Missing mandatory field: \" + field);\n      odesc[field] = errDesc(error);\n      status.error(conf, error.message);\n    }\n  });\n  if (!isValid) throw new Error(\"Invalid odesc\");\n};\n/**\n * Check that **field** is a valid transaction field and that its **value** is\n * valid.\n *\n * @param  {string} field\n * @param  {*} value\n */\n\n\ncheck.txField = function (conf, field, value) {\n  if (field === \"operations\") return;\n\n  if (!specs.transactionOptionalFields.find(function (name) {\n    return name === field;\n  })) {\n    status.error(conf, \"Invalid transaction field: \" + field, \"throw\");\n  }\n\n  check.field(conf, field, value);\n};\n/**\n * Check that **type** is a valid Stellar Operation type.\n *\n * @param  {String}\n */\n\n\ncheck.operationType = function (conf, type) {\n  if (!specs.operationMandatoryFields[type]) {\n    status.error(conf, \"Invalid operation: \" + type, \"throw\");\n  }\n};\n/**\n * Check that **field** is a valid **operation** field and that its **value** is\n * valid.\n *\n * @param {String} operation\n * @param {String} field\n * @param {*} value\n */\n\n\ncheck.operationField = function (conf, operation, field, value) {\n  if (field === \"type\") return;\n\n  if (!specs.isOperationField(operation, field)) {\n    status.error(conf, \"Invalid field for \".concat(operation, \": \").concat(field), \"throw\");\n  }\n\n  check.field(conf, field, value);\n};\n\nfunction errDesc(error) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return {\n    error: error,\n    value: value\n  };\n}\n/******************************************************************************/\n\n/**\n * Check that **field** **value** is a valid.\n *\n * @example\n * check.field(\"memo\", { type: \"text\", value: \"Hello, World!\" })\n *\n * @param {string} field The name of a Stellar Transaction parameter\n * @param {*} value\n */\n\n\ncheck.field = function (conf, field, value) {\n  if (value === \"\" && field !== \"homeDomain\" && field !== \"value\") {\n    status.error(conf, \"Missing value for field: \".concat(field), \"throw\");\n  }\n\n  var type = specs.fieldType[field];\n  if (!type) status.error(conf, \"Unknow field: \" + field, \"throw\");\n  if (value) check.type(conf, type, value);\n};\n/**\n * Check that **value** is of type **type**.\n *\n * @example\n * check.type(\"date\", \"2018-11-28\")\n *\n * @param {string} type\n * @param {string} value\n */\n\n\ncheck.type = function (conf, type, value) {\n  if (!specs.types.find(function (entry) {\n    return entry === type;\n  })) {\n    throw new Error(\"Invalid type: \" + type);\n  }\n\n  return check[type](conf, value);\n};\n/**\n * Generic check for numbers. Check that **value** is a number or a string\n * representing a number. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction\n * for `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\n\n\ncheck.number = function (conf, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"number\";\n  var min = arguments.length > 3 ? arguments[3] : undefined;\n  var max = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"unlimited\";\n  var num = +value;\n\n  if (isNaN(num)) {\n    status.error(conf, \"Invalid \".concat(type, \" (should be a number): \").concat(value), \"throw\");\n  } else if (min && num < min || max && num > max) {\n    status.error(conf, \"Invalid \".concat(type, \" (should be between \").concat(min, \" and \").concat(max, \" ): \").concat(value), \"throw\");\n  }\n};\n/**\n * Generic check for integers. Check that **value** is an integer or a string\n * representing an integer. **type** is for the customization of the message in\n * case of error. **min** and **max** may be provided as additional restriction for\n * **value**.\n *\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\n\n\ncheck.integer = function (conf, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"integer\";\n  var min = arguments.length > 3 ? arguments[3] : undefined;\n  var max = arguments.length > 4 ? arguments[4] : undefined;\n  check.number(conf, value, type, min, max);\n\n  if (parseInt(value) + \"\" !== value + \"\") {\n    status.error(conf, \"Not an integer: \".concat(value), \"throw\");\n  }\n};\n/**\n * Check that **value** is an UTF-8 string.\n *\n * *Note:* This use a weak (simplified) test that may not be accurate for small\n * strings.\n *\n * @param  {String} value\n */\n\n\ncheck.utf8 = function (conf, value) {\n  if (typeof value !== \"string\" || !misc.isUtf8(value)) {\n    status.error(conf, \"Invalid UTF8 string: \".concat(value), \"throw\");\n  }\n};\n/**\n * Check that **value** is a base64 string.\n *\n * @param  {String} value\n */\n\n\ncheck.base64 = function (conf, value) {\n  if (typeof value !== \"string\" || !misc.isBase64(value)) {\n    status.error(conf, \"Invalid base64 string: \".concat(value), \"throw\");\n  }\n};\n/******************************************************************************/\n\n\ncheck.amount = function (conf, amount) {\n  check.number(conf, amount, \"amount\");\n};\n\ncheck.address = function (conf, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.error(conf, \"Invalid address: \" + misc.shorter(address), \"throw\");\n  }\n};\n\ncheck.asset = function (conf, asset) {\n  var code = asset.code.toLowerCase();\n\n  if (!asset.issuer && code !== \"xlm\" && code !== \"native\") {\n    status.error(conf, \"Missing issuer for asset: \" + code, \"throw\");\n  }\n};\n\ncheck.assetsArray = function (conf, assetsArray) {\n  var isValid = true;\n\n  for (var index in assetsArray) {\n    try {\n      check.asset(conf, assetsArray[index]);\n    } catch (error) {\n      console.error(error);\n      isValid = false;\n    }\n  }\n\n  if (!isValid) throw new Error(\"Invalid assets array\");\n};\n\ncheck[\"boolean\"] = function (conf, _boolean) {\n  if (typeof _boolean !== \"boolean\") {\n    status.error(conf, \"Invalid boolean: \" + _boolean, \"throw\");\n  }\n};\n\ncheck.buffer = function (conf, buffer) {\n  switch (buffer.type) {\n    case \"text\":\n      check.utf8(conf, buffer.value);\n      break;\n\n    case \"base64\":\n      check.base64(conf, buffer.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid buffer type: \" + buffer.type, \"throw\");\n  }\n};\n\ncheck.date = function (conf, date) {\n  if (isNaN(Date.parse(date))) {\n    status.error(conf, \"Invalid date: \" + date, \"throw\");\n  }\n};\n\ncheck.flags = function (conf, flags) {\n  check.integer(conf, flags, \"flags\", 0, 7);\n};\n\ncheck.hash = function (conf, hash) {\n  if (hash.length !== 64 || !hash.match(/^[0-9a-f]*$/)) {\n    status.error(conf, \"Invalid hash: \" + hash, \"throw\");\n  }\n};\n\ncheck.id = function (conf, id) {\n  if (!id.match(/^[0-9]*$/)) status.error(conf, \"Invalid id: \" + id, \"throw\");\n};\n\ncheck.memo = function (conf, memo) {\n  switch (memo.type) {\n    case \"text\":\n      check.utf8(conf, memo.value);\n      break;\n\n    case \"base64\":\n      check.base64(conf, memo.value);\n      break;\n\n    case \"hash\":\n    case \"return\":\n      check.hash(conf, memo.value);\n      break;\n\n    case \"id\":\n      check.id(conf, memo.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid memo type: \" + memo.type, \"throw\");\n  }\n};\n\ncheck.price = function (conf, price) {\n  if (_typeof(price) === \"object\") {\n    try {\n      check.price(null, price.n);\n      check.price(null, price.d);\n    } catch (error) {\n      status.error(conf, \"Invalid price: \" + price, \"throw\");\n    }\n  } else {\n    check.number(conf, price, \"price\", 0);\n  }\n};\n\ncheck.signer = function (conf, signer) {\n  check.weight(conf, signer.weight);\n\n  switch (signer.type) {\n    case \"key\":\n      check.address(conf, signer.value);\n      break;\n\n    case \"hash\":\n    case \"tx\":\n      check.hash(conf, signer.value);\n      break;\n\n    default:\n      status.error(conf, \"Invalid signer type: \" + signer.type, \"throw\");\n  }\n};\n\ncheck.sequence = function (conf, sequence) {\n  check.number(conf, sequence, \"sequence\", 0);\n};\n\ncheck.threshold = function (conf, threshold) {\n  check.integer(conf, threshold, \"threshold\", 0, 255);\n};\n\ncheck.weight = function (conf, weight) {\n  check.integer(conf, weight, \"weight\", 0, 255);\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use_strict\";\n/**\n * Methods to set tdesc/odesc defaults values and strip out useless data.\n *\n * @exports normalize\n * @private\n */\n\nvar normalize = exports;\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar config = require(\"./config\");\n\nvar resolve = require(\"./resolve\");\n\nvar specs = require(\"./specs\");\n/**\n * Setup the default values for `tdesc`.\n */\n\n\nnormalize.tdesc = function (conf, tdesc) {\n  removeEmptyFields(tdesc);\n  if (!tdesc.operations) tdesc.operations = [];\n  if (tdesc.fee === 100 * tdesc.operations.length) delete tdesc.fee;\n  dateFields.forEach(function (field) {\n    if (tdesc[field]) {\n      tdesc[field] = normalize.date(conf, tdesc[field]);\n      if (tdesc[field] === \"1970\") delete tdesc[field];\n    }\n  });\n  if (tdesc.network) tdesc.network = normalize.network(conf, tdesc.network); // When network is neither test nor public, we want to provide a fallback\n  // Horizon URL; else we don't need it.\n\n  if (tdesc.network && tdesc.network !== \"public\" && tdesc.network !== \"test\") {\n    var url = resolve.horizon(config, tdesc.network) || tdesc.horizon;\n    tdesc.horizon = normalize.url(conf, url);\n  } else {\n    delete tdesc.horizon;\n  }\n\n  if (tdesc.callback) tdesc.callback = normalize.url(conf, tdesc.callback);\n};\n\nvar dateFields = [\"minTime\", \"maxTime\"];\n\nnormalize.date = function (conf, date) {\n  if (date.match(/^\\+[0-9]+$/)) {\n    var shifted = new Date();\n    shifted.setMinutes(shifted.getMinutes() + +date.substr(1));\n    date = shifted.toISOString().replace(/\\.[0-9]{3}/, \"\");\n  }\n\n  return date.replace(/:00\\.000/, \"\").replace(/\\.000/, \"\").replace(/T00:00Z/, \"\").replace(/-01$/, \"\").replace(/-01$/, \"\");\n};\n\nnormalize.network = function (conf, network) {\n  var networkName = resolve.networkName(conf, network);\n\n  if (networkName === \"public\" || networkName === \"test\") {\n    return networkName; // In network is neither test nor public, we want to use the network\n    // passphrase as parameter to ensure cross-wallet compatibility.\n  } else {\n    return resolve.networkPassphrase(conf, network);\n  }\n};\n\nnormalize.url = function (conf, url) {\n  if (url) return url.substr(0, 4) === \"http\" ? url : \"https://\" + url;\n};\n/**\n * Add the implicit values for fields made optional in the CosmicLink protocol\n * but required by StellarSdk.\n */\n\n\nnormalize.odesc = function (conf, odesc) {\n  removeEmptyFields(odesc); /// No limit = maximum limit.\n\n  if (odesc.limit === \"922337203685.4775807\") delete odesc.limit; /// New offer.\n\n  if (odesc.offerId === \"0\") delete odesc.offerId; /// Empty asset conversion path.\n\n  if (odesc.path && !odesc.path.length) delete odesc.path; /// Useless denominator.\n\n  if (odesc.price && odesc.price.d === 1) odesc.price = odesc.price.n + \"\";\n\n  switch (odesc.type) {\n    case \"allowTrust\":\n      /// Allow trust by default.\n      if (odesc.authorize === undefined) odesc.authorize = true;\n      break;\n\n    case \"createPassiveOffer\":\n    case \"manageOffer\":\n      /// Protocol 11 update renamed those operations.\n      if (odesc.type === \"manageOffer\") odesc.type = \"manageSellOffer\";else odesc.type = \"createPassiveSellOffer\";\n    // Fall Through\n\n    case \"createPassiveSellOffer\":\n    case \"manageBuyOffer\":\n    case \"manageSellOffer\":\n      /// Syntactic sugar for offer deletion\n      if (odesc.offerId && (odesc.amount === \"0\" || odesc.buyAmount === \"0\")) {\n        if (!odesc.buying && !odesc.selling) {\n          odesc.buying = new StellarSdk.Asset(\"XLM\", specs.neutralAccountId);\n        }\n\n        if (!odesc.price) odesc.price = \"1\";\n      } /// XLM as default asset.\n\n\n      if (odesc.buying && !odesc.selling) odesc.selling = XLM;\n      if (odesc.selling && !odesc.buying) odesc.buying = XLM;\n      break;\n\n    case \"manageData\":\n      /// Delete data entry.\n      if (!odesc.value) odesc.value = \"\";\n      break;\n\n    case \"pathPayment\":\n      /// XLM as default asset.\n      if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = XLM;\n      if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = XLM;\n      break;\n\n    case \"payment\":\n      /// XLM as default asset.\n      if (!odesc.asset) odesc.asset = XLM;\n      break;\n  }\n};\n\nvar XLM = StellarSdk.Asset[\"native\"]();\n\nfunction removeEmptyFields(object) {\n  for (var field in object) {\n    if (object[field] === null || object[field] === undefined) delete object[field];\n  }\n}","\"use strict\";\n/**\n * Contains the methods to convert data from *{@see Transaction}* format to\n * *Tdesc* format.\n *\n * @private\n * @exports destruct\n */\n\nvar destruct = exports;\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n/**\n * Convert `tx` into *Tdesc*.\n *\n * @param {Transaction} tx\n * @param {Object} options\n * @return {Object} A tdesc\n */\n\n\ndestruct.transaction = function (conf, tx) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var tdesc = {};\n  if (tx.source === specs.neutralAccountId) options.stripSource = true;\n  if (tx.sequence === \"0\") options.stripSequence = true;\n  tdesc.network = options.network;\n  tdesc.horizon = options.horizon;\n  tdesc.callback = options.callback;\n  if (!options.stripSource) tdesc.source = tx.source;\n\n  if (!options.stripSource && !options.stripSequence) {\n    tdesc.sequence = destruct.sequence(conf, tx.sequence);\n  }\n\n  if (tx._memo._switch.name !== \"memoNone\") tdesc.memo = destruct.memo(conf, tx._memo);\n\n  if (tx.timeBounds) {\n    if (tx.timeBounds.minTime) tdesc.minTime = destruct.date(conf, tx.timeBounds.minTime);\n    if (tx.timeBounds.maxTime) tdesc.maxTime = destruct.date(conf, tx.timeBounds.maxTime);\n  }\n\n  tdesc.fee = tx.fee;\n  tdesc.operations = tx.operations.map(function (op) {\n    return destruct.operation(conf, op);\n  });\n  normalize.tdesc(conf, tdesc);\n  return tdesc;\n};\n/**\n * Convert `op` into odesc format.\n *\n * @param {Object} op A StellarSdk Operation\n * @return {Object} An odesc\n */\n\n\ndestruct.operation = function (conf, op) {\n  var odesc = {};\n\n  for (var field in op) {\n    if (field === \"type\") odesc.type = op.type;else if (field === \"line\") odesc.asset = op.line;else odesc[field] = destruct.field(conf, field, op[field]);\n  }\n\n  normalize.odesc(conf, odesc);\n  return odesc;\n};\n/******************************************************************************/\n\n/**\n * Destruct `value` according to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\n\n\ndestruct.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (type) return destruct.type(conf, type, value);else throw new Error(\"Invalid field: \".concat(field));\n};\n/**\n * Destruct `value` using the destructuring function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\n\n\ndestruct.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value;else return destruct[type](conf, value);\n};\n/******************************************************************************/\n\n\ndestruct.asset = function (conf, asset) {\n  return Object.assign({}, asset);\n};\n\ndestruct.assetPath = function (conf, assetPath) {\n  return assetPath.map(function (asset) {\n    return destruct.asset(asset);\n  });\n};\n\ndestruct.amount = function (conf, amount) {\n  return amount.replace(/\\.?0+$/, \"\");\n};\n\ndestruct.buffer = function (conf, buffer) {\n  if (!buffer) return null;\n  var string = buffer.toString();\n\n  if (misc.isUtf8(string)) {\n    return {\n      type: \"text\",\n      value: string\n    };\n  } else {\n    var value = buffer.toString(\"base64\").replace(/=*$/, \"\");\n    return {\n      type: \"base64\",\n      value: value\n    };\n  }\n};\n\ndestruct.date = function (conf, timestamp) {\n  return new Date(timestamp * 1000).toISOString();\n};\n\ndestruct.memo = function (conf, sdkMemo) {\n  var memo = {};\n\n  if (sdkMemo._switch.name !== \"memoNone\") {\n    memo.type = sdkMemo._arm;\n\n    if (memo.type === \"hash\" || memo.type === \"retHash\") {\n      memo.value = sdkMemo._value.toString(\"hex\");\n      if (memo.type === \"retHash\") memo.type = \"return\";\n    } else if (memo.type === \"text\") {\n      return destruct.buffer(conf, sdkMemo._value);\n    } else {\n      memo.value = sdkMemo._value.toString();\n    }\n  }\n\n  return memo;\n};\n\ndestruct.sequence = function (conf, sdkSequence) {\n  return sdkSequence.toString();\n};\n\ndestruct.signer = function (conf, sdkSigner) {\n  var signer = {\n    weight: sdkSigner.weight\n  };\n\n  if (sdkSigner.ed25519PublicKey) {\n    signer.type = \"key\";\n    signer.value = sdkSigner.ed25519PublicKey;\n  } else if (sdkSigner.sha256Hash) {\n    signer.type = \"hash\";\n    signer.value = sdkSigner.sha256Hash.toString(\"hex\");\n  } else if (sdkSigner.preAuthTx) {\n    signer.type = \"tx\";\n    signer.value = sdkSigner.preAuthTx.toString(\"hex\");\n  }\n\n  return signer;\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use strict\";\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n * @exports event\n */\n\nvar event = exports;\n\nvar html = require(\"@cosmic-plus/domutils/es5/html\");\n\nvar format = require(\"./format\");\n/** *** Click events *****/\n\n/**\n * Set the click handler for **type** HTML elements as **callback**.\n *\n * @example\n * cosmicLib.config.setClickHandler('address', showAddressPopup)\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\n\n\nevent.setClickHandler = function (conf, type, callback) {\n  conf.clickHandlers[type] = callback;\n};\n/**\n * Remove the current click handler for **type**.\n *\n * @example\n * cosmicLib.config.clearClickHandler('address')\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\n\n\nevent.clearClickHandler = function (conf, type) {\n  conf.clickHandlers[type] = undefined;\n};\n\nevent.callClickHandler = function (conf, type, event) {\n  var handler = conf.clickHandlers[type];\n  event.extra = event.domNode.extra;\n  event.field = event.domNode.field;\n  event.tdesc = format.parentTdesc(conf, event.domNode);\n  event.odesc = format.parentOdesc(conf, event.domNode);\n  event.index = format.parentIndex(conf, event.domNode);\n  if (handler) handler(event);\n};\n/**\n * The active click handlers. Takes the form:\n *\n * ```\n * cosmicLib.config.clickHandlers = {\n *   type1: callback1,\n *   ...\n *   typeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * * **address**: A prompt that shows the address details\n * * **id**: A function that copy the id into the clipboard\n * * **hash**: A function that copy the hash into the clipboard or show a prompt\n *   for preimage signature when relevant\n * ```\n */\n\n\nevent.defaultClickHandlers = {\n  address: function address(event) {\n    if (!event.extra) return;\n    var message = \"\";\n\n    for (var field in event.extra) {\n      message += \"\".concat(field, \":\\n\") + \"\".concat(event.extra[field], \"\\n\\n\");\n    }\n\n    window.alert(message);\n  },\n  hash: function hash(event) {\n    var grandma = event.domNode.parentNode.parentNode.parentNode;\n\n    if (grandma.classList.contains(\"cosmiclib_signers\")) {\n      var preimage = prompt(\"Please enter preimage:\");\n      if (preimage) event.cosmicLink.sign(preimage);\n    } else {\n      html.copyString(event.value);\n    }\n  },\n  id: function id(event) {\n    return html.copyString(event.value);\n  }\n};","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","\"use strict\";\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @private\n * @exports construct\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar construct = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar resolve = require(\"./resolve\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Returns the StellarSdk Transaction built from tdesc.\n *\n * @param {Object} tdesc\n * @return {Transaction}\n */\n\n\nconstruct.transaction =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(conf, tdesc) {\n    var txBuilder, index, odesc, operation;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!conf.status) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error(conf.status);\n\n          case 2:\n            _context.prev = 2;\n            _context.next = 5;\n            return makeTransactionBuilder(conf, tdesc);\n\n          case 5:\n            txBuilder = _context.sent;\n            _context.t0 = _regeneratorRuntime.keys(tdesc.operations);\n\n          case 7:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 16;\n              break;\n            }\n\n            index = _context.t1.value;\n            odesc = tdesc.operations[index];\n            _context.next = 12;\n            return construct.operation(conf, odesc);\n\n          case 12:\n            operation = _context.sent;\n            txBuilder.addOperation(operation);\n            _context.next = 7;\n            break;\n\n          case 16:\n            return _context.abrupt(\"return\", txBuilder.build());\n\n          case 19:\n            _context.prev = 19;\n            _context.t2 = _context[\"catch\"](2);\n\n            if (!conf.errors) {\n              console.error(_context.t2);\n              status.error(conf, _context.t2.message);\n            }\n\n            if (conf.status) {\n              _context.next = 26;\n              break;\n            }\n\n            status.fail(conf, \"Transaction build failed\", \"throw\");\n            _context.next = 27;\n            break;\n\n          case 26:\n            throw _context.t2;\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 19]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Returns the StellarSdk Operation built from `odesc`.\n *\n * @param {Object} odesc\n * @return {Operation}\n */\n\n\nconstruct.operation =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(conf, odesc) {\n    var operation, field;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            operation = odesc.type;\n            delete odesc.type;\n            _context2.t0 = _regeneratorRuntime.keys(odesc);\n\n          case 3:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 10;\n              break;\n            }\n\n            field = _context2.t1.value;\n            _context2.next = 7;\n            return construct.field(conf, field, odesc[field]);\n\n          case 7:\n            odesc[field] = _context2.sent;\n            _context2.next = 3;\n            break;\n\n          case 10:\n            return _context2.abrupt(\"return\", StellarSdk.Operation[operation](odesc));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/**\n * Returns the TransactionBuilder for `tdesc`.\n */\n\n\nfunction makeTransactionBuilder(_x5, _x6) {\n  return _makeTransactionBuilder.apply(this, arguments);\n}\n/******************************************************************************/\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\n\n\nfunction _makeTransactionBuilder() {\n  _makeTransactionBuilder = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(conf, tdesc) {\n    var server, baseFee, txOpts, sourceAccount, builder, index, operation, destination, memoType, memoValue, _short;\n\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            server = resolve.server(conf);\n            _context9.next = 3;\n            return server.fetchBaseFee();\n\n          case 3:\n            baseFee = _context9.sent;\n            txOpts = {};\n            if (tdesc.fee) txOpts.fee = tdesc.fee;else txOpts.fee = tdesc.operations.length * baseFee;\n            if (tdesc.memo) txOpts.memo = construct.memo(conf, tdesc.memo);\n\n            if (tdesc.minTime || tdesc.maxTime) {\n              txOpts.timebounds = {\n                minTime: 0,\n                maxTime: 0\n              };\n              if (tdesc.minTime) txOpts.timebounds.minTime = construct.date(conf, tdesc.minTime);\n              if (tdesc.maxTime) txOpts.timebounds.maxTime = construct.date(conf, tdesc.maxTime);\n            }\n\n            _context9.next = 10;\n            return resolve.txSourceAccount(conf, tdesc.source, tdesc.sequence);\n\n          case 10:\n            sourceAccount = _context9.sent;\n            builder = new StellarSdk.TransactionBuilder(sourceAccount, txOpts);\n            if (!tdesc.maxTime) builder.setTimeout(StellarSdk.TimeoutInfinite); /// Check if memo is needed for destination account.\n\n            _context9.t0 = _regeneratorRuntime.keys(tdesc.operations);\n\n          case 14:\n            if ((_context9.t1 = _context9.t0()).done) {\n              _context9.next = 24;\n              break;\n            }\n\n            index = _context9.t1.value;\n            operation = tdesc.operations[index];\n\n            if (!operation.destination) {\n              _context9.next = 22;\n              break;\n            }\n\n            _context9.next = 20;\n            return resolve.address(conf, operation.destination);\n\n          case 20:\n            destination = _context9.sent;\n\n            if (destination.memo) {\n              memoType = destination.memo_type;\n              memoValue = destination.memo;\n\n              if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n                _short = misc.shorter(operation.destination);\n                status.error(conf, \"Memo conflict: \".concat(_short, \" requires to set a memo\"), \"throw\");\n              } else {\n                tdesc.memo = {\n                  type: memoType,\n                  value: memoValue\n                };\n                builder.addMemo(new StellarSdk.Memo(memoType, memoValue));\n              }\n            }\n\n          case 22:\n            _context9.next = 14;\n            break;\n\n          case 24:\n            return _context9.abrupt(\"return\", builder);\n\n          case 25:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _makeTransactionBuilder.apply(this, arguments);\n}\n\nconstruct.field =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(conf, field, value) {\n    var type;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            type = specs.fieldType[field];\n\n            if (!type) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", construct.type(conf, type, value));\n\n          case 5:\n            throw new Error(\"Invalid field: \".concat(field));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\n\n\nconstruct.type =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(conf, type, value) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", construct[type](conf, value));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x10, _x11, _x12) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n/******************************************************************************/\n\n\nconstruct.address =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(conf, address) {\n    var account;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return resolve.address(conf, address);\n\n          case 2:\n            account = _context5.sent;\n            return _context5.abrupt(\"return\", account.account_id);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nconstruct.asset =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(conf, asset) {\n    var publicKey;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!asset.issuer) {\n              _context6.next = 7;\n              break;\n            }\n\n            _context6.next = 3;\n            return construct.address(conf, asset.issuer);\n\n          case 3:\n            publicKey = _context6.sent;\n            return _context6.abrupt(\"return\", new StellarSdk.Asset(asset.code, publicKey));\n\n          case 7:\n            return _context6.abrupt(\"return\", StellarSdk.Asset[\"native\"]());\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nconstruct.assetsArray =\n/*#__PURE__*/\nfunction () {\n  var _ref7 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(conf, assetsArray) {\n    var path, index, string, constructedAsset;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            path = [];\n            _context7.t0 = _regeneratorRuntime.keys(assetsArray);\n\n          case 2:\n            if ((_context7.t1 = _context7.t0()).done) {\n              _context7.next = 11;\n              break;\n            }\n\n            index = _context7.t1.value;\n            string = assetsArray[index];\n            _context7.next = 7;\n            return construct.asset(conf, string);\n\n          case 7:\n            constructedAsset = _context7.sent;\n            path.push(constructedAsset);\n            _context7.next = 2;\n            break;\n\n          case 11:\n            return _context7.abrupt(\"return\", path);\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nconstruct.buffer = function (conf, object) {\n  if (object.type === \"base64\") {\n    return Buffer.from(object.value, \"base64\");\n  } else {\n    return object.value || null;\n  }\n};\n\nconstruct.date = function (conf, string) {\n  return Date.parse(string) / 1000;\n};\n\nconstruct.memo = function (conf, memo) {\n  if (memo.type === \"base64\") {\n    return new StellarSdk.Memo(\"text\", Buffer.from(memo.value, \"base64\"));\n  } else {\n    return new StellarSdk.Memo(memo.type, memo.value);\n  }\n};\n\nconstruct.signer =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(conf, signer) {\n    var sdkSigner, publicKey;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            sdkSigner = {\n              weight: +signer.weight\n            };\n\n            if (!(signer.type === \"tx\")) {\n              _context8.next = 5;\n              break;\n            }\n\n            sdkSigner.preAuthTx = signer.value;\n            _context8.next = 14;\n            break;\n\n          case 5:\n            if (!(signer.type === \"hash\")) {\n              _context8.next = 9;\n              break;\n            }\n\n            sdkSigner.sha256Hash = signer.value;\n            _context8.next = 14;\n            break;\n\n          case 9:\n            if (!(signer.type === \"key\")) {\n              _context8.next = 14;\n              break;\n            }\n\n            _context8.next = 12;\n            return construct.address(conf, signer.value);\n\n          case 12:\n            publicKey = _context8.sent;\n            sdkSigner.ed25519PublicKey = publicKey;\n\n          case 14:\n            return _context8.abrupt(\"return\", sdkSigner);\n\n          case 15:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) exports[type] = function (conf, value) {\n    return value;\n  };\n});","\"use_strict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  var StellarSdk = require(\"./stellar-sdk\");\n\n  var hash = \"0000000000000000000000000000000000000000000000000000000000000000\";\n  var memo = new StellarSdk.Memo(\"hash\", hash);\n  module.exports = memo.value.__proto__.constructor;\n} else {\n  module.exports = env.nodeRequire(\"safe-buffer\").Buffer;\n}","\"use strict\";\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @private\n * @exports encode\n */\n\nvar encode = exports;\n\nvar decode = require(\"./decode\");\n\nvar specs = require(\"./specs\");\n\nencode.query = function (conf, tdesc) {\n  if (conf.errors) return undefined;\n  var command;\n\n  if (!tdesc.operations.length || tdesc.operations.length > 1 || tdesc.operations[0].source) {\n    command = \"transaction\";\n  } else {\n    command = tdesc.operations[0].type;\n  }\n\n  var query = \"?\" + command;\n  specs.transactionOptionalFields.forEach(function (field) {\n    if (tdesc[field] !== undefined) query += encode.field(conf, field, tdesc[field]);\n  });\n  tdesc.operations.forEach(function (odesc) {\n    if (command === \"transaction\") query += \"&operation=\" + odesc.type;\n\n    for (var field in odesc) {\n      if (field === \"type\") continue; // Syntactic sugar for offer deletion.\n\n      if (odesc.type === \"manageOffer\" && odesc.amount == \"0\" && odesc.offerId) {\n        if (field === \"price\" && odesc.price === \"1\") continue;\n\n        if (field === \"buying\" && odesc.buying.code === \"XLM\" && odesc.buying.issuer === specs.neutralAccountId) {\n          continue;\n        }\n      }\n\n      query += encode.field(conf, field, odesc[field]);\n    }\n  });\n  return query;\n};\n/******************************************************************************/\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\n\n\nencode.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (!type) throw new Error(\"Invalid field: \".concat(field));\n  var encodedValue = encode.type(conf, type, value);\n  if (encodedValue === \"\" && field !== \"homeDomain\") return \"\";else return \"&\".concat(field, \"=\").concat(encodedValue);\n};\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\n\n\nencode.type = function (conf, type, value) {\n  if (value === undefined) return \"\";\n  var encodedValue = process[type] ? process[type](conf, value) : value;\n  if (encodedValue === undefined) return \"\";else return encodedValue;\n};\n/******************************************************************************/\n\n\nvar process = {};\n\nprocess.asset = function (conf, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + \":\" + encodeURIComponent(asset.issuer);\n};\n\nprocess.assetsArray = function (conf, assetsArray) {\n  return assetsArray.map(function (asset) {\n    return encode.asset(conf, asset);\n  }).toString();\n};\n\nprocess[\"boolean\"] = function (conf, _boolean) {\n  if (_boolean === false) return \"false\";\n};\n\nprocess.buffer = function (conf, buffer) {\n  if (buffer.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    var decoded = decode.buffer(conf, buffer.value);\n    if (decoded.type === \"text\") return encodeURIComponent(buffer.value);\n  } else if (buffer) {\n    return buffer.type + \":\" + encodeURIComponent(buffer.value);\n  }\n};\n\nprocess.date = function (conf, date) {\n  return date.replace(/Z$/, \"\");\n};\n\nprocess.memo = function (conf, memo) {\n  if (memo.type === \"text\") {\n    // Guard against prefix mis-interpretation.\n    var decoded = decode.memo(conf, memo.value);\n    if (decoded.type === \"text\") return encodeURIComponent(memo.value);\n  }\n\n  return memo.type + \":\" + encodeURIComponent(memo.value);\n};\n\nprocess.price = function (conf, price) {\n  if (typeof price === \"string\") return price;else return price.n + \":\" + price.d;\n};\n\nprocess.signer = function (conf, signer) {\n  return signer.weight + \":\" + signer.type + \":\" + signer.value;\n};\n\nprocess.string = encode.buffer;\n\nprocess.url = function (conf, url) {\n  if (url.substr(0, 8) === \"https://\") url = url.substr(8);\n  return encodeURIComponent(url);\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  exports[type] = function (conf, value) {\n    return encode.type(conf, type, value);\n  };\n});","\"use_strict\";\n/**\n * Methods that expand tdesc paramaters from their query/StellarSdk format into\n * their tdesc equivalent. This allows user to pass value in the format they\n * feel the most confortable with when creating CosmicLinks.\n *\n * @private\n * @exports expand\n */\n\nvar expand = exports;\n\nvar Buffer = require(\"@cosmic-plus/base/es5/buffer\");\n\nvar StellarSdk = require(\"@cosmic-plus/base/es5/stellar-sdk\");\n\nvar decode = require(\"./decode\");\n\nvar destruct = require(\"./destruct\");\n\nvar normalize = require(\"./normalize\");\n\nvar specs = require(\"./specs\");\n/**\n * Replace each tdesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `tdesc` passed in\n * parameter.\n *\n * @param {Object} tdesc\n * @return tdesc\n */\n\n\nexpand.tdesc = function (conf, tdesc) {\n  for (var field in tdesc) {\n    if (field === \"operations\") continue;else tdesc[field] = expand.field(conf, field, tdesc[field]);\n  }\n\n  if (tdesc.operations) tdesc.operations.forEach(function (odesc) {\n    return expand.odesc(conf, odesc);\n  });\n  normalize.tdesc(conf, tdesc);\n  return tdesc;\n};\n/**\n * Replace each odesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `odesc` passed in\n * parameter.\n *\n * @param {Object} odesc\n * @return tdesc\n */\n\n\nexpand.odesc = function (conf, odesc) {\n  for (var field in odesc) {\n    if (field === \"type\") continue;else odesc[field] = expand.field(conf, field, odesc[field]);\n  }\n\n  normalize.odesc(conf, odesc);\n  return odesc;\n};\n/******************************************************************************/\n\n/**\n * Expands `value` to its tdesc format according to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\n\n\nexpand.field = function (conf, field, value) {\n  var type = specs.fieldType[field];\n  if (type) return expand.type(conf, type, value);else throw new Error(\"Invalid field: \".concat(field));\n};\n/**\n * Expands `value` to its tdesc format according to `type`.\n *\n * @param {string} type\n * @param {string} value\n */\n\n\nexpand.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value;\n  if (typeof value === \"number\") value = value + \"\";\n  return expand[type] ? expand[type](conf, value) : value + \"\";\n};\n/******************************************************************************/\n\n\nexpand.asset = function (conf, asset) {\n  if (asset instanceof StellarSdk.Asset) return destruct.asset(conf, asset);else if (typeof asset === \"string\") return decode.asset(conf, asset);else return asset;\n};\n\nexpand.assetPath = function (conf, assetPath) {\n  if (Array.isArray(assetPath)) return assetPath.map(function (asset) {\n    return expand.asset(conf, asset);\n  });else if (typeof assetPath === \"string\") return decode.assetPath(conf, assetPath);\n};\n\nexpand.buffer = function (conf, buffer) {\n  if (!buffer) return \"\";\n  if (buffer instanceof Buffer) return destruct.buffer(conf, buffer);else if (typeof buffer === \"string\") return decode.buffer(conf, buffer);else return buffer;\n};\n\nexpand.date = function (conf, date) {\n  if (typeof date === \"number\") date = date + \"\";\n  if (!date.match(/^[0-9]*$/) || date.length < 5) return decode.date(conf, date);else return destruct.date(conf, date);\n};\n\nexpand.memo = function (conf, memo) {\n  if (memo instanceof StellarSdk.Memo) return destruct.memo(conf, memo);else if (typeof memo === \"string\") return decode.memo(conf, memo);else return memo;\n};\n\nexpand.price = function (conf, price) {\n  if (typeof price === \"string\" && price.match(/:/)) {\n    return decode.price(conf, price);\n  } else {\n    return price;\n  }\n};\n\nexpand.signer = function (conf, signer) {\n  if (signer.key) return destruct.signer(conf, signer);else if (typeof signer === \"string\") return decode.signer(conf, signer);else return signer;\n};\n\nexpand.string = function (conf, string) {\n  if (typeof string === \"number\") return string + \"\";else return string;\n};\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\n\n\nspecs.types.forEach(function (type) {\n  if (!exports[type]) {\n    exports[type] = function (conf, value) {\n      if (typeof value === \"number\") return value + \"\";else return value;\n    };\n  }\n});","\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nif (env.isBrowser) require(\"@cosmic-plus/domutils/es5/polyfill\");\n/**\n * Automatically pass `config` to `module` functions as first argument.\n *\n * @param {Object} module A cosmic-lib module whose functions takes config as\n *   the first argument.\n * @param {Object} config A configuration object similar than config.js module.\n * @private\n */\n\nfunction exposeModule(module) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var layer = Object.assign({}, module);\n  misc.setHiddenProperty(layer, \"_config\", config);\n\n  var _loop = function _loop(name) {\n    if (typeof module[name] === \"function\") {\n      layer[name] = function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return module[name].apply(module, [this._config].concat(params));\n      };\n    } else {\n      layer[name] = module[name];\n    }\n  };\n\n  for (var name in module) {\n    _loop(name);\n  }\n\n  return layer;\n}\n/**\n * Create a clone of the library with an alternative config object derived from\n * **params**. Fields which are not defined in **params** stay in sync with parent\n * configuration.\n *\n * @example\n * const testnet = cosmicLib.withConfig({ network: 'test' })\n * const account = await testnet.resolve.account('tips*cosmic.link')\n *\n * @params {Object} params Alternative configuration\n * @return {Object} A clone of cosmicLib\n */\n\n\nexports.withConfig = function (params) {\n  var library = Object.create(this);\n  library.config = Object.assign({}, this.config, params);\n\n  for (var module in this) {\n    if (this[module].prototype && this[module].prototype.__proto__ === this.config) {\n      library[module] =\n      /*#__PURE__*/\n      function (_this$module) {\n        _inherits(_class, _this$module);\n\n        function _class() {\n          _classCallCheck(this, _class);\n\n          return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n        }\n\n        return _class;\n      }(this[module]);\n\n      Object.assign(library[module].prototype, this[module].prototype);\n      library[module].prototype.__proto__ = library.config;\n    } else if (this[module]._config) {\n      library[module] = Object.create(this[module]);\n      misc.setHiddenProperty(library[module], \"_config\", library.config);\n    }\n  }\n\n  return library;\n};\n/**\n * Export modules **names** after linking them to `config`.\n *\n * @param  {...String} names Module names\n */\n\n\nfunction exportModule(name, module) {\n  exports[name] = exposeModule(module, config);\n} // Export modules.\n\n\nvar config = exports.config = require(\"./config\");\n\nexports.CosmicLink = require(\"./cosmiclink\");\nif (env.isBrowser) exports.load = require(\"./load\");\nexportModule(\"resolve\", require(\"./resolve\"));\nexportModule(\"signersUtils\", require(\"./signers-utils\"));\nexports.specs = require(\"./specs\"); // Export helpers (not documented in the manual - please check the code).\n\nexportModule(\"check\", require(\"./check\"));\nexportModule(\"expand\", require(\"./expand\"));\nexportModule(\"construct\", require(\"./construct\"));\nexportModule(\"destruct\", require(\"./destruct\"));\nexportModule(\"encode\", require(\"./encode\"));\nexportModule(\"decode\", require(\"./decode\"));","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use_strict\";\n\nif (!NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach;\n} /// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n\n\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, \"find\", {\n    value: function value(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError(\"\\\"this\\\" is null or not defined\");\n      }\n\n      var o = Object(this); // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\n      var len = o.length >>> 0; // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n\n      if (typeof predicate !== \"function\") {\n        throw new TypeError(\"predicate must be a function\");\n      } // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\n\n      var thisArg = arguments[1]; // 5. Let k be 0.\n\n      var k = 0; // 6. Repeat, while k < len\n\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        } // e. Increase k by 1.\n\n\n        k++;\n      } // 7. Return undefined.\n\n\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n} /// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nif (typeof Object.assign !== \"function\") {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, \"assign\", {\n    // eslint-disable-next-line no-unused-vars\n    value: function assign(target, varArgs) {\n      // .length of function is 2\n      \"use strict\";\n\n      if (target == null) {\n        // TypeError if undefined or null\n        throw new TypeError(\"Cannot convert undefined or null to object\");\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) {\n          // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n} // https://github.com/tc39/proposal-object-values-entries/blob/master/polyfill.js\n\n\nvar reduce = Function.bind.call(Function.call, Array.prototype.reduce);\nvar isEnumerable = Function.bind.call(Function.call, Object.prototype.propertyIsEnumerable);\nvar concat = Function.bind.call(Function.call, Array.prototype.concat);\nvar keys = Object.getOwnPropertyNames;\n\nif (!Object.values) {\n  Object.values = function values(O) {\n    return reduce(keys(O), function (v, k) {\n      return concat(v, typeof k === \"string\" && isEnumerable(O, k) ? [O[k]] : []);\n    }, []);\n  };\n}\n\nif (!Object.entries) {\n  Object.entries = function entries(O) {\n    return reduce(keys(O), function (e, k) {\n      return concat(e, typeof k === \"string\" && isEnumerable(O, k) ? [[k, O[k]]] : []);\n    }, []);\n  };\n}","\"use_strict\";\n/**\n * Aliases handlers & most known Stellar addresses.\n *\n * @private\n * @exports aliases\n */\n\nvar aliases = exports;\n/**\n * Add new **aliases** or replace existing ones.\n *\n * @example\n * cosmicLib.config.addAliases({\n *   'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n *   'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io'\n * })\n *\n * @param {Object} aliases An object such as `{ publicKey1: name1, ..., publicKeyN: nameN }`\n */\n\naliases.set = function (conf, aliases) {\n  conf.aliases = Object.assign(conf.aliases, aliases);\n};\n/**\n * Remove **publicKeys** from aliases list.\n *\n * @example\n * cosmicLib.config.removeAliases([\n *  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP',\n *  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5',\n * ])\n *\n * @param {Array} publicKeys An array of public keys\n */\n\n\naliases.remove = function (conf, publicKeys) {\n  publicKeys.forEach(function (entry) {\n    return delete conf.aliases[entry];\n  });\n};\n/**\n * Aliases handlers & most known Stellar addresses. Aliases takes the form:\n *\n * ```js\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n */\n\n\naliases.all = {\n  GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2: \"aex.com\",\n  GASWJWFRYE55KC7MGANZMMRBK5NPXT3HMPDQ6SEXZN6ZPWYXVVYBFRTE: \"anchorusd.com\",\n  GDUKMGUGDZQK6YHYA5Z6AY2G4XDSZPSZ3SW5UN3ARVMO6QSRDWP5YLEX: \"anchorusd.com\",\n  GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4: \"apay.io\",\n  GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF: \"apay.io\",\n  GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR: \"apay.io\",\n  GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP: \"apay.io\",\n  GCYKQ2627BPKMSUZJK64GPYVKD4TRNACP45X6B754PR6TCYJXCHGUTWB: \"apiscapitalfunds.com\",\n  GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC: \"astral9.io\",\n  GDZURZR6RZKIQVOWZFWPVAUBMLLBQGXP2K5E5G7PEOV75IYPDFA36WK4: \"atlantisblue.org\",\n  GABQBEZCNQRUHURCG6E2UZC6QXXEPLALHBVA6J6IQNKNJL66VPY7FO7G: \"auskunft.de\",\n  GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A: \"binance.com\",\n  GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC: \"binance.com\",\n  GBOXNWGBB7SG3NVIA7O25M7JIRSXQ4KKU3GYARJEFMQXSR3APF3KRI6S: \"bitbox.one\",\n  GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL: \"bitfinex.com\",\n  GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3: \"bittrex.com\",\n  GATTH3VPK4PMXLE7JSEJ3OC72OYOGJYINLHSCJX365BP6SAV6GKSHJAV: \"bostravel.online\",\n  GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM: \"btc38.com\",\n  GB3RMPTL47E4ULVANHBNCXSXM2ZA5JFY5ISDRERPCXNJUDEO73QFZUNK: \"cex.io\",\n  GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7: \"changelly.com\",\n  GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP: \"charnatoken.top\",\n  GBOAYBE3NJKS4WPIVM2H5DVFIDYLAHHD2DAWYL5LLUVYF77M3JIVGCTR: \"citron.cash\",\n  GCJGYOH2EYW6FFISLBA3L3R3PUYCQ6DQ47GXVAMG7JLLIKPAPV3RLBSV: \"citron.cash\",\n  GBDUXW4E5WRM5EM6UXBLE7Y5XGSXJX472BSSBPKFPQ3PJCJHRIA6SH4C: \"coinbase.com\",\n  GDQP2KPQGKIHYJGXNUIYOMHARUARCA7DJT5FO2FFOOKY3B2WSQHG4W37: \"coinbase.com\",\n  GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP: \"coins.asia\",\n  GAWODAROMJ33V5YDFY3NPYTHVYQG7MJXVJ2ND3AOGIHYRWINES6ACCPD: \"cowrie.exchange\",\n  GDMXNQBJMS3FYI4PFSYCCB4XODQMNMTKPQ5HIKOUWBOWJ2P3CF6WASBE: \"cryptomkt.com\",\n  GA4BYMUO5D7OLGVJWZ2D5FCWU7SB63FNZ4QUU574SMNA6ELK5TZD3SO3: \"cryptomover.com\",\n  GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ: \"cryptomover.com\",\n  GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3: \"cryptomover.com\",\n  GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG: \"cryptomover.com\",\n  GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI: \"cryptomover.com\",\n  GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2: \"cryptomover.com\",\n  GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7: \"cryptotari.io\",\n  GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN: \"equid.co\",\n  GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH: \"exrates.me\",\n  GAZEX2USUBMMWFRZFS77VDJYXUFLXI4ZGFPWX6TBNZCSTEQWNLFZMXFF: \"fchain.io\",\n  GBETHKBL5TCUTQ3JPDIYOZ5RDARTMHMEKIO2QZQ7IOZ4YC5XV3C2IKYU: \"fchain.io\",\n  GCNY5OXYSY4FKHOPT2SPOQZAOEIGXB5LBYW3HVU3OWSTQITS65M5RCNY: \"fchain.io\",\n  GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW: \"flutterwave.com\",\n  GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M: \"frasindo.com\",\n  GBUAVXCI7JKH6D2ZHZ6KZ7Z5MHHCXHI4DSUUC4KOISDMRPVY3MRBF3OY: \"freight-coin.com\",\n  GDGDECMFS34OVTQJKTCHORPE7LOYDH2XYNRMUHLGCJFP56VUN6AW5LCF: \"freight-coin.com\",\n  GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S: \"gate.io\",\n  GARFMAHQM4JDI55SK2FGEPLOZU7BTEODS3Y5QNT3VMQQIU3WV2HTBA46: \"glitzkoin.com\",\n  GDYNTGXBDWARLJ34GRQ4ON4EGBXSTPR5LEDTD5LLOOHPS6EZU6QXIIYO: \"goodx.network\",\n  GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO: \"gopax.co.kr\",\n  GA6KR5DMGJ6OPPG4OONB65JPU3TZE2CWCLKTBV4DHXFA2Z4XKWQSVCTC: \"heir.io\",\n  GB2X6RCO2VAXOD7GXE5VJWXOUTYDKPHIAHJSM2CGZJXKZSIHREEP4654: \"heir.io\",\n  GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S: \"indodax.com\",\n  GCNSGHUCG5VMGLT5RIYYZSO7VQULQKAJ62QA33DBC5PPBSO57LFWVV6P: \"interstellar.exchange\",\n  GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL: \"irene.energy\",\n  GANZBUS4726LBT2CBJ3BGF3TP4NJT5MHZMI423NHMXFRWGO2DCBQEXYZ: \"jetmint.org\",\n  GD4T35DMXYDE7BJWYPUWK43VFJO5IBUQYG2YGMICPTWP4JTNWQELKAVA: \"kava.world\",\n  GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP: \"koinex.in\",\n  GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM: \"kraken.com\",\n  GC3L2FLR2QMUSOJ6QMQHKIWUKEXGOXSIN2KY72SDUHPC2KO6HOSQIXIF: \"levelg.net\",\n  GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX: \"liquido.cc\",\n  GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT: \"lumenaut.net\",\n  GBVB43NLVIP2USHXSKI7QQCZKZU2Z6U6A5PAHMIW7LLNVMQJTOX2BZI5: \"luxpayband.io\",\n  GDTEQF6YGCKLIBD37RJZE5GTL3ZY6CBQIKH7COAW654SYEBE6XJJOLOW: \"luxpayband.io\",\n  GD2YURFWC5LIRLM4CCVZZHCFV6WXO46VOSBBPTJG6MPQN6ANYZZOLQJL: \"martialartscoin.io\",\n  GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH: \"mobius.network\",\n  GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK: \"moni.com\",\n  GB56YLTH5SDOYTUGPWY5MXJ7VQTY7BEM2YVJZTN5O555VA6DJYCTY2MP: \"moonpool.space\",\n  GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH: \"naobtc.com\",\n  GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS: \"naobtc.com\",\n  GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES: \"naobtc.com\",\n  GD6RMKTCHQGEOGYWIKSY5G7QWXPZOAEZIKPKEVZUAXOQCZRVBRRFGLJM: \"nydro.energy\",\n  GDNXSZSF7HIGVRL2LG6VWXN5PWV3KHI77DQTHLLPKNPLUZFKRRDQJBXP: \"nydro.energy\",\n  GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB: \"okex.com\",\n  GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6: \"old.repocoin.io\",\n  GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN: \"old.sureremit.co\",\n  GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW: \"papayabot.com\",\n  GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L: \"papayabot.com\",\n  GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY: \"pedity.com\",\n  GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW: \"piiko.co\",\n  GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2: \"poloniex.com\",\n  GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5: \"pr.network\",\n  GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B: \"repocoin.io\",\n  GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX: \"ripplefox.com\",\n  GCLDH6L6FBLTD3H3B23D6TIFVVTFBLZMNBC3ZOI6FGI5GPQROL4FOXIN: \"ripplefox.com\",\n  GB2WB73G5IWRXEUTJANAIF52JFTDXOXORAP4S5HZRW23TZG2ONDVZMVA: \"scopuly.com\",\n  GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z: \"six.network\",\n  GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP: \"smartlands.io\",\n  GAIGG2ICK2ATV7VUQC6MZHOSMRMFJK3T65IVNUZ7EJEEAU5UJQPPDIST: \"steemanchor.com\",\n  GB3KBOFUCVTWEZ7YIZ7PAKLQMKPCTGWU3LOMANMCT7V6I3AAK4USTEEM: \"steemanchor.com\",\n  GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD: \"stellarguard.me\",\n  GA6D2S6XDBT7WZIZNDGUBLXUGDAGLZGZ2SYT2JLXD4BB2W76XS66FZ2S: \"stellar.org\",\n  GAENIE5LBJIXLMJIAJ7225IUPA6CX7EGHUXRX5FLCZFFAQSG2ZUYSWFK: \"stellar.org\",\n  GANOI26P6VAUL4NFVA4FAIOIBOR46NORONBIWUPRIGAMP7T5W5MOY4O6: \"stellar.org\",\n  GAX3BRBNB5WTJ2GNEFFH7A4CZKT2FORYABDDBZR5FIIT3P7FLS2EFOZZ: \"stellar.org\",\n  GAYOCVRRNXGQWREOZBDP4UEW475NKZKLA4EIEIBKBSJN2PQQWUQ5KGUH: \"stellar.org\",\n  GB6NVEN5HSUBKMYCE5ZOWSK5K23TBWRUQLZY3KNMXUZ3AQ2ESC4MY4AQ: \"stellar.org\",\n  GBEZOC5U4TVH7ZY5N3FLYHTCZSI6VFGTULG7PBITLF5ZEBPJXFT46YZM: \"stellar.org\",\n  GBVVWWN4YP76FKGO7RB42FSZDYD2PBXY2PJY3F6JJWLYU74TKUG775UP: \"stellar.org\",\n  GCO4EFT6KUOQKVZO2O4GR5CJKMARBORXRE7KAKH36ZFAX662ZHINQ6UA: \"stellar.org\",\n  GDKIJJIKXLOM2NRMPNQZUUYK24ZPVFC6426GZAEP3KUK6KEJLACCWNMX: \"stellar.org\",\n  GDTNE54IWDB3UQLMIUSBKIDTMUW7FNKBU4VB2GVW4OL65BZN7W5VRNVY: \"stellar.org\",\n  GDUY7J7A33TQWOSOQGDO776GGLM3UQERL4J3SPT56F6YS4ID7MLDERI4: \"stellar.org\",\n  GDWNY2POLGK65VVKIH5KQSH7VWLKRTQ5M6ADLJAYC2UEHEBEARCZJWWI: \"stellar.org\",\n  GA5Z7QOQFSNIFFRZ3CDHLOWRPBWHPX5EGCTKT5KXU2CGJD7EIK2ZMALP: \"stellarpay.org\",\n  GAMA33LC7FK5RF4XE5HOVX456GX4VHDZUCJ7APY4TZ4IHG65ZWVXD333: \"stellarpay.org\",\n  GAYYPNEDENPNDNVPQD7U54JXMZZYTZAHWJLRRWBLP5PU6PBRSLH7LKNA: \"stellarpay.org\",\n  GBNWX7R4WVOWEYVKWN7KJ773X6C7OKNIGMVVDQI4B7XXMR6Y4OCUTBX2: \"stellarpay.org\",\n  GCAIDZBFE3WEIZSXQONQKUUTG6VLVKG2BBJYGWKEHQ2FZZ76VR326WYW: \"stellarpay.org\",\n  GCE3XS3D2F2W5LQWZHLG25ANAFIQOVMORH46JHVXOMW3FN27IPVJEGGG: \"stellarpay.org\",\n  GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5: \"stellarport.io\",\n  GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW: \"stellarterm.com\",\n  GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M: \"stemchain.io\",\n  GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG: \"stronghold.co\",\n  GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK: \"stronghold.co\",\n  GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI: \"superlumen.org\",\n  GCZYLNGU4CA5NAWBAVTHMZH4JXWKP2OUJ6OK3I7XXZCNA5622WUJVLTG: \"sureremit.co\",\n  GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N: \"sureremit.co\",\n  GCTXRQIYWEDP6G7OXZI6IXUSIXHHSN5NKYRB3NI5J4Z7G5JMIBHLLBTC: \"tamm.fund\",\n  GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S: \"tempo.eu.com\",\n  GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C: \"ternio.io\",\n  GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3: \"thefutbolcoin.io\",\n  GDSVWEA7XV6M5XNLODVTPCGMAJTNBLZBXOFNQD3BNPNYALEYBNT6CE2V: \"thewwallet.com\",\n  GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON: \"tontinetrust.com\",\n  GAKRDXBHA2TTOYJZQIAQ7ZDS555P24RAYRUUZWU3KHSLIOZMVV4IITXT: \"traxalt.com\",\n  GAW4E6NGM4NPNX2LO2BKDPCCTUX3FJLKWHPU4VQPGBIBQGD6JTVF5C7C: \"upbit.com\",\n  GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN: \"winsome.gift\",\n  GBOFQCVZF2DSFLJPJMKH7CIECCN7TYVAT2CSD73IVEBJJQU2VW6JNFHT: \"wirexapp.com\",\n  GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM: \"ximcoin.com\",\n  GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5: \"xirkle.com\",\n  GA3FUYFOPWZ25YXTCA73RK2UGONHCO27OHQRSGV3VCE67UEPEFEDCOPA: \"xlmpool.com\",\n  GDSRCV5VTM3U7Y3L6DFRP3PEGBNQMGOWSRTGSBWX6Z3H6C7JHRI4XFJP: \"x.token.io\"\n};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","\"use_strict\";\n/**\n * Nice formating of numbers.\n *\n * @example\n * nice(35)                     // => 35.00\n * nice(35, 4)                  // => 35.0000\n * nice(35, { significant: 2})  // => 35\n * nice(35, { min: 3 })         // => 35.000\n * nice(35, { max: 1 })         // => 35.0\n *\n * @param  {String|Number} value The value to format\n * @param  {Number} [precision] Short form for `options.precision`\n * @param  {Object} [options]\n * @param  {Number} [options.precision=null] How much digit after the dot.\n *     Override options.significant.\n * @param  {Number} [options.significant=4] How much significant numbers (+/-\n *     one).\n * @param  {Number} [options.min=null] Minimum number of digits after the dot.\n * @param  {Number} [options.max=null] Maximum number of digits after the dot.\n * @return {String} The formatted value\n */\n\nmodule.exports = function (value) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof opts === \"number\") opts = {\n    precision: opts\n  };\n  if (value === undefined || isNaN(value)) return \"...\";else if (value == 0) return 0;\n  var precision = opts.precision || precisionAuto(Number(value), opts);\n  if (opts.min) precision = Math.max(opts.min, precision);\n  if (opts.max) precision = Math.min(opts.max, precision);\n  return Number(value).toFixed(precision);\n};\n\nfunction precisionAuto(value, opts) {\n  if (!opts.significant) opts.significant = 4;\n  var precision = 0;\n  var str = String(value);\n  var firstNonZero = str.search(/[^0.]/);\n\n  if (firstNonZero) {\n    precision = firstNonZero + opts.significant - 2;\n  } else {\n    var pointIndex = str.indexOf(\".\");\n\n    if (pointIndex === -1) {\n      precision = opts.significant - str.length;\n    } else if (pointIndex < opts.significant) {\n      precision = opts.significant - pointIndex;\n    }\n  }\n\n  if (precision) precision = Math.round(precision / 2) * 2;\n  return precision > 0 ? precision : 0;\n}","\"use_strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar html = env.isBrowser && require(\"@cosmic-plus/domutils/es5/html\");\n\nvar action = require(\"./action\");\n\nvar config = require(\"./config\");\n\nvar convert = require(\"./convert\");\n\nvar format = env.isBrowser && require(\"./format\");\n\nvar parse = require(\"./parse\");\n\nvar resolve = require(\"./resolve\");\n\nvar status = require(\"./status\");\n/**\n * | Formats                                     | Data                                | Actions                                        | Editor                                       | HTML elements\n * |---------------------------------------------|-------------------------------------|------------------------------------------------|----------------------------------------------|----------------------------------------\n * |-----------------------|-----------------------|-----------------------|-----------------------|-----------------------\n * | [uri]{@link CosmicLink#uri}                 |[page]{@link CosmicLink#page}        |[selectNetwork]{@link CosmicLink#selectNetwork} |[parse]{@link CosmicLink#parse}               |[htmlDescription]{@link CosmicLink#htmlDescription}\n * | [query]{@link CosmicLink#query}             |[network]{@link CosmicLink#network}  |await [lock]{@link CosmicLink#lock}             |[setTxFields]{@link CosmicLink#setTxFields}   |[htmlLink]{@link CosmicLink#htmlLink}\n * | [tdesc]{@link CosmicLink#tdesc}             |[horizon]{@link CosmicLink#horizon}  |[sign]{@link CosmicLink#sign}                   |[addOperation]{@link CosmicLink#addOperation} |\n * | [json]{@link CosmicLink#json}               |[callback]{@link CosmicLink#callback}|await [send]{@link CosmicLink#send}             |[setOperation]{@link CosmicLink#setOperation}\n * | [transaction]{@link CosmicLink#transaction} |[source]{@link CosmicLink#source}    |\n * | [xdr]{@link CosmicLink#xdr}                 |[status]{@link CosmicLink#status}    |\n * | [sep7]{@link CosmicLink#sep7}               |[errors]{@link CosmicLink#errors}    |\n * |                                             |[locker]{@link CosmicLink#locker}\n * |                                             |[cache]{@link CosmicLink#cache}\n * -----\n *\n * The **CosmicLink** class represents Stellar\n * [transactions]{@link https://stellar.org/developers/guides/concepts/transactions.html}\n * encoded in various formats. It allows to convert between those formats, to\n * edit the underlying transaction, to build it, to sign it and to send it to\n * the blockchain.\n *\n * There are 3 main formats from which the other are derived:\n *\n * * The StellarSdk [Transaction]{@link {@link https://stellar.github.io/js-stellar-sdk/Transaction.html}} object. (**transaction**)\n * * The CosmicLink, which is a transaction encoded as a query. (**query**)\n * * The Tdesc, which is an internal JSON-compatible format in-between those two.\n *   It is the easier format to work with. (**tdesc**)\n *\n * Those formats can be derived into other related formats:\n *\n * * The XDR, which's a base64 representation of StellarSdk Transaction. (**xdr**)\n * * The Sep-0007 link, in its XDR form. (**sep7**)\n * * The CosmicLink URL/URI, which is a page plus the query. (**uri**)\n * * The Tdesc JSON, which is its stringified version. (**json**)\n *\n * A CosmicLink object can be created from any of those formats. Some of the\n * other formats are immediately available, while others may need an\n * `await cosmicLink.lock()` operation to become computable:\n *\n * * If you create a CosmicLink from an **uri**, a **query**, a **tdesc** or a\n *   **json**, only those 4 formats are available at first. Transaction, xdr &\n *   sep7 will become available after a `cosmicLink.lock()`. (**free formats**)\n * * If you create a CosmicLink from a **transaction**, an **xdr** or a **sep7**,\n *   all formats will immediately be available. (**locked formats**)\n *\n * For a better efficiency, formats are lazy-evaluated. This means that they are\n * computed once only if/when you call them:\n *\n * ```js\n * const cosmicLink = new CosmicLink(xdr, { network: 'test' })\n * console.log(cosmicLink.query)\n * ```\n *\n * The role of `cosmicLink.lock()` is centric to this class. In practice, the\n * free formats don't have to be tied to a **network**, a **source** or a\n * **sequence number**. For example, the CosmicQuery `?inflation` is a valid\n * generic transaction that can be locked to any network/source/sequence\n * combination.\n *\n * On the other hand, locked formats are always tied to a particular combination\n * of those, hence the need for a **lock** command:\n *\n * ```js\n * const cosmicLib = require('cosmic-lib')\n * cosmicLib.network = 'test'\n * cosmicLib.source = 'tips*cosmic.link'\n *\n * const cosmicLink = new cosmicLib.CosmicLink('?inflation')\n *\n * console.log(cosmicLink.tdesc.source)    // => undefined\n * console.log(cosmicLink.tdesc.network)   // => undefined\n * console.log(cosmicLink.tdesc.sequence)  // => undefined\n * console.log(cosmicLink.xdr)             // => undefined\n *\n * await cosmicLink.lock({)\n *\n * console.log(cosmicLink.tdesc.source)    // => 'GC6Z...2JVW'\n * console.log(cosmicLink.tdesc.network)   // => 'test'\n * console.log(cosmicLink.tdesc.sequence)  // => 29...3903\n * console.log(cosmicLink.xdr)             // => 'AAAA....AA=='\n * ```\n *\n * The **lock** command is asynchronous because free formats accept\n * [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html},\n * but locked formats don't. The library automatically resolve\n * those and this is an asynchronous operation. At the same time, it downloads\n * the required data from the blockchain to handle multi-signers transactions.\n *\n * After the lock operation, all free formats are updated according to the new\n * state of the transaction. It is now possible to `cosmicLink.sign(keypair)`\n * it, and to `cosmicLink.send()` it to the blockchain.\n */\n\n\nvar CosmicLink =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   * Create a new CosmicLink object. **transaction** can be one of the accepted\n   * format: uri, query, json, tdesc, transaction, xdr or sep7.\n   *\n   * @constructor\n   * @param {string|Object|Transaction} transaction A transaction in one of\n   *  thoses formats: uri, query, json, tdesc, transaction, xdr, sep7\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format.\n   * @param {string} options.network For Transaction/XDR formats, the network for\n   *     which it have been created\n   * @param {boolean} options.stripSignatures If set, will strip out signatures\n   *     from XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set, will strip out signatures\n   *     and sequence number from XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set, will strip out signatures,\n   *     sequence number and transaction primary source account from\n   *     XDR/Transaction formats.\n   * @return {CosmicLink}\n   */\n  function CosmicLink(transaction, options) {\n    _classCallCheck(this, CosmicLink);\n\n    initCosmicLink(this, transaction, options);\n  }\n  /**\n   * Refer to the underlying global configuration\n   * @private\n   */\n\n\n  _createClass(CosmicLink, [{\n    key: \"parse\",\n\n    /**\n     * Re-parse this CosmicLink. Useful in implementing transaction editors. The\n     * parameters are the same than [Constructor]{@link CosmicLink#Constructor},\n     * and the result is similar except that no new CosmicLink object is created.\n     */\n    value: function parse(transaction, options) {\n      initCosmicLink(this, transaction, options);\n    } /// Formats\n\n    /**\n     * A CosmicLink is a URI that embed a Cosmic [Query]{@link CosmicLink#query}.\n     * This format is simply the `cosmicLink.query` appended to the\n     * `cosmicLink.page`\n     */\n\n  }, {\n    key: \"setTxFields\",\n    /// Editor\n\n    /**\n     * Add/remove transaction fields and reparse the CosmicLink. **object** should\n     * follow the Tdesc format, but fields values can be written using query or\n     * StellarSdk format as well.\n     *\n     * @example\n     * cosmicLink.setTxFields({ minTime: '2018-10', maxTime: '2019-01' })\n     *\n     * @example\n     * cosmicLink.setTxFields({ minTime: null, maxTime: null })\n     *\n     * @example\n     * cosmicLink.setTxFields({ memo: 'Bonjour!' })\n     *\n     * @param {Object} object Transaction fields definition. Fields can be either\n     *   written using the JSON format or the query format\n     * @return {CosmicLink}\n     */\n    value: function setTxFields(object) {\n      checkLock(this);\n      this.parse(Object.assign(this.tdesc, object));\n      return this;\n    }\n    /**\n     * Add a new operation to CosmicLink. **params** should follow the Tdesc format,\n     * but fields values can be written using query or StellarSdk format as well.\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: 'CNY:admin*ripplefox' })\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: { code: 'CNY', issuer: 'admin*ripplefox } })\n     *\n     * @example\n     * cosmicLink.addOperation('changeTrust', { asset: new StellarSdk.Asset('CNY', ...) })\n     *\n     * @param {string} type The operation type.\n     * @param {Object} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"addOperation\",\n    value: function addOperation(type, params) {\n      checkLock(this);\n      var odesc = Object.assign({\n        type: type\n      }, params);\n      this.tdesc.operations.push(odesc);\n      this.parse(this.tdesc);\n      return this;\n    }\n    /**\n     * Set/remove one of the CosmicLink operations. **params** should follow the\n     * Tdesc format, but fields can be written using query or StellarSdk format\n     * as well. If **type** is set to `null`, the operation at **index**\n     * is deleted.\n     *\n     * @example\n     * cosmicLink.setOperation(1, 'setOptions', { homeDomain: 'example.org' })\n     *\n     * @example\n     * cosmicLink.setOperation(2, null)\n     *\n     * @param {integer} index The operation index.\n     * @param {type} type  The operation type.\n     * @param {params} params The operation parameters.\n     * @return {CosmicLink}\n     */\n\n  }, {\n    key: \"setOperation\",\n    value: function setOperation(index, type, params) {\n      checkLock(this);\n\n      if (!this.tdesc.operations[index]) {\n        throw new Error(\"Operation \".concat(index, \" doesn't exists\"));\n      }\n\n      if (type === null) {\n        this.tdesc.operations.splice(index, 1);\n      } else {\n        this.tdesc.operations[index] = Object.assign({\n          type: type\n        }, params);\n        this.parse(this.tdesc);\n      }\n\n      return this;\n    } /// Actions\n\n    /**\n     * Select the network that this CosmicLink uses.\n     */\n\n  }, {\n    key: \"selectNetwork\",\n    value: function selectNetwork() {\n      return resolve.useNetwork(this);\n    }\n  }, {\n    key: \"lock\",\n    value: function lock(options) {\n      return action.lock(this, options);\n    }\n  }, {\n    key: \"sign\",\n    value: function sign() {\n      for (var _len = arguments.length, keypairs_or_preimage = new Array(_len), _key = 0; _key < _len; _key++) {\n        keypairs_or_preimage[_key] = arguments[_key];\n      }\n\n      return action.sign.apply(action, [this].concat(keypairs_or_preimage));\n    }\n  }, {\n    key: \"send\",\n    value: function send(horizon) {\n      return action.send(this, horizon);\n    }\n    /**\n     * The HTML DOM node that displays a description of the current transaction.\n     * This is a browser-only property.\n     *\n     * If your HTML page contains an element with `id=\"cosmiclink_description\"`,\n     * it will automatically get populated with the description of the last\n     * CosmicLink created.\n     */\n\n  }, {\n    key: \"hasSigned\",\n    value: function hasSigned(accountId) {\n      misc.deprecated(\"2019-03\", \"cosmicLink.hasSigned\", \"cosmicLink.transaction.hasSigned\");\n      return this.transaction.hasSigned(accountId);\n    }\n  }, {\n    key: \"hasSigner\",\n    value: function hasSigner(accountId) {\n      misc.deprecated(\"2019-03\", \"cosmicLink.hasSigner\", \"cosmicLink.transaction.hasSigner\");\n      return this.transaction.hasSigner(accountId);\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      return this.__proto__.__proto__;\n    }\n  }, {\n    key: \"uri\",\n    get: function get() {\n      if (this.query) return this.page + this.query;else return undefined;\n    }\n    /**\n     * CosmicLink's transaction encoded in the Cosmic\n     * [Query]{@link tutorial:specs_query} format. This format allows to\n     * conveniently pass around Stellar transactions over any URI.\n     */\n\n  }, {\n    key: \"query\",\n    get: function get() {\n      if (!this._query) {\n        if (this.xdr) this._query = convert.xdrToQuery(this, this.xdr, this.tdesc);else if (this.tdesc) this._query = convert.tdescToQuery(this, this.tdesc);else return undefined;\n      }\n\n      return this._query;\n    }\n    /**\n     * CosmicLink's transaction in Tdesc format. This is in-between an objectified\n     * query representation and a simplified StellarSdk Transaction object. It has\n     * been created to be convenient to understand, use and manipulate.\n     *\n     * If you need to read the transaction parameters, this is the format of\n     * choice:\n     *\n     * ```js\n     * console.log(cosmicLink.tdesc.network) // Does the transaction enforce a network?\n     * console.log(cosmicLink.tdesc.source)  // Does the transaction enforce a source?\n     * console.log(cosmicLink.tdesc.memo)    // A simplified memo object or undefined\n     * console.log(cosmicLink.operations)    // Transaction operations in simplified format\n     * ```\n     *\n     * This formats authorize [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html}\n     * everywhere StellarSdk Transaction accept public keys. Those addresses are\n     * resolved when running the [lock]{@link CosmicLink#lock} method, and the\n     * tdesc is replaced by a resolved one.\n     *\n     * Tdesc is also very convenient to edit. To keep the CosmicLink in sync, you\n     * either need to [parse]{@link CosmicLink#parse} the edited tdesc, or to edit\n     * it using the dedicated methods:\n     *\n     * * [setTxFields]{@link CosmicLink#setTxFields}: set/clear transaction fields\n     * * [addOperation]{@link CosmicLink#addOperation}: add a new operation\n     * * [setOperation]{@link CosmicLink#setOperation}: edit/clear an operation\n     */\n\n  }, {\n    key: \"tdesc\",\n    get: function get() {\n      if (!this._tdesc) {\n        if (this.transaction) this._tdesc = convert.transactionToTdesc(this, this.transaction, this.locker);else return undefined;\n      }\n\n      return this._tdesc;\n    }\n    /**\n     * CosmicLink's transaction in JSON format. This is a stringified version of\n     * [Tdesc]{@link CosmicLink#tdesc} format.\n     */\n\n  }, {\n    key: \"json\",\n    get: function get() {\n      if (!this._json) this._json = convert.tdescToJson(this, this.tdesc);\n      return this._json;\n    }\n    /**\n     * CosmicLink's transaction in StellarSdk\n     * [Transaction]{@link https://stellar.github.io/js-stellar-sdk/Transaction.html}\n     * format.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"transaction\",\n    get: function get() {\n      return this._transaction;\n    }\n    /**\n     * CosmicLink's transaction in\n     * [XDR]{@link https://stellar.org/developers/guides/concepts/xdr.html}\n     * format.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"xdr\",\n    get: function get() {\n      if (!this._xdr) {\n        if (!this.transaction) return undefined;\n        this._xdr = convert.transactionToXdr(this, this.transaction);\n      }\n\n      return this._xdr;\n    }\n    /**\n     * CosmicLink transaction in\n     * [SEP-0007]{@link https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md}\n     * link format. Only the XDR part of this protocol is currently supported by\n     * CosmicLink, minus the signature verification.\n     *\n     * If you created the CosmicLink from uri, query, tdesc or json format, a\n     * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n     * available.\n     */\n\n  }, {\n    key: \"sep7\",\n    get: function get() {\n      if (!this._sep7) {\n        if (!this.xdr) return undefined;\n        this._sep7 = convert.xdrToSep7(this, this.xdr, this.tdesc);\n      }\n\n      return this._sep7;\n    } /// Data\n\n    /**\n     * The page this CosmicLink uses to construct its [URI]{@link CosmicLink#uri}.\n     *\n     * @var CosmicLink#page\n     */\n\n    /**\n     * The source for this transaction. This can be defined either locally\n     * (`cosmicLink.tdesc.source`) or globally (`cosmicLib.config.source`). The\n     * local configuration takes precedence, or, in other words, the global source\n     * is a fallback value in case the transaction emitter doesn't set one.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"source\",\n    get: function get() {\n      return this.tdesc && this.tdesc.source || this.config.source;\n    }\n    /**\n     * The network for this transaction. This can be defined either locally\n     * (`cosmicLink.tdesc.network`) or globally (`cosmicLib.config.network`). The\n     * local configuration takes precedence, or, in other words, the global\n     * network is a fallback value in case the transaction emitter doesn't set\n     * one.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"network\",\n    get: function get() {\n      return this.tdesc && this.tdesc.network || this.config.network;\n    }\n    /**\n     * The URL of the horizon node from which ledger data will be retrieved, and\n     * to which the signed transaction will be posted if there's no\n     * [callback]{@link CosmicLink#callback}.\n     *\n     * This can be defined either locally (`cosmicLink.tdesc.horizon`) or globally\n     * (using [setupNetwork]{@link module:config.setupNetwork}). This parameter is\n     * special in the sense that it's the only one for which the global\n     * configuration takes precedence.\n     *\n     * The rationale for this behavior is that we want transaction emitter to\n     * provide a fallback Horizon URL in the special case none is known for a\n     * custom network, but generally speaking it won't be right to allow the\n     * transaction emitter to force us to use a particular Horizon node.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"horizon\",\n    get: function get() {\n      return resolve.horizon(this.config, this.network) || this.tdesc && this.tdesc.horizon;\n    }\n    /**\n     * The URL at which the signed transaction will be posted. This can be defined\n     * either locally (`cosmicLink.tdesc.callback`) or globally\n     * (`cosmicLib.config.callback`). The local configuration takes precedence.\n     *\n     * When no callback is defined, the signed transaction is posted to\n     * [Horizon]{@link CosmicLink#horizon}. This is the default behavior.\n     *\n     * **Note:** cosmicLink.tdesc should be edited using [setTxFields]{@link\n     * CosmicLink#setTxFields}.\n     */\n\n  }, {\n    key: \"callback\",\n    get: function get() {\n      return this.tdesc && this.tdesc.callback || this.config.callback;\n    }\n  }, {\n    key: \"htmlDescription\",\n    get: function get() {\n      if (!this._htmlDescription) makeHtmlDescription(this);\n      return this._htmlDescription;\n    }\n    /**\n     * A link HTML Element that points to `cosmicLink.uri`\n     */\n\n  }, {\n    key: \"htmlLink\",\n    get: function get() {\n      if (!this._htmlLink) makeHtmlLink(this);\n      return this._htmlLink;\n    } /// Backward compatibility (2018-09 -> 2019-03).\n\n  }, {\n    key: \"server\",\n    get: function get() {\n      return resolve.server(this);\n    }\n  }, {\n    key: \"htmlNode\",\n    get: function get() {\n      misc.deprecated(\"2019-03\", \"cosmicLink.htmlNode\", \"cosmicLink.htmlDescription\");\n      return this.htmlDescription;\n    }\n  }, {\n    key: \"transactionNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_transactionNode\", this.htmlDescription);\n    }\n  }, {\n    key: \"statusNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_statusNode\", this.htmlDescription);\n    }\n  }, {\n    key: \"signersNode\",\n    get: function get() {\n      return html.grab(\".cosmiclib_signersNode\", this.htmlDescription);\n    }\n  }]);\n\n  return CosmicLink;\n}();\n/**\n * Initialize or reset a CosmicLink.\n *\n * @private\n */\n\n\nfunction initCosmicLink(cosmicLink, transaction) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  checkLock(cosmicLink); /// Reset object in case of reparse.\n\n  formatsFields.forEach(function (type) {\n    return delete cosmicLink[type];\n  });\n  cosmicLink.page = cosmicLink.page || options.page || config.page;\n  /**\n   * The status of a CosmicLink. It becomes non-null in case of failure.\n   * @var CosmicLink#status\n   */\n\n  /**\n   * By default `false`, or an *Array* of errors.\n   * @var CosmicLink#errors\n   */\n\n  status.init(cosmicLink);\n  /**\n   * The CosmicLink cache contains the resolved federations addresses and the\n   * accounts object. Using the same set of data for all the CosmicLink related\n   * computations ensure consistent results.\n   *\n   * @var CosmicLink#cache\n   */\n\n  cosmicLink.cache = {\n    destination: {},\n    account: {}\n  };\n  parse.dispatch(cosmicLink, transaction, options);\n\n  if (env.isBrowser) {\n    makeHtmlLink(cosmicLink);\n\n    if (!cosmicLink._htmlDescription) {\n      /// #cosmiclib_htmlNode: Backward compatibility (2018-09 -> 2019-03).\n      cosmicLink._htmlDescription = html.grab(\"#cosmiclink_description\") || html.grab(\"#CL_htmlNode\");\n    }\n\n    if (cosmicLink._htmlDescription) {\n      if (cosmicLink.htmlDescription.id === \"#CL_htmlNode\") {\n        misc.deprecated(\"2019-03\", \"id=\\\"#CL_htmlNode\\\"\", \"id=\\\"cosmiclink_description\\\"\");\n      }\n\n      makeHtmlDescription(cosmicLink);\n    }\n  }\n}\n\nvar formatsFields = [\"_query\", \"_tdesc\", \"_json\", \"_transaction\", \"_xdr\"];\n/**\n * Initialize CosmicLink html nodes.\n *\n * @private\n */\n\nfunction makeHtmlDescription(cosmicLink) {\n  if (env.isNode) return;\n  var htmlDescription = cosmicLink._htmlDescription;\n\n  if (htmlDescription) {\n    html.clear(htmlDescription);\n    htmlDescription.className = \"cosmiclink_description\";\n  } else {\n    htmlDescription = html.create(\"div\", \".cosmiclink_description\");\n    cosmicLink._htmlDescription = htmlDescription;\n  }\n\n  cosmicLink._transactionNode = format.tdesc(cosmicLink, cosmicLink.tdesc);\n  cosmicLink._statusNode = status.makeHtmlNode(cosmicLink);\n  cosmicLink._signersNode = html.create(\"div\", \".cosmiclib_signersNode\");\n  html.append(htmlDescription, cosmicLink._transactionNode, cosmicLink._statusNode, cosmicLink._signersNode);\n}\n/**\n * Make the HTML link.\n * @private\n */\n\n\nfunction makeHtmlLink(cosmicLink) {\n  if (env.isNode) return;\n  var htmlLink = html.grab(\"#cosmiclink\") || html.create(\"a\");\n  htmlLink.className = \".cosmiclink\";\n  htmlLink.href = cosmicLink.page;\n\n  htmlLink.onclick = function () {\n    return htmlLink.href = cosmicLink.uri;\n  };\n\n  if (!htmlLink.title) htmlLink.title = \"Sign transaction\";\n  if (!htmlLink.textContent) htmlLink.textContent = \"CosmicLink\";\n  cosmicLink._htmlLink = htmlLink;\n  return htmlLink;\n}\n/**\n * Throw an error if CosmicLink is locked.\n * @private\n */\n\n\nfunction checkLock(cosmicLink) {\n  if (cosmicLink.locker) throw new Error(\"Cosmic link is locked.\");\n}\n\nCosmicLink.prototype.__proto__ = config;\nmodule.exports = CosmicLink;","\"use strict\";\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n * @exports action\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar action = exports;\n\nvar axios = require(\"@cosmic-plus/base/es5/axios\");\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nvar misc = require(\"@cosmic-plus/jsutils/es5/misc\");\n\nvar convert = require(\"./convert\");\n\nvar format = env.isBrowser && require(\"./format\");\n\nvar resolve = require(\"./resolve\");\n\nvar signersUtils = require(\"./signers-utils\");\n\nvar status = require(\"./status\");\n/**\n * Lock a CosmicLink to a network/source pair. If the cosmicLink was created\n * from a query/uri/tdesc/json, it will create the corresponding\n * transaction/xdr/sep7 formats.\n *\n * This operation must be performed by the wallet before signing & sending the\n * transaction.\n *\n * @example\n * cosmicLib.config.network = \"test\"\n * const cosmicLink = new CosmicLink(\"?setOptions\")\n * console.log(cosmicLink.network) // => undefined\n * console.log(cosmicLink.xdr)     // => undefined\n * await cosmicLink.lock()\n * console.log(cosmicLink.network) // => \"test\"\n * console.log(cosmicLink.xdr)     // => \"AAAA...AA==\"\n *\n *\n * @alias CosmicLink#lock\n * @async\n * @param {Object} [options]\n * @param {string} options.network Local fallback network\n * @param {string} options.horizon Local fallback horizon (overwrited by global configuration)\n * @param {string} options.callback Local fallback callback\n * @param {string} options.source Local fallback source\n */\n\n\naction.lock =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(cosmicLink) {\n    var options,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            if (!cosmicLink.status) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(cosmicLink.status);\n\n          case 3:\n            if (!cosmicLink.locker) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"CosmicLink is already locked.\");\n\n          case 5:\n            _context.prev = 5;\n            _context.next = 8;\n            return applyLock(cosmicLink, options);\n\n          case 8:\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](5);\n\n            if (!cosmicLink.errors) {\n              console.error(_context.t0);\n              status.error(cosmicLink, _context.t0.message);\n            }\n\n            status.fail(cosmicLink, \"Transaction build failed\", \"throw\");\n\n          case 14:\n            updateSignersNode(cosmicLink);\n            return _context.abrupt(\"return\", cosmicLink);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 10]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction applyLock(_x2, _x3) {\n  return _applyLock.apply(this, arguments);\n}\n/**\n * Sign CosmicLink's Transaction with **keypairs_or_preimage** and update the\n * other formats accordingly. Only legit signers are allowed to sign, and a\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before signing.\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|Buffer|string} ...keypairs_or_preimage\n */\n\n\nfunction _applyLock() {\n  _applyLock = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(cosmicLink, options) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            /**\n             * The locker property tells that a CosmicLink have been locked, and exposes\n             * the network & source values to which it have been locked.\n             *\n             * @alias CosmicLink#locker\n             */\n            cosmicLink.locker = {\n              source: cosmicLink.tdesc.source || options.source || cosmicLink.config.source,\n              network: cosmicLink.tdesc.network || options.network || cosmicLink.config.network,\n              horizon: options.horizon || cosmicLink.horizon,\n              callback: cosmicLink.tdesc.callback || options.callback || cosmicLink.config.callback /// Preserve the underlying tdesc object.\n\n            };\n            cosmicLink._tdesc = Object.assign({}, cosmicLink.tdesc, cosmicLink.locker);\n            delete cosmicLink._query;\n            delete cosmicLink._json;\n\n            if (cosmicLink._transaction) {\n              _context4.next = 9;\n              break;\n            }\n\n            _context4.next = 7;\n            return convert.tdescToTransaction(cosmicLink, cosmicLink.tdesc);\n\n          case 7:\n            cosmicLink._transaction = _context4.sent;\n            delete cosmicLink._tdesc;\n\n          case 9:\n            delete cosmicLink._transaction._cosmicplus;\n            _context4.next = 12;\n            return signersUtils[\"extends\"](cosmicLink, cosmicLink._transaction);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _applyLock.apply(this, arguments);\n}\n\naction.sign =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(cosmicLink) {\n    var transaction,\n        allFine,\n        _len,\n        keypairsOrPreimage,\n        _key,\n        index,\n        keypair,\n        publicKey,\n        _short,\n        _short2,\n        _short3,\n        _args2 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (cosmicLink.locker) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new Error(\"cosmicLink is not locked.\");\n\n          case 2:\n            resolve.useNetwork(cosmicLink);\n            transaction = cosmicLink.transaction;\n            allFine = true;\n\n            for (_len = _args2.length, keypairsOrPreimage = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              keypairsOrPreimage[_key - 1] = _args2[_key];\n            }\n\n            if (!(typeof keypairsOrPreimage[0] !== \"string\")) {\n              _context2.next = 34;\n              break;\n            }\n\n            _context2.t0 = _regeneratorRuntime.keys(keypairsOrPreimage);\n\n          case 8:\n            if ((_context2.t1 = _context2.t0()).done) {\n              _context2.next = 32;\n              break;\n            }\n\n            index = _context2.t1.value;\n            keypair = keypairsOrPreimage[index];\n            publicKey = keypair.publicKey();\n\n            if (cosmicLink.transaction.hasSigner(publicKey)) {\n              _context2.next = 17;\n              break;\n            }\n\n            _short = misc.shorter(publicKey);\n            status.error(cosmicLink, \"Not a legit signer: \" + _short);\n            allFine = false;\n            return _context2.abrupt(\"continue\", 8);\n\n          case 17:\n            if (!cosmicLink.transaction.hasSigned(publicKey)) {\n              _context2.next = 19;\n              break;\n            }\n\n            return _context2.abrupt(\"continue\", 8);\n\n          case 19:\n            _context2.prev = 19;\n            transaction.sign(keypair);\n            _context2.next = 30;\n            break;\n\n          case 23:\n            _context2.prev = 23;\n            _context2.t2 = _context2[\"catch\"](19);\n            console.error(_context2.t2);\n            _short2 = misc.shorter(publicKey);\n            status.error(cosmicLink, \"Failed to sign with key: \" + _short2);\n            allFine = false;\n            return _context2.abrupt(\"continue\", 8);\n\n          case 30:\n            _context2.next = 8;\n            break;\n\n          case 32:\n            _context2.next = 35;\n            break;\n\n          case 34:\n            try {\n              transaction.signHashX(keypairsOrPreimage[0]);\n            } catch (error) {\n              console.error(error);\n              _short3 = misc.shorter(keypairsOrPreimage[0]);\n              status.error(cosmicLink, \"Failed to sign with preimage: \" + _short3, \"throw\");\n            }\n\n          case 35:\n            /// Update other formats.\n            [\"_query\", \"_xdr\", \"_sep7\"].forEach(function (format) {\n              return delete cosmicLink[format];\n            });\n            updateSignersNode(cosmicLink);\n\n            if (allFine) {\n              _context2.next = 41;\n              break;\n            }\n\n            throw new Error(\"Some signers where invalid\");\n\n          case 41:\n            return _context2.abrupt(\"return\", transaction);\n\n          case 42:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[19, 23]]);\n  }));\n\n  return function (_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction updateSignersNode(cosmicLink) {\n  if (cosmicLink._signersNode) {\n    var signersNode = format.signatures(cosmicLink, cosmicLink._transaction);\n    cosmicLink.htmlDescription.replaceChild(signersNode, cosmicLink._signersNode);\n    cosmicLink._signersNode = signersNode;\n  }\n}\n/**\n * Send CosmicLink's transaction to a blockchain validator, or to\n * [StellarGuard]{@link https://stellarguard.me} when relevant. A\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before sending.\n *\n * Returns a promise that resolve/reject to the horizon server response.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {horizon} [horizon] An horizon node URL\n * @return {Object} The server response\n */\n\n\naction.send =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(cosmicLink) {\n    var horizon,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            horizon = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : cosmicLink.horizon;\n\n            if (cosmicLink.locker) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new Error(\"cosmicLink is not locked.\");\n\n          case 3:\n            _context3.prev = 3;\n\n            if (!cosmicLink.transaction.hasSigner(STELLARGUARD_PUBKEY)) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 7;\n            return sendToStellarGuard(cosmicLink);\n\n          case 7:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 10:\n            if (!cosmicLink.callback) {\n              _context3.next = 16;\n              break;\n            }\n\n            _context3.next = 13;\n            return axios.post(cosmicLink.callback, {\n              xdr: cosmicLink.xdr\n            });\n\n          case 13:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 16:\n            _context3.next = 18;\n            return sendToHorizon(cosmicLink, horizon);\n\n          case 18:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 19:\n            _context3.next = 25;\n            break;\n\n          case 21:\n            _context3.prev = 21;\n            _context3.t0 = _context3[\"catch\"](3);\n            if (_context3.t0.response) console.error(_context3.t0.message, _context3.t0.response);\n            throw _context3.t0;\n\n          case 25:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 21]]);\n  }));\n\n  return function (_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction sendToHorizon(_x6, _x7) {\n  return _sendToHorizon.apply(this, arguments);\n}\n\nfunction _sendToHorizon() {\n  _sendToHorizon = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(cosmicLink, horizon) {\n    var server;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            server = resolve.server(cosmicLink, horizon); // Keep connection alive until transaction gets validated or a non-504 error\n            // is returned. 504 error means the transaction is still following the\n            // validation process.\n            // eslint-disable-next-line no-constant-condition\n\n          case 1:\n            if (!true) {\n              _context5.next = 14;\n              break;\n            }\n\n            _context5.prev = 2;\n            _context5.next = 5;\n            return server.submitTransaction(cosmicLink.transaction);\n\n          case 5:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](2);\n\n            if (!(_context5.t0.response.status !== 504)) {\n              _context5.next = 12;\n              break;\n            }\n\n            throw _context5.t0;\n\n          case 12:\n            _context5.next = 1;\n            break;\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 8]]);\n  }));\n  return _sendToHorizon.apply(this, arguments);\n}\n\nfunction sendToStellarGuard(cosmicLink) {\n  var url = cosmicLink.network === \"test\" ? \"https://test.stellarguard.me/api/transactions\" : \"https://stellarguard.me/api/transactions\";\n  return axios.post(url, {\n    xdr: cosmicLink.xdr,\n    callback: cosmicLink.callback\n  }).then(function (result) {\n    return result.data;\n  });\n}\n\nvar STELLARGUARD_PUBKEY = \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\";","\"use_stict\";\n\nvar env = require(\"@cosmic-plus/jsutils/es5/env\");\n\nif (env.isBrowser) {\n  module.exports = require(\"./stellar-sdk\").axios;\n} else {\n  module.exports = env.nodeRequire(\"axios\");\n}","\"use strict\";\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\n\nvar parse = exports;\n\nvar check = require(\"./check\");\n\nvar convert = require(\"./convert\");\n\nvar decode = require(\"./decode\");\n\nvar expand = require(\"./expand\");\n\nvar specs = require(\"./specs\");\n\nvar status = require(\"./status\");\n/**\n * Sets cosmicLink page as the base path of `uri`.\n *\n * @param {string} page URI basename\n */\n\n\nparse.page = function (cosmicLink, uri) {\n  var page = uri.split(\"?\")[0];\n  if (page) cosmicLink.page = encodeURI(page);\n};\n/**\n * Call the right functions to setup cosmicLink depending on `options` and\n * `value` type.\n *\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\n\n\nparse.dispatch = function (cosmicLink) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"?\";\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  formats.forEach(function (format) {\n    return delete cosmicLink[format];\n  });\n  var type = guessType(value); // Strip out URL hash\n\n  switch (type) {\n    case \"uri\":\n    case \"query\":\n    case \"xdrUri\":\n    case \"sep7\":\n    case \"sep7Request\":\n      value = value.replace(/#.*$/, \"\");\n  } // Parse transaction\n\n\n  try {\n    if (parseFmt[type]) parseFmt[type](cosmicLink, value, options);else setTdesc(cosmicLink, type, value, options);\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error);\n      status.error(cosmicLink, error.message);\n    }\n\n    status.fail(cosmicLink, \"Invalid \" + type);\n    if (error.tdesc) cosmicLink._tdesc = error.tdesc;\n  }\n\n  if (options.page) parse.page(cosmicLink, options.page);\n};\n\nvar formats = [\"_query\", \"_json\", \"_tdesc\", \"_transaction\", \"_xdr\", \"_sep7\"];\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n */\n\nfunction guessType(value) {\n  var type;\n\n  if (typeof value === \"string\") {\n    var query = convert.uriToQuery(\"\", value);\n    if (value.substr(0, 12) === \"web+stellar:\") type = \"sep7\";else if (query && query.substr(0, 5) === \"?req=\") type = \"sep7Request\";else if (query && query.substr(0, 5) === \"?xdr=\") type = \"xdrUri\";else if (value.substr(0, 1) === \"?\") type = \"query\";else if (value.substr(0, 1) === \"{\") type = \"json\";else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = \"xdr\";else type = \"uri\";\n  } else {\n    if (value.tx) type = \"transaction\";else type = \"tdesc\";\n  }\n\n  return type;\n}\n/******************************************************************************/\n\n\nvar parseFmt = {};\n/**\n * Initialize cosmicLink using `xdrUri`.\n */\n\nparseFmt.xdrUri = function (cosmicLink, xdrUri, options) {\n  parse.page(cosmicLink, xdrUri);\n  var query = convert.uriToQuery(cosmicLink, xdrUri);\n  var temp = query.split(\"&\");\n  var xdr = temp[0].substr(5);\n  temp.slice(1).forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"stripSignatures\":\n        options.stripSignatures = true;\n        break;\n\n      case \"stripSequence\":\n        options.stripSequence = true;\n        break;\n\n      case \"stripSource\":\n        options.stripSource = true;\n        break;\n\n      case \"network\":\n        options.network = decode.network(cosmicLink, value);\n        break;\n\n      case \"horizon\":\n      case \"callback\":\n        options[field] = decode.url(cosmicLink, value);\n        break;\n\n      default:\n        status.error(cosmicLink, \"Unknow option: \" + entry);\n        status.fail(cosmicLink, \"Invalid query\");\n    }\n  });\n  setTdesc(cosmicLink, \"xdr\", xdr, options);\n};\n/**\n * Initialize cosmicLink using `sep7Request`.\n */\n\n\nparseFmt.sep7Request = function (cosmicLink, sep7Request, options) {\n  parse.page(cosmicLink, sep7Request);\n  var query = convert.uriToQuery(cosmicLink, sep7Request);\n  var sep7 = decodeURIComponent(query.substr(5));\n  parseFmt.sep7(cosmicLink, sep7, options);\n};\n/**\n * Initialize cosmicLink using `sep7`.\n */\n\n\nparseFmt.sep7 = function (cosmicLink, sep7) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (sep7.substr(12, 4) === \"pay?\") {\n    throw new Error(\"SEP-0007 'pay' operation is not currently supported.\");\n  } else if (sep7.substr(12, 3) !== \"tx?\") {\n    throw new Error(\"Invalid SEP-0007 link.\");\n  }\n\n  var query = convert.uriToQuery(cosmicLink, sep7);\n  var params = query.substr(1).split(\"&\");\n  if (!options.network) options.network = \"public\";\n  var xdr;\n  params.forEach(function (entry) {\n    var field = entry.replace(/=.*$/, \"\");\n    var value = entry.substr(field.length + 1);\n\n    switch (field) {\n      case \"xdr\":\n        xdr = decodeURIComponent(value);\n        break;\n\n      case \"network_passphrase\":\n        options.network = decode.network(cosmicLink, value);\n        break;\n\n      case \"callback\":\n        if (value.substr(0, 4) !== \"url:\") throw new Error(\"Invalid callback: \" + value);\n        options.callback = decode.url(cosmicLink, value.substr(4));\n        break;\n\n      default:\n        if (isIgnoredSep7Field(field)) {\n          // eslint-disable-next-line no-console\n          console.log(\"Ignored SEP-0007 field: \" + field);\n        } else {\n          throw new Error(\"Invalid SEP-0007 field: \" + field);\n        }\n\n    }\n  });\n  if (!xdr) throw new Error(\"Missing XDR parameter\");\n  setTdesc(cosmicLink, \"xdr\", xdr, options);\n};\n\nfunction isIgnoredSep7Field(field) {\n  return specs.sep7IgnoredFields.find(function (name) {\n    return name === field;\n  });\n}\n/******************************************************************************/\n\n/**\n * Set cosmicLink_tdesc from format `type`. From there, the CosmicLink methods\n * can lazy-evaluate any requested format.\n */\n\n\nfunction setTdesc(cosmicLink, type, value, options) {\n  if (type !== \"uri\") cosmicLink[\"_\" + type] = value;\n\n  switch (type) {\n    case \"uri\":\n      parse.page(cosmicLink, value);\n      cosmicLink._query = convert.uriToQuery(cosmicLink, value, options);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"query\":\n      cosmicLink._tdesc = convert.queryToTdesc(cosmicLink, cosmicLink.query, options);\n      delete cosmicLink._query;\n      break;\n\n    case \"json\":\n      value = convert.jsonToTdesc(cosmicLink, value);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"tdesc\":\n      cosmicLink._tdesc = expand.tdesc(cosmicLink, value);\n      delete cosmicLink._json;\n      check.tdesc(cosmicLink, cosmicLink.tdesc);\n      break;\n\n    case \"sep7\":\n      cosmicLink._xdr = convert.sep7ToXdr(cosmicLink, cosmicLink.sep7);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"xdr\":\n      cosmicLink._transaction = convert.xdrToTransaction(cosmicLink, cosmicLink.xdr, options);\n    // eslint-disable-next-line no-fallthrough\n\n    case \"transaction\":\n      cosmicLink._tdesc = convert.transactionToTdesc(cosmicLink, cosmicLink.transaction, options);\n      delete cosmicLink._sep7;\n\n      if (options.stripSource || options.stripSequence) {\n        delete cosmicLink._xdr;\n        delete cosmicLink._transaction;\n      } else if (options.stripSignatures) {\n        cosmicLink.transaction.signatures = [];\n        delete cosmicLink._xdr;\n      }\n\n  }\n}","\"use_strict\";\n/**\n * Asynchronously load external ressources.\n */\n\n/**/\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar load = require(\"@cosmic-plus/domutils/es5/load\");\n\nmodule.exports = load;\n/**\n *\n * Load cosmic-lib CSS from **href** or from default origin. All subsequent\n * calls will refer to the original request.\n *\n * @example\n * /// Preload at the start of your script:\n * cosmicLib.load.styles('css/cosmic-lib.css')\n *\n * /// Then wait for the request to resolve before you display CosmicLink HTML\n * /// description:\n * await cosmicLib.load.styles()\n *\n * @alias module:load#styles\n * @async\n * @param {string} [href='cosmic-lib.css']\n */\n\nload.styles =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var href,\n      promise,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          href = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"https://cosmic.plus/cosmic-lib/cosmic-lib.css\";\n          promise = load.css(href);\n\n          load.styles = function () {\n            return promise;\n          };\n\n          return _context.abrupt(\"return\", promise);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));","\"use_strict\";\n/**\n * Asynchronously load external ressources.\n *\n * @exports load\n */\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar load = exports;\n\nvar html = require(\"./html\");\n/**\n * Asynchronously load a stylesheet from **href**.\n *\n * @example\n * // Load:\n * await load.css(\"my-styles.css\")\n *\n * @example\n * // Preload:\n * const preloader = load.css(\"my-styles.css\")\n *\n * // Then wait for loading to finish:\n * await cssLoader\n *\n * @async\n * @param {String} href\n */\n\n\nload.css =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(href) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var linkNode = html.create(\"link\", {\n                rel: \"stylesheet\",\n                type: \"text/css\",\n                href: href,\n                onload: resolve,\n                onerror: reject\n              });\n              html.append(document.head, linkNode);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Asynchronously load a script from **href**.\n *\n * @example\n * // Load:\n * await load.js(\"my-script.js\")\n *\n * @example\n * // Preload:\n * const preloader = load.js(\"my-script.js\")\n *\n * // Then wait for loading to finish:\n * await preloader\n *\n * @async\n * @param {String} href\n */\n\n\nload.js =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(href) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var scriptNode = html.create(\"script\", {\n                src: href,\n                onload: resolve,\n                onerror: reject\n              });\n              html.append(document.head, scriptNode);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();"],"sourceRoot":""}
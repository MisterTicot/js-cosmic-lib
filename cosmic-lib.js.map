{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./src/status.js","webpack://cosmicLib/./node_modules/babel-runtime/regenerator/index.js","webpack://cosmicLib/./src/specs.js","webpack://cosmicLib/./src/helpers.js","webpack://cosmicLib/./src/node.js","webpack://cosmicLib/./src/resolve.js","webpack://cosmicLib/./src/event.js","webpack://cosmicLib/./src/convert.js","webpack://cosmicLib/./node_modules/style-loader/lib/urls.js","webpack://cosmicLib/./node_modules/style-loader/lib/addStyles.js","webpack://cosmicLib/./src/cosmic-lib.css","webpack://cosmicLib/./src/cosmic-lib.css?9f62","webpack://cosmicLib/./src/format.js","webpack://cosmicLib/./src/parse.js","webpack://cosmicLib/./src/encode.js","webpack://cosmicLib/./src/prepare.js","webpack://cosmicLib/./src/check.js","webpack://cosmicLib/./src/decode.js","webpack://cosmicLib/./src/action.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime-module.js","webpack://cosmicLib/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","update","message","fail","cosmicLink","status","continuation","node","appendClass","statusNode","_errorContinuation","error","console","log","errorNode","errors","push","className","grab","_stateNode","textContent","event","lineNode","create","append","_eventsNode","Error","transactionOptionalFields","operationMandatoryFields","accountMerge","allowTrust","changeTrust","createAccount","createPassiveOffer","inflation","manageData","manageOffer","pathPayment","payment","setOptions","operationOptionalFields","fieldType","amount","asset","assetCode","authorize","buying","clearFlags","destAsset","destAmount","destination","fee","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","maxTime","medThreshold","memo","minTime","network","offerId","price","path","selling","sendAsset","sendMax","setFlags","signer","source","startingBalance","trustor","delay","thunk","firstCall","memoized","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","element","_len","arguments","childs","Array","_key","forEach","child","appendChild","document","createTextNode","clear","innerHTML","newClass","copyContent","select","execCommand","attributes","createElement","id","field","_len2","_key2","concat","destroy","parentNode","removeChild","e","pattern","undefined","querySelector","show","_len3","elements","_key3","style","display","hide","_len4","_key4","rewrite","_len5","_key5","_callee","address","promise","_regenerator2","default","wrap","_context","prev","next","_accountCache","_helpers","accountCacheExpiration","stop","this","_callee2","account","_context2","match","StellarSdk","FederationServer","sent","account_id","abrupt","t0","selectNetwork","Network","useTestNetwork","usePublicNetwork","_resolveAddress","_cacheAccount","handle","trigger","type","onClick","handler","defaultHandler","alert","issuerNode","json","tdesc","builder","operation","jsonToTdesc","user","server","_makeTransactionBuilder","_odescToOperation","operations","addOperation","build","odesc","keys","t1","done","prepare","fieldValue","Operation","_callee3","opts","loadedAccount","memoType","memoValue","_context3","timebounds","_loadAccount","TransactionBuilder","memo_type","addMemo","Memo","_callee4","publicKey","_context4","loadAccount","uriToQuery","uri","replace","queryToJson","query","isValid","specs","queries","split","index","argument","decodedValue","decode","_isTransactionField","errorObject","native","Asset","mandatoryFields","_isOperationField","tdescToJson","transactionToXdr","transaction","toEnvelope","toXDR","xdrToTransaction","xdr","Transaction","transactionToJson","options","copy","JSON","parse","stringify","signatures","tx","sequence","stripSource","_memo","_switch","_arm","_value","toString","timeBounds","line","ed25519PublicKey","sha256Hash","preAuthTx","jsonToQuery","encode","queryToUri","page","indexOf","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","fn","stylesInDom","isOldIE","all","atob","apply","getElement","target","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","refs","j","parts","addStyle","listToStyles","list","newStyles","base","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","idx","splice","createStyleElement","attrs","addAttrs","el","key","setAttribute","obj","remove","result","transform","styleIndex","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","filter","Boolean","join","cssNode","childNodes","content","hmr","locals","addressNode","parent","grandpa","title","memo_format","onclick","trNode","transactionNode","infoNode","entry","_fieldDesc","opNode","meaning","msg","weight","_odescToMeaning","fieldNode","txt","_formatOdesc","_typeof","_format","_makeHashNode","hash","textBox","_resolveAddressAndUpdate","codeNode","code","assetNode","issuer","assetsArray","assetsArrayNode","date","timestamp","Date","toLocaleString","flags","typeNode","valueNode","signerNode","setPage","_page","encodeURI","makeConverter","_network","Server","dispatch","convert","_guessType","parser","typeParser","typeTowardAll","getTdesc","then","format","catch","typeTowardAllUsingDelayed","delayed","_this","typeTowardXdr","typeTowardUri","_asyncToGenerator","mark","getJson","from","to","_this2","getFrom","getTo","converter","getQuery","xdrUri","temp","encoder","boolean","toISOString","typedValue","preparer","_callee5","preparedAsset","_context5","_callee6","preparedSigner","_context6","number","toLowerCase","threshold","min","max","num","isNaN","checker","decodeURIComponent","assetsList","parsedAsset","timeStamp","previousNetwork","numerator","denominator","check","decoder","assetLower","seed","keypair","signingPromise","Keypair","fromSecret","signers","_signingPromise","getTransaction","getXdr","eventNode","_addLoadingAnim","sign","answer","submitTransaction","loadingAnim","float","global","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","self","tryLocsList","iter","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","rootRecord","completion","rval","dispatchException","exception","context","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","err","previousPromise","callInvokeWithMethodAndArg","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","Function","g","hadRuntime","getOwnPropertyNames","oldRuntime","action","CosmicLink","_classCallCheck","makeHtmlNodes","send"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory();\n\telse\n\t\troot[\"cosmicLib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","'use strict'\n\nimport * as node from './node'\n\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * This is mostly about error handling.\n *\n * @module\n */\n\n/**\n * Set `cosmicLink` status as `status` and update statusNode.\n * All status are considered erroneous except 'signed' & 'sended'.\n * Error status should be recorder using the fail function bellow.\n * A valid cosmic link may have no status at all.\n * `status` changes are logged.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} status\n */\nexport function update (cosmicLink, status) {\n  console.log('Set status: ' + status)\n  if (cosmicLink) {\n    cosmicLink.status = status\n    _stateNode(cosmicLink).textContent = '↪ ' + status\n  }\n}\n\n/**\n * Log event into the console.\n * Append `event` to the HTML event list of `cosmicLink` (in statusNode).\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} event\n * @return {HTLMElement} The <li>event</li> inserted into events list\n */\nexport function message (cosmicLink, event) {\n  const lineNode = node.create('li', {}, event)\n  if (cosmicLink) node.append(_eventsNode(cosmicLink), lineNode)\n  return lineNode\n}\n\n/**\n * Set `cosmicLink` status as error status `status` and update statusNode.\n * This implies that the cosmic link or the underlying transaction is invalid.\n * Then, call `continuation` if any. `continuation` should be a either a\n * function or 'throw'.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\nexport function fail (cosmicLink, status, continuation) {\n  update(cosmicLink, status)\n  if (cosmicLink) node.appendClass(cosmicLink.statusNode, 'CL_error')\n  _errorContinuation(status, continuation)\n}\n\n/**\n * Append `error` to `cosmicLink`.errors and to its the HTML event list.\n * Then, call `continuation` if any. `continuation` should be a either a\n * function or 'throw'.\n * `error`s are logged.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\nexport function error (cosmicLink, error, continuation) {\n  console.log(error)\n  const errorNode = message(cosmicLink, error)\n\n  if (cosmicLink) {\n    if (!cosmicLink.errors) cosmicLink.errors = []\n    cosmicLink.errors.push(error)\n    errorNode.className = 'CL_error'\n  }\n\n  _errorContinuation(error, continuation)\n}\n\n/**\n * Return the head of `cosmicLink` statusNode.\n *\n * @private\n * @param {cosmicLink} cosmicLink\n */\nfunction _stateNode (cosmicLink) {\n  return node.grab('.CL_status', cosmicLink.statusNode)\n}\n\n/**\n * Return the list of `cosmicLink` statusNode.\n *\n * @private\n * @param {cosmicLink} cosmicLink\n */\nfunction _eventsNode (cosmicLink) {\n  return node.grab('.CL_events', cosmicLink.statusNode)\n}\n\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with *error as message.\n * If *continuation is undefined, do nothing.\n *\n * @private\n * @param {string} error\n * @param {function|'throw'} [continuation]\n */\nfunction _errorContinuation (error, continuation) {\n  if (continuation) {\n    if (continuation === 'throw') throw new Error(error)\n    else continuation(error)\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","\n/**\n * Contains Stellar transactions specification.\n *\n * @module\n */\n\n/**\n * Transaction optional fields.\n */\nexport const transactionOptionalFields = [\n  'network',\n  'source', 'fee', 'minTime', 'maxTime', 'memo'\n]\n\n/**\n * Operation mandatory fields.\n */\nexport const operationMandatoryFields = {\n  accountMerge: ['destination'],\n  allowTrust: ['assetCode', 'trustor'],\n  changeTrust: ['asset'],\n  createAccount: ['destination', 'startingBalance'],\n  createPassiveOffer: ['selling', 'buying', 'amount', 'price'],\n  inflation: [],\n  manageData: ['name'],\n  manageOffer: ['selling', 'buying', 'amount', 'price'],\n  pathPayment: ['sendAsset', 'sendMax', 'destination', 'destAsset', 'destAmount'],\n  payment: ['asset', 'destination', 'amount'],\n  setOptions: []\n}\n\n/**\n * Operation optionnal fields.\n */\nexport const operationOptionalFields = {\n  accountMerge: ['source'],\n  allowTrust: ['authorize', 'source'],\n  changeTrust: ['limit', 'source'],\n  createAccount: ['source'],\n  createPassiveOffer: ['source'],\n  inflation: ['source'],\n  manageData: ['value', 'source'],\n  manageOffer: ['offerId', 'source'],\n  pathPayment: ['path', 'source'],\n  payment: ['source'],\n  setOptions: ['inflationDest', 'clearFlags', 'setFlags', 'masterWeight',\n    'lowThreshold', 'medThreshold', 'highThreshold', 'signer', 'homeDomain',\n    'source']\n}\n\n/**\n * Field types.\n */\nexport const fieldType = {\n  amount: 'amount',\n  asset: 'asset',\n  assetCode: 'string',\n  authorize: 'boolean',\n  buying: 'asset',\n  clearFlags: 'flags',\n  destAsset: 'asset',\n  destAmount: 'amount',\n  destination: 'address',\n  fee: 'amount',\n  highThreshold: 'threshold',\n  homeDomain: 'string',\n  inflationDest: 'address',\n  limit: 'amount',\n  lowThreshold: 'threshold',\n  masterWeight: 'weight',\n  maxTime: 'date',\n  medThreshold: 'threshold',\n  memo: 'memo',\n  minTime: 'date',\n  network: 'network',\n  offerId: 'string',\n  price: 'price',\n  name: 'string',\n  path: 'assetsArray',\n  selling: 'asset',\n  sendAsset: 'asset',\n  sendMax: 'amount',\n  setFlags: 'flags',\n  signer: 'signer',\n  source: 'address',\n  startingBalance: 'amount',\n  trustor: 'address',\n  value: 'string'\n}\n","'use strict'\n\n/**\n * Various independent helpers.\n *\n * @module\n */\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nexport function delay (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nexport function timeout (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nexport function capitalize (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nexport function shorter (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n","/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @module\n */\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nexport function append (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === 'string' || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nexport function appendClass (element, newClass) {\n  element.className = element.className + ' ' + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} element\n * */\nexport function clear (element) {\n  element.innerHTML = ''\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nexport function copyContent (element) {\n  element.select()\n  document.execCommand('copy')\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nexport function create (name, attributes, ...childs) {\n  if (!name) throw new Error('Missing tag name')\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === 'string') {\n    switch (attributes.substr(0, 1)) {\n      case '#': element.id = attributes.substr(1); break\n      case '.': element.className = attributes.substr(1); break\n      default: throw new Error('Unhandled attribute')\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nexport function destroy (element) {\n  try {\n    element.innerHTML = ''\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (e) { console.log(e) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nexport function grab (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nexport function show (...elements) {\n  elements.forEach(element => element.style.display = 'block')\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nexport function hide (...elements) {\n  elements.forEach(element => element.style.display = 'none')\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nexport function rewrite (element, ...childs) {\n  clear(element)\n  append(element, ...childs)\n}\n","'use strict'\n\nimport {shorter, timeout} from './helpers'\nimport * as status from './status'\n\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @module\n */\n\n/**\n * Select the network to be used by `StellarSdk` as being `cosmicLink` current\n * network.\n *\n * @param {CL}\n */\nexport function selectNetwork (cosmicLink) {\n  switch (cosmicLink.network) {\n    case 'test':\n      StellarSdk.Network.useTestNetwork()\n      break\n    case 'public':\n      StellarSdk.Network.usePublicNetwork()\n      break\n    default: throw new Error('Invalid network: ' + cosmicLink.network)\n  }\n}\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nexport let accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst _accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function _cacheAccount (address, promise) {\n  _accountCache[address] = promise\n  await timeout(accountCacheExpiration * 1000)\n  delete _accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * In case of error, change `cosmicLink` status accordingly.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nexport function address (cosmicLink, address) {\n  if (_accountCache[address]) return _accountCache[address]\n  const promise = _resolveAddress(cosmicLink, address)\n  _cacheAccount(address, promise)\n  return promise\n}\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address` or write error/status in\n * `cosmicLink`.\n *\n * @private\n * @param {cosmicLink} cosmicLink\n * @param {string} address\n */\nasync function _resolveAddress (cosmicLink, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.fail(cosmicLink, 'Invalid address(es)')\n    status.error(cosmicLink, 'Invalid address: ' + shorter(address), 'throw')\n  }\n\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    if (!account.account_id) throw new Error('Empty account')\n    return account\n  } catch (error) {\n    console.log(error)\n    status.fail(cosmicLink, 'Unresolved address(es)')\n    status.error(cosmicLink, \"Can't resolve: \" + shorter(address), 'throw')\n  }\n}\n","'use strict'\n\nimport * as node from './node'\n\n/**\n * Contains the methods to trigger and handle events.\n *\n * @module\n */\n\n/**\n * Call handler (in any) defined for `type` in `cosmicLink`. Call it with\n * arguments `cosmicLink`, `value`, `element`; Where `element` is the clicked\n * HTML element and `value` the field value it represents.\n *\n * @param {CL}\n * @param {string} Type The type of `object` as defined in specs.js\n * @param {*}  value Field value in `transaction descriptor` format\n * @param {HTMLElement} element HTML element displaying `value`\n * @return *\n */\nexport function handle (cosmicLink, type, value, element) {\n  if (!cosmicLink || !cosmicLink.onClick) return\n  const handler = cosmicLink.onClick[type]\n  if (handler) return handler(cosmicLink, value, element)\n}\n\nexport function trigger (cosmicLink, type, value, element) {\n  return () => handle(cosmicLink, type, value, element)\n}\n\n/**\n * Default handlers for address and asset onclick events.\n *\n * @namespace\n */\nexport const defaultHandler = {}\n\ndefaultHandler.address = function address (cosmicLink, account) {\n  let message = ''\n  for (let field in account) {\n    message += field + ':\\n' + account[field] + '\\n\\n'\n  }\n  window.alert(message)\n}\n\ndefaultHandler.asset = function (cosmicLink, asset, element) {\n  const issuerNode = node.grab('.CL_assetIssuer', element)\n  if (issuerNode.style.display === 'inline') issuerNode.style.display = 'none'\n  else issuerNode.style.display = 'inline'\n}\n\n// TODO: implement a complete event handling interface.\n// Possible structure for an event object.\n// ~ {\n// ~ type: 'onClick'\n// ~ node: HTMLElement,\n// ~ operation: 0|undefined,\n// ~ field: 'address',\n// ~ value: 'GAWO...',\n// ~ }\n//\n// event.trigger(cosmicLink, eventType, [operation], [field], [value], [node], [add])\n// event.listen(cosmicLink, eventType, handler))\n","'use strict'\n\nimport {shorter} from './helpers'\n\nimport * as specs from './specs'\nimport * as status from './status'\nimport * as decode from './decode'\nimport * as resolve from './resolve'\nimport * as prepare from './prepare'\nimport * as encode from './encode'\n\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @module\n */\n\n/** ****************************    URI -> XDR    ******************************/\n\n/**\n * Extract the query string from `uri`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} uri\n * @return {string} query\n */\n\nexport function uriToQuery (cosmicLink, uri) {\n  if (!uri.match(/\\?/)) return null\n  const query = uri.replace(/^[^?]*/, '')\n  return query\n}\n\n/**\n * Build a `transaction descriptor` object from a cosmic link `query`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} query\n * @return {Object} tdesc\n */\nexport function queryToJson (cosmicLink, query) {\n  if (query.length < 2) status.fail(cosmicLink, 'Empty query', 'throw')\n\n  /// Transaction descriptor.\n  const tdesc = {}\n  /// Operation descriptor.\n  const odesc = {}\n  const operation = query.substr(1).replace(/&.*/, '')\n  let isValid = true\n\n  if (!_isOperationTypeValid(operation)) {\n    status.error(cosmicLink, 'Unknow operation: ' + operation)\n    status.fail(cosmicLink, 'Invalid query', 'throw')\n  }\n\n  const queries = query.substr(operation.length + 2).split('&')\n  for (let index in queries) {\n    const argument = queries[index]\n    const field = argument.replace(/=.*/, '')\n    let value = argument.replace(/^[^=]*=/, '')\n\n    try {\n      if (!field) continue\n      if (!value && field !== 'homeDomain') {\n        value = '(empty)'\n        status.error(cosmicLink, 'No value for: ' + field, 'throw')\n      }\n\n      const decodedValue = decode.fieldValue(cosmicLink, field, value)\n      if (_isTransactionField(field)) tdesc[field] = decodedValue\n      else odesc[field] = decodedValue\n    } catch (error) {\n      /// At this point decoding errors should already be handled.\n      /// This line catch program error for debugging purpose.\n      if (!cosmicLink.errors) status.error(cosmicLink, error)\n      isValid = false\n      const errorObject = { error: error, value: value }\n      if (_isTransactionField(field)) tdesc[field] = errorObject\n      else odesc[field] = errorObject\n    }\n  }\n\n  const native = StellarSdk.Asset.native()\n  switch (operation) {\n    case 'allowTrust':\n      if (odesc.authorize === undefined) odesc.authorize = true\n      break\n    case 'createPassiveOffer':\n    case 'manageOffer': {\n      if (odesc.buying && !odesc.selling) odesc.selling = native\n      if (odesc.selling && !odesc.buying) odesc.buying = native\n      break\n    }\n    case 'manageData':\n      if (!odesc.value) odesc.value = null\n      break\n    case 'pathPayment':\n      if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = native\n      if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = native\n      break\n    case 'payment':\n      if (!odesc.asset) odesc.asset = native\n      break\n  }\n\n  const mandatoryFields = specs.operationMandatoryFields[operation]\n  mandatoryFields.forEach(field => {\n    if (odesc[field] === undefined) {\n      isValid = false\n      status.error(cosmicLink, 'Missing mandatory field: ' + field)\n    }\n  })\n  for (let field in odesc) {\n    if (!_isOperationField(operation, field)) {\n      isValid = false\n      status.error(cosmicLink, 'Invalid field: ' + field)\n    }\n  }\n\n  tdesc.operations = [ odesc ]\n  odesc.type = operation\n  if (!isValid) status.fail(cosmicLink, 'Invalid query')\n  return tdescToJson(cosmicLink, tdesc)\n}\n\n/**\n * Returns `true` if `operation` is a valid operation type, `false` otherwise.\n *\n * @private\n * @param {string} string\n * @return {boolean}\n */\nfunction _isOperationTypeValid (string) {\n  if (specs.operationMandatoryFields[string]) return true\n  else return false\n}\n\n/**\n * Returns `true` if `string` is a valid transaction field, `false` otherwise.\n *\n * @private\n * @param {string} string\n * @return {boolean}\n */\nfunction _isTransactionField (string) {\n  if (specs.transactionOptionalFields.indexOf(string) !== -1) return true\n  else return false\n}\n\n/**\n * Returns `true` if `string` is a valid field for `operation`, `false`\n * otherwise.\n *\n * @private\n * @param {string} operation\n * @param {string} string\n * @return {boolean}\n */\nfunction _isOperationField (operation, string) {\n  if (\n    specs.operationMandatoryFields[operation].indexOf(string) === -1 &&\n    specs.operationOptionalFields[operation].indexOf(string) === -1\n  ) return false\n  else return true\n}\n\n/**\n * Returns the JSON of cosmic link `transaction descriptor`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {Object} tdesc transaction descriptor\n * @return {string} transaction descriptor JSON\n */\nexport function tdescToJson (cosmicLink, tdesc) {\n  return JSON.stringify(tdesc, null, 2)\n}\n\n/**\n * Returns the Stellar `transaction` object for `cosmicLink`'s\n * `transaction descriptor`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {Object} tdesc transaction descriptor\n * @return {Transaction}\n */\nexport async function jsonToTransaction (cosmicLink, json) {\n  if (cosmicLink.errors) {\n    throw new Error(\"Can't build transaction from invalid cosmic link.\")\n  }\n\n  const tdesc = jsonToTdesc(cosmicLink, json)\n  if (cosmicLink.status) throw cosmicLink.status\n\n  if (!tdesc.source) {\n    if (cosmicLink.user) tdesc.source = cosmicLink.user\n    else status.fail(cosmicLink, 'Missing user/source account', 'throw')\n  }\n\n  if (!cosmicLink.server) status.fail(cosmicLink, 'No server defined', 'throw')\n\n  try {\n    resolve.selectNetwork(cosmicLink)\n    const builder = await _makeTransactionBuilder(cosmicLink, tdesc)\n    const operation = await _odescToOperation(cosmicLink, tdesc.operations[0])\n    builder.addOperation(operation)\n    return builder.build()\n  } catch (error) {\n    if (!cosmicLink.errors) status.error(cosmicLink, error)\n    if (!cosmicLink.status) status.fail(cosmicLink, \"Can't build transaction\", 'throw')\n  }\n}\n\n/**\n * Returns an Operation object equivalent to cosmic link `operation descriptor`.\n *\n * @private\n * @param {CL}\n * @param {Object} odesc Operation descriptor\n * @return {Operation}\n */\nasync function _odescToOperation (cosmicLink, odesc) {\n  let operation = odesc.type\n  delete odesc.type\n\n  for (let field in odesc) {\n    const value = await prepare.fieldValue(cosmicLink, field, odesc[field])\n    odesc[field] = value\n  }\n\n  return StellarSdk.Operation[operation](odesc)\n}\n\n/**\n * Returns a TransactionBuilder for `transaction descriptor`.\n *\n * @private\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n * @return {TransactionBuilder}\n */\nasync function _makeTransactionBuilder (cosmicLink, tdesc) {\n  let opts = {}\n  if (tdesc.fee) opts.fee = tdesc.fee\n  if (tdesc.memo) opts.memo = prepare.memo(cosmicLink, tdesc.memo)\n  if (tdesc.minTime || tdesc.maxTime) {\n    opts.timebounds = { minTime: 0, maxTime: 0 }\n    if (tdesc.minTime) opts.timebounds.minTime = tdesc.minTime\n    if (tdesc.maxTime) opts.timebounds.maxTime = tdesc.maxTime\n  }\n\n  const loadedAccount = await _loadAccount(cosmicLink, tdesc.source)\n  const builder = new StellarSdk.TransactionBuilder(loadedAccount, opts)\n\n  /// Check if memo is needed for destination account.\n  const operation = tdesc.operations[0]\n  if (operation.destination) {\n    const account = await resolve.address(cosmicLink, operation.destination)\n    if (account.memo) {\n      const memoType = account.memo_type\n      const memoValue = account.memo\n      if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n        status.error(cosmicLink, 'Memo conflict', 'throw')\n      } else {\n        builder.addMemo(new StellarSdk.Memo(memoType, memoValue))\n      }\n    }\n  }\n\n  return builder\n}\n\nasync function _loadAccount (cosmicLink, address) {\n  const publicKey = await prepare.address(cosmicLink, address)\n  try {\n    return await cosmicLink.server.loadAccount(publicKey)\n  } catch (error) {\n    console.log(error)\n    status.error(cosmicLink, \"Can't find account source on current network: \" + shorter(publicKey), 'throw')\n  }\n}\n\n/**\n * Return the XDR of `transaction`.\n *\n * @param {CL}\n * @param {Transaction} transaction\n * @return {XDR}\n */\nexport function transactionToXdr (cosmicLink, transaction) {\n  return transaction.toEnvelope().toXDR('base64')\n}\n\n/** ****************************    XDR -> URI    ******************************/\n\n/**\n * Return the Transaction object equivalent to `xdr`.\n *\n * @param {CL}\n * @param {XDR} xdr\n * @return {Transaction}\n */\nexport function xdrToTransaction (cosmicLink, xdr) {\n  return new StellarSdk.Transaction(xdr)\n}\n\n/**\n * Return the `transaction descriptor` JSON equivalent to Stellar `Transaction`\n * object.\n *\n * Set options.stripSource to true for a transaction that is account-agnostic,\n * like an exchange operation for example. Ignore it for a transaction that\n * is required to be performed from the source account defined in 'XDR'\n * (example: subscription monthly fee).\n *\n * You may set options.network to the desired network.\n *\n * @param {CL}\n * @param {Transaction} transaction\n * @param {Object} options\n * @return {JSON} transaction descriptor JSON\n */\nexport function transactionToJson (cosmicLink, transaction, options = {}) {\n  const copy = JSON.parse(JSON.stringify(transaction))\n\n  if (copy.operations.length > 1) {\n    status.error(cosmicLink, \"Can't parse multi-operation transactions yet.\")\n    status.fail(cosmicLink, 'Unhandled transaction', 'throw')\n  }\n  if (copy.signatures.length > 0) {\n    status.error(cosmicLink, \"Can't handle multi-signature yet.\")\n    status.fail(cosmicLink, 'Unhandled transaction', 'throw')\n  }\n\n  delete copy.tx\n  delete copy.sequence\n  delete copy.signatures\n\n  if (!cosmicLink.user) cosmicLink.user = copy.source\n  if (options.stripSource) delete copy.source\n\n  if (copy.fee === 100) delete copy.fee\n  if (copy._memo._switch.name !== 'memoNone') {\n    copy.memo = {}\n    copy.memo.type = copy._memo._arm\n    if (copy.memo.type === 'hash' || copy.memo.type === 'retHash') {\n      copy.memo.value = transaction._memo._value.toString('hex')\n      if (copy.memo.type === 'retHash') copy.memo.type = 'return'\n    } else {\n      copy.memo.value = transaction._memo._value.toString()\n    }\n  }\n  delete copy._memo\n\n  if (copy.timeBounds) {\n    if (copy.timeBounds.minTime && copy.timeBounds.minTime !== '0') {\n      copy.minTime = copy.timeBounds.minTime\n    }\n    if (copy.timeBounds.maxTime && copy.timeBounds.maxTime !== '0') {\n      copy.maxTime = copy.timeBounds.maxTime\n    }\n    delete copy.timeBounds\n  }\n\n  var operation = copy.operations[0]\n  if (operation.limit === '922337203685.4775807') delete operation.limit\n  if (operation.value) {\n    operation.value = transaction.operations[0].value.toString()\n  }\n  if (operation.offerId === '0') delete operation.offerId\n  if (operation.path && operation.path.length === 0) delete operation.path\n  if (operation.line) {\n    operation.asset = operation.line\n    delete operation.line\n  }\n  if (operation.signer) {\n    if (operation.signer.ed25519PublicKey) {\n      operation.signer.type = 'key'\n      operation.signer.value = operation.signer.ed25519PublicKey\n      delete operation.signer.ed25519PublicKey\n    } else if (operation.signer.sha256Hash) {\n      operation.signer.type = 'hash'\n      operation.signer.value = transaction.operations[0].signer.sha256Hash.toString('hex')\n      delete operation.signer.sha256Hash\n    } else if (operation.signer.preAuthTx) {\n      operation.signer.type = 'tx'\n      operation.signer.value = transaction.operations[0].signer.preAuthTx.toString('hex')\n      delete operation.signer.preAuthTx\n    }\n  }\n\n  if (options.network !== undefined) copy.network = options.network\n\n  return JSON.stringify(copy, null, 2)\n}\n\n/**\n * Parse `transaction descriptor` from `JSON`.\n *\n * @param {CL}\n * @param {JSON} JSON transaction descriptior\n * @return {Object} transaction descriptor\n */\nexport function jsonToTdesc (cosmicLink, json) {\n  return JSON.parse(json)\n}\n\n/**\n * Return the cosmic link query equivalent to `transaction descriptor`.\n *\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n * @return {string} query\n */\nexport function jsonToQuery (cosmicLink, json) {\n  const tdesc = jsonToTdesc(cosmicLink, json)\n  const operation = tdesc.operations[0].type\n  let query = '?' + operation\n\n  specs.transactionOptionalFields.forEach(field => {\n    if (tdesc[field] !== undefined) {\n      query = query + encode.field(cosmicLink, field, tdesc[field])\n    }\n  })\n\n  const odesc = tdesc.operations[0]\n  const operationFields = specs.operationMandatoryFields[operation]\n    .concat(specs.operationOptionalFields[operation])\n\n  operationFields.forEach(field => {\n    if (odesc[field] !== undefined) {\n      query = query + encode.field(cosmicLink, field, odesc[field])\n    }\n  })\n  return query\n}\n\n/**\n * Return a complete cosmic link URI made of `query` and `cosmicLink.page`.\n * Use `https://cosmic.link/` if `cosmicLink.page` is undefined\n *\n * @param {CL}\n * @param {string} query\n * @param {string} cosmic link URI\n */\nexport function queryToUri (cosmicLink, query) {\n  return cosmicLink.page + query\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = \"/* cosmiclib styling */\\n\\n.CL_assetCode, .CL_address\\n{\\n    display: inline-block;\\n    margin: 0.1em;\\n    border: 1px solid lightgrey;\\n    background-color: #F1F1F1;\\n    border-radius: 0.2em;\\n    padding: 0.1em;\\n    color: #4C4C4C;\\n}\\n\\n.CL_assetCode:hover, .CL_address:hover\\n{\\n    cursor: pointer;\\n    background-color: lightgrey;\\n}\\n\\n.CL_asset\\n{\\n    background-color: ghostwhite;\\n    border-left: 0;\\n    border-right: 0;\\n}\\n\\n.CL_assetIssuer\\n{\\n    display: none;\\n}\\n\\n.CL_hash:hover\\n{\\n    background-color: ghostwhite;\\n    cursor: pointer;\\n}\\n\\n.CL_done\\n{\\n    border: 0.1em solid mediumseagreen;\\n    border-radius: 0.2em;\\n    background-color: lightgreen;\\n    padding: 0.1em;\\n    color: black;\\n}\\n\\n.CL_error\\n{\\n    border: 0.1em solid tomato;\\n    border-radius: 0.2em;\\n    background-color: salmon;\\n    padding: 0.1em;\\n    color: black;\\n}\\n\\n/*** Transaction node styling ***/\\n\\n.CL_transactionNode ul.CL_sideInfo\\n{\\n    border-left: 0.2em solid lightgrey;\\n    padding-left: 0.1em;\\n    margin: 0;\\n    list-style-type: none;\\n    list-style-position: inside;\\n    font-size: 0.9em;\\n}\\n\\n\\n/*** Status node styling ***/\\n\\n.CL_statusNode\\n{\\n    margin: 0.5em;\\n    border-radius: 0.2em;\\n    padding: 0;\\n}\\n\\n.CL_statusNode.CL_done\\n{\\n    border: 0.1em solid mediumseagreen;\\n    border-radius: 0.2em;\\n    background-color: white;\\n}\\n\\n.CL_statusNode.CL_error\\n{\\n    border: 0.1em solid tomato;\\n    border-radius: 0.2em;\\n    background-color: white;\\n    padding: 0;\\n}\\n\\n.CL_statusNode .CL_status\\n{\\n    display: block;\\n    margin: 0.2em;\\n    margin-left: 1em;\\n}\\n\\n.CL_statusNode .CL_events\\n{\\n    list-style-type: none;\\n    list-style-position: inside;\\n    font-size: 0.9 em;\\n    padding: 0;\\n    margin: 0;\\n}\\n\\n.CL_statusNode .CL_events li\\n{\\n    margin:0 ;\\n    border-width: 0;\\n    padding-left: 0.2em;\\n    border-radius: 0;\\n}\\n\\n.CL_statusNode .CL_events li.CL_done\\n{\\n    border-left: 0.3em solid mediumseagreen;\\n\\n}\\n\\n.CL_statusNode .CL_events li.CL_error\\n{\\n    border-left: 0.3em solid tomato;\\n}\\n\\n/* Loading animation */\\n\\n.CL_loadingAnim {\\n    display: inline-block;\\n    width: 0.7em;\\n    height: 0.7em;\\n    margin: 0 0.2em;\\n    border: 0.2em solid rgba(105,105,105,1);\\n    border-top-color: rgba(105,105,105,0.4);\\n    border-bottom-color: rgba(105,105,105,0.4);\\n    border-radius: 50%;\\n    -webkit-animation: CL_spin 1s linear infinite;\\n            animation: CL_spin 1s linear infinite;\\n}\\n\\n@-webkit-keyframes CL_spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n\\n@keyframes CL_spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n\"","\nvar content = require(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","'use strict'\n\nimport * as node from './node'\nimport {shorter} from './helpers'\n\nimport * as specs from './specs'\nimport * as status from './status'\nimport * as resolve from './resolve'\nimport * as event from './event'\n\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @module\n */\n\n/**\n * Populate `cosmicLink.transactionNode` with a description of `transaction\n * descriptor`.\n *\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n */\nexport function tdesc (cosmicLink, tdesc) {\n  const trNode = node.grab('.CL_transaction', cosmicLink.transactionNode)\n\n  let infoNode\n  specs.transactionOptionalFields.forEach(entry => {\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = node.create('ul', '.CL_sideInfo')\n      const lineNode = node.create('li', {},\n        _fieldDesc[entry] + ': ',\n        field(cosmicLink, entry, tdesc[entry])\n      )\n      node.append(infoNode, lineNode)\n    }\n  })\n\n  if (infoNode) node.append(trNode, infoNode)\n\n  try {\n    const opNode = _formatOdesc(cosmicLink, tdesc.operations[0])\n    node.append(trNode, opNode)\n  } catch (error) {\n    console.log(error)\n    status.error(cosmicLink, 'Unhandled formatting error')\n  }\n}\n\n/**\n * Transaction field meaning.\n * @private\n */\nconst _fieldDesc = {\n  source: 'Source',\n  fee: 'Fees',\n  minTime: 'Valid only after',\n  maxTime: 'Valid only before',\n  memo: 'Memo',\n\n  network: 'Network'\n}\n\n/**\n * Return an HTMLElement with `operation descriptor` in human language.\n *\n * @private\n * @param {CL}\n * @param {Object} odesc Operation Descriptor\n */\nfunction _formatOdesc (cosmicLink, odesc) {\n  const opNode = node.create('div', '.CL_operation')\n  let meaning = _odescToMeaning(odesc)\n\n  while (meaning) {\n    if (meaning.substr(0, 1) === '{') {\n      const query = meaning.substr(1).replace(/}.*/, '')\n      meaning = meaning.replace(/^[^}]*}/, '')\n      if (query === 'newline') {\n        if (meaning === '') break\n        node.append(opNode, node.create('br'))\n      } else {\n        const fieldNode = field(cosmicLink, query, odesc[query])\n        node.append(opNode, fieldNode)\n      }\n    } else {\n      const txt = meaning.replace(/{.*/, '')\n      meaning = meaning.replace(/^[^{]*/, '')\n      node.append(opNode, txt)\n    }\n  }\n  return opNode\n}\n\n/**\n * Return a string that describe the meaning of `operation descriptor`.\n *\n * @private\n * @param {Object} odesc Operation descriptor\n * @return {string} Meaning of `operation descriptor`\n */\nfunction _odescToMeaning (odesc) {\n  let msg\n  switch (odesc.type) {\n    case 'accountMerge':\n      return 'Merge account inside {destination}'\n    case 'allowTrust':\n      if (odesc.authorize) {\n        return 'Allow usage of your asset {assetCode} to {trustor}'\n      } else {\n        return 'Deny usage of your asset {assetCode} to {trustor}'\n      }\n    case 'changeTrust':\n      if (odesc.limit === '0') {\n        return 'Refuse asset {asset}'\n      } else if (odesc.limit) {\n        return 'Set holding limit as {limit} for asset {asset}'\n      } else {\n        return 'Accept asset {asset}'\n      }\n    case 'createAccount':\n      return 'Create account {destination} and send it {startingBalance} XLM'\n    case 'createPassiveOffer':\n      return 'Passive offer of {amount} {selling} at {price} {buying} / unit'\n    case 'inflation':\n      return 'Run inflation'\n    case 'manageData':\n      if (odesc.value) {\n        return \"Set data entry '{name}' as '{value}'\"\n      } else {\n        return \"Delete data entry '{name}'\"\n      }\n    case 'manageOffer':\n      if (!odesc.offerId || odesc.offerId === '0') {\n        return 'Offer {amount} {selling} at {price} {buying} / unit'\n      } else if (odesc.amount !== '0') {\n        return \"Change offer '{offerId}' to: offer {amount} {selling} at \" +\n          '{price} {buying} / unit'\n      } else {\n        return \"Delete offer '{offerId}'\"\n      }\n    case 'pathPayment':\n      msg = 'Send {destAmount} {destAsset} to {destination} for a maximum ' +\n        'of {sendMax} {sendAsset}'\n      if (odesc.path) msg += ' using conversion path: {path}'\n      return msg\n    case 'payment':\n      return 'Send {amount} {asset} to {destination}'\n    case 'setOptions':\n      msg = ''\n      if (odesc.inflationDest) {\n        msg += 'Set inflation destination to: {inflationDest}{newline}'\n      }\n      if (odesc.clearFlags) msg += 'Clear flag(s): {clearFlags}{newline}'\n      if (odesc.setFlags) msg += 'Set flag(s): {setFlags}{newline}'\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === '0') {\n          msg += 'Delete master key{newline}'\n        } else {\n          msg += 'Set master key weight at: {masterWeight}{newline}'\n        }\n      }\n      ['lowThreshold', 'medThreshold', 'highThreshold'].forEach(field => {\n        if (odesc[field]) msg += 'Set ' + field + ' at: {' + field + '}{newline}'\n      })\n      if (odesc.signer) {\n        if (odesc.signer.weight === '0') msg += 'Remove signer: {signer}{newline}'\n        else msg += 'Set signer: {signer}{newline}'\n      }\n      if (odesc.homeDomain) msg += 'Set home domain: {homeDomain}{newline}'\n      if (odesc.homeDomain === '') msg += 'Unset home domain'\n      if (!msg) msg = 'Do nothing'\n      return msg\n    default:\n      throw new Error('Unknow operation: ' + odesc.type)\n  }\n}\n\n/**\n * Return an HTML element exposing `value`.\n *\n * @param {CL}\n * @param {string} field The field name of `value` as defined in `spec.js`\n * @return {HTLMElement} `value` formatted in HTML/CSS\n */\nexport function field (cosmicLink, field, value) {\n  let type = specs.fieldType[field]\n  if (!type) throw new Error('Unknow field: ' + field)\n\n  if (typeof value === 'object' && value.error) type = 'error'\n\n  const formatter = _format[type] || _format.string\n  const fieldNode = formatter(cosmicLink, value)\n\n  fieldNode.className = 'CL_' + type\n  fieldNode.onClick = event.trigger(cosmicLink, type, value, fieldNode)\n  return fieldNode\n}\n\n/******************************************************************************/\n\nlet _format = {}\n\n_format.string = function (cosmicLink, string) {\n  return document.createTextNode(string)\n}\n\n_format.error = function (cosmicLink, error) {\n  const errorNode = node.create('span', '.CL_error', error.value)\n  errorNode.title = 'Invalid value'\n  return errorNode\n}\n\n_format.address = function (cosmicLink, address) {\n  const addressNode = node.create('span',\n    { title: 'Resolving...', className: 'CL_address' },\n    shorter(address),\n    node.create('span', '.CL_loadingAnim')\n  )\n\n  _resolveAddressAndUpdate(cosmicLink, address, addressNode)\n  return addressNode\n}\n\nasync function _resolveAddressAndUpdate (cosmicLink, address, addressNode) {\n  try {\n    const account = await resolve.address(cosmicLink, address)\n\n    addressNode.title = account.account_id\n    if (account.memo) {\n      addressNode.title += `\\nMemo (${account.memo_format}): ${account.memo}`\n    }\n\n    addressNode.onclick = event.trigger(cosmicLink, 'address', account,\n      addressNode)\n  } catch (error) {\n    console.log(error)\n    addressNode.title = \"Can't resolve address\"\n    node.appendClass(addressNode, 'CL_error')\n\n    const parent = addressNode.parentNode\n    if (parent.className === 'CL_assetIssuer') {\n      parent.style.display = 'inline'\n    }\n  }\n\n  node.destroy(node.grab('.CL_loadingAnim', addressNode))\n  const grandpa = addressNode.parentNode.parentNode\n  if (grandpa.className === 'CL_asset') {\n    node.destroy(node.grab('.CL_loadingAnim', grandpa))\n  }\n}\n\n_format.asset = function (cosmicLink, asset) {\n  const codeNode = node.create('span', '.CL_assetCode', asset.code)\n  const issuerNode = node.create('span', '.CL_assetIssuer')\n  const assetNode = node.create('span', '.CL_asset', codeNode, issuerNode)\n\n  codeNode.onclick = event.trigger(cosmicLink, 'asset', asset, assetNode)\n\n  if (asset.issuer) {\n    codeNode.title = 'Issued by ' + asset.issuer\n    node.append(issuerNode, ' issued by ')\n    node.append(issuerNode, _format.address(cosmicLink, asset.issuer))\n    node.append(codeNode, node.create('span', '.CL_loadingAnim'))\n  } else {\n    codeNode.title = 'Native asset'\n    node.append(issuerNode, ' native asset')\n  }\n\n  return assetNode\n}\n\n_format.assetsArray = function (cosmicLink, assetsArray) {\n  const assetsArrayNode = node.create('span')\n  for (let i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) node.append(assetsArrayNode, ', ')\n    node.append(assetsArrayNode, _format.asset(cosmicLink, assetsArray[i]))\n  }\n\n  return assetsArrayNode\n}\n\n_format.date = function (cosmicLink, timestamp) {\n  const date = new Date(timestamp * 1000)\n  return node.create('span', {}, date.toLocaleString())\n}\n\n_format.flags = function (cosmicLink, flags) {\n  let string = ''\n  if (flags >= 4) {\n    string = 'immutable'\n    flags = flags - 4\n  }\n  if (flags >= 2) {\n    if (string) string = ', ' + string\n    string = 'revocable' + string\n    flags = flags - 2\n  }\n  if (+flags === 1) {\n    if (string) string = ', ' + string\n    string = 'required' + string\n  }\n\n  return node.create('span', {}, string)\n}\n\n_format.memo = function (cosmicLink, memo) {\n  const typeNode = node.create('span', '.CL_memoType', memo.type)\n  let valueNode\n  if (memo.value.length > 30) {\n    valueNode = _makeHashNode(memo.value)\n    node.appendClass(valueNode, '.CL_memoValue')\n  } else {\n    valueNode = node.create('span', '.CL_memoValue', memo.value)\n  }\n  return node.create('span', {}, '(', typeNode, ') ', valueNode)\n}\n\n_format.price = function (cosmicLink, price) {\n  if (typeof price === 'string') {\n    return node.create('span', {}, price)\n  } else {\n    return node.create('span', {}, price.n / price.d + '')\n  }\n}\n\n_format.signer = function (cosmicLink, signer) {\n  const signerNode = node.create('span')\n  switch (signer.type) {\n    case 'key':\n      node.append(signerNode, 'Account ')\n      node.append(signerNode, _format.address(cosmicLink, signer.value))\n      break\n    case 'hash':\n      node.append(signerNode,\n        'Key whose hash is ',\n        _makeHashNode(signer.value)\n      )\n      break\n    case 'tx':\n      node.append(signerNode,\n        'Transaction whose hash is ',\n        _makeHashNode(signer.value)\n      )\n  }\n  if (signer.weight !== '0') {\n    node.append(signerNode, ' with a weight of ' + signer.weight)\n  }\n  return signerNode\n}\n\nfunction _makeHashNode (hash) {\n  return node.create('span',\n    { className: 'CL_hash', title: hash, onclick: _copier(hash) },\n    shorter(hash)\n  )\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nfunction _copier (string) {\n  return function () {\n    const textBox = node.create('textarea', {}, string)\n    node.append(node.grab('body'), textBox)\n    node.copyContent(textBox)\n    node.destroy(textBox)\n  }\n}\n","'use strict'\n\nimport {capitalize, delay} from './helpers'\n\nimport * as convert from './convert'\nimport * as format from './format'\nimport * as status from './status'\n\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @module\n */\n\n/**\n * Set `page` as the base URI for `cosmicLink`. Update the URI getter\n * accordingly.\n */\nexport function setPage (cosmicLink, page) {\n  cosmicLink._page = encodeURI(page)\n  makeConverter(cosmicLink, 'query', 'uri')\n}\n\n/**\n * Set `cosmicLink` `network`. Throw an error if `network` is not valid.\n *\n * @param {CL}\n * @param {string} network Either `public` or `test`\n */\nexport function network (cosmicLink, network) {\n  cosmicLink._network = network\n  if (network === 'test') {\n    cosmicLink.server = new StellarSdk.Server('https://horizon-testnet.stellar.org')\n  } else if (network === 'public') {\n    cosmicLink.server = new StellarSdk.Server('https://horizon.stellar.org')\n  } else {\n    cosmicLink.server = null\n    status.error(cosmicLink, 'Invalid network: ' + network, 'throw')\n  }\n}\n\n/**\n * Setup the getters for each format form `cosmicLink`, using `value` and\n * `...options` as input. The six getters are:\n * * CosmicLink.getUri()\n * * CosmicLink.getQuery()\n * * CosmicLink.getTdesc()\n * * CosmicLink.getJson()\n * * CosmicLink.getTransaction()\n * * CosmicLink.getXdr()\n * Each format offers a way to represent the same transaction. This function\n * only setup the getters, which returns a promise resolving to the transaction\n * in the corresponding format. The conversion only occurs if/when the getter\n * is called.\n *\n * @param {CL}\n * @param {string|Object} value A transaction in on of the supported format\n * @param {Object} options The options as specified for CosmicLink constructor\n * @return {void}\n */\nexport function dispatch (cosmicLink, value, options) {\n  const type = _guessType(value)\n  const parser = typeParser[type]\n  if (parser) parser(cosmicLink, value, options)\n  else typeTowardAll(cosmicLink, type, value, options)\n  if (cosmicLink.transactionNode) {\n    cosmicLink.getTdesc()\n      .then(tdesc => format.tdesc(cosmicLink, tdesc))\n      .catch(console.log)\n  }\n}\n\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n *\n * @private\n * @param {string|Object} value Either a cosmic link, a query, a `transaction\n *     descriptor` formatted as object or JSON, a Stellar Transaction object or\n *     a Stellar transaction XDR.\n * @return {string} type Type of `value`\n */\nfunction _guessType (value) {\n  let type\n  if (typeof value === 'string') {\n    const query = convert.uriToQuery('', value)\n    if (query && query.substr(0, 5) === '?xdr=') type = 'xdrUri'\n    else if (value.substr(0, 1) === '?') type = 'query'\n    else if (value.substr(0, 1) === '{') type = 'json'\n    else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = 'xdr'\n    else type = 'uri'\n  } else {\n    if (value.tx) type = 'transaction'\n    else type = 'tdesc'\n  }\n  return type\n}\n\n/**\n * Per-type customization of the generic parsing process.\n *\n * @private\n * @namespace\n */\nconst typeParser = {}\n\ntypeParser.uri = function (cosmicLink, uri) {\n  const page = uri.replace(/[?][^?]*$/, '')\n  const query = convert.uriToQuery(cosmicLink, uri)\n\n  cosmicLink._page = encodeURI(page)\n  typeParser.query(cosmicLink, query)\n}\n\n/// Immediate JSON conversion for accurate cosmicLink.network value when network\n/// field is set.\ntypeParser.query = function (cosmicLink, query) {\n  try {\n    const json = convert.queryToJson(null, query)\n    typeTowardAll(cosmicLink, 'json', json)\n    cosmicLink.getQuery = delay(() => query)\n    makeConverter(cosmicLink, 'query', 'uri')\n  } catch (error) {\n    typeTowardAll(cosmicLink, 'query', query)\n  }\n}\n\ntypeParser.xdrUri = function (cosmicLink, xdrUri) {\n  const page = xdrUri.split('?')[0]\n  if (page) cosmicLink._page = encodeURI(page)\n\n  const query = convert.uriToQuery(cosmicLink, xdrUri)\n  const temp = query.split('&')\n  const xdr = temp[0].substr(5)\n\n  let options = {}\n  temp.slice(1).forEach(entry => {\n    let field = entry.replace(/=.*$/, '')\n    let value = entry.substr(field.length + 1)\n\n    switch (field) {\n      case 'stripSource':\n        options.stripSource = true\n        break\n      case 'network':\n        if (!cosmicLink._network) cosmicLink._network = value\n        options.network = value\n        break\n      default:\n        status.fail(cosmicLink, 'Invalid query')\n        status.error(cosmicLink, 'Unknow option: ' + entry)\n    }\n  })\n\n  let transaction\n  try {\n    transaction = new StellarSdk.Transaction(xdr)\n  } catch (error) {\n    console.log(error)\n    status.fail(cosmicLink, 'Invalid XDR')\n  }\n\n  if (!cosmicLink.status) {\n    typeTowardAll(cosmicLink, 'transaction', transaction, options)\n    typeTowardAllUsingDelayed(cosmicLink, 'query', cosmicLink.getQuery)\n  } else {\n    typeTowardAllUsingDelayed(cosmicLink, 'transaction',\n      delay(() => { throw new Error(cosmicLink.status) }))\n  }\n}\n\n/**\n * Setup all formats getters for `cosmicLink` using entry point `value`, which\n * is a transaction formatted in `type`.\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {*} value The value for `type`\n */\nfunction typeTowardAll (cosmicLink, type, value, ...options) {\n  if (type === 'tdesc') {\n    type = 'json'\n    value = convert.tdescToJson(cosmicLink, value, ...options)\n  }\n\n  typeTowardAllUsingDelayed(cosmicLink, type, delay(() => value), ...options)\n}\n\n/**\n * Setup all formats getters for `cosmicLink` using entry point `delayed`. Here\n * we name `delayed` a function that returns a promise of the transaction\n * formatted in `type`.\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {function} delayed A function that return a promise for `type`\n */\nfunction typeTowardAllUsingDelayed (cosmicLink, type, delayed, ...options) {\n  const getter = 'get' + capitalize(type)\n  cosmicLink[getter] = delayed\n\n  if (type !== 'xdr') typeTowardXdr(cosmicLink, type, ...options)\n  if (type !== 'uri') typeTowardUri(cosmicLink, type, ...options)\n  cosmicLink.getTdesc = async () => {\n    const json = await cosmicLink.getJson()\n    return convert.jsonToTdesc(cosmicLink, json)\n  }\n}\n\n/**\n * Setup format getters for `cosmicLink` starting from the one following `type`\n * until xdr. For example, if `type` is 'query', it will setup\n * `cosmicLink.getJson`, `cosmicLink.getTransaction` and `cosmicLink.getXdr`.\n *\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'transaction'\n * @param {*} value The value of `type`\n */\nfunction typeTowardXdr (cosmicLink, type, ...options) {\n  switch (type) {\n    case 'uri': makeConverter(cosmicLink, 'uri', 'query', ...options)\n    case 'query': makeConverter(cosmicLink, 'query', 'json', ...options)\n    case 'json': makeConverter(cosmicLink, 'json', 'transaction', ...options)\n    case 'transaction': makeConverter(cosmicLink, 'transaction', 'xdr', ...options)\n      break\n    default: throw new Error('Invalid type: ' + type)\n  }\n}\n\n/**\n * Setup format getters for `cosmicLink` starting from the one following `type`\n * until xdr. For example, if `type` is 'json', it will setup\n * `cosmicLink.getQuery` and `cosmicLink.getUri`.\n *\n * @param {CL}\n * @param {string} type One of 'xdr', 'transaction', 'json', 'query'\n */\nfunction typeTowardUri (cosmicLink, type, ...options) {\n  switch (type) {\n    case 'xdr': makeConverter(cosmicLink, 'xdr', 'transaction', ...options)\n    case 'transaction': makeConverter(cosmicLink, 'transaction', 'json', ...options)\n    case 'json': makeConverter(cosmicLink, 'json', 'query', ...options)\n    case 'query': makeConverter(cosmicLink, 'query', 'uri', ...options)\n      break\n    default: throw new Error('Invalid type: ' + type)\n  }\n}\n\n/**\n * Setup format getter get`to` for `cosmicLink` using `from`. In other words,\n * if `from` is 'uri' and `to` is 'query', it will setup `cosmicLink.getQuery`\n * to be computed from uri.\n *\n * This function uses existing conversion functions in 'convert' module.\n * i.e.: arbitrary conversion like from query to transaction won't do.\n *\n * @param {CL}\n * @param {string} from One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {string} to One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                    'xdr'\n */\nfunction makeConverter (cosmicLink, from, to, ...options) {\n  const getFrom = 'get' + capitalize(from)\n  const getTo = 'get' + capitalize(to)\n  const converter = from + 'To' + capitalize(to)\n\n  const getter = cosmicLink[getFrom]\n  cosmicLink[getTo] = delay(async () => {\n    const value = await getter()\n    return convert[converter](cosmicLink, value, ...options)\n  })\n}\n","'use strict'\n\nimport * as specs from './specs'\n\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @module\n */\n\nexport function field (cosmicLink, field, value) {\n  let result = value\n  const type = specs.fieldType[field]\n  if (type) {\n    const encoder = exports[type]\n    if (encoder) result = encoder(cosmicLink, value)\n  }\n  if (result === undefined) return ''\n  else return '&' + field + '=' + result\n}\n\n/******************************************************************************/\n\nexport function asset (cosmicLink, asset) {\n  if (asset.issuer) return asset.code + ':' + asset.issuer\n}\n\nexport function assetsArray (cosmicLink, assetsArray) {\n  let string = ''\n  assetsArray.forEach(entry => {\n    if (string) string = string + ','\n    string = string + asset(cosmicLink, entry)\n  })\n  return string\n}\n\nexport function boolean (cosmicLink, boolean) {\n  if (!boolean) return 'false'\n}\n\nexport function date (cosmicLink, timestamp) {\n  const date = new Date(timestamp * 1000)\n  const isoString = date.toISOString()\n    .replace(/\\.00.000/, '')\n    .replace(/\\.000/, '')\n    .replace(/T00:00:00Z/, '')\n  return isoString\n}\n\nexport function memo (cosmicLink, memo) {\n  return memo.type + ':' + memo.value\n}\n\nexport function signer (cosmicLink, signer) {\n  return signer.weight + ':' + signer.type + ':' + signer.value\n}\n","'use strict'\n\nimport * as specs from './specs'\nimport * as resolve from './resolve'\nimport * as status from './status'\n\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @module\n */\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {any} value\n */\nexport async function fieldValue (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return await typedValue(cosmicLink, type, value)\n  else status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n}\n\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {any} value\n */\nexport async function typedValue (cosmicLink, type, value) {\n  const preparer = exports[type]\n  if (preparer) return await preparer(cosmicLink, value)\n  else return value\n}\n\n/******************************************************************************/\n\n/**\n * Returns the `publicKey` for `address`.\n *\n * @param {CL}\n * @param {string} Address\n * @return {publicKey}\n */\nexport async function address (cosmicLink, address) {\n  const account = await resolve.address(cosmicLink, address)\n  return account.account_id\n}\n\n/**\n * Returns the Asset object equivalent to cosmic link `asset`.\n *\n * @param {CL}\n * @param {string} asset\n * @return {Asset}\n */\nexport async function asset (cosmicLink, asset) {\n  if (asset.issuer) {\n    const publicKey = await address(cosmicLink, asset.issuer)\n    return new StellarSdk.Asset(asset.code, publicKey)\n  } else {\n    return StellarSdk.Asset.native()\n  }\n}\n\n/**\n * Returns an array of Assets object equivalent to cosmic link `assetsArray`.\n *\n * @param {CL}\n * @param {Array.string} assetsArray\n * @return {Array.Asset}\n */\nexport async function assetsArray (cosmicLink, assetsArray) {\n  let path = []\n  for (let index in assetsArray) {\n    const string = assetsArray[index]\n    const preparedAsset = await asset(cosmicLink, string)\n    path.push(preparedAsset)\n  }\n  return path\n}\n\n/**\n * Returns a Stellar Memo equivalent to cosmic link `memo`.\n *\n * @param {CL}\n * @param {Object} memo { type: t, value: v}\n * @return {Memo}\n */\nexport function memo (cosmicLink, memo) {\n  return new StellarSdk.Memo(memo.type, memo.value)\n}\n\n/**\n * Return a Signer object equivalent to cosmic link `signer`,\n *\n * @param {CL}\n * @param {Object} signer { weigth: w, type: t, value: v }\n * @return {Signer}\n */\nexport async function signer (cosmicLink, signer) {\n  let preparedSigner = { weight: signer.weight }\n  switch (signer.type) {\n    case 'key':\n      const publicKey = await address(cosmicLink, signer.value)\n      preparedSigner.ed25519PublicKey = publicKey\n      break\n    case 'hash':\n      preparedSigner.sha256Hash = signer.value\n      break\n    case 'tx':\n      preparedSigner.preAuthTx = signer.value\n      break\n  }\n  return preparedSigner\n}\n","'use strict'\n\nimport * as status from './status'\nimport * as specs from './specs'\n\n/**\n * Provide checks for varous type of field used in cosmic links. In case of\n * error, `cosmicLink` is updated accordingly.\n *\n * This module may no be type-complete and new type checks got added only when\n * needed.\n *\n * The check apply on values using the cosmic link JSON format.\n *\n * @module\n */\n\n/**\n * Generic check for numbers. Check that `value` is a number or a string\n * representing a number. `type` is for the customization of the message in case\n * of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\nexport function number (cosmicLink, value, type = 'number', min, max) {\n  const num = +value\n  if (isNaN(num)) {\n    status.error(cosmicLink, 'Invalid ' + type + ' (should be a number): ' +\n        value, 'throw')\n  } else if ((min && num < min) || (max && num > max)) {\n    status.error(cosmicLink, 'Invalid ' + type +\n      ' (should be between ' + min + ' and ' + max + ' ): ' + value, 'throw')\n  }\n}\n\n/**\n * Check that `value` respect the cosmic link JSON format for `field`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {string} value\n */\nexport function fieldValue (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (type) typedValue(cosmicLink, type, value)\n  else status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n}\n\n/**\n * Check that `value` respect the cosmic link JSON format for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {string} value\n */\nexport function typedValue (cosmicLink, type, value) {\n  const checker = exports[type]\n  if (checker) checker(cosmicLink, value)\n}\n\n/******************************************************************************/\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {object} asset\n */\nexport function asset (cosmicLink, asset) {\n  const code = asset.code.toLowerCase()\n  if (!asset.issuer && code !== 'xlm' && code !== 'native') {\n    status.error(cosmicLink, 'Missing issuer for asset: ' + code, 'throw')\n  }\n}\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {string|number} amount\n */\nexport function amount (cosmicLink, amount) {\n  number(cosmicLink, amount, 'amount')\n}\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {object} signer\n */\nexport function signer (cosmicLink, signer) {\n  number(cosmicLink, signer.weight, 'weight', 0, 255)\n  switch (signer.type) {\n    case 'key': break\n    case 'hash':\n    case 'tx':\n      if (signer.value.length !== 64 || !signer.value.match(/[0-9a-f]*/)) {\n        status.error(cosmicLink, 'Invalid hash (expecting sha256sum)', 'throw')\n      }\n      break\n    default:\n      status.error(cosmicLink, 'Invalid signer type: ' + signer.type, 'throw')\n  }\n}\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {string|number} threshold\n */\nexport function threshold (cosmicLink, threshold) {\n  number(cosmicLink, threshold, 'threshold', 0, 255)\n}\n\n/**\n * @param {cosmicLink} cosmicLink\n * @param {string|number} weight\n */\nexport function weight (cosmicLink, weight) {\n  number(cosmicLink, weight, 'weight', 0, 255)\n}\n","'use strict'\n\nimport {shorter} from './helpers'\nimport * as status from './status'\nimport * as check from './check'\nimport * as specs from './specs'\n\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `cosmicLink` object\n * and HTML nodes are updated accordingly.\n *\n * @module\n */\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {string} value\n */\nexport function fieldValue (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  const decodedValue = decodeURIComponent(value)\n  if (type) return typedValue(cosmicLink, type, decodedValue)\n  /// This error will be handled latter in convert.queryToTdesc()\n  else throw ''\n}\n\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {string} value\n */\nexport function typedValue (cosmicLink, type, value) {\n  const decoder = exports[type]\n  if (decoder) return decoder(cosmicLink, value)\n  else return value\n}\n\n/******************************************************************************/\n\n/**\n * Decode `amount` to cosmic link format.\n *\n * @param [cosmicLink] cosmicLink\n * @param [string] amount\n * @return [string]\n */\nexport function amount (cosmicLink, amount) {\n  check.amount(cosmicLink, amount)\n  return amount\n}\n\n/**\n * Decode `asset` to cosmic link format: { code: c, issuer: i }.\n *\n * @param [cosmicLink] cosmicLink\n * @param [string] asset Either 'code:issuer', 'native' or 'XLM'\n * @return [Object]\n */\nexport function asset (cosmicLink, asset) {\n  const assetLower = asset.toLowerCase()\n  if (assetLower === 'xlm' || assetLower === 'native') {\n    return { code: 'XLM' }\n  } else {\n    const temp = asset.split(':')\n    const object = { code: temp[0], issuer: temp[1] }\n    check.asset(cosmicLink, object)\n    return object\n  }\n}\n\n/**\n * Decode `assetList` to cosmic link format.\n *\n * @param [cosmicLink] cosmicLink\n * @param [string] assetsList Assets in URI format separated by comas\n * @return [Object]\n */\nexport function assetsArray (cosmicLink, assetsList) {\n  const strArray = assetsList.split(',')\n  let assetsArray = []\n  let isValid = true\n\n  strArray.forEach(value => {\n    try {\n      const parsedAsset = asset(cosmicLink, value)\n      assetsArray.push(parsedAsset)\n    } catch (error) {\n      console.log(error)\n      isValid = false\n    }\n  })\n\n  if (!isValid) status.error(cosmicLink, 'Invalid asset path', 'throw')\n  return assetsArray\n}\n\n/**\n * Convert `string` to corresponding boolean.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} string boolean\n * @return {boolean}\n */\nexport function boolean (cosmicLink, string) {\n  switch (string) {\n    case 'true': return true\n    case 'false': return false\n    default: status.error(cosmicLink, 'Invalid boolean: ' + string, 'throw')\n  }\n}\n\n/**\n * Convert an ISO 8601 formatted date string to the UNIX timestamp format used\n * in Stellar transactions.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} string ISO 8601 date\n * @return {timestamp}\n */\nexport function date (cosmicLink, string) {\n  const timeStamp = Date.parse(string)\n  if (isNaN(timeStamp)) {\n    status.error(cosmicLink, 'Invalid date (expecting ISO format): ' + string, 'throw')\n  }\n  return timeStamp / 1000\n}\n\n/**\n * Convert a string encoded `memo` (i.e. 'type:value') to an equivalent object\n * using cosmic link representation.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} memo\n * @return {object} JSON memo representation\n */\nexport function memo (cosmicLink, memo) {\n  const type = memo.replace(/:.*/, '')\n  const value = memo.replace(/^[^:]*:/, '')\n  if (type === value) {\n    status.error(cosmicLink, 'Missing memo type: ' + memo, 'throw')\n  } else {\n    return { type: type, value: value }\n  }\n}\n\n/**\n * Setup `cosmicLink.network` according to `network`. Throw an error if `network`\n * is invalid. Set error status if `network` is conflicting to `cosmicLink.network`.\n *\n * @param {CL}\n * @param {string} network\n * @return network\n */\nexport function network (cosmicLink, network) {\n  let previousNetwork = cosmicLink.network\n  cosmicLink.network = network\n\n  /// Check for network mismatch only after network validity check for\n  /// better error reporting.\n  if (previousNetwork && previousNetwork !== network) {\n    status.fail(cosmicLink, 'Network mismatch')\n    status.error(cosmicLink, 'Current account is not on network: ' + network)\n  }\n\n  return network\n}\n\n/**\n * Convert a `price` string to an equivalent object in cosmic link\n * representation, which is a string representing a number or a\n * { n: nominator, d: denominator } couple.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} price\n * @return {string|object} JSON-compatible price object\n */\nexport function price (cosmicLink, price) {\n  const numerator = price.replace(/:.*/, '')\n  const denominator = price.replace(/^[^:]*:/, '')\n  if (numerator === denominator) {\n    return amount(cosmicLink, numerator)\n  } else {\n    const object = {}\n    object.n = +amount(cosmicLink, numerator)\n    object.d = +amount(cosmicLink, denominator)\n    return object\n  }\n}\n\n/**\n * Return a JSON-compatible represention of string-formatted `signer`.\n * String format for `signer` is 'weight,type:value'.\n * Object format is { weight: 'w', type: 't', value: 'v' }\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} signer\n * @return {object}\n */\nexport function signer (cosmicLink, signer) {\n  const temp = signer.split(':')\n  if (temp.length > 3) {\n    status.error(cosmicLink, 'Invalid signer: ' + shorter(signer), 'throw')\n  }\n\n  const weight = temp[0]\n  const type = temp[1]\n  const value = temp[2]\n  const object = { type: type, value: value, weight: weight }\n\n  check.signer(cosmicLink, object)\n  return object\n}\n","'use strict'\n\nimport * as node from './node'\nimport {shorter} from './helpers'\n\nimport * as status from './status'\nimport * as convert from './convert'\nimport * as resolve from './resolve'\n\n/**\n * Contains the action methods for CosmicLink.\n *\n *\n * @module\n */\n\n/**\n * Sign `cosmicLink` using secret `Keypair`.\n * Return a promise that terminate when signing is over, and that resolve to\n * the signed Transaction object.\n *\n * @param {cosmicLink} cosmicLink\n * @param {seed} seed\n * @promise Signed Transaction object\n */\n\nexport async function sign (cosmicLink, seed) {\n  let keypair, publicKey\n  try {\n    keypair = StellarSdk.Keypair.fromSecret(seed)\n    publicKey = keypair.publicKey()\n  } catch (error) {\n    console.log(error)\n    throw new Error('Invalid secret seed')\n  }\n\n  if (cosmicLink.status) throw new Error(\"Can't sign invalid transaction\")\n  if (cosmicLink.signers && cosmicLink.signers.indexOf(publicKey) !== -1) {\n    throw new Error('Transaction already signed with this key')\n  }\n\n  const signingPromise = _signingPromise(cosmicLink, keypair, publicKey)\n\n  /// Immediatly update getters so that we get correct results even if dev\n  /// doesn't call cosmicLink.sign() with await.\n  cosmicLink.getTransaction = function () { return signingPromise }\n  cosmicLink.getXdr = function () {\n    return signingPromise.then(transaction =>\n      convert.transactionToXdr(cosmicLink, transaction)\n    )\n  }\n\n  await signingPromise\n}\n\nasync function _signingPromise (cosmicLink, keypair, publicKey) {\n  const transaction = await cosmicLink.getTransaction()\n  const eventNode = status.message(cosmicLink, 'Signing...')\n  _addLoadingAnim(eventNode)\n\n  try {\n    resolve.selectNetwork(cosmicLink)\n    transaction.sign(keypair)\n  } catch (error) {\n    console.log(error)\n    node.destroy(eventNode)\n    status.error(cosmicLink,\n      'Failed to sign with key: ' + shorter(publicKey),\n      'throw'\n    )\n  }\n\n  node.rewrite(eventNode, 'Signed with ' + shorter(publicKey))\n  if (!cosmicLink.signers) cosmicLink.signers = []\n  cosmicLink.signers.push(publicKey)\n\n  return transaction\n}\n\n/**\n * Send `cosmicLink`'s transaction to `server`. It should have been signed\n * beforehand.\n * Return a promise that terminate when submission is over.\n *\n * @param {CL}\n * @param {Server} [server=cosmicLink.server] Stellar SDK Server object\n * @return {Object} The server response\n */\nexport async function send (cosmicLink, server) {\n  if (!server) server = cosmicLink.server\n\n  const transaction = await cosmicLink.getTransaction()\n  if (!cosmicLink.signers) throw new Error(\"Can't send unsigned transaction\")\n\n  let eventNode = status.message(cosmicLink, 'Sending transaction...')\n  _addLoadingAnim(eventNode)\n\n  let answer\n  try {\n    answer = await server.submitTransaction(transaction)\n    node.rewrite(eventNode, 'Transaction submitted')\n    status.update(cosmicLink, 'Submitted')\n    node.appendClass(cosmicLink.statusNode, 'CL_done')\n  } catch (error) {\n    console.log(error)\n    node.destroy(eventNode)\n    status.error(cosmicLink, 'Transaction submission failed', 'throw')\n  }\n\n  return answer\n}\n\n/**\n * Add a loading animation inside `parent`.\n *\n * @private\n * @param {HTMLElement} parent\n */\nfunction _addLoadingAnim (parent) {\n  const loadingAnim = node.create('span', '.CL_loadingAnim')\n  parent.insertBefore(loadingAnim, parent.firstChild)\n  loadingAnim.style.float = 'left'\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","'use strict'\n\nimport * as action from './action'\nimport * as node from './node'\nimport * as event from './event'\nimport * as parse from './parse'\nimport './cosmic-lib.css'\n\n/**\n * A `CosmicLink` object represents a Stellar transaction. It can be created\n * from an actual cosmic link or any link build with a cosmic link query, but\n * also from a Stellar Transaction object or its XDR representation.\n *\n * Additionally, it can be parsed from a `transaction descriptor`, which the\n * simplified format `CosmicLink`s are using to represent Stellar transaction.\n * This `transaction descriptor` can be written in its objectified form\n * (referred as `tdesc`) or stringified form (referred as `json`).\n *\n * To make a `CosmicLink` object, you'll need to provide the network on wich\n * it is valid, and may want to provide a default user, which could be your\n * accountID or the accountID of anybody using your service.\n *\n * @constructor\n * @param {*} transaction\n * @param {test|public} [userNetwork] The Stellar network to use, will be public\n *     by default.\n * @param {string} [userAddress] This is the fallback source address when none\n *     is specified from the transaction.\n * @param {Object} options Additional options\n */\n// --- Constructor ---\n// new CosmicLink(uri, \"[userNetwork]\", \"[userAddress]\")\n// new CosmicLink(query, \"[userNetwork]\", \"[userAddress]\")\n// new CosmicLink(transaction, \"[userNetwork]\", \"[userAddress]\", {options...})\n// new CosmicLink(xdr, \"[userNetwork]\", \"[userAddress]\", {options...})\n//\n// --- Options for transaction & xdr ---\n// stripSource = true   < Don't keep source account when converting to URI\n// network = ...        < Specify a network for this transaction\n//\n// --- Formats (get) ---\n// CosmicLink.getUri()          < Return a promise of the URI string\n// CosmicLink.getQuery()        < Return a promise of the query string\n// CosmicLink.getJson()         < Return stringified JSON of the object\n// CosmicLink.getTdesc()        < Return a promise of the transaction descriptor\n// CosmicLink.getTransaction()  < Return a promise of the transaction\n// CosmicLink.getXdr()          < Return a promise of the transaction's XDR\n//\n// --- Formats (parse) ---    <<< Update everything on the go >>>\n// *CosmicLink.parse          < Same use than constructor. Update the link.\n//\n// --- Datas ---           <<< Update everything on the go >>>\n// CosmicLink.user         < User address\n// *CosmicLink.aliases     < Local aliases for public keys\n// CosmicLink.network      < Test/Public network\n// CosmicLink.server       < The horizon server to use\n// CosmicLink.status       < Status of the CosmicLink (valid or specific error)\n// CosmicLink.errors       < An array of errors (or undefined if no error)\n// CosmicLink.page         < The base URI, without the query\n//\n// --- Actions ---\n// *CosmicLink.resolve()       < Resolve addresses and fetch sequence for offline signing\n// CosmicLink.sign(\"seed\")     < Sign the transaction\n// CosmicLink.send(\"[server]\") < Send the transaction to the network\n//\n// --- Tools ---\n// *CosmicLink.builder         < Builder akin to StellarSdk.TransactionBuilder\n// CosmicLink.onClick.format   < For onClick events on the HTML description\n// *CosmicLink.onParse.format  < Trigger when cosmicLink is re-parsed\n//\n// --- HTML Nodes ---\n// CosmicLink.transactionNode  < HTML description of the transaction\n// CosmicLink.statusNode       < HTML box for the signing & sending status\n\nexport class CosmicLink {\n  constructor (transaction, network, user, options) {\n    this.user = user\n    if (network) this.network = network\n\n    this._page = 'https://cosmic.link/'\n    this.onClick = event.defaultHandler\n\n    makeHtmlNodes(this)\n\n    parse.dispatch(this, transaction, options)\n\n    /// Fallback to public only when network is not set from the URI.\n    if (!this.network) this.network = 'public'\n  }\n\n  /// Actions\n  async sign (seed) { await action.sign(this, seed) }\n  async send (server) { await action.send(this, server) }\n\n  /// Datas\n  get page () {\n    return this._page\n  }\n  set page (uri) {\n    parse.setPage(this, uri)\n  }\n\n  get network () { return this._network }\n  set network (network) { parse.network(this, network) }\n}\n\nfunction makeHtmlNodes (cosmicLink) {\n  let transactionNode = node.grab('#CL_transactionNode')\n  if (transactionNode) {\n    node.clear(transactionNode)\n    transactionNode.className = 'CL_transactionNode'\n  } else {\n    transactionNode = node.create('div', '.CL_transactionNode')\n  }\n  node.append(transactionNode, node.create('div', '.CL_transaction'))\n\n  let statusNode = node.grab('#CL_statusNode')\n  if (statusNode) {\n    node.clear(statusNode)\n    statusNode.className = 'CL_statusNode'\n  } else {\n    statusNode = node.create('div', '.CL_statusNode')\n    node.append(transactionNode, statusNode)\n  }\n  node.append(statusNode,\n    node.create('span', '.CL_status'),\n    node.create('ul', '.CL_events')\n  )\n\n  cosmicLink.transactionNode = transactionNode\n  cosmicLink.statusNode = statusNode\n}\n"],"sourceRoot":""}
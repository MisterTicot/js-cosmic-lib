{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/status.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/helpers.js","webpack://cosmicLib/../stellar-authenticator/node_modules/babel-runtime/regenerator/index.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/specs.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/node.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/resolve.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/event.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/check.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/parse.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/format.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/aliases.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/defaults.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/index.js","webpack://cosmicLib/(webpack)/buildin/global.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/polyfill.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/extra/cosmic-lib.css?95d3","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/extra/cosmic-lib.css","webpack://cosmicLib/./node_modules/style-loader/lib/addStyles.js","webpack://cosmicLib/./node_modules/style-loader/lib/urls.js","webpack://cosmicLib/external \"stellar-sdk\"","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/cosmiclink.js","webpack://cosmicLib/../stellar-authenticator/node_modules/regenerator-runtime/runtime-module.js","webpack://cosmicLib/../stellar-authenticator/node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/action.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/convert.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/decode.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/prepare.js","webpack://cosmicLib/../stellar-authenticator/src/cosmic-lib/encode.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__19__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","status","node","errorContinuation","error","continuation","Error","update","cosmicLink","console","log","_statusNode","grab","textContent","fail","errorStatus","appendClass","statusNode","errors","push","errorsNode","lineNode","append","populateHtmlNode","index","helpers","delay","thunk","firstCall","memoized","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","copy","textBox","copyContent","destroy","specs","transactionOptionalFields","operationMandatoryFields","accountMerge","allowTrust","changeTrust","createAccount","createPassiveOffer","inflation","manageData","manageOffer","pathPayment","payment","setOptions","operationOptionalFields","fieldType","amount","asset","assetCode","assetIssuer","authorize","buying","clearFlags","destAsset","destAmount","destination","fee","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","maxTime","medThreshold","memo","memoHash","memoText","minTime","network","offerId","price","path","selling","sendAsset","sendMax","sequence","setFlags","signer","signerAddress","signerHash","signerTx","signerWeight","source","startingBalance","trustor","fieldDesc","types","field","type","find","entry","_loop","element","_len","arguments","childs","Array","_key","forEach","child","appendChild","document","createTextNode","newClass","className","clear","innerHTML","select","execCommand","attributes","createElement","id","_len2","_key2","apply","concat","parentNode","removeChild","pattern","undefined","querySelector","show","_len3","elements","_key3","style","display","hide","_len4","_key4","rewrite","_len5","_key5","_callee","address","promise","_regenerator2","default","wrap","_context","prev","next","accountCache","accountCacheExpiration","stop","_callee2","account","publicKey","alias","_context2","match","StellarSdk","FederationServer","sent","account_id","memo_type","aliases","abrupt","t0","_callee7","tdesc","sources","accounts","_context7","operations","map","user","keys","t1","done","Network","useTestNetwork","testServer","usePublicNetwork","publicServer","Server","getSignature","_this","_asyncToGenerator","mark","_callee8","keypair","hint","_context8","transaction","getTdesc","signatures","Keypair","fromPublicKey","signatureHint","toString","signature","addressResolver","cacheAccount","_ref3","_callee3","server","accountResponse","short","_context3","loadAccount","message","_x5","_x6","_x7","getSourceAccount","_ref4","_callee4","_context4","getSource","_x8","accountSigners","_ref5","_callee5","_context5","signers","_x9","_x10","_x11","_ref6","_callee6","_index","StrKey","_context6","transactionSources","weight","replace","decodeSha256Hash","decodePreAuthTx","sort","a","b","_x12","hasSigned","_ref9","_callee9","_context9","getSigners","t2","_x15","_x16","_x17","_ref10","_callee10","txHash","caller","_context10","transactions","_x18","_x19","event","setClickHandler","callback","clickHandlers","clearClickHandler","callClickHandler","eventObject","handler","allFormats","handleFormat","format","handlers","then","catch","addFormatHandler","formatHandlers","removeFormatHandler","filter","callFormatHandlers","formats","check","checker","number","min","max","num","isNaN","integer","parseInt","code","toLowerCase","issuer","assetsArray","isValid","boolean","flags","_typeof","threshold","parse","convert","page","_page","encodeURI","makeConverter","_network","dispatch","options","query","uriToQuery","tx","guessType","parser","typeParser","typeTowardAll","stripSource","stripSequence","typeTowardXdr","stripSignatures","uri","split","xdrUri","temp","xdr","tdescToJson","typeTowardAllUsingDelayed","delayed","typeTowardUri","json","getJson","jsonToTdesc","from","to","_this2","getFrom","getTo","converter","addressNode","parent","animation","grandpa","title","memoexports","clickEventData","_ref","trNode","infoNode","operation","opNode","transactionNode","_x","odesc","sourceNode","meaning","msg","operationMeaning","fieldNode","txt","clickableNode","onclick","extra","_ref2","signersNode","titleNode","listNode","signerNode","_x2","errorNode","resolveAddressAndUpdate","codeNode","issuerNode","assetNode","assetsArrayNode","date","timestamp","Date","toLocaleString","hash","typeNode","valueNode","add","assign","remove","publicKeys","anchorsdestinationsall","defaults","addAliases","removeAliases","array","window","alert","preimage","prompt","sign","global","CosmicLink","g","Function","eval","e","predicate","TypeError","len","thisArg","k","kValue","configurable","writable","target","varArgs","nextSource","nextKey","content","hmr","transform","insertInto","locals","stylesInDom","isOldIE","fn","memoize","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","item","domStyle","refs","j","parts","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","before","removeStyleElement","idx","indexOf","splice","createStyleElement","attrs","addAttrs","el","setAttribute","obj","result","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","Boolean","join","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","action","_classCallCheck","initCosmicLink","keypairs_or_preimage","send","aliasesArg","_user","_htmlNode","makeHtmlNodes","htmlNode","_transactionNode","_signersNode","nodes","hadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","err","previousPromise","callInvokeWithMethodAndArg","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","allFine","_short","_short2","getTransaction","hasSigner","signHashX","keypairHint","makeSigningPromise","_toConsumableArray","response","submitTransaction","_x3","_x4","prepare","Operation","opts","loadedAccount","baseAccount","builder","memoType","memoValue","timebounds","Account","sub","_baseAccount","TransactionBuilder","addMemo","Memo","decode","encode","queryToJson","queries","unshift","checkOperationType","argument","isTransactionField","isOperationField","decodedValue","errorObject","XLM","mandatoryFields","Asset","native","isOperationTypeValid","jsonToTransaction","makeTransactionBuilder","odescToOperation","addOperation","build","transactionToXdr","toEnvelope","toXDR","xdrToTransaction","Transaction","xdrToQuery","transactionToJson","_memo","_switch","_arm","_value","timeBounds","line","ed25519PublicKey","sha256Hash","preAuthTx","jsonToQuery","_loop2","fields","queryToUri","decodeURIComponent","decoder","assetLower","assetsList","timeStamp","numerator","denominator","preparer","preparedAsset","preparedSigner","_x13","_x14","encodedValue","encoder","toISOString"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"stellar-sdk\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"stellar-sdk\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory(require(\"stellar-sdk\"));\n\telse\n\t\troot[\"cosmicLib\"] = factory(root[\"stellar-sdk\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__19__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","'use strict'\n\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * This is mostly about error handling.\n *\n * @exports status\n */\nconst status = exports\n\nconst node = require('./node')\n\n/**\n * Set `cosmicLink` status as `status` and update statusNode.\n * All status are considered erroneous.\n * Error status should be recorded using the fail function bellow.\n * A valid cosmic link may have no status at all.\n * `status` changes are logged.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} status\n */\nstatus.update = function (cosmicLink, status) {\n  if (cosmicLink.status) return\n  console.log('Set status: ' + status)\n  if (cosmicLink) cosmicLink.status = status\n\n  if (cosmicLink._statusNode) {\n    const title = node.grab('.CL_status', cosmicLink._statusNode)\n    title.textContent = status\n  }\n}\n\n/**\n * Set `cosmicLink` status as error status `status` and update statusNode.\n * This implies that the cosmic link or the underlying transaction is invalid.\n * Then, call `continuation` if any. `continuation` should be a either a\n * function or 'throw'.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\nstatus.fail = function (cosmicLink, errorStatus, continuation) {\n  status.update(cosmicLink, errorStatus)\n  if (cosmicLink._statusNode) node.appendClass(cosmicLink.statusNode, 'CL_error')\n  errorContinuation(errorStatus, continuation)\n}\n\n/**\n * Append `error` to `cosmicLink`.errors and to the HTML display.\n * Then, call `continuation` if any. `continuation` should be a either a\n * function or 'throw'.\n * `error`s are logged.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\nstatus.error = function (cosmicLink, error, continuation) {\n  console.log(error)\n\n  if (cosmicLink) {\n    if (!cosmicLink.errors) cosmicLink.errors = []\n    cosmicLink.errors.push(error)\n  }\n  if (cosmicLink._statusNode) {\n    const errorsNode = node.grab('.CL_events', cosmicLink._statusNode)\n    const lineNode = node.create('li', '.CL_error', error)\n    node.append(errorsNode, lineNode)\n  }\n\n  errorContinuation(error, continuation)\n}\n\n/**\n * Populate `cosmicLink.statusNode` with status anderrors from\n * `cosmicLink.errors`.\n *\n * @param {CL}\n */\nstatus.populateHtmlNode = function (cosmicLink) {\n  if (cosmicLink.status) {\n    const titleNode = node.grab('.CL_status', cosmicLink.statusNode)\n    titleNode.textContent = cosmicLink.status\n  }\n  if (cosmicLink.errors) {\n    const errorsNode = node.grab('.CL_events', cosmicLink.statusNode)\n    for (let index in cosmicLink.errors) {\n      const error = cosmicLink.errors[index]\n      node.append(errorsNode, node.create('li', '.CL_error', error))\n    }\n  }\n}\n\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with *error as message.\n * If `continuation` is undefined, do nothing.\n *\n * @private\n * @param {string} error\n * @param {function|'throw'} [continuation]\n */\nfunction errorContinuation (error, continuation) {\n  if (continuation) {\n    if (continuation === 'throw') throw new Error(error)\n    else continuation(error)\n  }\n}\n","'use strict'\n/**\n * Various independent helpers.\n *\n * @exports helpers\n */\nconst helpers = exports\n\nconst node = require('./node')\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nhelpers.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nhelpers.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nhelpers.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nhelpers.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nhelpers.copy = function (string) {\n  const textBox = node.create('textarea', {}, string)\n  node.append(node.grab('body'), textBox)\n  node.copyContent(textBox)\n  node.destroy(textBox)\n}\n","module.exports = require(\"regenerator-runtime\");\n","'use_strict'\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\nconst specs = exports\n\n/**\n * Transaction optional fields.\n */\nspecs.transactionOptionalFields = [\n  'network', 'memo', 'source', 'sequence',\n  'minTime', 'maxTime', 'fee'\n]\n\n/**\n * Operation mandatory fields.\n */\nspecs.operationMandatoryFields = {\n  accountMerge: ['destination'],\n  allowTrust: ['assetCode', 'trustor'],\n  changeTrust: ['asset'],\n  createAccount: ['destination', 'startingBalance'],\n  createPassiveOffer: ['selling', 'buying', 'amount', 'price'],\n  inflation: [],\n  manageData: ['name'],\n  manageOffer: ['selling', 'buying', 'amount', 'price'],\n  pathPayment: ['sendAsset', 'sendMax', 'destination', 'destAsset', 'destAmount'],\n  payment: ['asset', 'destination', 'amount'],\n  setOptions: []\n}\n\n/**\n * Operation optionnal fields.\n */\nspecs.operationOptionalFields = {\n  accountMerge: ['source'],\n  allowTrust: ['authorize', 'source'],\n  changeTrust: ['limit', 'source'],\n  createAccount: ['source'],\n  createPassiveOffer: ['source'],\n  inflation: ['source'],\n  manageData: ['value', 'source'],\n  manageOffer: ['offerId', 'source'],\n  pathPayment: ['path', 'source'],\n  payment: ['source'],\n  setOptions: ['inflationDest', 'clearFlags', 'setFlags', 'masterWeight',\n    'lowThreshold', 'medThreshold', 'highThreshold', 'signer', 'homeDomain',\n    'source']\n}\n\n/**\n * Field types.\n */\nspecs.fieldType = {\n  amount: 'amount',\n  asset: 'asset',\n  assetCode: 'string',\n  assetIssuer: 'address',\n  authorize: 'boolean',\n  buying: 'asset',\n  clearFlags: 'flags',\n  destAsset: 'asset',\n  destAmount: 'amount',\n  destination: 'address',\n  fee: 'amount',\n  highThreshold: 'threshold',\n  homeDomain: 'string',\n  inflationDest: 'address',\n  limit: 'amount',\n  lowThreshold: 'threshold',\n  masterWeight: 'weight',\n  maxTime: 'date',\n  medThreshold: 'threshold',\n  memo: 'memo',\n  memoHash: 'hash',\n  memoText: 'string',\n  minTime: 'date',\n  network: 'network',\n  offerId: 'string',\n  price: 'price',\n  name: 'string',\n  path: 'assetsArray',\n  selling: 'asset',\n  sendAsset: 'asset',\n  sendMax: 'amount',\n  sequence: 'sequence',\n  setFlags: 'flags',\n  signer: 'signer',\n  signerAddress: 'address',\n  signerHash: 'hash',\n  signerTx: 'hash',\n  signerWeight: 'weight',\n  source: 'address',\n  startingBalance: 'amount',\n  trustor: 'address',\n  value: 'string'\n}\n\n/**\n * Transaction field meaning.\n */\nspecs.fieldDesc = {\n  source: 'Source',\n  fee: 'Fees',\n  minTime: 'Valid only after',\n  maxTime: 'Valid only before',\n  memo: 'Memo',\n\n  network: 'Network',\n  sequence: 'Sequence'\n}\n\n/**\n * An array of each valid type for fields.\n */\nspecs.types = []\nfor (let field in specs.fieldType) {\n  const type = specs.fieldType[field]\n  specs.types.find(entry => entry === type) || specs.types.push(type)\n}\n","'use_strict'\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports node\n */\nconst node = exports\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nnode.append = function (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === 'string' || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nnode.appendClass = function (element, newClass) {\n  element.className += ' ' + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} element\n * */\nnode.clear = function (element) {\n  element.innerHTML = ''\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nnode.copyContent = function (element) {\n  element.select()\n  return document.execCommand('copy')\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nnode.create = function (name, attributes, ...childs) {\n  if (!name) throw new Error('Missing tag name')\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === 'string') {\n    switch (attributes.substr(0, 1)) {\n      case '#': element.id = attributes.substr(1); break\n      case '.': element.className = attributes.substr(1); break\n      default: throw new Error('Unhandled attribute')\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) node.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nnode.destroy = function (element) {\n  try {\n    element.innerHTML = ''\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (error) { console.error(error) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nnode.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nnode.show = function (...elements) {\n  elements.forEach(element => element.style.display = 'block')\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nnode.hide = function (...elements) {\n  elements.forEach(element => element.style.display = 'none')\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nnode.rewrite = function (element, ...childs) {\n  node.clear(element)\n  node.append(element, ...childs)\n}\n","'use strict'\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require('./helpers')\nconst status = require('./status')\n\n/**\n * Select the network to be used by `StellarSdk` as being `cosmicLink` current\n * network.\n *\n * @param {CL}\n */\nresolve.network = function (cosmicLink, network) {\n  switch (network) {\n    case 'test':\n      StellarSdk.Network.useTestNetwork()\n      return testServer\n    case 'public':\n      StellarSdk.Network.usePublicNetwork()\n      return publicServer\n    default: throw new Error('Invalid network: ' + network)\n  }\n}\n\nconst testServer = new StellarSdk.Server('https://horizon-testnet.stellar.org')\nconst publicServer = new StellarSdk.Server('https://horizon.stellar.org')\n\n/**\n * Configure for how much time the resolved addresses are kept in cache,\n * in seconds. The default is set to 5 minutes to avoid resolving to an outdated\n * address.\n *\n * @const\n */\nresolve.accountCacheExpiration = 5 * 60\n\n/**\n * Contains promise of previously fetched accounts.\n *\n * @private\n * @type {Object}\n */\nconst accountCache = {}\n\n/**\n * Cache `promise` resolving to `address`'s account for `accountCacheExpiration`\n * seconds.\n *\n * @private\n * @param {string} address\n * @param {Promise} promise\n */\nasync function cacheAccount (address, promise) {\n  accountCache[address] = promise\n  await helpers.timeout(resolve.accountCacheExpiration * 1000)\n  delete accountCache[address]\n}\n\n/**\n * Return a promise that resolve to `address` account object, as defined in\n * JavaScript Stellar SDK API reference. `address` can be either a Stellar public\n * key or a federated address (account*example.org).\n * Returned results are cached and re-usable.\n *\n * In case of error, change `cosmicLink` status accordingly.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} address\n * @return {Promise} Resolve to `address` account object\n */\nresolve.address = function (cosmicLink, address) {\n  if (accountCache[address]) return accountCache[address]\n  const promise = addressResolver(cosmicLink, address)\n  cacheAccount(address, promise)\n  return promise\n}\n\n/**\n * Helper for the previous resolve.address function.\n * Resolve to an account object for `address` or write error/status in\n * `cosmicLink`.\n *\n * @private\n * @param {cosmicLink} cosmicLink\n * @param {string} address\n */\nasync function addressResolver (cosmicLink, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.fail(cosmicLink, 'Invalid address(es)')\n    status.error(cosmicLink, 'Invalid address: ' + helpers.shorter(address), 'throw')\n  }\n\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    const publicKey = account.account_id\n    if (!publicKey) throw new Error('Empty account')\n    if (!account.memo_type && account.memo !== undefined) delete account.memo\n    if (address !== publicKey) account.address = address\n    const alias = cosmicLink.aliases[publicKey]\n    if (alias) account.alias = alias\n    return account\n  } catch (error) {\n    console.error(error)\n    status.fail(cosmicLink, 'Unresolved address(es)')\n    status.error(cosmicLink, \"Can't resolve: \" + helpers.shorter(address), 'throw')\n  }\n}\n\n/**\n * Return the AccountResponse object for `address` on `network`.\n *\n * @param {CL}\n * @param {string} address A public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The account response\n */\nresolve.account = async function (cosmicLink, address, network) {\n  const server = resolve.network(cosmicLink, network)\n  const account = await resolve.address(cosmicLink, address)\n  const publicKey = account.account_id\n  try {\n    const accountResponse = await server.loadAccount(publicKey)\n    return accountResponse\n  } catch (error) {\n    console.error(error)\n    const short = helpers.shorter(address)\n    error.message = `Empty account: ${short}`\n    status.error(cosmicLink, `Empty account: ${short}`, 'throw')\n  }\n}\n\n/**\n * Returns the source AccountResponse object for `cosmicLink`\n *\n * @param {CL}\n * @return {Object} The account response\n */\nresolve.getSourceAccount = async function (cosmicLink) {\n  const source = await cosmicLink.getSource()\n  try {\n    const account = await resolve.account(cosmicLink, source, cosmicLink.network)\n    return account\n  } catch (error) {\n    status.fail(cosmicLink, 'Empty source account', 'throw')\n  }\n}\n\n/**\n * Return the signers for the account at `address` on `network`.\n *\n * @param {CL}\n * @param {string} address Either a public key or a federated address\n * @param {string} network Either 'test' or 'public'\n * @return {Object} The signers object from the account response\n */\nresolve.accountSigners = async function (cosmicLink, address, network) {\n  const account = await resolve.account(cosmicLink, address, network)\n  return account.signers\n}\n\n/**\n * Return an array containing the legit signers for `cosmicLink` transaction.\n *\n * @param {CL}\n * @return {Array} Signers\n */\nresolve.signers = async function (cosmicLink) {\n  const tdesc = await cosmicLink.getTdesc()\n  const sources = await transactionSources(cosmicLink, tdesc)\n\n  const signers = []\n  for (let index in sources) {\n    const source = sources[index]\n    const account = await resolve.account(cosmicLink, source, cosmicLink.network)\n\n    for (let index in account.signers) {\n      const entry = account.signers[index]\n      const StrKey = StellarSdk.StrKey\n      const signer = { weight: entry.weight, value: entry.key }\n      signer.type = entry.type.replace(/^.*_/, '')\n      if (signer.type === 'hash') signer.value = StrKey.decodeSha256Hash(entry.key).toString('hex')\n      if (signer.type === 'tx') {\n        signer.value = StrKey.decodePreAuthTx(entry.key).toString('hex')\n      }\n      signer.getSignature = getSignature(cosmicLink, signer)\n      signers.push(signer)\n    }\n  }\n\n  return signers.sort((a, b) => b.weight - a.weight)\n}\n\nasync function transactionSources (cosmicLink, tdesc) {\n  const sources = tdesc.operations.map(entry => entry.source)\n  sources.push(tdesc.source || cosmicLink.user)\n\n  let accounts = {}\n  for (let index in sources) {\n    const source = sources[index]\n    if (!source) continue\n    const account = await resolve.address(cosmicLink, source)\n    accounts[account.account_id] = account\n  }\n\n  return Object.keys(accounts)\n}\n\nfunction getSignature (cosmicLink, signer) {\n  return helpers.delay(async () => {\n    switch (signer.type) {\n      case 'tx':\n        try {\n          await resolve.transaction(cosmicLink, signer.value)\n          return true\n        } catch (error) {\n          return false\n        }\n      case 'hash': return false\n      case 'key':\n        const tdesc = await cosmicLink.getTdesc()\n        if (!tdesc.signatures) return false\n\n        const keypair = StellarSdk.Keypair.fromPublicKey(signer.value)\n        const hint = keypair.signatureHint().toString('base64')\n        return tdesc.signatures.find(entry => {\n          if (entry.hint === hint) return entry.signature\n        })\n    }\n  })\n}\n\nresolve.hasSigned = async function (cosmicLink, type, value) {\n  const signers = await cosmicLink.getSigners()\n  for (let index in signers) {\n    const signer = signers[index]\n    if (\n      signer.type === type &&\n      signer.value === value &&\n      await signer.getSignature()\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nresolve.transaction = async function (cosmicLink, txHash) {\n  const caller = cosmicLink.server.transactions()\n  return caller.transaction(txHash).call()\n}\n\n// ~ async function getThreshold (cosmicLink) {\n// ~ const signers = await cosmicLink.getSigners()\n// ~ const max = signers.reduce((accum, entry) => accum + entry.weight)\n// ~ const current = signers.reduce((accum, entry) => accum + entry.signature ? entry.weight : 0)\n// ~ return { current: current, max: max, required: 0 }\n// ~ }\n","'use strict'\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n */\nconst event = exports\n\nconst helpers = require('./helpers')\n\n\n/***** Click events *****/\n\nevent.setClickHandler = function (cosmicLink, fieldType, callback) {\n  cosmicLink.clickHandlers[fieldType] = callback\n}\n\nevent.clearClickHandler = function (cosmicLink, fieldType) {\n  cosmicLink.clickHandlers[fieldType] = undefined\n}\n\nevent.callClickHandler = function (cosmicLink, fieldType, eventObject) {\n  const handler = cosmicLink.clickHandlers[fieldType]\n  if (handler) handler(eventObject)\n}\n\n\n/***** Format events *****/\n\nconst allFormats = ['uri', 'query', 'tdesc', 'json', 'transaction', 'xdr']\n\nevent.addFormatHandler = function (cosmicLink, format, callback) {\n  const handlers = cosmicLink.formatHandlers\n  if (!handlers[format]) handlers[format] = []\n  handlers[format].push(callback)\n\n  handleFormat(cosmicLink, format, [callback])\n}\n\nevent.removeFormatHandler = function (cosmicLink, format, callback) {\n  const handlers = cosmicLink.formatHandlers\n  if (!handlers[format]) return\n\n  handlers[format] = handlers[format].filter(entry => entry !== callback)\n}\n\nevent.callFormatHandlers = function (cosmicLink, ...formats) {\n  if (!formats.length) formats = allFormats\n  const handlers = cosmicLink.formatHandlers\n\n  formats.forEach(entry => {\n    if (handlers[entry]) handleFormat(cosmicLink, entry, handlers[entry])\n  })\n}\n\nfunction handleFormat (cosmicLink, format, handlers) {\n  const getter = cosmicLink['get' + helpers.capitalize(format)]\n  if (!getter) return\n\n  getter().then(value => {\n    const event = { cosmicLink: cosmicLink, value: value }\n    handlers.forEach(callback => callback(event))\n  }).catch(error => {\n    const event = { cosmicLink: cosmicLink, error: error }\n    handlers.forEach(callback => callback(event))\n  })\n}\n","'use strict'\n/**\n * Provide checks for varous type of field used in cosmic links. In case of\n * error, `cosmicLink` is updated accordingly.\n *\n * This module may no be type-complete and new type checks got added only when\n * needed.\n *\n * The check apply on values using the cosmic link JSON format.\n *\n * @exports check\n */\nconst check = exports\n\nconst specs = require('./specs')\nconst status = require('./status')\n\n/**\n * Check that `field` is a valid transaction/operation field. If `value` is\n * given, check that it is valid for that `field`. If a check doesn't pass, an\n * error is throwed.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {string} [value]\n */\ncheck.field = function (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n  if (value) check.type(cosmicLink, type, value)\n}\n\n/**\n * Check that `type` is a valid transaction/operation field type. If `value` is\n * given, check that it is valid for that `type`. If a check doesn't pass, an\n * error is throwed.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {string} [value]\n */\ncheck.type = function (cosmicLink, type, value) {\n  if (!specs.types.find(entry => entry === type)) {\n    throw new Error('Invalid type: ' + type)\n  }\n  if (value) {\n    check.type(cosmicLink, type)\n    const checker = check[type]\n    if (checker) checker(cosmicLink, value)\n  }\n}\n\n/**\n * Generic check for numbers. Check that `value` is a number or a string\n * representing a number. `type` is for the customization of the message in case\n * of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.number = function (cosmicLink, value, type = 'number', min, max) {\n  const num = +value\n  if (isNaN(num)) {\n    status.error(cosmicLink,\n      `Invalid ${type} (should be a number): ${value}`,\n      'throw'\n    )\n  } else if ((min && num < min) || (max && num > max)) {\n    status.error(cosmicLink,\n      `Invalid ${type} (should be between ${min} and ${max} ): ${value}`,\n      'throw'\n    )\n  }\n}\n\n/**\n * Generic check for integers. Check that `value` is an integer or a string\n * representing an integer. `type` is for the customization of the message in\n * case of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.integer = function (cosmicLink, value, type = 'integer', min, max) {\n  check.number(cosmicLink, value, type, min, max)\n  if (parseInt(value) + '' !== value + '') {\n    status.error(cosmicLink, `Not an integer: ${value}`, 'throw')\n  }\n}\n\n/******************************************************************************/\n\ncheck.asset = function (cosmicLink, asset) {\n  const code = asset.code.toLowerCase()\n  if (!asset.issuer && code !== 'xlm' && code !== 'native') {\n    status.error(cosmicLink, 'Missing issuer for asset: ' + code, 'throw')\n  }\n}\n\ncheck.assetsArray = function (cosmicLink, assetsArray) {\n  let isValid = true\n  for (let index in assetsArray) {\n    try { check.asset(cosmicLink, assetsArray[index]) } catch (error) { isValid = false }\n  }\n  if (!isValid) throw new Error('Invalid assets array')\n}\n\ncheck.amount = function (cosmicLink, amount) {\n  check.number(cosmicLink, amount, 'amount')\n}\n\ncheck.boolean = function (cosmicLink, boolean) {\n  if (typeof boolean !== 'boolean') {\n    status.error(cosmicLink, 'Invalid boolean: ' + boolean, 'throw')\n  }\n}\n\ncheck.flags = function (cosmicLink, flags) {\n  check.integer(cosmicLink, flags, 'flags', 0, 7)\n}\n\ncheck.price = function (cosmicLink, price) {\n  if (typeof price === 'object') {\n    try {\n      check.price(null, price.n)\n      check.price(null, price.d)\n    } catch (error) {\n      status.error(cosmicLink, 'Invalid price', 'throw')\n    }\n  } else {\n    check.number(cosmicLink, price, 0)\n  }\n}\n\ncheck.signer = function (cosmicLink, signer) {\n  check.weight(cosmicLink, signer.weight)\n  switch (signer.type) {\n    case 'key': break\n    case 'hash':\n    case 'tx':\n      if (signer.value.length !== 64 || !signer.value.match(/[0-9a-f]*/)) {\n        status.error(cosmicLink, 'Invalid hash (expecting sha256sum)', 'throw')\n      }\n      break\n    default:\n      status.error(cosmicLink, 'Invalid signer type: ' + signer.type, 'throw')\n  }\n}\n\ncheck.sequence = function (cosmicLink, sequence) {\n  check.number(cosmicLink, sequence, 'sequence', 0)\n}\n\ncheck.threshold = function (cosmicLink, threshold) {\n  check.integer(cosmicLink, threshold, 'threshold', 0, 255)\n}\n\ncheck.weight = function (cosmicLink, weight) {\n  check.integer(cosmicLink, weight, 'weight', 0, 255)\n}\n","'use strict'\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\nconst parse = exports\n\nconst helpers = require('./helpers')\nconst convert = require('./convert')\nconst status = require('./status')\nconst event = require('./event')\n\n/**\n * Set `page` as the base URI for `cosmicLink`. Update the URI getter\n * accordingly.\n *\n * @param {CL}\n * @param {string} page URI basename\n */\nparse.page = function (cosmicLink, page) {\n  cosmicLink._page = encodeURI(page)\n  parse.makeConverter(cosmicLink, 'query', 'uri')\n  event.callFormatHandlers(cosmicLink, 'uri')\n}\n\n/**\n * Set `cosmicLink` `network`. Throw an error if `network` is not valid.\n *\n * @param {CL}\n * @param {string} network Either `public` or `test`\n */\nparse.network = function (cosmicLink, network) {\n  cosmicLink._network = network\n  if (network === 'test') {\n    cosmicLink.server = new StellarSdk.Server('https://horizon-testnet.stellar.org')\n  } else if (network === 'public') {\n    cosmicLink.server = new StellarSdk.Server('https://horizon.stellar.org')\n  } else {\n    cosmicLink.server = null\n    status.fail(cosmicLink, 'Invalid network')\n    status.error(cosmicLink, 'Invalid network: ' + network, 'throw')\n  }\n}\n\n/**\n * Setup the network, the format converters for cosmicLink and call the format\n * handlers.\n *\n * @param {CL}\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\nparse.dispatch = function (cosmicLink, value, options = {}) {\n  const type = guessType(value)\n  const parser = typeParser[type]\n\n  if (\n    (type === 'uri' || type === 'query' || type === 'xdrUri') &&\n    value.match('&network=')\n  ) {\n    cosmicLink._network = value.replace(/.*&network=/, '').replace(/&.*/, '')\n  }\n  parse.network(cosmicLink, cosmicLink.network)\n\n  if (parser) parser(cosmicLink, value, options)\n  else parse.typeTowardAll(cosmicLink, type, value, options)\n\n  /// A transaction with sequence number uses xdrUri format.\n  if (type === 'xdr' || type === 'transaction') {\n    if (options.stripSource || options.stripSequence) {\n      typeTowardXdr(cosmicLink, 'json')\n    } else if (options.stripSignatures) {\n      if (type === 'transaction') value.signatures = []\n      if (type === 'xdr') typeTowardXdr(cosmicLink, 'transaction')\n    }\n    if (!options.stripSource && !options.stripSequence) {\n      parse.makeConverter(cosmicLink, 'xdr', 'query', options)\n      parse.makeConverter(cosmicLink, 'query', 'uri')\n    }\n  }\n\n  event.callFormatHandlers(cosmicLink)\n}\n\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n *\n * @private\n * @param {string|Object} value Either a cosmic link, a query, a `transaction\n *     descriptor` formatted as object or JSON, a Stellar Transaction object or\n *     a Stellar transaction XDR.\n * @return {string} type Type of `value`\n */\nfunction guessType (value) {\n  let type\n  if (typeof value === 'string') {\n    const query = convert.uriToQuery('', value)\n    if (query && query.substr(0, 5) === '?xdr=') type = 'xdrUri'\n    else if (value.substr(0, 1) === '?') type = 'query'\n    else if (value.substr(0, 1) === '{') type = 'json'\n    else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = 'xdr'\n    else type = 'uri'\n  } else {\n    if (value.tx) type = 'transaction'\n    else type = 'tdesc'\n  }\n  return type\n}\n\n/**\n * Per-type customization of the generic parsing process.\n *\n * @private\n * @namespace\n */\nconst typeParser = {}\n\ntypeParser.uri = function (cosmicLink, uri) {\n  const page = uri.split('?')[0]\n  const query = convert.uriToQuery(cosmicLink, uri)\n  cosmicLink._page = encodeURI(page)\n  parse.typeTowardAll(cosmicLink, 'query', query)\n}\n\ntypeParser.xdrUri = function (cosmicLink, xdrUri) {\n  const page = xdrUri.split('?')[0]\n  if (page) cosmicLink._page = encodeURI(page)\n\n  const query = convert.uriToQuery(cosmicLink, xdrUri)\n  const temp = query.split('&')\n  const xdr = temp[0].substr(5)\n\n  let options = {}\n  temp.slice(1).forEach(entry => {\n    let field = entry.replace(/=.*$/, '')\n    let value = entry.substr(field.length + 1)\n\n    switch (field) {\n      case 'stripSignatures':\n        options.stripSignatures = true\n        break\n      case 'stripSequence':\n        options.stripSequence = true\n        break\n      case 'stripSource':\n        options.stripSource = true\n        break\n      case 'network':\n        options.network = value\n        break\n      default:\n        status.fail(cosmicLink, 'Invalid query')\n        status.error(cosmicLink, 'Unknow option: ' + entry)\n    }\n  })\n\n  parse.dispatch(cosmicLink, xdr, options)\n}\n\n/**\n * Setup all formats getters for `cosmicLink` using entry point `value`, which\n * is a transaction formatted in `type`.\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {*} value The value for `type`\n */\nparse.typeTowardAll = function (cosmicLink, type, value, ...options) {\n  if (type === 'tdesc') {\n    type = 'json'\n    value = convert.tdescToJson(cosmicLink, value, ...options)\n  }\n\n  parse.typeTowardAllUsingDelayed(cosmicLink,\n    type,\n    helpers.delay(() => value),\n    ...options)\n}\n\n/**\n * Setup all formats getters for `cosmicLink` using entry point `delayed`. Here\n * we name `delayed` a function that returns a promise of the transaction\n * formatted in `type`.\n *\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {function} delayed A function that return a promise for `type`\n */\nparse.typeTowardAllUsingDelayed = function (cosmicLink, type, delayed, ...options) {\n  const getter = 'get' + helpers.capitalize(type)\n  cosmicLink[getter] = delayed\n\n  if (type !== 'xdr') typeTowardXdr(cosmicLink, type, ...options)\n  if (type !== 'uri') typeTowardUri(cosmicLink, type, ...options)\n  cosmicLink.getTdesc = async () => {\n    const json = await cosmicLink.getJson()\n    return convert.jsonToTdesc(cosmicLink, json)\n  }\n}\n\n/**\n * Setup format getters for `cosmicLink` starting from the one following `type`\n * until xdr. For example, if `type` is 'query', it will setup\n * `cosmicLink.getJson`, `cosmicLink.getTransaction` and `cosmicLink.getXdr`.\n *\n * @private\n * @param {CL}\n * @param {string} type One of 'uri', 'query', 'json', 'transaction'\n * @param {*} value The value of `type`\n */\nfunction typeTowardXdr (cosmicLink, type, ...options) {\n  switch (type) {\n    case 'uri': parse.makeConverter(cosmicLink, 'uri', 'query', ...options)\n    case 'query': parse.makeConverter(cosmicLink, 'query', 'json', ...options)\n    case 'json': parse.makeConverter(cosmicLink, 'json', 'transaction', ...options)\n    case 'transaction': parse.makeConverter(cosmicLink, 'transaction', 'xdr', ...options)\n      break\n    default: throw new Error('Invalid type: ' + type)\n  }\n}\n\n/**\n * Setup format getters for `cosmicLink` starting from the one following `type`\n * until xdr. For example, if `type` is 'json', it will setup\n * `cosmicLink.getQuery` and `cosmicLink.getUri`.\n *\n * @private\n * @param {CL}\n * @param {string} type One of 'xdr', 'transaction', 'json', 'query'\n */\nfunction typeTowardUri (cosmicLink, type, ...options) {\n  switch (type) {\n    case 'xdr': parse.makeConverter(cosmicLink, 'xdr', 'transaction', ...options)\n    case 'transaction': parse.makeConverter(cosmicLink, 'transaction', 'json', ...options)\n    case 'json': parse.makeConverter(cosmicLink, 'json', 'query', ...options)\n    case 'query': parse.makeConverter(cosmicLink, 'query', 'uri', ...options)\n      break\n    default: throw new Error('Invalid type: ' + type)\n  }\n}\n\n/**\n * Setup format getter get`to` for `cosmicLink` using `from`. In other words,\n * if `from` is 'uri' and `to` is 'query', it will setup `cosmicLink.getQuery`\n * to be computed from uri.\n *\n * This function uses existing conversion functions in 'convert' module.\n * i.e.: arbitrary conversion like from query to transaction won't do.\n *\n * @param {CL}\n * @param {string} from One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                      'xdr'\n * @param {string} to One of 'uri', 'query', 'json', 'tdesc', 'transaction' or\n *                    'xdr'\n */\nparse.makeConverter = function (cosmicLink, from, to, ...options) {\n  /**\n   * @name CosmicLink#getUri\n   * @function\n   * @desc Returns a promise that resolves to the current transaction in URI format.\n   * @async\n   * @return {Promise}\n   */\n\n  /**\n   * @name CosmicLink#getQuery\n   * @function\n   * @desc Returns a promise that resolves to the current transaction in query format.\n   * @async\n   * @return {Promise}\n   */\n\n  /**\n   * @name CosmicLink#getJson\n   * @function\n   * @desc Returns a promise that resolves to the current transaction in json format.\n   * @async\n   * @return {Promise}\n   */\n\n  /**\n   * @name CosmicLink#getTdesc\n   * @function\n   * @desc Returns a promise that resolves to the current transaction in tdesc format.\n   * @async\n   * @return {Promise}\n   */\n\n  /**\n   * @name CosmicLink#getTransaction\n   * @function\n   * @desc Returns a promise that resolves to the current transaction in Transaction format.\n   * @async\n   * @return {Promise}\n   */\n\n  /**\n   * @name CosmicLink#getXdr\n   * @function\n   * @desc Returns a promise that resolves to the current transaction in XDR format.\n   * @async\n   * @return {Promise}\n   */\n  const getFrom = 'get' + helpers.capitalize(from)\n  const getTo = 'get' + helpers.capitalize(to)\n  const converter = from + 'To' + helpers.capitalize(to)\n\n  const getter = cosmicLink[getFrom]\n  cosmicLink[getTo] = helpers.delay(async () => {\n    const value = await getter()\n    return convert[converter](cosmicLink, value, ...options)\n  })\n}\n","'use strict'\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @exports format\n */\nconst format = exports\n\nconst helpers = require('./helpers')\nconst node = require('./node')\nconst check = require('./check')\nconst specs = require('./specs')\nconst status = require('./status')\nconst resolve = require('./resolve')\nconst event = require('./event')\n\n/**\n * Populate `cosmicLink.transactionNode` with a description of `transaction\n * descriptor`.\n *\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n */\nformat.tdesc = async function (cosmicLink) {\n  const trNode = cosmicLink.transactionNode\n  const tdesc = await cosmicLink.getTdesc()\n  node.clear(trNode)\n\n  let infoNode\n  specs.transactionOptionalFields.forEach(entry => {\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = node.create('ul', '.CL_sideInfo')\n      const lineNode = node.create('li', {},\n        specs.fieldDesc[entry] + ': ',\n        format.field(cosmicLink, entry, tdesc[entry])\n      )\n      node.append(infoNode, lineNode)\n    }\n  })\n  if (infoNode) node.append(trNode, infoNode)\n\n  /// Sort operations so that the ones with declared sources are at the end.\n  /// (makes data presentation better)\n  let operations = tdesc.operations.sort(entry => entry.source ? 1 : 0)\n\n  try {\n    for (let index in operations) {\n      const operation = tdesc.operations[index]\n      const opNode = format.operation(cosmicLink, operation)\n      node.append(trNode, opNode)\n    }\n    format.signatures(cosmicLink)\n  } catch (error) {\n    console.error(error)\n    status.error(cosmicLink, 'Unhandled formatting error')\n  }\n}\n\n/**\n * Return an HTMLElement with `operation` in human language.\n *\n * @param {CL}\n * @param {Object} odesc Operation in cosmic link JSON format\n */\nformat.operation = function (cosmicLink, odesc) {\n  const opNode = node.create('div', '.CL_operation')\n\n  if (odesc.source) {\n    node.appendClass(opNode, 'CL_sourcedOperation')\n    const sourceNode = node.create('div', '.CL_source', 'Source: ')\n    const addressNode = format.field(cosmicLink, 'source', odesc.source)\n    node.append(sourceNode, addressNode)\n    node.append(opNode, sourceNode)\n  }\n\n  let meaning = operationMeaning(odesc)\n  while (meaning) {\n    if (meaning.substr(0, 1) === '{') {\n      const query = meaning.substr(1).replace(/}.*/, '')\n      meaning = meaning.replace(/^[^}]*}/, '')\n      if (query === 'newline') {\n        if (meaning === '') break\n        node.append(opNode, node.create('br'))\n      } else {\n        const fieldNode = format.field(cosmicLink, query, odesc[query])\n        node.append(opNode, fieldNode)\n      }\n    } else {\n      const txt = meaning.replace(/{.*/, '')\n      meaning = meaning.replace(/^[^{]*/, '')\n      node.append(opNode, txt)\n    }\n  }\n  return opNode\n}\n\n/**\n * Return a string that describe the meaning of `operation descriptor`.\n *\n * @private\n * @param {Object} odesc Operation descriptor\n * @return {string} Meaning of `operation descriptor`\n */\nfunction operationMeaning (odesc) {\n  let msg\n  switch (odesc.type) {\n    case 'accountMerge':\n      return 'Merge account inside {destination}'\n    case 'allowTrust':\n      if (odesc.authorize) {\n        return 'Allow usage of your asset {assetCode} to {trustor}'\n      } else {\n        return 'Deny usage of your asset {assetCode} to {trustor}'\n      }\n    case 'changeTrust':\n      if (odesc.limit === '0') {\n        return 'Refuse asset {asset}'\n      } else if (odesc.limit) {\n        return 'Set holding limit as {limit} for asset {asset}'\n      } else {\n        return 'Accept asset {asset}'\n      }\n    case 'createAccount':\n      return 'Create account {destination} and send it {startingBalance} XLM'\n    case 'createPassiveOffer':\n      return 'Passive offer of {amount} {selling} at {price} {buying} / unit'\n    case 'inflation':\n      return 'Run inflation'\n    case 'manageData':\n      if (odesc.value) {\n        return \"Set data entry '{name}' as '{value}'\"\n      } else {\n        return \"Delete data entry '{name}'\"\n      }\n    case 'manageOffer':\n      if (!odesc.offerId || odesc.offerId === '0') {\n        return 'Offer {amount} {selling} at {price} {buying} / unit'\n      } else if (odesc.amount !== '0') {\n        return \"Change offer '{offerId}' to: offer {amount} {selling} at \" +\n          '{price} {buying} / unit'\n      } else {\n        return \"Delete offer '{offerId}'\"\n      }\n    case 'pathPayment':\n      msg = 'Send {destAmount} {destAsset} to {destination} for a maximum ' +\n        'of {sendMax} {sendAsset}'\n      if (odesc.path) msg += ' using conversion path: {path}'\n      return msg\n    case 'payment':\n      return 'Send {amount} {asset} to {destination}'\n    case 'setOptions':\n      msg = ''\n      if (odesc.inflationDest) {\n        msg += 'Set inflation destination to: {inflationDest}{newline}'\n      }\n      if (odesc.clearFlags) msg += 'Clear flag(s): {clearFlags}{newline}'\n      if (odesc.setFlags) msg += 'Set flag(s): {setFlags}{newline}'\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === '0') {\n          msg += 'Delete master key{newline}'\n        } else {\n          msg += 'Set master key weight at: {masterWeight}{newline}'\n        }\n      }\n      ['lowThreshold', 'medThreshold', 'highThreshold'].forEach(field => {\n        if (odesc[field]) msg += 'Set ' + field + ' at: {' + field + '}{newline}'\n      })\n      if (odesc.signer) {\n        if (odesc.signer.weight === '0') msg += 'Remove signer: {signer}{newline}'\n        else msg += 'Set signer: {signer}{newline}'\n      }\n      if (odesc.homeDomain) msg += 'Set home domain: {homeDomain}{newline}'\n      if (odesc.homeDomain === '') msg += 'Unset home domain'\n      if (!msg) msg = 'Do nothing'\n      return msg\n    default:\n      throw new Error('Unknow operation: ' + odesc.type)\n  }\n}\n\n/**\n * Return an HTML element exposing `value`.\n *\n * @param {CL}\n * @param {string} field The field name of `value` as defined in `spec.js`\n * @param {*} value The value of that field\n * @return {HTLMElement} `value` formatted in HTML/CSS\n */\nformat.field = function (cosmicLink, field, value) {\n  let type = specs.fieldType[field]\n  if (!type) throw new Error('Unknow field: ' + field)\n\n  check.type(cosmicLink, type)\n  if (typeof value === 'object' && value.error) type = 'error'\n  const formatter = format[type] || format.string\n  const fieldNode = formatter(cosmicLink, value)\n\n  fieldNode.className = 'CL_' + type\n\n  let clickableNode = fieldNode\n  if (type === 'asset') clickableNode = node.grab('.CL_assetCode', fieldNode)\n\n  clickableNode.onclick = function () {\n    const eventObject = {\n      cosmicLink: cosmicLink,\n      field: field,\n      fieldType: type,\n      value: value,\n      node: fieldNode,\n      extra: clickableNode.clickEventData\n    }\n    event.callClickHandler(cosmicLink, type, eventObject)\n  }\n  return fieldNode\n}\n\n/**\n * Returns an HTML node that displays signers for the transaction represented by\n * `cosmicLink`.\n *\n * @param {CL}\n * @return {HTMLElement} - A `div` element containing the signers\n */\nformat.signatures = async function (cosmicLink) {\n  const signers = await cosmicLink.getSigners()\n  const tdesc = await cosmicLink.getTdesc()\n  if (signers.length < 2 && !tdesc.signatures) return\n\n  const signersNode = cosmicLink.signersNode\n  node.clear(signersNode)\n\n  const titleNode = node.create('span', '.CL_threshold', 'Signatures')\n  const listNode = node.create('ul', '.CL_signers')\n  node.append(cosmicLink.signersNode, titleNode, listNode)\n\n  signers.forEach(entry => {\n    const signerNode = format.signer(cosmicLink, entry)\n    const animation = node.create('span', '.CL_loadingAnim')\n    const lineNode = node.create('li', null, signerNode, animation)\n    entry.node = lineNode\n    entry.getSignature().then(signature => {\n      signature && node.appendClass(lineNode, 'CL_signed')\n      node.destroy(animation)\n    })\n    node.append(listNode, lineNode)\n  })\n}\n\n/******************************************************************************/\n\nformat.string = function (cosmicLink, string) {\n  return document.createTextNode(string)\n}\n\nformat.error = function (cosmicLink, error) {\n  const errorNode = node.create('span', '.CL_error', error.value)\n  errorNode.title = 'Invalid value'\n  return errorNode\n}\n\nformat.address = function (cosmicLink, address) {\n  const addressNode = node.create('span',\n    { title: 'Resolving...', className: 'CL_address' },\n    helpers.shorter(address),\n    node.create('span', '.CL_loadingAnim')\n  )\n\n  resolveAddressAndUpdate(cosmicLink, address, addressNode)\n  return addressNode\n}\n\nasync function resolveAddressAndUpdate (cosmicLink, address, addressNode) {\n  try {\n    const account = await resolve.address(cosmicLink, address)\n\n    addressNode.title = account.account_id\n    if (account.memo) {\n      addressNode.title += `\\nMemo (${account.memoexports}): ${account.memo}`\n    }\n\n    if (account.address) addressNode.textContent = account.address\n    else if (account.alias) addressNode.textContent = account.alias\n\n    addressNode.clickEventData = { account: account }\n  } catch (error) {\n    console.error(error)\n    addressNode.title = \"Can't resolve address\"\n    node.appendClass(addressNode, 'CL_error')\n\n    const parent = addressNode.parentNode\n    if (parent.className === 'CL_assetIssuer') {\n      parent.style.display = 'inline'\n    }\n  }\n\n  const animation = node.grab('.CL_loadingAnim', addressNode)\n  if (animation) node.destroy(animation)\n  const grandpa = addressNode.parentNode.parentNode\n  if (grandpa && grandpa.className === 'CL_asset') {\n    node.destroy(node.grab('.CL_loadingAnim', grandpa))\n  }\n}\n\nformat.asset = function (cosmicLink, asset) {\n  const codeNode = node.create('span', '.CL_assetCode', asset.code)\n  const issuerNode = node.create('span', '.CL_assetIssuer')\n  const assetNode = node.create('span', '.CL_asset', codeNode, issuerNode)\n\n  if (asset.issuer) {\n    codeNode.title = 'Issued by ' + asset.issuer\n    node.append(issuerNode, ' issued by ')\n    node.append(issuerNode, format.field(cosmicLink, 'assetIssuer', asset.issuer))\n    node.append(codeNode, node.create('span', '.CL_loadingAnim'))\n  } else {\n    codeNode.title = 'Native asset'\n    node.append(issuerNode, ' native asset')\n  }\n\n  return assetNode\n}\n\nformat.assetsArray = function (cosmicLink, assetsArray) {\n  const assetsArrayNode = node.create('span')\n  for (let i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) node.append(assetsArrayNode, ', ')\n    node.append(assetsArrayNode, format.asset(cosmicLink, assetsArray[i]))\n  }\n\n  return assetsArrayNode\n}\n\nformat.date = function (cosmicLink, timestamp) {\n  const date = new Date(timestamp * 1000)\n  return node.create('span', {}, date.toLocaleString())\n}\n\nformat.hash = function (cosmicLink, hash) {\n  return node.create('span', { title: hash }, helpers.shorter(hash))\n}\n\nformat.flags = function (cosmicLink, flags) {\n  let string = ''\n  if (flags >= 4) {\n    string = 'immutable'\n    flags = flags - 4\n  }\n  if (flags >= 2) {\n    if (string) string = ', ' + string\n    string = 'revocable' + string\n    flags = flags - 2\n  }\n  if (+flags === 1) {\n    if (string) string = ', ' + string\n    string = 'required' + string\n  }\n\n  return node.create('span', {}, string)\n}\n\nformat.memo = function (cosmicLink, memo) {\n  const typeNode = node.create('span', '.CL_memoType', memo.type)\n  let valueNode\n  if (memo.value.length > 30) {\n    valueNode = format.field(cosmicLink, 'memoHash', memo.value)\n    node.appendClass(valueNode, '.CL_memoValue')\n  } else {\n    valueNode = node.create('span', '.CL_memoValue', memo.value)\n  }\n  return node.create('span', {}, '(', typeNode, ') ', valueNode)\n}\n\nformat.price = function (cosmicLink, price) {\n  if (typeof price === 'string') {\n    return node.create('span', {}, price)\n  } else {\n    return node.create('span', {}, price.n / price.d + '')\n  }\n}\n\nformat.signer = function (cosmicLink, signer) {\n  const signerNode = node.create('span')\n  switch (signer.type) {\n    case 'key':\n      node.append(signerNode, 'Account ')\n      node.append(signerNode, format.field(cosmicLink, 'signerAddress', signer.value))\n      break\n    case 'hash':\n      node.append(signerNode,\n        'Key whose hash is ',\n        format.field(cosmicLink, 'signerHash', signer.value)\n      )\n      break\n    case 'tx':\n      node.append(signerNode,\n        'Transaction ',\n        format.field(cosmicLink, 'signerTx', signer.value)\n      )\n  }\n  if (signer.weight > 1) {\n    node.append(signerNode, ' (weight: ' + signer.weight + ')')\n  }\n  return signerNode\n}\n","'use_strict'\n/**\n * Aliases handlers & most known Stellar addresses. Aliases are put together as\n * an `Object` in the form:\n * ```\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n *\n * @private\n */\nconst aliases = exports\n\n/**\n * Append `aliases` to `cosmicLink.aliases`.\n *\n * @param {CL}\n * @param {Object} aliases\n */\naliases.add = function (cosmicLink, aliases) {\n  cosmicLink.aliases = Object.assign(cosmicLink.aliases, aliases)\n}\n\n/**\n * Remove `publicKeys` from `cosmicLink.aliases`.\n *\n * @param {CL}\n * @param {Array} publicKeys An array of public keys\n */\naliases.remove = function (cosmicLink, publicKeys) {\n  publicKeys.forEach(entry => delete cosmicLink.aliases[entry])\n}\n\n/**\n * Aliases for most known anchors.\n */\naliases.anchors = {\n  'GAEDLNMCQZOSLY7Y4NW3DTEWQEVVCXYYMBDNGPPGBMQH4GFYECBI7YVK': 'anclax.com',\n  'GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4': 'apay.io',\n  'GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF': 'apay.io',\n  'GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR': 'apay.io',\n  'GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP': 'apay.io',\n  'GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC': 'astral9.io',\n  'GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP': 'charnatoken.top',\n  'GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP': 'coins.asia',\n  'GDPFSEBZO2W4TLWZO7FIMMG3QONHXYVF6LUULI6HUJS6PJLE4TRZEXLF': 'collective21.org',\n  'GA4BYMUO5D7OLGVJWZ2D5FCWU7SB63FNZ4QUU574SMNA6ELK5TZD3SO3': 'cryptomover.com',\n  'GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7': 'cryptotari.io',\n  'GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN': 'equid.co',\n  'GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW': 'flutterwave.com',\n  'GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M': 'frasindo.com',\n  'GCYK67DDGBOANS6UODJ62QWGLEB2A7JQ3XUV25HCMLT7CI23PMMK3W6R': 'golix.io',\n  'GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL': 'irene.energy',\n  'GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX': 'liquido.i-server.org',\n  'GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH': 'mobius.network',\n  'GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK': 'moni.com',\n  'GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH': 'naobtc.com',\n  'GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS': 'naobtc.com',\n  'GDGKBRCPW4C3ENNC5C64PE6U33MG52GBKFXOK5P3OSWF74DAOXRXV6OJ': 'nezly.com',\n  'GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6': 'old.repocoin.io',\n  'GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY': 'pedity.com',\n  'GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5': 'pr.network',\n  'GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B': 'repocoin.io',\n  'GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX': 'ripplefox.com',\n  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io',\n  'GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M': 'stemchain.io',\n  'GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG': 'stronghold.co',\n  'GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI': 'superlumen.org',\n  'GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN': 'sureremit.co',\n  'GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S': 'tempo.eu.com',\n  'GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3': 'thefutbolcoin.io',\n  'GCLRUZDCWBHS7VIFCT43BARPP63BHR32HMEVKXYQODA5BU6SIGFK4HL2': 'tonaira.com',\n  'GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON': 'tontinetrust.com',\n  'GA7FCCMTTSUIC37PODEL6EOOSPDRILP6OQI5FWCWDDVDBLJV72W6RINZ': 'vcbear.net',\n  'GBVAOIACNSB7OVUXJYC5UE2D4YK2F7A24T7EE5YOMN4CE6GCHUTOUQXM': 'vcbear.net',\n  'GDXTJEK4JZNSTNQAWA53RZNS2GIKTDRPEUWDXELFMKU52XNECNVDVXDI': 'vcbear.net',\n  'GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN': 'winsome.gift',\n  'GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM': 'ximcoin.com',\n  'GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5': 'xirkle.com'\n}\n\n/**\n * Aliases for most known destinations (exchanges/inflation pools/services).\n */\naliases.destinations = {\n  'GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2': 'AEX',\n  'GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A': 'Binance',\n  'GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC': 'Binance',\n  'GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL': 'Bitfinex',\n  'GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3': 'Bittrex',\n  'GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM': 'BTC38',\n  'GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7': 'Changelly',\n  'GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH': 'Exrates',\n  'GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S': 'Gate.io',\n  'GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO': 'GOPAX',\n  'GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S': 'Indodax',\n  'GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP': 'KOINEX',\n  'GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM': 'Kraken',\n  'GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT': 'Lumenaut Inflation',\n  'GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH': 'Mobius Issuer',\n  'GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES': 'NaoBTC',\n  'GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB': 'OKEX',\n  'GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L': 'PapayaBot',\n  'GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW': 'PapayaSwap',\n  'GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY': 'Pedity Issuer',\n  'GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW': 'Piiko',\n  'GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2': 'Poloniex',\n  'GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD': 'Stellar Guard',\n  'GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW': 'StellarTerm Inflation',\n  'GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI': 'Superlumen Issuer',\n  'GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM': 'XIM'\n}\n\n/**\n * Concatenated aliases.\n */\naliases.all = Object.assign({}, aliases.anchors, aliases.destinations)\n","'use_strict'\n/**\n * Library-wide configuration.\n *\n * @exports defaults\n */\nconst defaults = exports\n\nconst helpers = require('./helpers')\nconst node = require('./node')\nconst aliases = require('./aliases')\nconst event = require('./event')\n\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\ndefaults.page = 'https://cosmic.link/'\n/**\n * The default fallback network.\n * @default 'public'\n */\ndefaults.network = 'public'\n/**\n * The default fallback source address.\n * @default undefined\n */\ndefaults.user = undefined\n\n/**\n * Aliases for most known Stellar addresses. Aliases are used instead of\n * public keys when displaying addresses. This is purely for conveniency: they\n * are not a way of tying an account to an address as federated addresses are.\n * The aliases object is formed as follow:\n *\n * ```\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n */\ndefaults.aliases = aliases.all\n\n/**\n * Add new aliases or replace existing ones.\n *\n * @param {Object} aliases An object such as `{ publicKey1: name1, ..., publicKeyN: nameN }`\n */\ndefaults.addAliases = function (aliases) { aliases.add(defaults, aliases) }\n\n/**\n * Remove aliases.\n *\n * @param {Array} array An array such as `[ publicKey1, ..., publicKeyN ]`\n */\ndefaults.removeAliases = function (array) { aliases.remove(defaults, array) }\n\n/**\n * Set the click handler for `fieldType` HTML elements as `callback`.\n *\n * @example\n * cosmicLib.defaults.setClickHandler('address', showAddressPopup)\n * @example\n * cosmicLink.setClickHandler('asset', showAssetBox)\n *\n * @param {string} fieldType Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\ndefaults.setClickHandler = function (fieldType, callback) {\n  event.setClickHandler(defaults, fieldType, callback)\n}\n\n/**\n * Remove the current click handler for `fieldType`.\n *\n * @example\n * cosmicLib.defaults.clearClickHandler('address')\n * @example\n * cosmicLink.clearClickHandler('asset')\n *\n * @param {string} fieldType Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\ndefaults.clearClickHandler = function (fieldType) {\n  event.clearClickHandler(defaults, fieldType)\n}\n\n/**\n * The active format handlers. Can be defined globally (`cosmicLib.defaults.formathandlers`)\n * or for a particular CosmicLink object (`cosmicLink.formatHandlers`). Takes the\n * form:\n *\n * ```\n * cosmicLib.defaults.formatHandlers = {\n *  format1: [ callback1, ..., callbackN ],\n *  ...\n *  formatN: [ callback1, ..., callbackN ]\n * }\n * ```\n *\n * @default {}\n */\ndefaults.formatHandlers = {}\n\n/**\n * Add the format handler `callback` for `format`. `callback` will be called\n * each time a cosmicLink object sets a value for `format`, including at creation\n * time. `callback` will receive an event such as:\n *\n * > event = { cosmicLink: ..., value: ..., error: ... }\n *\n * Where `value` is set only when the format conversion resolves, and where\n * `error` is set only when format conversion fails.\n *\n * Format handlers can be added either globally (`cosmicLib.defaults.addFormatHandler`)\n * or to a specific cosmicLink object (`cosmicLink.addFormatHandler`). When\n * added to a specific cosmicLink object, `callback` is immediately called with\n * the current return value of `format`.\n *\n * @example\n * // This will update the current page URL each time a CosmicLink is parsed\n *\n * cosmicLib.defaults.addFormatHandler('query', updateDocumentUrl)\n *\n * function updateDocumentUrl (event) {\n *   if (event.value) history.replaceState({}, '', event.value)\n * }\n *\n * @param {string} format Either `uri`, `query`, `tdesc`, `json`, `transaction` or `xdr`\n * @param {function} callback A function that accept one `event` argument\n */\ndefaults.addFormatHandler = function (format, callback) {\n  event.addFormatHandler(defaults, format, callback)\n}\n\n/**\n * Remove format handler `callback` for `format`.\n *\n * @example\n * cosmicLib.defaults.removeFormatHandler('query', updateDocumentUrl)\n *\n * @alias module:defaults.removeFormatHandler\n * @param {string} format Either `uri`, `query`, `tdesc`, `json`, `transaction` or `xdr`\n * @param {function} callback A function that accept one `event` argument\n */\ndefaults.removeFormatHandler = function (format, callback) {\n  event.removeFormatHandler(defaults, format, callback)\n}\n\n/**\n * The active click handlers. Can be defined globally (`cosmicLib.defaults.clickhandlers`)\n * or for a particular CosmicLink object (`cosmicLink.clickHandlers`). Takes the\n * form:\n *\n * ```\n * cosmicLib.defaults.clickHandlers = {\n *   fieldType1: callback1,\n *   ...\n *   fieldTypeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * ```\n *  address: 'A prompt that show the address',\n *  asset: 'A function that show the asset issuer',\n *  hash: 'A function that copy the hash into the clipboard or show a prompt\n *     box to enter preimage signature when relevant'\n * ```\n */\ndefaults.clickHandlers = {\n  address: function (event) {\n    if (!event.extra) return\n    let message = ''\n    for (let field in event.extra.account) {\n      message += `${field}:\\n` + `${event.extra.account[field]}\\n\\n`\n    }\n    window.alert(message)\n  },\n  asset: function (event) {\n    const issuerNode = node.grab('.CL_assetIssuer', event.node)\n    if (issuerNode.style.display === 'inline') issuerNode.style.display = 'none'\n    else issuerNode.style.display = 'inline'\n  },\n  hash: function (event) {\n    const grandma = event.node.parentNode.parentNode.parentNode\n    if (grandma.className === 'CL_signers') {\n      const preimage = prompt('Please enter preimage:')\n      if (preimage) event.cosmicLink.sign(preimage)\n    } else {\n      helpers.copy(event.value)\n    }\n  }\n}\n","'use strict'\n\nrequire('./polyfill')\n\nif (typeof document !== 'undefined') {\n  /// Web\n  require('./extra/cosmic-lib.css')\n} else if (typeof StellarSdk === 'undefined') {\n  /// Node\n  global.StellarSdk = require('stellar-sdk')\n}\n\nexports.CosmicLink = require('./cosmiclink').CosmicLink\nexports.defaults = require('./defaults')\nexports.specs = require('./specs')\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use_strict'\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined')\n      }\n\n      var o = Object(this)\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function')\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1]\n\n      // 5. Let k be 0.\n      var k = 0\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k]\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue\n        }\n        // e. Increase k by 1.\n        k++\n      }\n\n      // 7. Return undefined.\n      return undefined\n    },\n    configurable: true,\n    writable: true\n  })\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign (target, varArgs) { // .length of function is 2\n      'use strict'\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n\n      var to = Object(target)\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index]\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    },\n    writable: true,\n    configurable: true\n  })\n}\n","\nvar content = require(\"!!../../../../js-cosmic-lib/node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../js-cosmic-lib/node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../js-cosmic-lib/node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\", function() {\n\t\tvar newContent = require(\"!!../../../../js-cosmic-lib/node_modules/postcss-loader/lib/index.js!./cosmic-lib.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \"/* cosmiclib styling */\\n\\n\\n.CL_assetCode,\\n.CL_address\\n{\\n    display: inline-block;\\n    margin: 0.1em;\\n    border: 1px solid lightgrey;\\n    background-color: #F1F1F1;\\n    border-radius: 0.2em;\\n    padding: 0.1em;\\n    color: #4C4C4C;\\n}\\n\\n.CL_assetCode:hover,\\n.CL_address:hover\\n{\\n    cursor: pointer;\\n    background-color: lightgrey;\\n}\\n\\n.CL_asset\\n{\\n    background-color: ghostwhite;\\n    border-left: 0;\\n    border-right: 0;\\n}\\n\\n.CL_assetIssuer\\n{\\n    display: none;\\n}\\n\\n.CL_hash:hover\\n{\\n    background-color: ghostwhite;\\n    cursor: pointer;\\n}\\n\\n.CL_done,\\n.CL_signed\\n{\\n    border: 0.1em solid mediumseagreen;\\n    border-radius: 0.2em;\\n    background-color: lightgreen;\\n    padding: 0.1em;\\n    color: black;\\n}\\n\\n.CL_error\\n{\\n    border: 0.1em solid tomato;\\n    border-radius: 0.2em;\\n    background-color: salmon;\\n    padding: 0.1em;\\n    color: black;\\n}\\n\\n/*** Transaction node styling ***/\\n\\n.CL_transactionNode\\n{\\n    margin: 0.5em 0;\\n}\\n\\n.CL_transactionNode ul.CL_sideInfo,\\n.CL_source\\n{\\n    border-left: 0.2em solid lightgrey;\\n    padding-left: 0.2em;\\n    margin: 0;\\n    list-style-type: none;\\n    list-style-position: inside;\\n/*\\n    font-size: 0.9em;\\n*/\\n}\\n\\n.CL_operation\\n{\\n    margin: 0.5em 0;\\n}\\n\\n.CL_sourcedOperation\\n{\\n    border-left: 0.2em solid lightgrey;\\n    padding-left: 0.2em;\\n    background-color: ghostwhite;\\n\\n}\\n\\n/*** Status/Signers node styling ***/\\n\\n.CL_statusNode,\\n.CL_signersNode\\n{\\n    margin: 0.5em;\\n    padding: 0;\\n}\\n\\n.CL_status,\\n.CL_threshold\\n{\\n    margin: 0;\\n    font-size: 0.85em;\\n    font-weight: bold;\\n    text-transform: uppercase;\\n    font-stretch: condensed;\\n}\\n\\n.CL_statusNode.CL_error\\n{\\n    background-color: white;\\n    border: none;\\n}\\n\\n.CL_events,\\n.CL_signers\\n{\\n    list-style-type: none;\\n    list-style-position: inside;\\n    font-size: 0.9 em;\\n    padding: 0;\\n    margin: 0;\\n}\\n\\n.CL_events li,\\n.CL_signers li\\n{\\n    margin:0 ;\\n    border-width: 0;\\n    padding-left: 0.2em;\\n    border-radius: 0;\\n}\\n\\n.CL_events li.CL_done,\\n.CL_signers li.CL_signed\\n{\\n    border-left: 0.3em solid mediumseagreen;\\n\\n}\\n\\n.CL_events li.CL_error\\n{\\n    border-left: 0.3em solid tomato;\\n}\\n\\n/* Loading animation */\\n\\n.CL_loadingAnim {\\n    display: inline-block;\\n    width: 0.7em;\\n    height: 0.7em;\\n    margin: 0 0.2em;\\n    border: 0.2em solid rgba(105,105,105,1);\\n    border-top-color: rgba(105,105,105,0.4);\\n    border-bottom-color: rgba(105,105,105,0.4);\\n    border-radius: 50%;\\n    -webkit-animation: CL_spin 1s linear infinite;\\n            animation: CL_spin 1s linear infinite;\\n}\\n\\n@-webkit-keyframes CL_spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n\\n@keyframes CL_spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n}\\n\"","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__19__;","'use_strict'\n\nconst helpers = require('./helpers')\nconst action = require('./action')\nconst event = require('./event')\nconst parse = require('./parse')\nconst resolve = require('./resolve')\nconst status = require('./status')\nconst aliases = require('./aliases')\nconst defaults = require('./defaults')\n\n/// Web only\nlet node, format\nif (typeof document !== 'undefined') {\n  node = require('./node')\n  format = require('./format')\n}\n\n/**\n * @class CosmicLink\n *\n * A `CosmicLink` object represents a Stellar transaction. It can be created\n * from an actual cosmic link or any link build with a cosmic query, and\n * also from a Stellar Transaction object or its XDR representation.\n *\n * Additionally, it can be parsed from a **transaction descriptor**, which the\n * simplified format used is `js-cosmic-lib` to represent Stellar transaction.\n * This transaction descriptor can be written in its objectified form\n * (referred as **tdesc**) or stringified form (referred as **json**).\n *\n * @borrows module:defaults.aliases as CosmicLink#aliases\n * @borrows module:defaults.addAliases as CosmicLink#addAliases\n * @borrows module:defaults.removeAliases as CosmicLink#removeAliases\n * @borrows module:defaults.clickHandlers as CosmicLink#clickHandlers\n * @borrows module:defaults.setClickHandler as CosmicLink#setClickHandler\n * @borrows module:defaults.clearClickHandler as CosmicLink#clearClickHandler\n * @borrows module:defaults.formatHandlers as CosmicLink#formatHandlers\n * @borrows module:defaults.addFormatHandler as CosmicLink#addFormatHandler\n * @borrows module:defaults.removeFormatHandler as CosmicLink#removeFormatHandler\n */\nexport class CosmicLink {\n  /**\n   * Create a new CosmicLink object. `transaction` can be one of the accepted\n   * format: uri, query, json, tdesc, transaction or xdr.\n   *\n   * Uri & query are link formats and are written according to the Cosmic Link\n   * protocol itself.\n   *\n   * Json & tdesc is the format this library is using internally to store\n   * transaction data. json is the stringified form, while tdesc is the\n   * objectified form. This format is made to be simple and convertible between\n   * string and object without information loss.\n   *\n   * Transaction and xdr are refering to the standard format implemented in\n   * official Stellar libraries, like\n   * [js-stellar-sdk]{@link https://github.com/stellar/js-stellar-sdk}.\n   *\n   * @param {*} transaction A transaction in one of thoses formats: `uri`, `query`,\n   *     `json`, `tdesc`, `transaction`, `xdr`\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format\n   * @param {string} options.network The fallback network: either `public` or\n   *     `test`. Please note that the query may enforce a different network.\n   * @param {string} options.user The fallback transaction source account. Will\n   *     take effect if the cosmic link doesn't include one. Note that XDR and\n   *     Transaction format always include a source account.\n   * @param {boolean} options.stripSignatures If set to a true value, will strip\n   *     out signatures for XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set to a true value, will strip\n   *     out signatures and sequence number for XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set to a true value, will strip out\n   *     signatures, sequence number and transaction source account for\n   *     XDR/Transaction formats.\n   * @return {CosmicLink} A CosmicLink object\n   */\n  constructor (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /**\n   * Re-parse this cosmic link. Usefull for implementing link editors.\n   * The parameters are the same than [Constructor]{@link CosmicLink#Constructor}.\n   *\n   * @param {*} transaction A transaction in one of thoses formats: `uri`, `query`,\n   *     `json`, `tdesc`, `transaction`, `xdr`\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format\n   * @param {string} options.network The fallback network: either `public` or\n   *     `test`. Please note that the query may enforce a different network.\n   * @param {string} options.user The fallback transaction source account. Will\n   *     take effect if the cosmic link doesn't include one. Note that XDR and\n   *     Transaction format always include a source account.\n   * @param {boolean} options.stripSignatures If set to a true value, will strip\n   *     out signatures for XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set to a true value, will strip\n   *     out signatures and sequence number for XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set to a true value, will strip out\n   *     signatures, sequence number and transaction source account for\n   *     XDR/Transaction formats.\n   * @return {CosmicLink} A CosmicLink object\n   */\n  parse (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /**\n   * Return the source address of the current transaction.\n   *\n   * @return {string} Federated address or account ID\n   */\n  async getSource () {\n    const tdesc = await this.getTdesc()\n    if (tdesc.source) return tdesc.source\n    else if (this.user) return this.user\n    else throw new Error('No source defined for this transaction')\n  }\n\n  /**\n   * Check if `value` is a legit signer for this transaction.\n   *\n   * @param {string} value An account ID, a txhash or a preimage\n   * @param {string} [type='key'] The signer type. Could be either `key`, `tx`\n   *     or `hash`.\n   * @return {Promise} A promise of a boolean telling if yes or no the signer is\n   *     legit.\n   */\n  async hasSigner (value, type = 'key') {\n    const signers = await this.getSigners()\n    return signers.find(entry => entry.value === value && entry.type === type)\n  }\n\n  /**\n   * Check if `value` has already signed the transaction.\n   *\n   * @param {string} value An account ID, a txhash or a preimage\n   * @param {string} [type='key'] The signer type. Could be either `key`, `tx`\n   *     or `hash`.\n   * @return {Promise} A promise of a boolean telling if yes or no the `value`\n   *     has already signed\n   */\n  async hasSigned (value, type = 'key') {\n    return await resolve.hasSigned(this, type, value)\n  }\n\n  /// Actions\n  /**\n   * Select the network in use in this cosmic link. Returns the corresponding\n   * Server object.\n   *\n   * @return {Server} A Stellar SDK Server object\n   */\n  selectNetwork () { return resolve.network(this, this.network) }\n  sign (...keypairs_or_preimage) { return action.sign(this, ...keypairs_or_preimage) }\n  send (server) { return action.send(this, server) }\n\n  /// Aliases\n  addAliases (aliasesArg) { aliases.add(this, aliasesArg) }\n  removeAliases (array) { aliases.remove(this, aliases) }\n\n  /// Handlers\n  setClickHandler (fieldType, callback) {\n    event.setClickHandler(this, fieldType, callback)\n  }\n  clearClickHandler (fieldType) {\n    event.clearClickHandler(this, fieldType)\n  }\n\n  addFormatHandler (format, callback) {\n    event.addFormatHandler(this, format, callback)\n  }\n  removeFormatHandler (format, callback) {\n    event.removeFormatHandler(this, format, callback)\n  }\n\n  /// Datas\n  /**\n   * The base URI to use when converting to URI format.\n   *\n   * @alias CosmicLink.page\n   */\n  get page () { return this._page }\n  set page (uri) { parse.page(this, uri) }\n\n  /**\n   * The network in use for this cosmic link.\n   *\n   * @alias CosmicLink.network\n   */\n  get network () { return this._network }\n  set network (network) { throw new Error('network is read-only') }\n\n  /**\n   * The fallback user configured for this cosmic link. It doesn't always match\n   * the transaction source, as the query may enforce another source. See\n   * {@link CosmicLink#getSource} for a method that reliably returns the source\n   * address.\n   *\n   * @alias CosmicLink.user\n   */\n  get user () { return this._user }\n  set user (user) { throw new Error('user is read-only') }\n\n  /**\n   * The HTML DOM node that displays a description of the current transaction.\n   * Contains {@link CosmicLink#transactionNode}, {@link CosmicLink#statusNode}\n   * and {@link CosmicLink#signersNode}. Please note that thoses nodes are only\n   * available in browser environment (i.e: not in node.js).\n   *\n   * If HTML your page contains an element with `id=\"CL_htmlNode\"`, this node\n   * will automatically be used as the htmlNode of any CosmicLink you create.\n   * This implies you should have onle one living at a time.\n   *\n   * @alias CosmicLink.htmlNode\n   */\n  get htmlNode () {\n    if (!this._htmlNode) makeHtmlNodes(this)\n    return this._htmlNode\n  }\n  set htmlNode (value) { this._htmlNode = value }\n\n  /**\n   * The HTML element that contains a description of the current transaction.\n   *\n   * @alias CosmicLink.transactionNode\n   */\n  get transactionNode () {\n    this.htmlNode\n    return this._transactionNode\n  }\n  set transactionNode (value) { this._transactionNode = value }\n\n  /**\n   * The HTML node that contains a description of any error that may have\n   * happened with this cosmic link.\n   *\n   * @alias CosmicLink.statusNode\n   */\n  get statusNode () {\n    this.htmlNode\n    return this._statusNode\n  }\n  set statusNode (value) { this._statusNode = value }\n\n  /**\n   * The HTML node that contains a list of missing/available signatures. Please\n   * note that it doesn't shows when there's only one signer.\n   *\n   * @alias CosmicLink.signersNode\n   */\n  get signersNode () {\n    this.htmlNode\n    return this._signersNode\n  }\n  set signersNode (value) { this._signersNode = value }\n}\n\nfunction initCosmicLink (cosmicLink, transaction, options = {}) {\n  cosmicLink._page = options.page || defaults.page\n  cosmicLink._user = options.user || defaults.user\n  /// May be overwritten by parse.dispatch()\n  cosmicLink._network = options.network || defaults.network\n\n  cosmicLink.errors = undefined\n  cosmicLink.status = undefined\n\n  cosmicLink.aliases = defaults.aliases\n  cosmicLink.clickHandlers = Object.assign({}, defaults.clickHandlers)\n  cosmicLink.formatHandlers = {}\n  for (let format in defaults.formatHandlers) {\n    const handlers = defaults.formatHandlers[format]\n    cosmicLink.formatHandlers[format] = handlers.slice(0)\n  }\n\n  /**\n   * Returns a promise of the transaction source\n   * [Account]{@link https://www.stellar.org/developers/guides/concepts/accounts.html}\n   * object from the current ledger.\n   *\n   * @alias CosmicLink#getSourceAccount\n   * @function\n   * @async\n   * @return {Promise}\n   */\n  cosmicLink.getSourceAccount = helpers.delay(() => resolve.getSourceAccount(cosmicLink))\n\n  /**\n   * Returns the legit signers for this transaction.\n   *\n   * @name CosmicLink#getSigners\n   * @function\n   * @async\n   * @return {Promise}\n   */\n  cosmicLink.getSigners = helpers.delay(() => resolve.signers(cosmicLink))\n\n  if (typeof document !== 'undefined') {\n    let htmlNode = node.grab('#CL_htmlNode')\n    if (htmlNode) makeHtmlNodes(cosmicLink, htmlNode)\n  }\n\n  parse.dispatch(cosmicLink, transaction, options)\n\n  if (cosmicLink._htmlNode) {\n    cosmicLink.getTdesc()\n      .then(tdesc => {\n        try { format.tdesc(cosmicLink) } catch (error) { console.error(error) }\n      })\n      .catch(() => {})\n  }\n}\n\nfunction makeHtmlNodes (cosmicLink, htmlNode) {\n  if (!node) return\n\n  if (htmlNode) {\n    node.clear(htmlNode)\n    htmlNode.className = 'CL_htmlNode'\n  } else htmlNode = node.create('div', '.CL_htmlNode')\n  cosmicLink._htmlNode = htmlNode\n\n  const nodes = ['_transactionNode', '_statusNode', '_signersNode']\n  for (let index in nodes) {\n    const name = nodes[index]\n    cosmicLink[name] = node.create('div', '.CL' + name)\n    node.append(htmlNode, cosmicLink[name])\n  }\n\n  node.append(cosmicLink._statusNode,\n    node.create('span', '.CL_status'),\n    node.create('ul', '.CL_events')\n  )\n\n  if (cosmicLink.getTdesc) format.tdesc(cosmicLink)\n  status.populateHtmlNode(cosmicLink)\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","'use strict'\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n */\nconst action = exports\n\nconst helpers = require('./helpers')\nconst status = require('./status')\nconst resolve = require('./resolve')\nconst parse = require('./parse')\nconst format = require('./format')\nconst event = require('./event')\n\n/**\n * Sign a CosmicLink object using `...keypairs_or_preimage`.\n * Returns a promise that resolve to the signed transaction. The CosmicLink\n * data are refreshed at promise resolution.\n *\n * @example\n * cosmicLink.sign(keypair1, keypair2)\n *  .then(function () { return cosmicLink.send() }\n *  .then(console.log)\n *  .catch(console.error)\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|preimage} keypairs_or_preimage One or more keypair, or a\n *     preimage\n * @returns {Promise} Signed Transaction object\n */\naction.sign = async function (cosmicLink, ...keypairs_or_preimage) {\n  if (cosmicLink.status) throw new Error(\"Can't sign invalid transaction\")\n  return makeSigningPromise(cosmicLink, ...keypairs_or_preimage)\n}\n\nasync function makeSigningPromise (cosmicLink, ...value) {\n  const transaction = await cosmicLink.getTransaction()\n  let allFine = true\n\n  if (typeof value[0] !== 'string') {\n    for (let index in value) {\n      const keypair = value[index]\n      const publicKey = keypair.publicKey()\n\n      if (!await cosmicLink.hasSigner(publicKey)) {\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, 'Not a legit signer: ' + short)\n        allFine = false\n        continue\n      }\n\n      if (hasSigned(transaction, keypair)) continue\n\n      try {\n        transaction.sign(keypair)\n      } catch (error) {\n        console.error(error)\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, 'Failed to sign with key: ' + short)\n        allFine = false\n        continue\n      }\n    }\n  } else if (type === 'preimage') {\n    try {\n      transaction.signHashX(value[0])\n    } catch (error) {\n      console.error(error)\n      const short = helpers.shorter(value[0])\n      status.error(cosmicLink, 'Failed to sign with preimage: ' + short, 'throw')\n    }\n  }\n\n  parse.typeTowardAll(cosmicLink, 'transaction', transaction)\n  parse.makeConverter(cosmicLink, 'xdr', 'query')\n  parse.makeConverter(cosmicLink, 'query', 'uri')\n\n  cosmicLink.getSigners = helpers.delay(() => resolve.signers(cosmicLink))\n\n  if (cosmicLink._signersNode) format.signatures(cosmicLink)\n\n  event.callFormatHandlers(cosmicLink)\n\n  if (!allFine) throw new Error('Some signers where invalid')\n  else return transaction\n}\n\nfunction hasSigned (transaction, keypair) {\n  const keypairHint = keypair.signatureHint().toString('base64')\n  const signatures = transaction.signatures\n\n  for (let index in signatures) {\n    const hint = signatures[index].hint().toString('base64')\n    if (hint === keypairHint) return true\n  }\n\n  return false\n}\n\n/**\n * Send CosmicLink transaction to `server`, or to `cosmicLink.server`. It should\n * have been signed beforehand to be validated.\n *\n * Returns a promise that resolve with horizon server response when transaction\n * is accepted, or that reject to horizon server response if transaction is\n * rejected.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {Server} [server=cosmicLink.server] A Stellar SDK [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * @return {Promise} The server response\n */\naction.send = async function (cosmicLink, server) {\n  if (!server) server = cosmicLink.server\n  const transaction = await cosmicLink.getTransaction()\n  const response = server.submitTransaction(transaction)\n  response.catch(console.log)\n  return response\n}\n","'use strict'\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @exports convert\n */\nconst convert = exports\n\nconst specs = require('./specs')\nconst status = require('./status')\nconst decode = require('./decode')\nconst resolve = require('./resolve')\nconst prepare = require('./prepare')\nconst encode = require('./encode')\nconst helpers = require('./helpers')\n\n/** ****************************    URI -> XDR    ******************************/\n\n/**\n * Extract the query string from `uri`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} uri\n * @return {string} query\n */\n\nconvert.uriToQuery = function (cosmicLink, uri) {\n  if (!uri.match(/\\?/)) return null\n  const query = uri.replace(/^[^?]*/, '')\n  return query\n}\n\n/**\n * Build a `transaction descriptor` object from a cosmic link `query`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} query\n * @return {Object} tdesc\n */\nconvert.queryToJson = function (cosmicLink, query) {\n  if (query.length < 2) status.fail(cosmicLink, 'Empty query', 'throw')\n\n  const tdesc = {}\n  const odesc = []\n  let isValid = true\n\n  let operation = query.substr(1).replace(/&.*/, '')\n  const queries = query.substr(operation.length + 2).split('&')\n  let mode = operation\n  if (operation === 'transaction') {\n    mode = 'transaction'\n  } else {\n    odesc.unshift({ type: mode })\n    checkOperationType(cosmicLink, operation)\n  }\n\n  for (let index in queries) {\n    const argument = queries[index]\n    const field = argument.replace(/=.*/, '')\n    let value = argument.replace(/^[^=]*=/, '')\n\n    try {\n      if (!field) continue\n\n      if (!value && field !== 'homeDomain' && field !== 'value') {\n        value = '(empty)'\n        status.error(cosmicLink, 'No value for: ' + field, 'throw')\n      }\n\n      if (mode === 'transaction' && field === 'operation') {\n        operation = value\n        odesc.unshift({ type: value })\n        checkOperationType(cosmicLink, value)\n        continue\n      }\n\n      if (operation === 'transaction' && !isTransactionField(field)) {\n        status.error(cosmicLink, 'Not a valid transaction field: ' + field, 'throw')\n      } else if (mode === 'operation' && !isOperationField(field)) {\n        status.error(cosmicLink, 'Not a valid field for this operation: ' + field, 'throw')\n      }\n\n      const decodedValue = decode.field(cosmicLink, field, value)\n      if (operation === 'transaction') {\n        tdesc[field] = decodedValue\n      } else if (mode !== 'transaction' && isTransactionField(field)) {\n        tdesc[field] = decodedValue\n      } else {\n        odesc[0][field] = decodedValue\n      }\n    } catch (error) {\n      /// At this point decoding errors should already be handled.\n      /// This line catch program error for debugging purpose.\n      if (!cosmicLink.errors) status.error(cosmicLink, error)\n      const errorObject = { error: error, value: value }\n      isValid = false\n\n      if (operation === 'transaction') {\n        tdesc[field] = errorObject\n      } else if (mode !== 'transaction' && isTransactionField(field)) {\n        tdesc[field] = errorObject\n      } else if (field === 'operation') {\n        odesc[0].error = 'Unknow operation'\n      } else {\n        odesc[0][field] = errorObject\n      }\n    }\n  }\n\n  for (let index in odesc) {\n    const operation = odesc[index]\n\n    switch (operation.type) {\n      case 'allowTrust':\n        if (operation.authorize === undefined) operation.authorize = true\n        break\n      case 'createPassiveOffer':\n      case 'manageOffer': {\n        if (operation.buying && !operation.selling) operation.selling = XLM\n        if (operation.selling && !operation.buying) operation.buying = XLM\n        break\n      }\n      case 'manageData':\n        if (!operation.value) operation.value = null\n        break\n      case 'pathPayment':\n        if (operation.destAsset && !operation.sendAsset) operation.sendAsset = XLM\n        if (operation.sendAsset && !operation.destAsset) operation.destAsset = XLM\n        break\n      case 'payment':\n        if (!operation.asset) operation.asset = XLM\n        break\n    }\n\n    const mandatoryFields = specs.operationMandatoryFields[operation.type]\n    mandatoryFields.forEach(field => {\n      if (operation[field] === undefined) {\n        status.error(cosmicLink, 'Missing mandatory field: ' + field)\n        isValid = false\n      }\n    })\n    for (let field in operation) {\n      if (!isOperationField(operation.type, field)) {\n        status.error(cosmicLink, 'Invalid field: ' + field)\n        isValid = false\n      }\n    }\n  }\n\n  tdesc.operations = odesc.reverse()\n  if (!isValid) status.fail(cosmicLink, 'Invalid query')\n  return convert.tdescToJson(cosmicLink, tdesc)\n}\n\nconst XLM = StellarSdk.Asset.native()\n\n/**\n * Throw an error if `type` is not a valid operation type.\n *\n * @private\n * @param {CL}\n * @param {string} type\n */\nfunction checkOperationType (cosmicLink, type) {\n  if (!isOperationTypeValid(type)) {\n    status.error(cosmicLink, 'Unknow operation: ' + type, 'throw')\n  }\n}\n\n/**\n * Returns `true` if `operation` is a valid operation type, `false` otherwise.\n *\n * @private\n * @param {string} string\n * @return {boolean}\n */\nfunction isOperationTypeValid (string) {\n  if (specs.operationMandatoryFields[string]) return true\n  else return false\n}\n\n/**\n * Returns `true` if `string` is a valid transaction field, `false` otherwise.\n *\n * @private\n * @param {string} string\n * @return {boolean}\n */\nfunction isTransactionField (string) {\n  if (specs.transactionOptionalFields.indexOf(string) !== -1) return true\n  else return false\n}\n\n/**\n * Returns `true` if `string` is a valid field for `operation`, `false`\n * otherwise.\n *\n * @private\n * @param {string} operation\n * @param {string} string\n * @return {boolean}\n */\nfunction isOperationField (operation, string) {\n  if (string === 'type') return true\n  else if (\n    specs.operationMandatoryFields[operation].indexOf(string) === -1 &&\n    specs.operationOptionalFields[operation].indexOf(string) === -1\n  ) return false\n  else return true\n}\n\n/**\n * Returns the JSON of cosmic link `transaction descriptor`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {Object} tdesc transaction descriptor\n * @return {string} transaction descriptor JSON\n */\nconvert.tdescToJson = function (cosmicLink, tdesc) {\n  return JSON.stringify(tdesc, null, 2)\n}\n\n/**\n * Returns the Stellar `transaction` object for `cosmicLink`'s\n * `transaction descriptor`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {Object} tdesc transaction descriptor\n * @return {Transaction}\n */\nconvert.jsonToTransaction = async function (cosmicLink, json) {\n  if (cosmicLink.status) throw new Error(cosmicLink.status)\n  const tdesc = convert.jsonToTdesc(cosmicLink, json)\n\n  try {\n    const builder = await makeTransactionBuilder(cosmicLink, tdesc)\n    for (let index in tdesc.operations) {\n      const odesc = tdesc.operations[index]\n      const operation = await odescToOperation(cosmicLink, odesc)\n      builder.addOperation(operation)\n    }\n    return builder.build()\n  } catch (error) {\n    if (!cosmicLink.errors) status.error(cosmicLink, error)\n    if (!cosmicLink.status) status.fail(cosmicLink, \"Can't build transaction\", 'throw')\n    else throw error\n  }\n}\n\n/**\n * Returns an Operation object equivalent to cosmic link `operation descriptor`.\n *\n * @private\n * @param {CL}\n * @param {Object} odesc Operation descriptor\n * @return {Operation}\n */\nasync function odescToOperation (cosmicLink, odesc) {\n  let operation = odesc.type\n  delete odesc.type\n\n  for (let field in odesc) {\n    const value = await prepare.field(cosmicLink, field, odesc[field])\n    odesc[field] = value\n  }\n\n  return StellarSdk.Operation[operation](odesc)\n}\n\n/**\n * Returns a TransactionBuilder for `transaction descriptor`.\n *\n * @private\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n * @return {TransactionBuilder}\n */\nasync function makeTransactionBuilder (cosmicLink, tdesc) {\n  let opts = {}\n  if (tdesc.fee) opts.fee = tdesc.fee\n  if (tdesc.memo) opts.memo = prepare.memo(cosmicLink, tdesc.memo)\n  if (tdesc.minTime || tdesc.maxTime) {\n    opts.timebounds = { minTime: 0, maxTime: 0 }\n    if (tdesc.minTime) opts.timebounds.minTime = tdesc.minTime\n    if (tdesc.maxTime) opts.timebounds.maxTime = tdesc.maxTime\n  }\n\n  const loadedAccount = await cosmicLink.getSourceAccount()\n  if (tdesc.sequence) {\n    const baseAccount = new StellarSdk.Account(loadedAccount.id, tdesc.sequence)\n    baseAccount.sequence = baseAccount.sequence.sub(1)\n    loadedAccount._baseAccount = baseAccount\n  }\n  const builder = new StellarSdk.TransactionBuilder(loadedAccount, opts)\n\n  /// Check if memo is needed for destination account.\n  for (let index in tdesc.operations) {\n    const operation = tdesc.operations[index]\n    if (operation.destination) {\n      const account = await resolve.address(cosmicLink, operation.destination)\n      if (account.memo) {\n        const memoType = account.memo_type\n        const memoValue = account.memo\n        if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n          const short = helpers.shorter(operation.destination)\n          status.error(cosmicLink, `Memo conflict: ${short} requires to set a memo`, 'throw')\n        } else {\n          tdesc.memo = { type: memoType, value: memoValue }\n          builder.addMemo(new StellarSdk.Memo(memoType, memoValue))\n        }\n      }\n    }\n  }\n\n  return builder\n}\n\n/**\n * Return the XDR of `transaction`.\n *\n * @param {CL}\n * @param {Transaction} transaction\n * @return {XDR}\n */\nconvert.transactionToXdr = function (cosmicLink, transaction) {\n  return transaction.toEnvelope().toXDR('base64')\n}\n\n/** ****************************    XDR -> URI    ******************************/\n\n/**\n * Return the Transaction object equivalent to `xdr`.\n *\n * @param {CL}\n * @param {XDR} xdr\n * @return {Transaction}\n */\nconvert.xdrToTransaction = function (cosmicLink, xdr, options) {\n  try {\n    const transaction = new StellarSdk.Transaction(xdr)\n    if (options.stripSignatures) transaction.signatures = []\n    return transaction\n  } catch (error) {\n    console.error(error)\n    status.fail(cosmicLink, 'Invalid XDR', 'throw')\n  }\n}\n\n/**\n * Return the query equivalent to `xdr`.\n *\n * @param {CL}\n * @param {XDR} xdr Transaction envelope\n * @return {String}\n */\nconvert.xdrToQuery = function (cosmicLink, xdr, options = {}) {\n  let query = '?xdr=' + xdr\n  if (options.network) query += '&network=' + options.network\n  return query\n}\n\n/**\n * Return the `transaction descriptor` JSON equivalent to Stellar `Transaction`\n * object.\n *\n * Set options.stripSource to true for a transaction that is account-agnostic,\n * like an exchange operation for example. Ignore it for a transaction that\n * is required to be performed from the source account defined in 'XDR'\n * (example: subscription monthly fee).\n *\n * You may set options.network to the desired network.\n *\n * @param {CL}\n * @param {Transaction} transaction\n * @param {Object} options\n * @return {JSON} transaction descriptor JSON\n */\nconvert.transactionToJson = function (cosmicLink, transaction, options = {}) {\n  const copy = JSON.parse(JSON.stringify(transaction))\n\n  delete copy.tx\n\n  if (!cosmicLink.user) cosmicLink._user = copy.source\n\n  if (options.stripSource) {\n    delete copy.source\n    delete copy.signatures\n    delete copy.sequence\n  }\n  if (options.stripSequence) {\n    delete copy.sequence\n    delete copy.signatures\n  }\n  if (options.stripSignatures) delete copy.signatures\n\n  if (copy.signatures) {\n    copy.signatures = transaction.signatures.map(entry => {\n      return {\n        hint: entry.hint().toString('base64'),\n        signature: entry.signature().toString('base64')\n      }\n    })\n    if (copy.signatures.length === 0) delete copy.signatures\n  }\n\n  if (copy.fee === 100 * copy.operations.length) delete copy.fee\n  if (copy._memo._switch.name !== 'memoNone') {\n    copy.memo = {}\n    copy.memo.type = copy._memo._arm\n    if (copy.memo.type === 'hash' || copy.memo.type === 'retHash') {\n      copy.memo.value = transaction._memo._value.toString('hex')\n      if (copy.memo.type === 'retHash') copy.memo.type = 'return'\n    } else {\n      copy.memo.value = transaction._memo._value.toString()\n    }\n  }\n  delete copy._memo\n\n  if (copy.timeBounds) {\n    if (copy.timeBounds.minTime && copy.timeBounds.minTime !== '0') {\n      copy.minTime = copy.timeBounds.minTime\n    }\n    if (copy.timeBounds.maxTime && copy.timeBounds.maxTime !== '0') {\n      copy.maxTime = copy.timeBounds.maxTime\n    }\n    delete copy.timeBounds\n  }\n\n  for (let index in copy.operations) {\n    const operation = copy.operations[index]\n    if (operation.limit === '922337203685.4775807') delete operation.limit\n    if (operation.value) {\n      operation.value = transaction.operations[index].value.toString()\n    }\n    if (operation.offerId === '0') delete operation.offerId\n    if (operation.path && operation.path.length === 0) delete operation.path\n    if (operation.line) {\n      operation.asset = operation.line\n      delete operation.line\n    }\n    if (operation.signer) {\n      if (operation.signer.ed25519PublicKey) {\n        operation.signer.type = 'key'\n        operation.signer.value = operation.signer.ed25519PublicKey\n        delete operation.signer.ed25519PublicKey\n      } else if (operation.signer.sha256Hash) {\n        operation.signer.type = 'hash'\n        operation.signer.value = transaction.operations[index].signer.sha256Hash.toString('hex')\n        delete operation.signer.sha256Hash\n      } else if (operation.signer.preAuthTx) {\n        operation.signer.type = 'tx'\n        operation.signer.value = transaction.operations[index].signer.preAuthTx.toString('hex')\n        delete operation.signer.preAuthTx\n      }\n    }\n  }\n\n  if (options.network !== undefined) copy.network = options.network\n\n  return JSON.stringify(copy, null, 2)\n}\n\n/**\n * Parse `transaction descriptor` from `JSON`.\n *\n * @param {CL}\n * @param {JSON} JSON transaction descriptior\n * @return {Object} transaction descriptor\n */\nconvert.jsonToTdesc = function (cosmicLink, json) {\n  return JSON.parse(json)\n}\n\n/**\n * Return the cosmic link query equivalent to `transaction descriptor`.\n *\n * @param {CL}\n * @param {Object} tdesc Transaction descriptor\n * @return {string} query\n */\nconvert.jsonToQuery = function (cosmicLink, json) {\n  const tdesc = convert.jsonToTdesc(cosmicLink, json)\n\n  let query = '?'\n  if (tdesc.operations.length === 1) query += tdesc.operations[0].type\n  else query += 'transaction'\n\n  specs.transactionOptionalFields.forEach(field => {\n    if (tdesc[field] !== undefined) {\n      query += encode.field(cosmicLink, field, tdesc[field])\n    }\n  })\n\n  for (let index in tdesc.operations) {\n    const operation = tdesc.operations[index]\n    const fields = specs.operationMandatoryFields[operation.type]\n      .concat(specs.operationOptionalFields[operation.type])\n\n    if (tdesc.operations.length > 1) query += '&operation=' + operation.type\n    fields.forEach(field => {\n      query += encode.field(cosmicLink, field, operation[field])\n    })\n  }\n\n  return query\n}\n\n/**\n * Return a complete cosmic link URI made of `query` and `cosmicLink.page`.\n * Use `https://cosmic.link/` if `cosmicLink.page` is undefined\n *\n * @param {CL}\n * @param {string} query\n * @param {string} cosmic link URI\n */\nconvert.queryToUri = function (cosmicLink, query) {\n  return cosmicLink.page + query\n}\n","'use strict'\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `cosmicLink` object\n * and HTML nodes are updated accordingly.\n *\n * @exports decode\n */\nconst decode = exports\n\nconst helpers = require('./helpers')\nconst status = require('./status')\nconst check = require('./check')\nconst specs = require('./specs')\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {string} value\n */\ndecode.field = function (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  value = decodeURIComponent(value)\n  if (type) return decode.type(cosmicLink, type, value)\n  /// This error will be handled latter in convert.queryToTdesc()\n  else throw ''\n}\n\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {string} value\n */\ndecode.type = function (cosmicLink, type, value) {\n  check.type(cosmicLink, type)\n  const decoder = decode[type]\n  if (decoder) value = decoder(cosmicLink, value)\n  check.type(cosmicLink, type, value)\n  return value\n}\n\n/******************************************************************************/\n\ndecode.asset = function (cosmicLink, asset) {\n  const assetLower = asset.toLowerCase()\n  if (assetLower === 'xlm' || assetLower === 'native') {\n    return { code: 'XLM' }\n  } else {\n    const temp = asset.split(':')\n    const object = { code: temp[0], issuer: temp[1] }\n    return object\n  }\n}\n\ndecode.assetsArray = function (cosmicLink, assetsList) {\n  const strArray = assetsList.split(',')\n  return strArray.map(entry => decode.asset(cosmicLink, entry))\n}\n\ndecode.boolean = function (cosmicLink, string) {\n  switch (string) {\n    case 'true': return true\n    case 'false': return false\n  }\n}\n\ndecode.date = function (cosmicLink, string) {\n  const timeStamp = Date.parse(string)\n  if (isNaN(timeStamp)) {\n    status.error(cosmicLink, 'Invalid date (expecting ISO format): ' + string, 'throw')\n  }\n  return timeStamp / 1000\n}\n\ndecode.memo = function (cosmicLink, memo) {\n  const type = memo.replace(/:.*/, '')\n  const value = memo.replace(/^[^:]*:/, '')\n  if (type === value) {\n    return { type: 'text', value: value }\n  } else {\n    return { type: type, value: value }\n  }\n}\n\ndecode.price = function (cosmicLink, price) {\n  const numerator = price.replace(/:.*/, '')\n  const denominator = price.replace(/^[^:]*:/, '')\n  if (numerator === denominator) return price\n  else return { n: +numerator, d: +denominator }\n}\n\ndecode.signer = function (cosmicLink, signer) {\n  const temp = signer.split(':')\n  if (temp.length > 3) {\n    status.error(cosmicLink,\n      'Invalid signer: ' + helpers.shorter(signer),\n      'throw'\n    )\n  }\n  const object = { weight: temp[0], type: temp[1], value: temp[2] }\n  return object\n}\n","'use strict'\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @exports prepare\n */\nconst prepare = exports\n\nconst specs = require('./specs')\nconst resolve = require('./resolve')\nconst status = require('./status')\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} field\n * @param {any} value\n */\nprepare.field = async function (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return await prepare.type(cosmicLink, type, value)\n  else status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n}\n\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {cosmicLink} cosmicLink\n * @param {string} type\n * @param {any} value\n */\nprepare.type = async function (cosmicLink, type, value) {\n  const preparer = exports[type]\n  if (preparer) return await preparer(cosmicLink, value)\n  else return value\n}\n\n/******************************************************************************/\n\nprepare.address = async function (cosmicLink, address) {\n  const account = await resolve.address(cosmicLink, address)\n  return account.account_id\n}\n\nprepare.asset = async function (cosmicLink, asset) {\n  if (asset.issuer) {\n    const publicKey = await prepare.address(cosmicLink, asset.issuer)\n    return new StellarSdk.Asset(asset.code, publicKey)\n  } else {\n    return StellarSdk.Asset.native()\n  }\n}\n\nprepare.assetsArray = async function (cosmicLink, assetsArray) {\n  let path = []\n  for (let index in assetsArray) {\n    const string = assetsArray[index]\n    const preparedAsset = await prepare.asset(cosmicLink, string)\n    path.push(preparedAsset)\n  }\n  return path\n}\n\nprepare.memo = function (cosmicLink, memo) {\n  return new StellarSdk.Memo(memo.type, memo.value)\n}\n\nprepare.signer = async function (cosmicLink, signer) {\n  let preparedSigner = { weight: signer.weight }\n  switch (signer.type) {\n    case 'key':\n      const publicKey = await prepare.address(cosmicLink, signer.value)\n      preparedSigner.ed25519PublicKey = publicKey\n      break\n    case 'hash':\n      preparedSigner.sha256Hash = signer.value\n      break\n    case 'tx':\n      preparedSigner.preAuthTx = signer.value\n      break\n  }\n  return preparedSigner\n}\n\nprepare.source = prepare.address\n","'use strict'\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @exports encode\n */\nconst encode = exports\n\nconst check = require('./check')\nconst specs = require('./specs')\nconst status = require('./status')\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {CL}\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.field = function (cosmicLink, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) status.error(cosmicLink, 'Unknow field: ' + field, 'throw')\n  if (value === undefined) return ''\n  const encodedValue = encode.type(cosmicLink, type, value)\n  if (encodedValue === '' && field !== 'homeDomain') return ''\n  else return `&${field}=${encodedValue}`\n}\n\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {CL}\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.type = function (cosmicLink, type, value) {\n  check.type(cosmicLink, type)\n  if (value === undefined) return ''\n  const encoder = encode[type]\n  if (typeof value === 'string') value = encodeURIComponent(value)\n  if (encoder) value = encoder(cosmicLink, value)\n  if (value === undefined) return ''\n  else return value\n}\n\n/******************************************************************************/\n\nencode.asset = function (cosmicLink, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + ':' + encodeURIComponent(asset.issuer)\n}\n\nencode.assetsArray = function (cosmicLink, assetsArray) {\n  return assetsArray.map(asset => encode.asset(cosmicLink, asset)).toString()\n}\n\nencode.boolean = function (cosmicLink, boolean) {\n  if (boolean === 'false' || !boolean) return 'false'\n}\n\nencode.date = function (cosmicLink, timestamp) {\n  const date = new Date(timestamp * 1000)\n  const isoString = date.toISOString()\n    .replace(/\\.00.000/, '')\n    .replace(/\\.000/, '')\n    .replace(/T00:00:00Z/, '')\n  return isoString\n}\n\nencode.memo = function (cosmicLink, memo) {\n  if (memo.type === 'text') return encodeURIComponent(memo.value)\n  else return memo.type + ':' + encodeURIComponent(memo.value)\n}\n\nencode.signer = function (cosmicLink, signer) {\n  return signer.weight + ':' + signer.type + ':' + signer.value\n}\n"],"sourceRoot":""}
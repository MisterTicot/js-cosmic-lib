{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./src/specs.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/env.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/misc.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/stellar-sdk.js","webpack://cosmicLib/./src/resolve.js","webpack://cosmicLib/./src/status.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/html.js","webpack://cosmicLib/./node_modules/@babel/runtime/regenerator/index.js","webpack://cosmicLib/./src/config.js","webpack://cosmicLib/./src/format.js","webpack://cosmicLib/./src/signers-utils.js","webpack://cosmicLib/./src/convert.js","webpack://cosmicLib/./src/decode.js","webpack://cosmicLib/./src/normalize.js","webpack://cosmicLib/./src/event.js","webpack://cosmicLib/./src/check.js","webpack://cosmicLib/./src/destruct.js","webpack://cosmicLib/./src/index.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/polyfill.js","webpack://cosmicLib/./src/aliases.js","webpack://cosmicLib/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","webpack://cosmicLib/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/(webpack)/buildin/module.js","webpack://cosmicLib/./src/cosmiclink.js","webpack://cosmicLib/./src/action.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/axios.js","webpack://cosmicLib/./src/construct.js","webpack://cosmicLib/./src/encode.js","webpack://cosmicLib/./src/parse.js","webpack://cosmicLib/./src/expand.js","webpack://cosmicLib/./src/load.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/dom.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","specs","field","transactionOptionalFields","isTransactionField","find","operationMandatoryFields","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createPassiveOffer","inflation","manageData","manageOffer","pathPayment","payment","setOptions","operationOptionalFields","operationFields","concat","isOperationField","operation","fieldType","amount","asset","assetCode","assetIssuer","authorize","bumpTo","buying","clearFlags","destAsset","destAmount","destination","fee","highThreshold","homeDomain","horizon","inflationDest","limit","lowThreshold","masterWeight","maxTime","medThreshold","memo","memoHash","memoId","memoReturn","memoText","memoType","minTime","network","offerId","price","path","selling","sendAsset","sendMax","sequence","setFlags","signer","signerHash","signerKey","signerType","signerTx","signerWeight","source","startingBalance","trustor","fieldDesc","types","type","entry","push","_loop","neutralAccountId","sep7MandatoryFields","tx","pay","sep7OptionalFields","sep7IgnoredFields","env","isBrowser","Function","isNode","window","global","nodeRequire","stealth_require","eval","misc","html","require","delay","thunk","memoized","firstCall","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","length","copy","textBox","append","grab","copyContent","destroy","setHiddenProperty","writable","deprecated","date","before","after","console","error","useExtra","obj","extraField","undefined","StellarSdk","helpers","status","_callee5","conf","address","account","accountId","_regeneratorRuntime","wrap","_context5","prev","next","FederationServer","sent","account_id","Error","memo_type","aliases","alias","abrupt","t0","fail","stop","accountResolver","_callee6","quietFlag","server","accountResponse","_context6","loadAccount","response","signersTableToSignersList","signersTable","array","forEach","arguments","current","Server","useNetwork","passphrase","networkPassphrase","log","Network","use","currentNetwork","networkName","index","values","indexOf","keys","cache","promise","addressResolver","_ref","_asyncToGenerator","mark","_callee","_context","_x3","_x4","_x5","apply","isAccountEmpty","then","catch","txSourceAccount","_ref2","_callee2","neutralAccount","baseAccount","_context2","Account","signers","id","sub","_baseAccount","_x9","_x10","_x11","txSources","transaction","extra","operations","a","txSigners","_ref3","_callee3","_context3","t1","done","filter","_x12","_x13","txSignersList","_ref4","_callee4","_context4","_x14","_x15","_cosmicplus","errorContinuation","continuation","init","errors","update","_statusNode","textContent","errorStatus","appendClass","errorsNode","lineNode","makeHtmlNode","statusNode","statusLine","errorLine","document","element","_len","childs","Array","_key","child","appendChild","createTextNode","newClass","className","clear","innerHTML","selectionStart","selectionEnd","select","getSelection","range","createRange","selectNode","removeAllRanges","addRange","execCommand","attributes","createElement","_len2","_key2","parentNode","removeChild","pattern","querySelector","show","_len3","elements","_key3","style","display","hide","_len4","_key4","replace","element1","element2","replaceChild","rewrite","_len5","_key5","addStyles","styles","styleNode","headNode","config","event","page","setupNetwork","Networks","PUBLIC","TESTNET","all","addAliases","definitions","add","removeAliases","remove","clickHandlers","defaultClickHandlers","setClickHandler","callback","clearClickHandler","format","signersUtils","parentProperty","tdesc","infoNode","trNode","opNode","odesc","retNode","sourceNode","addressNode","meaning","msg","weight","operationMeaning","query","fieldNode","txt","signatures","signersNode","for","utils","signersList","sources","div","accountSignersNode","title","titleNode","listNode","signerNode","hasSigned","insertBefore","firstChild","makeAccountSignersNode","parentOdesc","parentIndex","parentTdesc","domNode","_typeof","process","eventObject","constructor","cosmicLink","onclick","callClickHandler","parent","animation","grandpa","classList","contains","errDesc","errorNode","message","resolveAddressAndUpdate","codeNode","code","issuerNode","assetNode","issuer","assetsArray","assetsArrayNode","Date","toLocaleString","hash","flags","valueNode","typeNode","value1","value2","value3","StrKey","decodeSha256Hash","toString","weightNode","SignersUtils","_classCallCheck","extendFlag","txHash","assign","utilities","hasSigner","keypair","Keypair","fromPublicKey","verify","signature","extends","convert","construct","decode","destruct","encode","uriToQuery","uri","match","queryToTdesc","tdescToJson","JSON","stringify","tdescToTransaction","transactionToXdr","toEnvelope","toXDR","xdrToSep7","xdr","sep7","encodeURIComponent","xdrToTransaction","options","Transaction","stripSignatures","xdrToQuery","transactionToTdesc","jsonToTdesc","json","parse","tdescToQuery","queryToUri","check","normalize","command","params","split","param","decodeURIComponent","assetLower","toLowerCase","temp","assetsList","map","toISOString","numerator","denominator","removeEmptyFields","dateFields","XLM","Asset","native","handler","alert","preimage","prompt","sign","txField","e","operationType","operationField","number","min","max","num","isNaN","integer","parseInt","isValid","boolean","threshold","stripSource","stripSequence","_memo","_switch","timeBounds","op","optree","_attributes","body","_value","line","assetPath","buffer","timestamp","sdkMemo","_arm","sdkSequence","sdkSigner","ed25519PublicKey","sha256Hash","preAuthTx","exposeModule","layer","_config","withConfig","library","__proto__","_this$module","_class","_possibleConstructorReturn","_getPrototypeOf","_inherits","CosmicLink","load","NodeList","predicate","TypeError","len","thisArg","k","kValue","configurable","target","varArgs","to","nextSource","nextKey","publicKeys","anchorsdestinationsg","hadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","reject","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","webpackPolyfill","deprecate","paths","children","action","initCosmicLink","checkLock","splice","lock","keypairs_or_preimage","send","_query","_tdesc","locker","_json","_transaction","_xdr","_sep7","_page","setTxFields","_htmlDescription","makeHtmlDescription","_htmlLink","makeHtmlLink","htmlDescription","formatsFields","dispatch","_transactionNode","_signersNode","htmlLink","href","axios","applyLock","updateSignersNode","_args","_x","allFine","keypairsOrPreimage","publicKey","short","_short","_short2","_args2","t2","signHashX","endpoint","_args3","STELLARGUARD_PUBKEY","enpoint","post","data","submitTransaction","makeTransactionBuilder","_callee9","txOpts","sourceAccount","builder","memoValue","_context9","timebounds","TransactionBuilder","addMemo","Memo","txBuilder","addOperation","build","_x2","Operation","_x7","_x8","_ref5","_ref6","_x16","_ref7","_callee7","constructedAsset","_context7","_x17","_x18","_ref8","_callee8","_context8","_x19","_x20","encodedValue","expand","encodeURI","guessType","parseFmt","setTdesc","sep7ToXdr","xdrUri","url","sep7Request","sep7Op","isValidSep7Field","isIgnoredSep7Field","warn","isArray","dom","css","rel","onload","onerror","linkNode","head","querySelectorAll","header","main","footer","ingest"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory();\n\telse\n\t\troot[\"cosmicLib\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","'use_strict'\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\nconst specs = exports\n\n/**\n * Transaction optional fields.\n */\nspecs.transactionOptionalFields = [\n  'network', 'horizon',\n  'memo', 'source', 'sequence', 'minTime', 'maxTime', 'fee'\n]\n\n/**\n * @param {string} field\n * @return {boolean}\n */\nspecs.isTransactionField = function (field) {\n  return specs.transactionOptionalFields.find(name => name === field)\n}\n\n/**\n * Operation mandatory fields.\n */\nspecs.operationMandatoryFields = {\n  accountMerge: ['destination'],\n  allowTrust: ['authorize', 'assetCode', 'trustor'],\n  bumpSequence: ['bumpTo'],\n  changeTrust: ['asset'],\n  createAccount: ['destination', 'startingBalance'],\n  createPassiveOffer: ['selling', 'buying', 'amount', 'price'],\n  inflation: [],\n  manageData: ['name', 'value'],\n  manageOffer: ['selling', 'buying', 'amount', 'price'],\n  pathPayment: ['sendAsset', 'sendMax', 'destination', 'destAsset', 'destAmount'],\n  payment: ['asset', 'destination', 'amount'],\n  setOptions: []\n}\n\n/**\n * Operation optionnal fields.\n */\nspecs.operationOptionalFields = {\n  accountMerge: ['source'],\n  allowTrust: ['source'],\n  bumpSequence: ['source'],\n  changeTrust: ['limit', 'source'],\n  createAccount: ['source'],\n  createPassiveOffer: ['source'],\n  inflation: ['source'],\n  manageData: ['source'],\n  manageOffer: ['offerId', 'source'],\n  pathPayment: ['path', 'source'],\n  payment: ['source'],\n  setOptions: ['inflationDest', 'clearFlags', 'setFlags', 'masterWeight',\n    'lowThreshold', 'medThreshold', 'highThreshold', 'signer', 'homeDomain',\n    'source']\n}\n\n/**\n * Operations fields\n */\nspecs.operationFields = {}\nfor (let field in specs.operationMandatoryFields) {\n  specs.operationFields[field] = specs.operationMandatoryFields[field]\n    .concat(specs.operationOptionalFields[field])\n}\n\n/**\n * @param {string} type Operation type\n * @param {string} field\n * @return {boolean}\n */\nspecs.isOperationField = function (operation, field) {\n  return specs.operationFields[operation].find(name => name === field)\n}\n\n/**\n * Field types.\n */\nspecs.fieldType = {\n  amount: 'amount',\n  asset: 'asset',\n  assetCode: 'string',\n  assetIssuer: 'address',\n  authorize: 'boolean',\n  bumpTo: 'sequence',\n  buying: 'asset',\n  clearFlags: 'flags',\n  destAsset: 'asset',\n  destAmount: 'amount',\n  destination: 'address',\n  fee: 'amount',\n  highThreshold: 'threshold',\n  homeDomain: 'string',\n  horizon: 'url',\n  inflationDest: 'address',\n  limit: 'amount',\n  lowThreshold: 'threshold',\n  masterWeight: 'weight',\n  maxTime: 'date',\n  medThreshold: 'threshold',\n  memo: 'memo',\n  memoHash: 'hash',\n  memoId: 'id',\n  memoReturn: 'hash',\n  memoText: 'buffer',\n  memoType: 'string',\n  minTime: 'date',\n  network: 'network',\n  offerId: 'string',\n  price: 'price',\n  name: 'string',\n  path: 'assetsArray',\n  selling: 'asset',\n  sendAsset: 'asset',\n  sendMax: 'amount',\n  sequence: 'sequence',\n  setFlags: 'flags',\n  signer: 'signer',\n  signerHash: 'hash',\n  signerKey: 'address',\n  signerType: 'string',\n  signerTx: 'id',\n  signerWeight: 'weight',\n  source: 'address',\n  startingBalance: 'amount',\n  trustor: 'address',\n  value: 'buffer'\n}\n\n/**\n * Transaction field meaning.\n */\nspecs.fieldDesc = {\n  source: 'Source',\n  fee: 'Fees',\n  minTime: 'Valid only after',\n  maxTime: 'Valid only before',\n  memo: 'Memo',\n\n  network: 'Network',\n  horizon: 'Horizon node',\n  sequence: 'Sequence'\n}\n\n/**\n * An array of each valid type for fields.\n */\nspecs.types = []\nfor (let field in specs.fieldType) {\n  const type = specs.fieldType[field]\n  specs.types.find(entry => entry === type) || specs.types.push(type)\n}\n\n/**\n * A neutral account ID meant to be replaced before signing & sending the\n * transaction.\n * @static\n */\nspecs.neutralAccountId = 'GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF'\n\n/**\n * The mandatory fields for each SEP-0007 operation.\n */\nspecs.sep7MandatoryFields = {\n  tx: [ 'xdr' ],\n  pay: [ 'destination' ]\n}\n\n/**\n * The optional fields for each SEP-0007 operation.\n */\nspecs.sep7OptionalFields = {\n  tx: [ 'callback', 'pubkey', 'network_passphrase', 'horizon', 'origin_domain', 'signature' ],\n  pay: [ 'amount', 'asset_code', 'asset_issuer', 'memo', 'memo_type', 'callback',\n    'network_passphrase', 'horizon', 'origin_domain', 'signature' ]\n}\n\nspecs.sep7IgnoredFields = [ 'callback', 'pubkey', 'origin_domain', 'signature' ]\n","'use_strict'\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\nconst env = exports\n\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\nenv.isBrowser = new Function('try { return this === window } catch (e) { return false }')()\n\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\nenv.isNode = new Function('try { return this === global } catch (e) { return false }')()\n\n/**\n * The window object, or `undefined`.\n */\nenv.window = new Function('try { return window } catch (e) { return undefined }')()\n\n/**\n * The global objet, or `undefined`.\n */\nenv.global = new Function('try { return global } catch (e) { return undefined }')()\n\n/**\n * A require that only have effect in Node.js and that is invisible package\n * bundlers.\n */\nenv.nodeRequire = () => {}\nif (env.isNode) {\n  const stealth_require = eval('require')\n  env.nodeRequire = (module) => stealth_require(module)\n}\n","'use strict'\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\nconst misc = exports\n\nconst env = require('./env')\nconst html = env.isBrowser && require('./html')\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nmisc.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nmisc.copy = function (string) {\n  const textBox = html.create('textarea', {}, string)\n  html.append(html.grab('body'), textBox)\n  html.copyContent(textBox)\n  html.destroy(textBox)\n}\n\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, { value: value, enumerable: false, writable: true })\n}\n\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\nmisc.deprecated = function (date, before, after) {\n  console.error(`Warning: ${before} is deprecated and will be removed after \\\n${date}. Please use ${after} instead.`)\n}\n\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\nconst extraField = '_extra_ticot'\n","'use_strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  if (StellarSdk === undefined) console.error('Missing dependency: StellarSdk')\n  else module.exports = StellarSdk\n} else {\n  module.exports = env.nodeRequire('stellar-sdk')\n}\n","'use strict'\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst specs = require('./specs')\nconst status = require('./status')\n\n/**\n * Returns the\n * [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * for **horizon**, or for **network**, or for the current network.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @param {string} [horizon] A horizon URL\n * @returns {Server} A StellarSdk Server object\n */\nresolve.server = function (conf, network = conf.network, horizon = conf.horizon) {\n  if (!horizon) horizon = resolve.horizon(conf)\n  if (!horizon) throw new Error('No horizon node defined for selected network.')\n  if (!conf.current.server[horizon]) conf.current.server[horizon] = new StellarSdk.Server(horizon)\n  return conf.current.server[horizon]\n}\n\n/**\n * Switch to the current network, or to **network** if provided.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @returns {Server} A StellarSdk Server object\n */\nresolve.useNetwork = function (conf, network = conf.network) {\n  const passphrase = resolve.networkPassphrase(conf, network)\n  const currentPassphrase = resolve.networkPassphrase()\n  if (passphrase !== currentPassphrase) {\n    console.log('Switch to network: ' + network)\n    StellarSdk.Network.use(new StellarSdk.Network(passphrase))\n  }\n}\n\n/**\n * Returns the curent Horizon node URL, or the Horizon node URL for **network**\n * if provided.\n *\n * @param {string} [network] A network name or passphrase.\n */\nresolve.horizon = function (conf, network = conf.network) {\n  const passphrase = resolve.networkPassphrase(conf, network)\n  if (conf.current && conf.current.horizon[passphrase]) {\n    return conf.current.horizon[passphrase]\n  } else if (conf.network === network && conf.horizon) {\n    return conf.horizon\n  }\n}\n\n/**\n * Returns the current network passphrase, or the passphrase for **network** is\n * provided.\n */\nresolve.networkPassphrase = function (conf = {}, network = conf.network) {\n  if (network) {\n    return conf.current.passphrase[network] || network\n  } else {\n    const currentNetwork = StellarSdk.Network.current()\n    if (currentNetwork) return currentNetwork.networkPassphrase()\n  }\n}\n\n/**\n * Returns the network name for **network passphrase**, or `undefined`.\n *\n * @param {string} networkPassphrase\n * @return {string}\n */\nresolve.networkName = function (conf = {}, networkPassphrase) {\n  const index = Object.values(conf.current.passphrase).indexOf(networkPassphrase)\n  if (index) return Object.keys(conf.current.passphrase)[index]\n}\n\n/**\n * Returns the federation server\n * [Account]{@link https://stellar.github.io/js-stellar-sdk/Account.html}\n * for **address**.\n *\n * @async\n * @param {string} address A Stellar public key or a federated address\n * @return {} Resolve to federation server response\n */\nresolve.address = function (conf, address) {\n  const cache = conf.cache\n  if (cache && cache.destination[address]) return cache.destination[address]\n\n  const promise = addressResolver(conf, address)\n  if (cache) cache.destination[address] = promise\n  return promise\n}\n\nasync function addressResolver (conf, address) {\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    const accountId = account.account_id\n    if (!accountId) throw new Error('Unknow address')\n    if (!account.memo_type) delete account.memo\n    if (address !== accountId) account.address = address\n    if (conf.aliases && conf.aliases[accountId]) {\n      account.alias = conf.aliases[accountId]\n    }\n    return account\n  } catch (error) {\n    console.error(error)\n    status.error(conf, \"Can't resolve: \" + helpers.shorter(address))\n    status.fail(conf, 'Unresolved address', 'throw')\n  }\n}\n\n/**\n * Returns the\n * [AccountResponse]{@link https://stellar.github.io/js-stellar-sdk/AccountResponse.html}\n * object for **address**.\n *\n * @param {string} address A public key or a federated address\n * @return {Object} The AccountResponse\n */\nresolve.account = async function (conf, address, quietFlag) {\n  const account = await resolve.address(conf, address)\n  const accountId = account.account_id\n  const cache = conf.cache\n  if (cache && cache.account[accountId]) return cache.account[accountId]\n\n  const promise = accountResolver(conf, accountId, quietFlag)\n  if (cache) cache.account[accountId] = promise\n  return promise\n}\n\nasync function accountResolver (conf, accountId, quietFlag) {\n  const server = resolve.server(conf)\n  try {\n    const accountResponse = await server.loadAccount(accountId)\n    return accountResponse\n  } catch (error) {\n    if (quietFlag) {\n      throw error\n    } else {\n      if (error.response) {\n        status.error(conf, 'Empty account: ' + helpers.shorter(accountId), 'throw')\n      } else {\n        status.error(conf, 'Invalid horizon node: ' + resolve.horizon(conf), 'throw')\n      }\n    }\n  }\n}\n\n/**\n * Returns `true` if **address** account is empty, `false` otherwise.\n *\n * @async\n * @param {string} address Public key or federated address\n * @return {boolean}\n */\nresolve.isAccountEmpty = function (conf, address) {\n  return resolve.account(conf, address, true).then(x => false).catch(x => true)\n}\n\n/**\n * Returns the account object for transaction source **address`** with sequence\n * set at **sequence** if provided. If **address** is not provided, returns the\n * neutral account object instead (as in SEP-0007 specifications).\n *\n * @param {string} [address]\n * @param {string|numbre} [sequence]\n * @return {AccountResponse}\n */\nresolve.txSourceAccount = async function (conf, address, sequence) {\n  if (!address) {\n    const neutralAccount = new StellarSdk.Account(specs.neutralAccountId, '-1')\n    neutralAccount.signers = []\n    if (conf.cache) {\n      conf.cache.account[specs.neutralAccountId] = neutralAccount\n    }\n    return neutralAccount\n  } else {\n    const destination = await resolve.address(conf, address)\n    if (destination.memo) status.error(conf, 'Invalid transaction source address (requires a memo)', 'throw')\n    const account = await resolve.account(conf, destination.account_id)\n    if (sequence) {\n      const baseAccount = new StellarSdk.Account(account.id, sequence)\n      baseAccount.sequence = baseAccount.sequence.sub(1)\n      account._baseAccount = baseAccount\n    }\n    return account\n  }\n}\n\n/**\n * Returns the array of all source accounts ID involved in **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\nresolve.txSources = function (conf, transaction) {\n  if (!transaction.source) throw new Error('No source for transaction')\n\n  const extra = resolve.extra(conf, transaction)\n  if (extra.cache.txSources) return extra.cache.txSources\n\n  const array = extra.cache.txSources = [ transaction.source ]\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  return array\n}\n\n/**\n * Returns an object such as:\n *\n * ```js\n * {\n *    $accountId: $accountSigners\n *    ...\n * }\n * ```\n *\n * @param {Transaction} transaction\n * @return {Object}\n */\nresolve.txSigners = async function (conf, transaction) {\n  const extra = resolve.extra(conf, transaction)\n  if (extra.cache.txSigners) return extra.cache.txSigners\n\n  const txSources = resolve.txSources(extra, transaction)\n  const signers = extra.cache.txSigners = {}\n\n  for (let index in txSources) {\n    const source = txSources[index]\n    const account = await resolve.account(extra, source)\n    if (!signers[account.id]) {\n      signers[account.id] = account.signers.filter(signer => {\n        return signer.type !== 'preauthTx'\n      })\n    }\n  }\n\n  return signers\n}\n\n/**\n * Returns an Array containing the keys for all legit signers of **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = resolve.extra(conf, transaction)\n  if (!extra.cache.txSignersList) {\n    const txSigners = await resolve.txSigners(extra, transaction)\n    extra.cache.txSignersList = signersTableToSignersList(txSigners)\n  }\n  return extra.cache.txSignersList\n}\n\nfunction signersTableToSignersList (signersTable) {\n  const array = []\n  for (let accountId in signersTable) {\n    signersTable[accountId].forEach(signer => {\n      if (!array.find(key => key === signer.key)) array.push(signer.key)\n    })\n  }\n  return array\n}\n\n/**\n * Add an extra field to **object** that embed cache and local configuration.\n *\n * @private\n */\nresolve.extra = function (conf, object) {\n  if (!object._cosmicplus) {\n    helpers.setHiddenProperty(object, '_cosmicplus', {})\n    if (conf.cache) object._cosmicplus.cache = conf.cache\n    else object._cosmicplus.cache = { destination: {}, account: {} }\n    object._cosmicplus.network = conf.network\n    object._cosmicplus.current = conf.current\n  }\n  return object._cosmicplus\n}\n","'use strict'\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * Thoses methods won't have effect unless status reporting is enabled on `conf`\n * object by using `status.init` (wich is done automatically on CosmicLink\n * objects).\n *\n * @private\n * @exports status\n */\nconst status = exports\n\nconst env = require('@cosmic-plus/jsutils/env')\nconst html = env.isBrowser && require('@cosmic-plus/jsutils/html')\n\n/**\n * Initialize `conf.status` & `conf.errors`.\n */\nstatus.init = function (conf) {\n  conf.status = null\n  conf.errors = false\n}\n\n/**\n * Set `conf` status as `status` and update statusNode. Error status should be\n * recorded using the `status.fail` function bellow. Once a status is set it\n * won't be mutated.\n *\n * @param {string} status\n */\nstatus.update = function (conf, status) {\n  if (conf.status || conf.status === undefined) return\n\n  console.log('Set status: ' + status)\n  conf.status = status\n\n  if (conf._statusNode) {\n    const title = html.grab('.cosmiclib_status', conf._statusNode)\n    title.textContent = status\n  }\n}\n\n/**\n * Set `conf` status as error status `status` and update statusNode. This\n * implies that the cosmic link or the underlying transaction is invalid. Then,\n * call `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\nstatus.fail = function (conf, errorStatus, continuation) {\n  status.update(conf, errorStatus)\n  if (conf._statusNode) html.appendClass(conf._statusNode, 'cosmiclib_error')\n  errorContinuation(errorStatus, continuation)\n}\n\n/**\n * Append `error` to `conf.errors` and to the HTML display. Then, call\n * `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\nstatus.error = function (conf, error, continuation) {\n  console.log(error)\n\n  if (conf.errors !== undefined) {\n    if (!conf.errors) conf.errors = []\n\n    conf.errors.push(error)\n\n    if (conf._statusNode) {\n      const errorsNode = html.grab('.cosmiclib_errors', conf._statusNode)\n      const lineNode = html.create('li', null, error)\n      html.append(errorsNode, lineNode)\n    }\n  }\n\n  errorContinuation(error, continuation)\n}\n\n/**\n * Create & return an HTML element that displays `conf` status and eventual\n * errors.\n *\n * @return {htmlElement}\n */\nstatus.makeHtmlNode = function (conf) {\n  const statusNode = html.create('div', '.cosmiclib_statusNode')\n\n  const statusLine = html.create('span', '.cosmiclib_status')\n  html.append(statusNode, statusLine)\n  if (conf.status) statusLine.textContent = conf.status\n\n  const errorsNode = html.create('ul', '.cosmiclib_errors')\n  html.append(statusNode, errorsNode)\n  if (conf.errors) {\n    conf.errors.forEach(error => {\n      const errorLine = html.create('li', null, error)\n      html.append(errorsNode, errorLine)\n    })\n  }\n\n  return statusNode\n}\n\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with `error` as message.\n * If `continuation` is undefined, do nothing.\n */\nfunction errorContinuation (error, continuation) {\n  if (continuation) {\n    if (continuation === 'throw') throw new Error(error)\n    else continuation(error)\n  }\n}\n","'use_strict'\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\nconst html = exports\n\n/// Prevent node failure when accidentaly loading this file.\nconst env = require('./env')\nconst document = env.window ? env.window.document : undefined\nif (env.isNode) console.error('@cosmic-plus/jsutils/html is a browser-only module')\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nhtml.append = function (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === 'string' || typeof child === 'number' || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nhtml.appendClass = function (element, newClass) {\n  element.className += ' ' + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.clear = function (element) {\n  element.innerHTML = ''\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return\n\n  if (element.select) {\n    element.select()\n  } else if (window.getSelection) {\n    const range = document.createRange()\n    range.selectNode(element)\n    window.getSelection().removeAllRanges()\n    window.getSelection().addRange(range)\n  } else {\n    return\n  }\n  return document.execCommand('copy')\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nhtml.create = function (name, attributes, ...childs) {\n  if (!name) throw new Error('Missing tag name')\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === 'string') {\n    switch (attributes.substr(0, 1)) {\n      case '#': element.id = attributes.substr(1); break\n      case '.': element.className = attributes.substr(1); break\n      default: throw new Error('Unhandled attribute')\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) html.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.destroy = function (element) {\n  try {\n    element.innerHTML = ''\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (error) { console.error(error) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nhtml.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.show = function (...elements) {\n  elements.forEach(element => element.style.display = 'block')\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.hide = function (...elements) {\n  elements.forEach(element => element.style.display = 'none')\n}\n\n/**\n * Replace `element1` by `element2`.\n *\n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\nhtml.replace = function (element1, element2) {\n  element1.parentNode.replaceChild(element2, element1)\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nhtml.rewrite = function (element, ...childs) {\n  html.clear(element)\n  html.append(element, ...childs)\n}\n\n/**\n * Add `string` as additional CSS definitions for the current document.\n *\n * @param {string} styles CSS definitions\n */\nhtml.addStyles = function (styles) {\n  const styleNode = html.create('style', { type: 'text/css' }, styles)\n  html.append(headNode, styleNode)\n}\nconst headNode = html.grab('head')\n","module.exports = require(\"regenerator-runtime\");\n","'use_strict'\n/**\n * Library-wide configuration.\n *\n * @borrows module:aliases.all as aliases\n * @borrows module:aliases.add as addAliases\n * @borrows module:aliases.remove as removeAliases\n *\n * @borrows module:event.defaultClickHandlers as clickHandlers\n * @borrows module:event.setClickHandler as setClickHandler\n * @borrows module:event.clearClickHandler as clearClickHandler\n *\n * @exports config\n */\nconst config = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst aliases = require('./aliases')\nconst event = require('./event')\n\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\nconfig.page = 'https://cosmic.link/'\n/**\n * The default fallback network.\n * @default 'public'\n */\nconfig.network = 'public'\n/**\n * The default fallback source address.\n * @default undefined\n */\nconfig.source = undefined\n\n/**\n * Networks setup.\n *\n * @private\n */\nconfig.current = {\n  passphrase: {},\n  horizon: {},\n  server: {}\n}\n\n/**\n * Set default **passphrase** and **horizon** URL for network **name**.\n *\n * Adding custom network this way will enable the use of their name in cosmic\n * queries (as in `&network=name`). However, please remind that this feature\n * will works only on your side and could break compatibility with other\n * services.\n *\n * @example\n * cosmicLib.config.setupNetwork('public', 'https://my-own-horizon-instance.example.org')\n * cosmicLib.config.setupNetwork('custom', 'https://custom-horizon.example.org', 'My Custom Passphrase')\n *\n * @param {string} name Network name (like 'public', 'test')\n * @param {string} horizon Horizon URL\n * @param {string} [passphrase] Network passphrase\n */\nconfig.setupNetwork = function (name, horizon, passphrase) {\n  if (passphrase) config.current.passphrase[name] = passphrase\n  else passphrase = config.current.passphrase[name]\n  config.current.horizon[passphrase] = horizon\n}\n\nconfig.setupNetwork('public', 'https://horizon.stellar.org', StellarSdk.Networks.PUBLIC)\nconfig.setupNetwork('test', 'https://horizon-testnet.stellar.org', StellarSdk.Networks.TESTNET)\n\nconfig.aliases = aliases.all\nconfig.addAliases = (definitions) => aliases.add(config, definitions)\nconfig.removeAliases = (array) => aliases.remove(config, array)\n\nconfig.clickHandlers = event.defaultClickHandlers\nconfig.setClickHandler = (fieldType, callback) => event.setClickHandler(config, fieldType, callback)\nconfig.clearClickHandler = (fieldType) => event.clearClickHandler(config, fieldType)\n","'use strict'\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @private\n * @exports format\n */\nconst format = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst html = require('@cosmic-plus/jsutils/html')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst config = require('./config')\nconst event = require('./event')\nconst resolve = require('./resolve')\nconst signersUtils = require('./signers-utils')\nconst specs = require('./specs')\n\n/**\n * Returns an HTML div describing `tdesc`.\n *\n * @param {Object} tdesc Transaction descriptor.\n * @return {HTMLElement} Transaction HTML description.\n */\nformat.tdesc = function (conf, tdesc) {\n  const trNode = html.create('div', '.cosmiclib_transactionNode')\n  if (!tdesc) return trNode\n\n  let infoNode\n  for (let index in specs.transactionOptionalFields) {\n    const entry = specs.transactionOptionalFields[index]\n    if (entry === 'horizon' && resolve.horizon(config, conf.network)) continue\n\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = html.create('ul', '.cosmiclib_sideInfo')\n      const lineNode = html.create('li', {},\n        specs.fieldDesc[entry] + ': ',\n        format.field(conf, entry, tdesc[entry])\n      )\n      html.append(infoNode, lineNode)\n    }\n  }\n  if (infoNode) html.append(trNode, infoNode)\n\n  try {\n    for (let index in tdesc.operations) {\n      const operation = tdesc.operations[index]\n      const opNode = format.odesc(conf, operation)\n      opNode.index = index\n      html.append(trNode, opNode)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  trNode.tdesc = tdesc\n  return trNode\n}\n\n/**\n * Returns an HTML div describing `odesc`.\n *\n * @param {Object} odesc Operation in cosmic link JSON format.\n * @return {HTMLElement} Operation HTML description.\n */\nformat.odesc = function (conf, odesc) {\n  const opNode = html.create('div', '.cosmiclib_operation')\n  opNode.odesc = odesc\n  let retNode = opNode\n\n  if (odesc.source) {\n    retNode = html.create('div', '.cosmiclib_sourcedOperation')\n    const sourceNode = html.create('div', '.cosmiclib_sideInfo', 'Source: ')\n    const addressNode = format.address(conf, odesc.source)\n    html.append(sourceNode, addressNode)\n    html.append(retNode, sourceNode, opNode)\n  }\n\n  let meaning = operationMeaning(odesc)\n  while (meaning) {\n    if (meaning.substr(0, 1) === '{') {\n      const query = meaning.substr(1).replace(/}.*/, '')\n      meaning = meaning.replace(/^[^}]*}/, '')\n      if (query === 'newline') {\n        if (meaning === '') break\n        html.append(opNode, html.create('br'))\n      } else {\n        const fieldNode = format.field(conf, query, odesc[query])\n        html.append(opNode, fieldNode)\n      }\n    } else {\n      const txt = meaning.replace(/{.*/, '')\n      meaning = meaning.replace(/^[^{]*/, '')\n      html.append(opNode, txt)\n    }\n  }\n  return retNode\n}\n\n/**\n * Returns a string describing `odesc`.\n *\n * @private\n */\nfunction operationMeaning (odesc) {\n  let msg\n  switch (odesc.type) {\n    case 'accountMerge':\n      return 'Merge account inside {destination}'\n    case 'allowTrust':\n      if (odesc.authorize) {\n        return 'Allow usage of your asset {assetCode} to {trustor}'\n      } else {\n        return 'Deny usage of your asset {assetCode} to {trustor}'\n      }\n    case 'bumpSequence':\n      return 'Set account sequence number to {bumpTo}'\n    case 'changeTrust':\n      if (odesc.limit === '0') {\n        return 'Refuse asset {asset}'\n      } else if (odesc.limit) {\n        return 'Set holding limit as {limit} for asset {asset}'\n      } else {\n        return 'Accept asset {asset}'\n      }\n    case 'createAccount':\n      return 'Create account {destination} and send it {startingBalance} XLM'\n    case 'createPassiveOffer':\n      return 'Passive offer of {amount} {selling} at {price} {buying} / unit'\n    case 'inflation':\n      return 'Run inflation'\n    case 'manageData':\n      if (odesc.value) {\n        return \"Set data entry '{name}' as '{value}'\"\n      } else {\n        return \"Delete data entry '{name}'\"\n      }\n    case 'manageOffer':\n      if (!odesc.offerId || odesc.offerId === '0') {\n        return 'Offer {amount} {selling} at {price} {buying} / unit'\n      } else if (odesc.amount !== '0') {\n        return \"Change offer '{offerId}' to: offer {amount} {selling} at \" +\n          '{price} {buying} / unit'\n      } else {\n        return \"Delete offer '{offerId}'\"\n      }\n    case 'pathPayment':\n      msg = 'Send {destAmount} {destAsset} to {destination} for a maximum ' +\n        'of {sendMax} {sendAsset}'\n      if (odesc.path) msg += ' using conversion path: {path}'\n      return msg\n    case 'payment':\n      return 'Send {amount} {asset} to {destination}'\n    case 'setOptions':\n      msg = ''\n      if (odesc.inflationDest) {\n        msg += 'Set inflation destination to: {inflationDest}{newline}'\n      }\n      if (odesc.clearFlags) msg += 'Clear flag(s): {clearFlags}{newline}'\n      if (odesc.setFlags) msg += 'Set flag(s): {setFlags}{newline}'\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === '0') {\n          msg += 'Delete master key{newline}'\n        } else {\n          msg += 'Set master key weight at: {masterWeight}{newline}'\n        }\n      }\n      ['lowThreshold', 'medThreshold', 'highThreshold'].forEach(field => {\n        if (odesc[field]) msg += 'Set ' + field + ' at: {' + field + '}{newline}'\n      })\n      if (odesc.signer) {\n        if (odesc.signer.type === 'tx') {\n          if (odesc.signer.weight === '0') msg += 'Remove pre-signed {signer}{newline}'\n          else msg += 'Pre-sign {signer}{newline}'\n        } else {\n          if (odesc.signer.weight === '0') msg += 'Remove signer: {signer}{newline}'\n          else msg += 'Set signer: {signer}{newline}'\n        }\n      }\n      if (odesc.homeDomain) msg += 'Set home domain: {homeDomain}{newline}'\n      if (odesc.homeDomain === '') msg += 'Unset home domain'\n      if (!msg) msg = 'Do nothing'\n      return msg\n    default:\n      throw new Error('Unknow operation: ' + odesc.type)\n  }\n}\n\n/**\n * Returns an HTML div describing `signers`.\n *\n * @param {Object} signers Signers object as returned by @see{resolve.signers}.\n * @return {HTMLElement} Signers HTML description\n */\nformat.signatures = function (conf, transaction) {\n  const signersNode = html.create('div', '.cosmiclib_signersNode')\n\n  signersUtils.for(conf, transaction).then(utils => {\n    if (utils.signersList.length < 2 && !utils.signatures.length) return\n\n    utils.sources.forEach(accountId => {\n      if (accountId !== specs.neutralAccountId) {\n        const div = makeAccountSignersNode(conf, utils, accountId)\n        html.append(signersNode, div)\n      }\n    })\n  })\n\n  return signersNode\n}\n\nfunction makeAccountSignersNode (conf, utils, accountId) {\n  const accountSignersNode = html.create('div')\n\n  const title = 'Signers for ' + helpers.shorter(accountId)\n  const titleNode = html.create('span', '.cosmiclib_threshold', title)\n  const listNode = html.create('ul', '.cosmiclib_signers')\n  html.append(accountSignersNode, titleNode, listNode)\n\n  utils.signers[accountId].forEach(signer => {\n    const signerNode = format.signer(conf, signer)\n    const lineNode = html.create('li', null, signerNode)\n    if (utils.hasSigned(signer.key)) {\n      html.appendClass(lineNode, 'cosmiclib_signed')\n      listNode.insertBefore(lineNode, listNode.firstChild)\n    } else {\n      html.append(listNode, lineNode)\n    }\n  })\n\n  return accountSignersNode\n}\n\n/**\n * Retrieves the parent odesc (*Operation Descriptor*) of an HTML element, or\n * returns `undefined` if **element** is not the child of an HTML formatted\n * operation.\n *\n * @param {HTMLElement} element\n * @return {Object} odesc\n */\nformat.parentOdesc = (conf, element) => parentProperty(element, 'odesc')\n\n/**\n * Retrieves the parent operation index of an HTML element, or returns\n * `undefined` if **element** is not the child of an HTML formatted operation.\n *\n * @param {HTMLElement} element\n * @return {Number} operation index\n */\nformat.parentIndex = (conf, element) => parentProperty(element, 'index')\n\n/**\n * Retrieves the parent tdesc of an HTML element, or returns `undefined`\n * if **element** is not the child of an HTML formatted transaction.\n *\n * @param {HTMLElement} element\n * @return {Object} tdesc\n */\nformat.parentTdesc = (conf, element) => parentProperty(element, 'tdesc')\n\nfunction parentProperty (element, property) {\n  while (element.parentNode) {\n    if (element.parentNode[property]) return element.parentNode[property]\n    else element = element.parentNode\n  }\n}\n\n/******************************************************************************/\n\n/**\n * Returns an HTML div describing `field` `value`.\n *\n * @param {string} field The field name of `value` as defined in `spec.js`.\n * @param {*} value The value of `field`.\n * @return {HTLMElement} `field` `value` HTML description\n */\nformat.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) throw new Error('Unknow field: ' + field)\n\n  const domNode = format.type(conf, type, value)\n  domNode.field = field\n  if (field !== type) html.appendClass(domNode, 'cosmiclib_' + field)\n\n  return domNode\n}\n\nformat.type = function (conf, type, value) {\n  if (typeof value === 'object' && value.error) type = 'error'\n  const formatter = process[type] || process.string\n  const domNode = formatter(conf, value)\n  domNode.className = 'cosmiclib_' + type\n\n  const eventObject = {\n    conf: conf,\n    type: type,\n    value: value,\n    domNode: domNode\n  }\n  if (conf.constructor.name === 'CosmicLink') eventObject.cosmicLink = conf\n  domNode.onclick = () => event.callClickHandler(conf, type, eventObject)\n  return domNode\n}\n\n/// Provide a format method for each data type.\nspecs.types.forEach(type => {\n  format[type] = (conf, value) => format.type(conf, type, value)\n})\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.string = function (conf, string) {\n  if (typeof string !== 'string') string = string + ''\n  return html.create('span', null, string)\n}\n\nprocess.error = function (conf, errDesc) {\n  const errorNode = html.create('span', '.cosmiclib_error')\n  errorNode.textContent = errDesc.value === '' ? '(undefined)' : errDesc.value\n  errorNode.title = errDesc.error.message\n  return errorNode\n}\n\nprocess.address = function (conf, address) {\n  const addressNode = html.create('span',\n    { title: 'Resolving...' },\n    helpers.shorter(address),\n    html.create('span', '.cosmiclib_loadingAnim')\n  )\n\n  resolveAddressAndUpdate(conf, address, addressNode)\n  return addressNode\n}\n\nasync function resolveAddressAndUpdate (conf, address, addressNode) {\n  try {\n    const account = await resolve.address(conf, address)\n\n    addressNode.title = account.account_id\n    if (account.memo) {\n      addressNode.title += `\\nMemo (${account.memo_type}): ${account.memo}`\n    }\n\n    if (account.address) addressNode.textContent = account.address\n    else if (account.alias) addressNode.textContent = account.alias\n\n    addressNode.extra = account\n  } catch (error) {\n    addressNode.title = \"Can't resolve address\"\n    html.appendClass(addressNode, 'cosmiclib_error')\n\n    const parent = addressNode.parentNode\n    if (parent.classList.contains('cosmiclib_assetIssuer')) {\n      parent.style.display = 'inline'\n    }\n  }\n\n  const animation = html.grab('.cosmiclib_loadingAnim', addressNode)\n  if (animation) html.destroy(animation)\n  const grandpa = addressNode.parentNode.parentNode\n  if (grandpa && grandpa.classList.contains('cosmiclib_asset')) {\n    html.destroy(html.grab('.cosmiclib_loadingAnim', grandpa))\n    const odesc = format.parentOdesc(conf, grandpa)\n    if (odesc && odesc.type === 'changeTrust') {\n      addressNode.parentNode.style.display = 'inline'\n    }\n  }\n}\n\nprocess.asset = function (conf, asset) {\n  const codeNode = format.field(conf, 'assetCode', asset.code)\n  const issuerNode = html.create('span', null, ' issued by ')\n  const assetNode = html.create('span', null, codeNode, issuerNode)\n  issuerNode.style.display = 'none'\n\n  if (asset.issuer) {\n    codeNode.title = 'Issued by ' + asset.issuer\n    html.append(issuerNode, format.field(conf, 'assetIssuer', asset.issuer))\n    html.append(codeNode, html.create('span', '.cosmiclib_loadingAnim'))\n  } else {\n    codeNode.title = 'Native asset'\n    html.rewrite(issuerNode, ' native asset')\n  }\n\n  codeNode.onclick = () => {\n    if (issuerNode.style.display === 'inline') issuerNode.style.display = 'none'\n    else issuerNode.style.display = 'inline'\n  }\n\n  return assetNode\n}\n\nprocess.assetsArray = function (conf, assetsArray) {\n  const assetsArrayNode = html.create('span')\n  for (let i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) html.append(assetsArrayNode, ', ')\n    html.append(assetsArrayNode, format.asset(conf, assetsArray[i]))\n  }\n\n  return assetsArrayNode\n}\n\nprocess.date = function (conf, date) {\n  return html.create('span', {}, new Date(date).toLocaleString())\n}\n\nprocess.hash = function (conf, hash) {\n  return html.create('span', { title: hash }, helpers.shorter(hash))\n}\n\nprocess.id = process.hash\n\nprocess.flags = function (conf, flags) {\n  let string = ''\n  if (flags >= 4) {\n    string = 'immutable'\n    flags = flags - 4\n  }\n  if (flags >= 2) {\n    if (string) string = ', ' + string\n    string = 'revocable' + string\n    flags = flags - 2\n  }\n  if (+flags === 1) {\n    if (string) string = ', ' + string\n    string = 'required' + string\n  }\n\n  return html.create('span', {}, string)\n}\n\nprocess.memo = function (conf, memo) {\n  const typeNode = format.field(conf, 'memoType', memo.type)\n  let valueNode\n  switch (memo.type) {\n    case 'text':\n      valueNode = format.field(conf, 'memoText', memo.value)\n      break\n    case 'id':\n      valueNode = format.field(conf, 'memoId', memo.value)\n      break\n    case 'hash':\n      valueNode = format.field(conf, 'memoHash', memo.value)\n      break\n    case 'return':\n      valueNode = format.field(conf, 'memoReturn', memo.value)\n  }\n  return html.create('span', {}, '(', typeNode, ') ', valueNode)\n}\n\nprocess.price = function (conf, price) {\n  if (typeof price === 'string') {\n    return html.create('span', {}, price)\n  } else {\n    return html.create('span', {}, price.n / price.d + '')\n  }\n}\n\nprocess.signer = function (conf, signer) {\n  const signerNode = html.create('span')\n  switch (signer.type) {\n    case 'key':\n    case 'ed25519_public_key':\n      const value1 = signer.value || signer.key\n      html.append(signerNode, 'Account ', format.field(conf, 'signerKey', value1))\n      break\n    case 'tx':\n      const value2 = signer.value || signer.key\n      html.append(signerNode, 'transaction ', format.field(conf, 'signerTx', value2))\n      break\n    case 'hash':\n    case 'sha256hash':\n      const value3 = signer.value || StellarSdk.StrKey.decodeSha256Hash(signer.key).toString('hex')\n      html.append(signerNode, 'key whose hash is ', format.field(conf, 'signerHash', value3))\n      break\n  }\n  if (signer.weight > 1) {\n    const weightNode = format.weight(conf, signer.weight)\n    html.append(signerNode, ' (weight: ', weightNode, ')')\n  }\n  return signerNode\n}\n","'use_strict'\n/**\n * This module provides two ways to generate {@link SignersUtils} for a\n * Transaction object. The first one extends the object and is the intended way\n * to use those utilities. However, as extending objects can sometimes prove\n * inconvenient or intrusive, a second method allows to create a stand-alone\n * {@link SignersUtils} tied to a given transaction.\n *\n * @exports signersUtils\n */\nconst signersUtils = exports\n\nconst resolve = require('./resolve')\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\n/**\n * **SignersUtils** is a toolbox that aims to ease the handling of\n * multisignature transactions. The idea behind it is to fetch all required\n * data once and to cache the responses into the transaction. Then, all\n * the utilities can function in a synchronous (immediate) manner.\n *\n * Those are automatically available in `cosmicLink.transaction` after\n * `await cosmicLink.lock()` is ran. Alternatively, you can extend a transaction\n * or generate its SignersUtils by using {@link module:signersUtils}. There's no\n * `cosmicLib.SignersUtils` constructor.\n *\n * An instance of SignersUtils is always tied to a given transaction. This is\n * why none of the provided methods take a transaction as parameter.\n *\n * >\n * | Members                                                                     | Methods\n * |-----------------------------------------------------------------------------|-------------\n * | [sources]{@link SignersUtils#sources}: Array of transaction sources         | [hasSigner]{@link SignersUtils#hasSigner}: Test if a key is a legit signer for transaction\n * | [signers]{@link SignersUtils#signers}: Table of transaction signers         | [hasSigned]{@link SignersUtils#hasSigned}: Test if a key has signed transaction\n * | [signersList]{@link SignersUtils#signersList}: Array of transaction signers |\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Donation', maxDate: 2019 })\n *  .addOperation('payment', { destination: 'tips*cosmic.link', amount: 10 })\n *\n * await cosmicLink.lock({ network: 'test', source: 'myaddress*example.org' })\n *\n * console.log(cosmicLink.transaction.signers)\n * console.log(cosmicLink.transaction.hasSigner(GB...DXEZ))\n *\n * @alias SignersUtils\n * @namespace\n */\nclass SignersUtils {\n  static async resolve (conf, transaction, extendFlag) {\n    const extra = resolve.extra(conf, transaction)\n\n    if (!extra.cache.signersUtils) {\n      resolve.useNetwork(extra)\n      extra.cache.txHash = transaction.hash()\n      const utils = new SignersUtils(extra, transaction)\n      /**\n       * A list of the sources involved in the transaction.\n       * @alias SignersUtils#sources\n       * @type {Array}\n       */\n      utils.sources = await resolve.txSources(extra, transaction)\n      /**\n       * A table of the signers for each transaction source.\n       * @alias SignersUtils#signers\n       * @type {Object}\n       */\n      utils.signers = await resolve.txSigners(extra, transaction)\n      /**\n       * A list of the legit signers for the transaction.\n       * @alias SignersUtils#signersList\n       * @type {Array}\n       */\n      utils.signersList = await resolve.txSignersList(extra, transaction)\n      Object.assign(utils, utilities)\n      extra.cache.signersUtils = utils\n    }\n\n    if (extendFlag) {\n      if (!transaction.hasSigner) Object.assign(transaction, extra.cache.signersUtils)\n      return transaction\n    } else {\n      return extra.cache.signersUtils\n    }\n  }\n\n  constructor (conf, transaction) {\n    this.signatures = transaction.signatures\n    helpers.setHiddenProperty(this, '_cosmicplus', transaction._cosmicplus)\n  }\n}\n\n/******************************************************************************/\n\nconst utilities = {}\n\n/**\n * Tests if **accountId** is a legit signer for the transaction.\n *\n * @example\n * if (transaction.hasSigner(GB...DEZX)) console.log('Legit signer')\n *\n * @alias SignersUtils#hasSigner\n * @param {string} accountId\n * @return {boolean}\n */\nutilities.hasSigner = function (accountId) {\n  return this.signersList.find(key => key === accountId)\n}\n\n/**\n * Tests if **accountId** has signed the transaction.\n *\n * @example\n * if (transaction.hasSigned(GB...DEZX)) console.log('Has signed')\n *\n * @alias SignersUtils#hasSigned\n * @param {string} accountId\n * @return {boolean}\n */\nutilities.hasSigned = function (accountId) {\n  if (accountId.substr(0, 1) === 'G') {\n    const keypair = StellarSdk.Keypair.fromPublicKey(accountId)\n    const txHash = this._cosmicplus.cache.txHash\n    return !!this.signatures.find(entry => keypair.verify(txHash, entry.signature()))\n  }\n}\n\n/******************************************************************************/\n\n/**\n * Returns SignersUtils for **transaction**.\n *\n * @async\n * @param {Transaction} transaction\n * @return {SignersUtils}\n */\nsignersUtils.for = (conf, transaction) => SignersUtils.resolve(conf, transaction)\n\n/**\n * Extends **transaction** with SignersUtils.\n *\n * @async\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nsignersUtils.extends = (conf, transaction) => SignersUtils.resolve(conf, transaction, true)\n","'use strict'\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @private\n * @exports convert\n */\nconst convert = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst construct = require('./construct')\nconst decode = require('./decode')\nconst destruct = require('./destruct')\nconst encode = require('./encode')\nconst resolve = require('./resolve')\n\n/** ****************************    URI -> XDR    ******************************/\n\nconvert.uriToQuery = function (conf, uri) {\n  if (!uri.match(/\\?/)) return null\n  const query = uri.replace(/^[^?]*/, '')\n  return query\n}\n\nconvert.queryToTdesc = decode.query\n\nconvert.tdescToJson = function (conf, tdesc) {\n  return JSON.stringify(tdesc, null, 2)\n}\n\nconvert.tdescToTransaction = construct.transaction\n\nconvert.transactionToXdr = function (conf, transaction) {\n  return transaction.toEnvelope().toXDR('base64')\n}\n\nconvert.xdrToSep7 = function (conf, xdr) {\n  let sep7 = 'web+stellar:tx?xdr='\n  sep7 += encodeURIComponent(xdr)\n  const passphrase = resolve.networkPassphrase(conf)\n  if (passphrase !== StellarSdk.Networks.PUBLIC) {\n    sep7 += '&network_passphrase=' + encodeURIComponent(passphrase)\n    if (passphrase !== StellarSdk.Networks.TESTNET && conf.horizon) {\n      sep7 += '&horizon=' + encodeURIComponent(conf.horizon)\n    }\n  }\n\n  return sep7\n}\n\n/** ****************************    XDR -> URI    ******************************/\n\nconvert.xdrToTransaction = function (conf, xdr, options = {}) {\n  const transaction = new StellarSdk.Transaction(xdr)\n  if (options.stripSignatures) transaction.signatures = []\n  return transaction\n}\n\nconvert.xdrToQuery = function (conf, xdr, options = {}) {\n  let query = '?xdr=' + xdr\n  if (options.network) query += '&network=' + encodeURIComponent(options.network)\n  if (options.horizon) query += '&horizon' + encodeURIComponent(options.horizon)\n  return query\n}\n\nconvert.transactionToTdesc = destruct.transaction\n\nconvert.jsonToTdesc = function (conf, json) {\n  return JSON.parse(json)\n}\n\nconvert.tdescToQuery = encode.query\n\nconvert.queryToUri = function (conf, query) {\n  const page = conf.page || 'https://cosmic.link'\n  return page + query\n}\n","'use strict'\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `conf` object\n * and HTML nodes are updated accordingly.\n *\n * @private\n * @exports decode\n */\nconst decode = exports\n\nconst check = require('./check')\nconst normalize = require('./normalize')\nconst specs = require('./specs')\nconst status = require('./status')\n\ndecode.query = function (conf, query = '?') {\n  if (query.substr(0, 1) !== '?') status.fail(conf, 'Invalid query', 'throw')\n\n  const operations = []\n  const tdesc = {}\n\n  let command = query.substr(1).replace(/&.*/, '')\n  const params = query.substr(command.length + 2).split('&')\n  if (command && command !== 'transaction') operations.push({ type: command })\n\n  for (let index in params) {\n    const param = params[index].split('=', 2)\n    const field = param[0]\n    if (!field) continue\n\n    if (field === 'operation') {\n      operations.push({ type: param[1] })\n      command = 'operation'\n      continue\n    }\n\n    const value = decode.field(conf, field, param[1])\n\n    /// Multi-operation link.\n    if (command === 'transaction') {\n      tdesc[field] = value\n    } else if (command === 'operation') {\n      operations[operations.length - 1][field] = value\n    /// One-operation link.\n    } else {\n      if (specs.isTransactionField(field)) {\n        tdesc[field] = value\n      } else {\n        operations[0][field] = value\n      }\n    }\n  }\n\n  tdesc.operations = operations\n  normalize.tdesc(conf, tdesc)\n  tdesc.operations.forEach(odesc => normalize.odesc(conf, odesc))\n  check.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/******************************************************************************/\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\ndecode.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  return type ? decode.type(conf, type, value) : value\n}\n\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {string} type\n * @param {string} value\n */\ndecode.type = function (conf, type, value) {\n  if (value) {\n    value = decodeURIComponent(value)\n    return process[type] ? process[type](conf, value) : value\n  } else {\n    return ''\n  }\n}\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.asset = function (conf, asset) {\n  const assetLower = asset.toLowerCase()\n  if (assetLower === 'xlm' || assetLower === 'native') {\n    return { code: 'XLM' }\n  } else {\n    const temp = asset.split(':')\n    const object = { code: temp[0], issuer: temp[1] }\n    return object\n  }\n}\n\nprocess.assetsArray = function (conf, assetsList) {\n  const strArray = assetsList.split(',')\n  return strArray.map(entry => decode.asset(conf, entry))\n}\n\nprocess.boolean = function (conf, string) {\n  switch (string) {\n    case 'true': return true\n    case 'false': return false\n  }\n}\n\nprocess.date = function (conf, string) {\n  /// Use UTC timezone by default.\n  if (string.match(/T[^+]*[0-9]$/)) string += 'Z'\n  return new Date(string).toISOString()\n}\n\nprocess.memo = function (conf, memo) {\n  const type = memo.replace(/:.*/, '')\n  const value = memo.replace(/^[^:]*:/, '')\n  if (type === value) {\n    return { type: 'text', value: value }\n  } else {\n    return { type: type, value: value }\n  }\n}\n\nprocess.price = function (conf, price) {\n  const numerator = price.replace(/:.*/, '')\n  const denominator = price.replace(/^[^:]*:/, '')\n  if (numerator === denominator) return price\n  else return { n: +numerator, d: +denominator }\n}\n\nprocess.signer = function (conf, signer) {\n  const temp = signer.split(':')\n  const object = { weight: temp[0], type: temp[1], value: temp[2] }\n  return object\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  exports[type] = (conf, value) => decode.type(conf, type, value)\n})\n","'use_strict'\n/**\n * Methods to set tdesc/odesc defaults values and strip out useless data.\n *\n * @exports normalize\n * @private\n */\nconst normalize = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst resolve = require('./resolve')\n\n/**\n * Setup the default values for `tdesc`.\n */\nnormalize.tdesc = function (conf, tdesc) {\n  removeEmptyFields(tdesc)\n  if (!tdesc.operations) tdesc.operations = []\n\n  if (tdesc.fee === 100 * tdesc.operations.length) delete tdesc.fee\n  dateFields.forEach(field => {\n    if (tdesc[field]) {\n      tdesc[field] = normalize.date(conf, tdesc[field])\n      if (tdesc[field] === '1970') delete tdesc[field]\n    }\n  })\n\n  if (tdesc.network) {\n    if (tdesc.network === StellarSdk.Networks.TESTNET) tdesc.network = 'test'\n    else if (tdesc.network === StellarSdk.Networks.PUBLIC) tdesc.network = 'public'\n  }\n\n  if (tdesc.horizon) {\n    if (!tdesc.network || tdesc.network === 'public' || tdesc.network === 'test') {\n      delete tdesc.horizon\n    } else if (tdesc.horizon.substr(0, 8) === 'https://') {\n      tdesc.horizon = tdesc.horizon.substr(8)\n    }\n  }\n}\n\nconst dateFields = ['minTime', 'maxTime']\n\nnormalize.date = function (conf, date) {\n  return date.replace(/:00\\.000/, '').replace(/\\.000/, '')\n    .replace(/T00:00Z/, '').replace(/-01$/, '').replace(/-01$/, '')\n}\n\nnormalize.network = function (conf, network) {\n  return resolve.networkName(conf, network) || network\n}\n\n/**\n * Add the implicit values for fields made optional in the CosmicLink protocol\n * but required by StellarSdk.\n */\nnormalize.odesc = function (conf, odesc) {\n  removeEmptyFields(odesc)\n  /// No limit = maximum limit.\n  if (odesc.limit === '922337203685.4775807') delete odesc.limit\n  /// New offer.\n  if (odesc.offerId === '0') delete odesc.offerId\n  /// Empty asset conversion path.\n  if (odesc.path && !odesc.path.length) delete odesc.path\n  /// Useless denominator.\n  if (odesc.price && odesc.price.d === 1) odesc.price = odesc.price.n + ''\n\n  switch (odesc.type) {\n    case 'allowTrust':\n      /// Allow trust by default.\n      if (odesc.authorize === undefined) odesc.authorize = true\n      break\n    case 'createPassiveOffer':\n    case 'manageOffer': {\n      /// XLM as default asset.\n      if (odesc.buying && !odesc.selling) odesc.selling = XLM\n      if (odesc.selling && !odesc.buying) odesc.buying = XLM\n      break\n    }\n    case 'manageData':\n      /// Delete data entry.\n      if (!odesc.value) odesc.value = ''\n      break\n    case 'pathPayment':\n      /// XLM as default asset.\n      if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = XLM\n      if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = XLM\n      break\n    case 'payment':\n      /// XLM as default asset.\n      if (!odesc.asset) odesc.asset = XLM\n      break\n  }\n}\n\nconst XLM = StellarSdk.Asset.native()\n\nfunction removeEmptyFields (object) {\n  for (let field in object) {\n    if (object[field] === null || object[field] === undefined) delete object[field]\n  }\n}\n","'use strict'\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n * @exports event\n */\nconst event = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\nconst format = require('./format')\n\n/** *** Click events *****/\n\n/**\n * Set the click handler for **type** HTML elements as **callback**.\n *\n * @example\n * cosmicLib.config.setClickHandler('address', showAddressPopup)\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\nevent.setClickHandler = function (conf, type, callback) {\n  conf.clickHandlers[type] = callback\n}\n\n/**\n * Remove the current click handler for **type**.\n *\n * @example\n * cosmicLib.config.clearClickHandler('address')\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\nevent.clearClickHandler = function (conf, type) {\n  conf.clickHandlers[type] = undefined\n}\n\nevent.callClickHandler = function (conf, type, event) {\n  const handler = conf.clickHandlers[type]\n  event.extra = event.domNode.extra\n  event.field = event.domNode.field\n  event.tdesc = format.parentTdesc(conf, event.domNode)\n  event.odesc = format.parentOdesc(conf, event.domNode)\n  event.index = format.parentIndex(conf, event.domNode)\n  if (handler) handler(event)\n}\n\n/**\n * The active click handlers. Takes the form:\n *\n * ```\n * cosmicLib.config.clickHandlers = {\n *   type1: callback1,\n *   ...\n *   typeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * * **address**: A prompt that shows the address details\n * * **id**: A function that copy the id into the clipboard\n * * **hash**: A function that copy the hash into the clipboard or show a prompt\n *   for preimage signature when relevant\n * ```\n */\nevent.defaultClickHandlers = {\n  address: function (event) {\n    console.log(event.tdesc)\n    if (!event.extra) return\n    let message = ''\n    for (let field in event.extra) {\n      message += `${field}:\\n` + `${event.extra[field]}\\n\\n`\n    }\n    window.alert(message)\n  },\n  hash: function (event) {\n    const grandma = event.domNode.parentNode.parentNode.parentNode\n    if (grandma.classList.contains('cosmiclib_signers')) {\n      const preimage = prompt('Please enter preimage:')\n      if (preimage) event.cosmicLink.sign(preimage)\n    } else {\n      helpers.copy(event.value)\n    }\n  },\n  id: helpers.copy\n}\n","'use strict'\n/**\n * Provide checks for varous type of field used in cosmic links.\n *\n * This module may no be type-complete and new type checks got added only when\n * needed.\n *\n * The check apply on values using the cosmic link JSON format.\n *\n * @private\n * @exports check\n */\nconst check = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\nconst specs = require('./specs')\nconst status = require('./status')\n\ncheck.tdesc = function (conf, tdesc) {\n  for (let field in tdesc) {\n    try {\n      check.txField(conf, field, tdesc[field])\n    } catch (error) {\n      tdesc[field] = errDesc(error, tdesc[field])\n    }\n  }\n\n  if (tdesc.operations.length > 100) {\n    status.error(conf, 'Too much operations (max 100)')\n  }\n\n  tdesc.operations.forEach(odesc => {\n    try { check.odesc(conf, odesc) } catch (e) {}\n  })\n\n  if (conf.errors) {\n    const error = new Error('Invalid tdesc')\n    error.tdesc = tdesc\n    throw error\n  }\n}\n\ncheck.odesc = function (conf, odesc) {\n  try {\n    check.operationType(conf, odesc.type)\n  } catch (error) {\n    odesc.type = errDesc(error, odesc.type)\n  }\n\n  for (let field in odesc) {\n    try {\n      check.operationField(conf, odesc.type, field, odesc[field])\n    } catch (error) {\n      odesc[field] = errDesc(error, odesc[field])\n    }\n  }\n\n  specs.operationMandatoryFields[odesc.type].forEach(field => {\n    if (odesc[field] === undefined) {\n      const error = new Error('Missing mandatory field: ' + field)\n      odesc[field] = errDesc(error)\n      status.error(conf, error.message)\n    }\n  })\n\n  if (conf.errors) throw new Error('Invalid odesc')\n}\n\ncheck.txField = function (conf, field, value) {\n  if (field === 'operations') return\n  if (!specs.transactionOptionalFields.find(name => name === field)) {\n    status.error(conf, 'Invalid transaction field: ' + field, 'throw')\n  }\n  check.field(conf, field, value)\n}\n\ncheck.operationType = function (conf, type) {\n  if (!specs.operationMandatoryFields[type]) {\n    status.error(conf, 'Invalid operation: ' + type, 'throw')\n  }\n}\n\ncheck.operationField = function (conf, operation, field, value) {\n  if (field === 'type') return\n  if (!specs.isOperationField(operation, field)) {\n    status.error(conf, `Invalid field for ${operation}: ${field}`, 'throw')\n  }\n  check.field(conf, field, value)\n}\n\nfunction errDesc (error, value = '') {\n  return { error: error, value: value }\n}\n\n/******************************************************************************/\n\n/**\n * Check that `field` is a valid transaction/operation field. If `value` is\n * given, check that it is valid for that `field`. If a check doesn't pass, an\n * error is throwed.\n *\n * @param {string} field\n * @param {string} [value]\n */\ncheck.field = function (conf, field, value) {\n  if (value === '' && field !== 'homeDomain' && field !== 'value') {\n    status.error(conf, `Missing value for field: ${field}`, 'throw')\n  }\n\n  const type = specs.fieldType[field]\n  if (!type) status.error(conf, 'Unknow field: ' + field, 'throw')\n  if (value) check.type(conf, type, value)\n}\n\n/**\n * Check that `type` is a valid transaction/operation field type. If `value` is\n * given, check that it is valid for that `type`. If a check doesn't pass, an\n * error is throwed.\n *\n * @param {string} type\n * @param {string} [value]\n */\ncheck.type = function (conf, type, value) {\n  if (!specs.types.find(entry => entry === type)) {\n    throw new Error('Invalid type: ' + type)\n  }\n  return check[type](conf, value)\n}\n\n/**\n * Generic check for numbers. Check that `value` is a number or a string\n * representing a number. `type` is for the customization of the message in case\n * of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.number = function (conf, value, type = 'number', min, max = 'unlimited') {\n  const num = +value\n  if (isNaN(num)) {\n    status.error(conf,\n      `Invalid ${type} (should be a number): ${value}`,\n      'throw'\n    )\n  } else if ((min && num < min) || (max && num > max)) {\n    status.error(conf,\n      `Invalid ${type} (should be between ${min} and ${max} ): ${value}`,\n      'throw'\n    )\n  }\n}\n\n/**\n * Generic check for integers. Check that `value` is an integer or a string\n * representing an integer. `type` is for the customization of the message in\n * case of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.integer = function (conf, value, type = 'integer', min, max) {\n  check.number(conf, value, type, min, max)\n  if (parseInt(value) + '' !== value + '') {\n    status.error(conf, `Not an integer: ${value}`, 'throw')\n  }\n}\n\n/******************************************************************************/\n\ncheck.amount = function (conf, amount) {\n  check.number(conf, amount, 'amount')\n}\n\ncheck.address = function (conf, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.error(conf, 'Invalid address: ' + helpers.shorter(address), 'throw')\n  }\n}\n\ncheck.asset = function (conf, asset) {\n  const code = asset.code.toLowerCase()\n  if (!asset.issuer && code !== 'xlm' && code !== 'native') {\n    status.error(conf, 'Missing issuer for asset: ' + code, 'throw')\n  }\n}\n\ncheck.assetsArray = function (conf, assetsArray) {\n  let isValid = true\n  for (let index in assetsArray) {\n    try {\n      check.asset(conf, assetsArray[index])\n    } catch (error) {\n      console.log(error)\n      isValid = false\n    }\n  }\n  if (!isValid) throw new Error('Invalid assets array')\n}\n\ncheck.boolean = function (conf, boolean) {\n  if (typeof boolean !== 'boolean') {\n    status.error(conf, 'Invalid boolean: ' + boolean, 'throw')\n  }\n}\n\ncheck.date = function (conf, date) {\n  if (isNaN(Date.parse(date))) {\n    status.error(conf, 'Invalid date: ' + date, 'throw')\n  }\n}\n\ncheck.flags = function (conf, flags) {\n  check.integer(conf, flags, 'flags', 0, 7)\n}\n\ncheck.hash = function (conf, hash) {\n  if (hash.length !== 64 || !hash.match(/[0-9a-f]*/)) {\n    status.error(conf, 'Invalid hash:' + hash, 'throw')\n  }\n}\n\ncheck.price = function (conf, price) {\n  if (typeof price === 'object') {\n    try {\n      check.price(null, price.n)\n      check.price(null, price.d)\n    } catch (error) {\n      status.error(conf, 'Invalid price: ' + price, 'throw')\n    }\n  } else {\n    check.number(conf, price, 'price', 0)\n  }\n}\n\ncheck.signer = function (conf, signer) {\n  check.weight(conf, signer.weight)\n  switch (signer.type) {\n    case 'key':\n      check.address(conf, signer.value)\n      break\n    case 'hash':\n    case 'tx':\n      check.hash(conf, signer.value)\n      break\n    default:\n      status.error(conf, 'Invalid signer type: ' + signer.type, 'throw')\n  }\n}\n\ncheck.sequence = function (conf, sequence) {\n  check.number(conf, sequence, 'sequence', 0)\n}\n\ncheck.threshold = function (conf, threshold) {\n  check.integer(conf, threshold, 'threshold', 0, 255)\n}\n\ncheck.weight = function (conf, weight) {\n  check.integer(conf, weight, 'weight', 0, 255)\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","'use strict'\n/**\n * Contains the methods to convert data from *{@see Transaction}* format to\n * *Tdesc* format.\n *\n * @private\n * @exports destruct\n */\nconst destruct = exports\n\nconst normalize = require('./normalize')\nconst specs = require('./specs')\n\n/**\n * Convert `tx` into *Tdesc*.\n *\n * @param {Transaction} tx\n * @param {Object} options\n * @return {Object} A tdesc\n */\ndestruct.transaction = function (conf, tx, options = {}) {\n  const tdesc = {}\n\n  if (tx.source === specs.neutralAccountId) options.stripSource = true\n  if (tx.sequence === '0') options.stripSequence = true\n\n  tdesc.network = options.network\n  tdesc.horizon = options.horizon\n  if (!options.stripSource) tdesc.source = tx.source\n  if (!options.stripSource && !options.stripSequence) {\n    tdesc.sequence = destruct.sequence(conf, tx.sequence)\n  }\n\n  if (tx._memo._switch.name !== 'memoNone') tdesc.memo = destruct.memo(conf, tx._memo)\n  if (tx.timeBounds) {\n    if (tx.timeBounds.minTime) tdesc.minTime = destruct.date(conf, tx.timeBounds.minTime)\n    if (tx.timeBounds.maxTime) tdesc.maxTime = destruct.date(conf, tx.timeBounds.maxTime)\n  }\n  tdesc.fee = tx.fee\n\n  /// Work around a bug in stellar-sdk 0.11\n  /// https://github.com/stellar/js-stellar-sdk/issues/204\n  tdesc.operations = []\n  for (let index in tx.operations) {\n    const op = tx.operations[index]\n    if (op.homeDomain === null) {\n      const optree = tx.tx._attributes.operations[index]\n      op.homeDomain = optree._attributes.body._value._attributes.homeDomain\n    }\n    tdesc.operations[index] = destruct.operation(conf, op)\n  }\n  // tdesc.operations = tx.operations.map(op => destruct.operation(conf, op))\n\n  normalize.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/**\n * Convert `op` into odesc format.\n *\n * @param {Object} op A StellarSdk Operation\n * @return {Object} An odesc\n */\ndestruct.operation = function (conf, op) {\n  const odesc = {}\n\n  for (let field in op) {\n    if (field === 'type') odesc.type = op.type\n    else if (field === 'line') odesc.asset = op.line\n    else odesc[field] = destruct.field(conf, field, op[field])\n  }\n\n  normalize.odesc(conf, odesc)\n  return odesc\n}\n\n/******************************************************************************/\n\n/**\n * Destruct `value` according to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\ndestruct.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return destruct.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Destruct `value` using the destructuring function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\ndestruct.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value\n  else return destruct[type](conf, value)\n}\n\n/******************************************************************************/\n\ndestruct.asset = function (conf, asset) {\n  return Object.assign({}, asset)\n}\n\ndestruct.assetPath = function (conf, assetPath) {\n  return assetPath.map(asset => destruct.asset(asset))\n}\n\ndestruct.buffer = function (conf, buffer) {\n  if (buffer) return buffer.toString()\n  else return null\n}\n\ndestruct.date = function (conf, timestamp) {\n  return new Date(timestamp * 1000).toISOString()\n}\n\ndestruct.memo = function (conf, sdkMemo) {\n  const memo = {}\n  if (sdkMemo._switch.name !== 'memoNone') {\n    memo.type = sdkMemo._arm\n    if (memo.type === 'hash' || memo.type === 'retHash') {\n      memo.value = sdkMemo._value.toString('hex')\n      if (memo.type === 'retHash') memo.type = 'return'\n    } else {\n      memo.value = sdkMemo._value.toString()\n    }\n  }\n  return memo\n}\n\ndestruct.sequence = function (conf, sdkSequence) {\n  return sdkSequence.toString()\n}\n\ndestruct.signer = function (conf, sdkSigner) {\n  const signer = { weight: sdkSigner.weight }\n  if (sdkSigner.ed25519PublicKey) {\n    signer.type = 'key'\n    signer.value = sdkSigner.ed25519PublicKey\n  } else if (sdkSigner.sha256Hash) {\n    signer.type = 'hash'\n    signer.value = sdkSigner.sha256Hash.toString('hex')\n  } else if (sdkSigner.preAuthTx) {\n    signer.type = 'tx'\n    signer.value = sdkSigner.preAuthTx.toString('hex')\n  }\n  return signer\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","'use strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\nif (env.isBrowser) require('@cosmic-plus/jsutils/polyfill')\n\n/**\n * Automatically pass `config` to `module` functions as first argument.\n *\n * @param {Object} config A configuration object similar than config.js module.\n * @param {Object} module A cosmic-lib module whose functions takes config as the\n *   first argument.\n * @private\n */\nfunction exposeModule (config, module) {\n  const layer = Object.assign({}, module)\n  helpers.setHiddenProperty(layer, '_config', config)\n  for (let name in module) {\n    if (typeof module[name] === 'function') {\n      layer[name] = function (...params) { return module[name](this._config, ...params) }\n    } else {\n      layer[name] = module[name]\n    }\n  }\n  return layer\n}\n\n/**\n * Create a clone of the library with an alternative config object derived from\n * **params**. Fields which are not defined in **params** stay in sync with parent\n * configuration.\n *\n * @example\n * const testnet = cosmicLib.withConfig({ network: 'test' })\n * const account = await testnet.resolve.account('tips*cosmic.link')\n *\n * @params {Object} params Alternative configuration\n * @return {Object} A clone of cosmicLib\n */\nexports.withConfig = function (params) {\n  const library = Object.create(this)\n  library.config = Object.assign({}, this.config, params)\n\n  for (let module in this) {\n    if (this[module].prototype && this[module].prototype.__proto__ === this.config) {\n      library[module] = class extends this[module] {}\n      Object.assign(library[module].prototype, this[module].prototype)\n      library[module].prototype.__proto__ = library.config\n    } else if (this[module]._config) {\n      library[module] = Object.create(this[module])\n      helpers.setHiddenProperty(library[module], '_config', library.config)\n    }\n  }\n\n  return library\n}\n\n/// Export modules.\n\nconst config = exports.config = require('./config')\nexports.CosmicLink = require('./cosmiclink')\nexports.load = env.isBrowser && exposeModule(config, require('./load'))\nexports.resolve = exposeModule(config, require('./resolve'))\nexports.signersUtils = exposeModule(config, require('./signers-utils'))\nexports.specs = require('./specs')\n","'use_strict'\n\nif (!NodeList.prototype.forEach) {\n  NodeList.prototype.forEach = Array.prototype.forEach\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined')\n      }\n\n      var o = Object(this)\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function')\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1]\n\n      // 5. Let k be 0.\n      var k = 0\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k]\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue\n        }\n        // e. Increase k by 1.\n        k++\n      }\n\n      // 7. Return undefined.\n      return undefined\n    },\n    configurable: true,\n    writable: true\n  })\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign (target, varArgs) { // .length of function is 2\n      'use strict'\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n\n      var to = Object(target)\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index]\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    },\n    writable: true,\n    configurable: true\n  })\n}\n","'use_strict'\n/**\n * Aliases handlers & most known Stellar addresses.\n *\n * @private\n * @exports aliases\n */\nconst aliases = exports\n\n/**\n * Add new **aliases** or replace existing ones.\n *\n * @example\n * cosmicLib.config.addAliases({\n *   'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n *   'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io'\n * })\n *\n * @param {Object} aliases An object such as `{ publicKey1: name1, ..., publicKeyN: nameN }`\n */\naliases.add = function (conf, aliases) {\n  conf.aliases = Object.assign(conf.aliases, aliases)\n}\n\n/**\n * Remove **publicKeys** from aliases list.\n *\n * @example\n * cosmicLib.config.removeAliases([\n *  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP',\n *  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5',\n * ])\n *\n * @param {Array} publicKeys An array of public keys\n */\naliases.remove = function (conf, publicKeys) {\n  publicKeys.forEach(entry => delete conf.aliases[entry])\n}\n\n/**\n * Aliases for most known anchors.\n */\naliases.anchors = {\n  'GAEDLNMCQZOSLY7Y4NW3DTEWQEVVCXYYMBDNGPPGBMQH4GFYECBI7YVK': 'anclax.com',\n  'GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4': 'apay.io',\n  'GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF': 'apay.io',\n  'GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR': 'apay.io',\n  'GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP': 'apay.io',\n  'GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC': 'astral9.io',\n  'GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP': 'charnatoken.top',\n  'GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP': 'coins.asia',\n  'GDPFSEBZO2W4TLWZO7FIMMG3QONHXYVF6LUULI6HUJS6PJLE4TRZEXLF': 'collective21.org',\n  'GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ': 'cryptomover.com',\n  'GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3': 'cryptomover.com',\n  'GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG': 'cryptomover.com',\n  'GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI': 'cryptomover.com',\n  'GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2': 'cryptomover.com',\n  'GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7': 'cryptotari.io',\n  'GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN': 'equid.co',\n  'GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW': 'flutterwave.com',\n  'GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M': 'frasindo.com',\n  'GCYK67DDGBOANS6UODJ62QWGLEB2A7JQ3XUV25HCMLT7CI23PMMK3W6R': 'golix.io',\n  'GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL': 'irene.energy',\n  'GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX': 'liquido.i-server.org',\n  'GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH': 'mobius.network',\n  'GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK': 'moni.com',\n  'GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH': 'naobtc.com',\n  'GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS': 'naobtc.com',\n  'GDGKBRCPW4C3ENNC5C64PE6U33MG52GBKFXOK5P3OSWF74DAOXRXV6OJ': 'nezly.com',\n  'GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6': 'old.repocoin.io',\n  'GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN': 'old.sureremit.co',\n  'GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY': 'pedity.com',\n  'GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5': 'pr.network',\n  'GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B': 'repocoin.io',\n  'GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX': 'ripplefox.com',\n  'GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z': 'six.network',\n  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io',\n  'GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M': 'stemchain.io',\n  'GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG': 'stronghold.co',\n  'GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK': 'stronghold.co',\n  'GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI': 'superlumen.org',\n  'GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N': 'sureremit.co',\n  'GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S': 'tempo.eu.com',\n  'GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C': 'ternio.io',\n  'GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3': 'thefutbolcoin.io',\n  'GCLRUZDCWBHS7VIFCT43BARPP63BHR32HMEVKXYQODA5BU6SIGFK4HL2': 'tonaira.com',\n  'GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON': 'tontinetrust.com',\n  'GA7FCCMTTSUIC37PODEL6EOOSPDRILP6OQI5FWCWDDVDBLJV72W6RINZ': 'vcbear.net',\n  'GBVAOIACNSB7OVUXJYC5UE2D4YK2F7A24T7EE5YOMN4CE6GCHUTOUQXM': 'vcbear.net',\n  'GDXTJEK4JZNSTNQAWA53RZNS2GIKTDRPEUWDXELFMKU52XNECNVDVXDI': 'vcbear.net',\n  'GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN': 'winsome.gift',\n  'GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM': 'ximcoin.com',\n  'GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5': 'xirkle.com'\n}\n\naliases.destinations = {\n  'GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2': 'AEX',\n  'GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A': 'Binance',\n  'GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC': 'Binance',\n  'GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL': 'Bitfinex',\n  'GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3': 'Bittrex',\n  'GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM': 'BTC38',\n  'GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7': 'Changelly',\n  'GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH': 'Exrates',\n  'GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S': 'Gate.io',\n  'GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO': 'GOPAX',\n  'GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S': 'Indodax',\n  'GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP': 'KOINEX',\n  'GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM': 'Kraken',\n  'GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT': 'Lumenaut Inflation',\n  'GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH': 'Mobius Issuer',\n  'GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES': 'NaoBTC',\n  'GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB': 'OKEX',\n  'GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L': 'PapayaBot',\n  'GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW': 'PapayaSwap',\n  'GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY': 'Pedity Issuer',\n  'GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW': 'Piiko',\n  'GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2': 'Poloniex',\n  'GCZYLNGU4CA5NAWBAVTHMZH4JXWKP2OUJ6OK3I7XXZCNA5622WUJVLTG': 'RMT swap',\n  'GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD': 'Stellar Guard',\n  'GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW': 'StellarTerm Inflation',\n  'GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI': 'Superlumen Issuer',\n  'GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM': 'XIM'\n}\n\n/**\n * Aliases handlers & most known Stellar addresses. Aliases takes the form:\n *\n * ```js\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n */\naliases.all = Object.assign({}, aliases.anchors, aliases.destinations)\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","'use_strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\nconst action = require('./action')\nconst config = require('./config')\nconst convert = require('./convert')\nconst parse = require('./parse')\nconst resolve = require('./resolve')\nconst status = require('./status')\n\n/// Web only\nlet html, format\nif (env.isBrowser) {\n  html = require('@cosmic-plus/jsutils/html')\n  format = require('./format')\n}\n\n/**\n * | Formats                                     | Data                               | Actions                                        | Editor                                       | HTML elements\n * |---------------------------------------------|------------------------------------|------------------------------------------------|----------------------------------------------|----------------------------------------\n * |-----------------------|-----------------------|-----------------------|-----------------------|-----------------------\n * | [uri]{@link CosmicLink#uri}                 |[page]{@link CosmicLink#page}       |[selectNetwork]{@link CosmicLink#selectNetwork} |[parse]{@link CosmicLink#parse}               |[htmlDescription]{@link CosmicLink#htmlDescription}\n * | [query]{@link CosmicLink#query}             |[network]{@link CosmicLink#network} |await [lock]{@link CosmicLink#lock}             |[setTxFields]{@link CosmicLink#setTxFields}   |[htmlLink]{@link CosmicLink#htmlLink}\n * | [tdesc]{@link CosmicLink#tdesc}             |[source]{@link CosmicLink#source}   |[sign]{@link CosmicLink#sign}                   |[addOperation]{@link CosmicLink#addOperation} |\n * | [json]{@link CosmicLink#json}               |[status]{@link CosmicLink#status}   |await [send]{@link CosmicLink#send}             |[setOperation]{@link CosmicLink#setOperation}\n * | [transaction]{@link CosmicLink#transaction} |[errors]{@link CosmicLink#errors}   |\n * | [xdr]{@link CosmicLink#xdr}                 |[locker]{@link CosmicLink#locker}   |\n * | [sep7]{@link CosmicLink#sep7}               |[cache]{@link CosmicLink#cache}     |\n *\n * -----\n *\n * The **CosmicLink** class represents Stellar\n * [transactions]{@link https://stellar.org/developers/guides/concepts/transactions.html}\n * encoded in various formats. It allows to convert between those formats, to\n * edit the underlying transaction, to build it, to sign it and to send it to\n * the blockchain.\n *\n * There are 3 main formats from which the other are derived:\n *\n * * The StellarSdk [Transaction]{@link {@link https://stellar.github.io/js-stellar-sdk/Transaction.html}} object. (**transaction**)\n * * The CosmicLink, which is a transaction encoded as a query. (**query**)\n * * The Tdesc, which is an internal JSON-compatible format in-between those two.\n *   It is the easier format to work with. (**tdesc**)\n *\n * Those formats can be derived into other related formats:\n *\n * * The XDR, which's a base64 representation of StellarSdk Transaction. (**xdr**)\n * * The Sep-0007 link, in its XDR form. (**sep7**)\n * * The CosmicLink URL/URI, which is a page plus the query. (**uri**)\n * * The Tdesc JSON, which is its stringified version. (**json**)\n *\n * A CosmicLink object can be created from any of those formats. Some of the\n * other formats are immediately available, while others may need an\n * `await cosmicLink.lock()` operation to become computable:\n *\n * * If you create a CosmicLink from an **uri**, a **query**, a **tdesc** or a\n *   **json**, only those 4 formats are available at first. Transaction, xdr &\n *   sep7 will become available after a `cosmicLink.lock()`. (**free formats**)\n * * If you create a CosmicLink from a **transaction**, an **xdr** or a **sep7**,\n *   all formats will immediately be available. (**locked formats**)\n *\n * For a better efficiency, formats are lazy-evaluated. This means that they are\n * computed once only if/when you call them:\n *\n * ```js\n * const cosmicLink = new CosmicLink(xdr, { network: 'test' })\n * console.log(cosmicLink.query)\n * ```\n *\n * The role of `cosmicLink.lock()` is centric to this class. In practice, the\n * free formats don't have to be tied to a **network**, a **source** or a\n * **sequence number**. For example, the CosmicQuery `?inflation` is a valid\n * generic transaction that can be locked to any network/source/sequence\n * combination.\n *\n * On the other hand, locked formats are always tied to a particular combination\n * of those, hence the need for a **lock** command:\n *\n * ```js\n * const cosmicLink = new CosmicLink('?inflation')\n *\n * console.log(cosmicLink.tdesc.source)    // => undefined\n * console.log(cosmicLink.tdesc.network)   // => undefined\n * console.log(cosmicLink.tdesc.sequence)  // => undefined\n * console.log(cosmicLink.xdr)             // => undefined\n *\n * await cosmicLink.lock({ network: 'test', source: 'tips*cosmic.link' })\n *\n * console.log(cosmicLink.tdesc.source)    // => 'GC6Z...2JVW'\n * console.log(cosmicLink.tdesc.network)   // => 'test'\n * console.log(cosmicLink.tdesc.sequence)  // => 29...3903\n * console.log(cosmicLink.xdr)             // => 'AAAA....AA=='\n * ```\n *\n * The **lock** command is asynchronous because free formats accept\n * [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html},\n * but locked formats don't. The library automatically resolve\n * those and this is an asynchronous operation. At the same time, it downloads\n * the required data from the blockchain to handle multi-signers transactions.\n *\n * After the lock operation, all free formats are updated according to the new\n * state of the transaction. It is now possible to `cosmicLink.sign(keypair)`\n * it, and to `cosmicLink.send()` it to the blockchain.\n */\nclass CosmicLink {\n  /**\n   * Create a new CosmicLink object. **transaction** can be one of the accepted\n   * format: uri, query, json, tdesc, transaction, xdr or sep7.\n   *\n   * @constructor\n   * @param {string|Object|Transaction} transaction A transaction in one of\n   *  thoses formats: uri, query, json, tdesc, transaction, xdr, sep7\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format.\n   * @param {string} options.network For Transaction/XDR formats, the network for\n   *     which it have been created\n   * @param {boolean} options.stripSignatures If set, will strip out signatures\n   *     from XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set, will strip out signatures\n   *     and sequence number from XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set, will strip out signatures,\n   *     sequence number and transaction primary source account from\n   *     XDR/Transaction formats.\n   * @return {CosmicLink}\n   */\n  constructor (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /**\n   * Re-parse this CosmicLink. Useful in implementing transaction editors. The\n   * parameters are the same than [Constructor]{@link CosmicLink#Constructor},\n   * and the result is similar except that no new CosmicLink object is created.\n   */\n  parse (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /// Formats\n  /**\n   * A CosmicLink is a URI that embed a Cosmic [Query]{@link CosmicLink#query}.\n   * This format is simply the `cosmicLink.query` appended to the\n   * `cosmicLink.page`\n   */\n  get uri () {\n    if (this.query) return this.page + this.query\n  }\n\n  /**\n   * CosmicLink's transaction encoded in the Cosmic\n   * [Query]{@link tutorial:specs_query} format. This format allows to\n   * conveniently pass around Stellar transactions over any URI.\n   */\n  get query () {\n    if (!this._query) {\n      if (this.xdr) this._query = convert.xdrToQuery(this, this.xdr, { network: this.network })\n      else if (this.tdesc) this._query = convert.tdescToQuery(this, this.tdesc)\n      else return undefined\n    }\n    return this._query\n  }\n\n  /**\n   * CosmicLink's transaction in Tdesc format. This is in-between an objectified\n   * query representation and a simplified StellarSdk Transaction object. It has\n   * been created to be convenient to understand, use and manipulate.\n   *\n   * If you need to read the transaction parameters, this is the format of\n   * choice:\n   *\n   * ```js\n   * console.log(cosmicLink.tdesc.network) // Does the transaction enforce a network?\n   * console.log(cosmicLink.tdesc.source)  // Does the transaction enforce a source?\n   * console.log(cosmicLink.tdesc.memo)    // A simplified memo object or undefined\n   * console.log(cosmicLink.operations)    // Transaction operations in simplified format\n   * ```\n   *\n   * This formats authorize [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html}\n   * everywhere StellarSdk Transaction accept public keys. Those addresses are\n   * resolved when running the [lock]{@link CosmicLink#lock} method, and the\n   * tdesc is replaced by a resolved one.\n   *\n   * Tdesc is also very convenient to edit. To keep the CosmicLink in sync, you\n   * either need to [parse]{@link CosmicLink#parse} the edited tdesc, or to edit\n   * it using the dedicated methods:\n   *\n   * * [setTxFields]{@link CosmicLink#setTxFields}: set/clear transaction fields\n   * * [addOperation]{@link CosmicLink#addOperation}: add a new operation\n   * * [setOperation]{@link CosmicLink#setOperation}: edit/clear an operation\n   */\n  get tdesc () {\n    if (!this._tdesc) {\n      if (this.transaction) this._tdesc = convert.transactionToTdesc(this, this.transaction, this.locker)\n      else return undefined\n    }\n    return this._tdesc\n  }\n\n  /**\n   * CosmicLink's transaction in JSON format. This is a stringified version of\n   * [Tdesc]{@link CosmicLink#tdesc} format.\n   */\n  get json () {\n    if (!this._json) this._json = convert.tdescToJson(this, this.tdesc)\n    return this._json\n  }\n\n  /**\n   * CosmicLink's transaction in StellarSdk\n   * [Transaction]{@link https://stellar.github.io/js-stellar-sdk/Transaction.html}\n   * format.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get transaction () {\n    return this._transaction\n  }\n\n  /**\n   * CosmicLink's transaction in\n   * [XDR]{@link https://stellar.org/developers/guides/concepts/xdr.html}\n   * format.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get xdr () {\n    if (!this._xdr) {\n      if (!this.transaction) return undefined\n      this._xdr = convert.transactionToXdr(this, this.transaction)\n    }\n    return this._xdr\n  }\n\n  /**\n   * CosmicLink transaction in\n   * [SEP-0007]{@link https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md}\n   * link format. Only the XDR part of this protocol is currently supported by\n   * CosmicLink, minus the signature verification.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get sep7 () {\n    if (!this._sep7) {\n      if (!this.xdr) return undefined\n      this._sep7 = convert.xdrToSep7(this, this.xdr)\n    }\n    return this._sep7\n  }\n\n  /// Data\n  /**\n   * The page this CosmicLink uses to construct its [URI]{@link CosmicLink#uri}.\n   */\n  get page () {\n    return this._page || this.__proto__.page\n  }\n\n  set page (value) {\n    this._page = value\n  }\n\n  /**\n   * The source this CosmicLink uses, which is defined after the following\n   * rule:\n   *\n   * > transaction source OR locker source OR global configuration source OR neutral source\n   *\n   * When a transaction defines its source, it is available at\n   * `cosmicLink.tdesc.source`. The global configuration source is set at\n   * `cosmiclib.config.source`. The neutral source account is used to generate\n   * StellarSdk Transactions, XDR and Sep-0007 links when no source is given and\n   * is automatically removed when those format are parsed again.\n   */\n  get source () {\n    return (this.tdesc && this.tdesc.source) || this.__proto__.source\n  }\n\n  set source (source) {\n    this.setTxFields({ source: source })\n  }\n\n  /**\n   * The network this CosmicLink uses, which is defined after the following\n   * rule:\n   *\n   * > transaction network OR locker network OR global configuration network\n   *\n   * When a transaction defines its network, it is available at\n   * `cosmicLink.tdesc.network`. The global configuration network is set at\n   * `cosmiclib.config.network`.\n   */\n  get network () {\n    return (this.tdesc && this.tdesc.network) || this.__proto__.network\n  }\n\n  set network (network) {\n    this.setTxFields({ network: network })\n  }\n\n  /**\n   * The horizon node this CosmicLink uses, which is defined after the following\n   * rule:\n   *\n   * > default horizon for CosmicLink network OR transaction horizon\n   *\n   * The rationale for this behavior is that we allow transaction emitter to\n   * provide the horizon node URL only if none is known for a transaction\n   * happening on a custom network. In other cases, it is up to the user/wallet\n   * to define the horizon node to use, not up to the emitter.\n   *\n   * When a transaction defines its horizon node, it is available at\n   * `cosmicLink.tdesc.horizon`.\n   */\n  get horizon () {\n    return resolve.horizon(this, this.network) || (this.tdesc && this.tdesc.horizon)\n  }\n\n  set horizon (horizon) {\n    this.setTxFields({ horizon: horizon })\n  }\n\n  /// Editor\n  /**\n   * Add/remove transaction fields and reparse the CosmicLink. **object** should\n   * follow the Tdesc format, but fields values can be written using query or\n   * StellarSdk format as well.\n   *\n   * @example\n   * cosmicLink.setTxFields({ minTime: '2018-10', maxTime: '2019-01' })\n   *\n   * @example\n   * cosmicLink.setTxFields({ minTime: null, maxTime: null })\n   *\n   * @example\n   * cosmicLink.setTxFields({ memo: 'Bonjour!' })\n   *\n   * @param {Object} object Transaction fields definition. Fields can be either\n   *   written using the JSON format or the query format\n   * @return {CosmicLink}\n   */\n  setTxFields (object) {\n    checkLock(this)\n    this.parse(Object.assign(this.tdesc, object))\n    return this\n  }\n\n  /**\n   * Add a new operation to CosmicLink. **params** should follow the Tdesc format,\n   * but fields values can be written using query or StellarSdk format as well.\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: 'CNY:admin*ripplefox' })\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: { code: 'CNY', issuer: 'admin*ripplefox } })\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: new StellarSdk.Asset('CNY', ...) })\n   *\n   * @param {string} type The operation type.\n   * @param {Object} params The operation parameters.\n   * @return {CosmicLink}\n   */\n  addOperation (type, params) {\n    checkLock(this)\n    const odesc = Object.assign({ type: type }, params)\n    this.tdesc.operations.push(odesc)\n    this.parse(this.tdesc)\n    return this\n  }\n\n  /**\n   * Set/remove one of the CosmicLink operations. **params** should follow the\n   * Tdesc format, but fields can be written using query or StellarSdk format\n   * as well. If **type** is set to `null`, the operation at **index**\n   * is deleted.\n   *\n   * @example\n   * cosmicLink.setOperation(1, 'setOptions', { homeDomain: 'example.org' })\n   *\n   * @example\n   * cosmicLink.setOperation(2, null)\n   *\n   * @param {integer} index The operation index.\n   * @param {type} type  The operation type.\n   * @param {params} params The operation parameters.\n   * @return {CosmicLink}\n   */\n  setOperation (index, type, params) {\n    checkLock(this)\n    if (!this.tdesc.operations[index]) {\n      throw new Error(`Operation ${index} doesn't exists`)\n    }\n\n    if (type === null) {\n      this.tdesc.operations.splice(index, 1)\n    } else {\n      this.tdesc.operations[index] = Object.assign({ type: type }, params)\n      this.parse(this.tdesc)\n    }\n    return this\n  }\n\n  /// Actions\n  /**\n   * Select the network that this CosmicLink uses.\n   */\n  selectNetwork () { return resolve.useNetwork(this) }\n  lock (options) { return action.lock(this, options) }\n  sign (...keypairs_or_preimage) { return action.sign(this, ...keypairs_or_preimage) }\n  send (horizon) { return action.send(this, horizon) }\n\n  /**\n   * The HTML DOM node that displays a description of the current transaction.\n   * This is a browser-only property.\n   *\n   * If your HTML page contains an element with `id=\"cosmiclink_description\"`,\n   * it will automatically get populated with the description of the last\n   * CosmicLink created.\n   */\n  get htmlDescription () {\n    if (!this._htmlDescription) makeHtmlDescription(this)\n    return this._htmlDescription\n  }\n\n  /**\n   * A link HTML Element that points to `cosmicLink.uri`\n   */\n  get htmlLink () {\n    if (!this._htmlLink) makeHtmlLink(this)\n    return this._htmlLink\n  }\n\n  /// Backward compatibility (2018-09 -> 2019-03).\n  get server () {\n    return resolve.server(this)\n  }\n\n  get htmlNode () {\n    helpers.deprecated('2019-03', 'cosmicLink.htmlNode', 'cosmicLink.htmlDescription')\n    return this.htmlDescription\n  }\n  get transactionNode () { return html.grab('.cosmiclib_transactionNode', this.htmlDescription) }\n  get statusNode () { return html.grab('.cosmiclib_statusNode', this.htmlDescription) }\n  get signersNode () { return html.grab('.cosmiclib_signersNode', this.htmlDescription) }\n\n  hasSigned (accountId) {\n    helpers.deprecated('2019-03', 'cosmicLink.hasSigned', 'cosmicLink.transaction.hasSigned')\n    return this.transaction.hasSigned(accountId)\n  }\n  hasSigner (accountId) {\n    helpers.deprecated('2019-03', 'cosmicLink.hasSigner', 'cosmicLink.transaction.hasSigner')\n    return this.transaction.hasSigner(accountId)\n  }\n}\n\n/**\n * Initialize or reset a CosmicLink.\n *\n * @private\n */\nfunction initCosmicLink (cosmicLink, transaction, options = {}) {\n  checkLock(cosmicLink)\n\n  /// Reset object in case of reparse.\n  formatsFields.forEach(type => delete cosmicLink[type])\n  cosmicLink.page = cosmicLink.page || options.page || config.page\n  /**\n   * The status of a CosmicLink. It becomes non-null in case of failure.\n   * @var CosmicLink#status\n   */\n  /**\n   * By default `false`, or an *Array* of errors.\n   * @var CosmicLink#errors\n   */\n  status.init(cosmicLink)\n\n  /**\n   * The CosmicLink cache contains the resolved federations addresses and the\n   * accounts object. Using the same set of data for all the CosmicLink related\n   * computations ensure consistent results.\n   *\n   * @var CosmicLink#cache\n   */\n  cosmicLink.cache = { destination: {}, account: {} }\n\n  parse.dispatch(cosmicLink, transaction, options)\n\n  if (env.isBrowser) {\n    makeHtmlLink(cosmicLink)\n    if (!cosmicLink._htmlDescription) {\n      /// #cosmiclib_htmlNode: Backward compatibility (2018-09 -> 2019-03).\n      cosmicLink._htmlDescription = html.grab('#cosmiclink_description') || html.grab('#CL_htmlNode')\n    }\n    if (cosmicLink._htmlDescription) {\n      if (cosmicLink.htmlDescription.id === '#CL_htmlNode') {\n        helpers.deprecated('2019-03', 'id=\"#CL_htmlNode\"', 'id=\"cosmiclink_description\"')\n      }\n      makeHtmlDescription(cosmicLink)\n    }\n  }\n}\nconst formatsFields = ['_query', '_tdesc', '_json', '_transaction', '_xdr']\n\n/**\n * Initialize CosmicLink html nodes.\n *\n * @private\n */\nfunction makeHtmlDescription (cosmicLink) {\n  if (env.isNode) return\n  let htmlDescription = cosmicLink._htmlDescription\n\n  if (htmlDescription) {\n    html.clear(htmlDescription)\n    htmlDescription.className = 'cosmiclink_description'\n  } else {\n    htmlDescription = html.create('div', '.cosmiclink_description')\n    cosmicLink._htmlDescription = htmlDescription\n  }\n\n  cosmicLink._transactionNode = format.tdesc(cosmicLink, cosmicLink.tdesc)\n  cosmicLink._statusNode = status.makeHtmlNode(cosmicLink)\n  cosmicLink._signersNode = html.create('div', '.cosmiclib_signersNode')\n\n  html.append(htmlDescription,\n    cosmicLink._transactionNode, cosmicLink._statusNode, cosmicLink._signersNode)\n}\n\n/**\n * Make the HTML link.\n * @private\n */\nfunction makeHtmlLink (cosmicLink) {\n  if (env.isNode) return\n\n  const htmlLink = html.grab('#cosmiclink') || html.create('a')\n  htmlLink.className = '.cosmiclink'\n  htmlLink.href = cosmicLink.page\n  htmlLink.onclick = () => htmlLink.href = cosmicLink.uri\n  if (!htmlLink.title) htmlLink.title = 'Sign transaction'\n  if (!htmlLink.textContent) htmlLink.textContent = 'CosmicLink'\n\n  cosmicLink._htmlLink = htmlLink\n  return htmlLink\n}\n\n/**\n * Throw an error if CosmicLink is locked.\n * @private\n */\nfunction checkLock (cosmicLink) {\n  if (cosmicLink.locker) throw new Error('Cosmic link is locked.')\n}\n\nCosmicLink.prototype.__proto__ = config\nmodule.exports = CosmicLink\n","'use strict'\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n * @exports action\n */\nconst action = exports\n\nconst axios = require('@cosmic-plus/base/axios')\nconst env = require('@cosmic-plus/jsutils/env')\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\nconst convert = require('./convert')\nconst config = require('./config')\nconst format = env.isBrowser && require('./format')\nconst resolve = require('./resolve')\nconst signersUtils = require('./signers-utils')\nconst status = require('./status')\n\n/**\n * Lock a CosmicLink to a network/source pair. The actual values for this pair\n * are defined by the transaction itself, or at parsing time for Transaction &\n * XDR formats, or by this lock method, or by the global configuration.\n *\n * Locking is an asynchronous operation and resolves the transaction's federated\n * addresses if any. It also fetchs required accounts data to handle the\n * transaction signers properly. For this reason, it is mandatory before\n * signing and sending a transaction to the blockchain.\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Demo', network: 'test' })\n * await cosmicLink.lock({ network: 'public' })\n * console.log(cosmicLink.network)   // => 'test'\n *\n * @alias CosmicLink#lock\n * @async\n * @param {Object} [options]\n * @param {string} options.network The fallback network in case transaction doesn't provides one.\n * @param {string} options.source The fallback address in case transaction doesn't provides one.\n */\naction.lock = async function (cosmicLink, options = {}) {\n  if (cosmicLink.status) throw new Error(cosmicLink.status)\n  if (cosmicLink.locker) throw new Error('CosmicLink is already locked.')\n\n  try {\n    await applyLock(cosmicLink, options)\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error)\n      status.error(cosmicLink, error.message)\n    }\n    status.fail(cosmicLink, 'Transaction build failed', 'throw')\n  }\n\n  updateSignersNode(cosmicLink)\n\n  return cosmicLink\n}\n\nasync function applyLock (cosmicLink, options) {\n  /**\n   * The locker property tells that a CosmicLink have been locked, and exposes\n   * the network & source values to which it have been locked.\n   *\n   * @alias CosmicLink#locker\n   */\n  cosmicLink.locker = {\n    source: cosmicLink.tdesc.source || options.source || config.source,\n    network: cosmicLink.tdesc.network || options.network || config.network\n  }\n\n  /// Preserve the underlying tdesc object.\n  cosmicLink._tdesc = Object.assign({}, cosmicLink.tdesc, cosmicLink.locker)\n  delete cosmicLink._query\n  delete cosmicLink._json\n\n  if (!cosmicLink._transaction) {\n    cosmicLink._transaction = await convert.tdescToTransaction(cosmicLink, cosmicLink.tdesc)\n    delete cosmicLink._tdesc\n  }\n\n  delete cosmicLink._transaction._cosmicplus\n  await signersUtils.extends(cosmicLink, cosmicLink._transaction)\n}\n\n/**\n * Sign CosmicLink's Transaction with **keypairs_or_preimage** and update the\n * other formats accordingly. Only legit signers are allowed to sign, and a\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before signing.\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|Buffer|string} ...keypairs_or_preimage\n */\naction.sign = async function (cosmicLink, ...keypairsOrPreimage) {\n  if (!cosmicLink.locker) throw new Error('cosmicLink is not locked.')\n  resolve.useNetwork(cosmicLink)\n\n  const transaction = cosmicLink.transaction\n  let allFine = true\n\n  if (typeof keypairsOrPreimage[0] !== 'string') {\n    for (let index in keypairsOrPreimage) {\n      const keypair = keypairsOrPreimage[index]\n      const publicKey = keypair.publicKey()\n\n      if (!cosmicLink.transaction.hasSigner(publicKey)) {\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, 'Not a legit signer: ' + short)\n        allFine = false\n        continue\n      }\n\n      if (cosmicLink.transaction.hasSigned(publicKey)) continue\n\n      try {\n        transaction.sign(keypair)\n      } catch (error) {\n        console.error(error)\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, 'Failed to sign with key: ' + short)\n        allFine = false\n        continue\n      }\n    }\n  } else {\n    try {\n      transaction.signHashX(keypairsOrPreimage[0])\n    } catch (error) {\n      console.error(error)\n      const short = helpers.shorter(keypairsOrPreimage[0])\n      status.error(cosmicLink, 'Failed to sign with preimage: ' + short, 'throw')\n    }\n  }\n\n  /// Update other formats.\n  ['_query', '_xdr', '_sep7'].forEach(format => delete cosmicLink[format])\n  updateSignersNode(cosmicLink)\n\n  if (!allFine) throw new Error('Some signers where invalid')\n  else return transaction\n}\n\nfunction updateSignersNode (cosmicLink) {\n  if (cosmicLink._signersNode) {\n    const signersNode = format.signatures(cosmicLink, cosmicLink._transaction)\n    cosmicLink.htmlDescription.replaceChild(signersNode, cosmicLink._signersNode)\n    cosmicLink._signersNode = signersNode\n  }\n}\n\n/**\n * Send CosmicLink's transaction to a blockchain validator, or to\n * [StellarGuard]{@link https://stellarguard.me} when relevant. A\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before sending.\n *\n * Returns a promise that resolve/reject to the horizon server response.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {horizon} [horizon] An horizon node URL\n * @return {Object} The server response\n */\naction.send = async function (cosmicLink, horizon = cosmicLink.horizon) {\n  if (!cosmicLink.locker) throw new Error('cosmicLink is not locked.')\n  const server = resolve.server(cosmicLink, horizon)\n  const account = await resolve.account(cosmicLink, cosmicLink.source)\n\n  if (cosmicLink.transaction.hasSigner(STELLARGUARD_PUBKEY)) {\n    let endpoint\n    if (cosmicLink.network === 'public') enpoint = 'https://stellarguard.me/api'\n    else if (cosmicLink.network === 'test') endpoint = 'https://test.stellarguard.me/api'\n    if (endpoint) {\n      return axios.post(endpoint + '/transactions', { xdr: cosmicLink.xdr })\n        .then(result => result.data)\n    }\n  } else {\n    return server.submitTransaction(cosmicLink.transaction)\n  }\n}\n\nconst STELLARGUARD_PUBKEY = \"GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD\"\n","'use_stict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  module.exports = require('./stellar-sdk').axios\n} else {\n  module.exports = env.nodeRequire('axios')\n}\n","'use strict'\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @private\n * @exports construct\n */\nconst construct = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst resolve = require('./resolve')\nconst specs = require('./specs')\nconst status = require('./status')\n\n/**\n * Returns the StellarSdk Transaction built from tdesc.\n *\n * @param {Object} tdesc\n * @return {Transaction}\n */\nconstruct.transaction = async function (conf, tdesc) {\n  if (conf.status) throw new Error(conf.status)\n\n  try {\n    const txBuilder = await makeTransactionBuilder(conf, tdesc)\n    for (let index in tdesc.operations) {\n      const odesc = tdesc.operations[index]\n      const operation = await construct.operation(conf, odesc)\n      txBuilder.addOperation(operation)\n    }\n    return txBuilder.build()\n  } catch (error) {\n    if (!conf.errors) {\n      console.error(error)\n      status.error(conf, error.message)\n    }\n    if (!conf.status) status.fail(conf, 'Transaction build failed', 'throw')\n    else throw error\n  }\n}\n\n/**\n * Returns the StellarSdk Operation built from `odesc`.\n *\n * @param {Object} odesc\n * @return {Operation}\n */\nconstruct.operation = async function (conf, odesc) {\n  const operation = odesc.type\n  delete odesc.type\n\n  for (let field in odesc) {\n    odesc[field] = await construct.field(conf, field, odesc[field])\n  }\n\n  return StellarSdk.Operation[operation](odesc)\n}\n\n/**\n * Returns the TransactionBuilder for `tdesc`.\n */\nasync function makeTransactionBuilder (conf, tdesc) {\n  let txOpts = {}\n  if (tdesc.fee) txOpts.fee = tdesc.fee\n  if (tdesc.memo) txOpts.memo = construct.memo(conf, tdesc.memo)\n  if (tdesc.minTime || tdesc.maxTime) {\n    txOpts.timebounds = { minTime: 0, maxTime: 0 }\n    if (tdesc.minTime) txOpts.timebounds.minTime = construct.date(conf, tdesc.minTime)\n    if (tdesc.maxTime) txOpts.timebounds.maxTime = construct.date(conf, tdesc.maxTime)\n  }\n\n  const sourceAccount = await resolve.txSourceAccount(conf, tdesc.source, tdesc.sequence)\n  const builder = new StellarSdk.TransactionBuilder(sourceAccount, txOpts)\n\n  /// Check if memo is needed for destination account.\n  for (let index in tdesc.operations) {\n    const operation = tdesc.operations[index]\n    if (operation.destination) {\n      const destination = await resolve.address(conf, operation.destination)\n      if (destination.memo) {\n        const memoType = destination.memo_type\n        const memoValue = destination.memo\n        if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n          const short = helpers.shorter(operation.destination)\n          status.error(conf, `Memo conflict: ${short} requires to set a memo`, 'throw')\n        } else {\n          tdesc.memo = { type: memoType, value: memoValue }\n          builder.addMemo(new StellarSdk.Memo(memoType, memoValue))\n        }\n      }\n    }\n  }\n\n  return builder\n}\n\n/******************************************************************************/\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\nconstruct.field = async function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return construct.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\nconstruct.type = async function (conf, type, value) {\n  return construct[type](conf, value)\n}\n\n/******************************************************************************/\n\nconstruct.address = async function (conf, address) {\n  const account = await resolve.address(conf, address)\n  return account.account_id\n}\n\nconstruct.asset = async function (conf, asset) {\n  if (asset.issuer) {\n    const publicKey = await construct.address(conf, asset.issuer)\n    return new StellarSdk.Asset(asset.code, publicKey)\n  } else {\n    return StellarSdk.Asset.native()\n  }\n}\n\nconstruct.assetsArray = async function (conf, assetsArray) {\n  let path = []\n  for (let index in assetsArray) {\n    const string = assetsArray[index]\n    const constructedAsset = await construct.asset(conf, string)\n    path.push(constructedAsset)\n  }\n  return path\n}\n\nconstruct.date = function (conf, string) {\n  return Date.parse(string) / 1000\n}\n\nconstruct.memo = function (conf, memo) {\n  return new StellarSdk.Memo(memo.type, memo.value)\n}\n\nconstruct.signer = async function (conf, signer) {\n  let sdkSigner = { weight: +signer.weight }\n  if (signer.type === 'tx') sdkSigner.preAuthTx = signer.value\n  else if (signer.type === 'hash') sdkSigner.sha256Hash = signer.value\n  else if (signer.type === 'key') {\n    const publicKey = await construct.address(conf, signer.value)\n    sdkSigner.ed25519PublicKey = publicKey\n  }\n  return sdkSigner\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","'use strict'\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @private\n * @exports encode\n */\nconst encode = exports\n\nconst specs = require('./specs')\n\nencode.query = function (conf, tdesc) {\n  if (conf.errors) return undefined\n\n  let command\n  if (!tdesc.operations.length || tdesc.operations.length > 1 || tdesc.operations[0].source) {\n    command = 'transaction'\n  } else {\n    command = tdesc.operations[0].type\n  }\n  let query = '?' + command\n\n  specs.transactionOptionalFields.forEach(field => {\n    if (tdesc[field] !== undefined) query += encode.field(conf, field, tdesc[field])\n  })\n\n  tdesc.operations.forEach(odesc => {\n    if (command === 'transaction') query += '&operation=' + odesc.type\n    for (let field in odesc) {\n      if (field === 'type') continue\n      query += encode.field(conf, field, odesc[field])\n    }\n  })\n\n  return query\n}\n\n/******************************************************************************/\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) throw new Error(`Invalid field: ${field}`)\n\n  const encodedValue = encode.type(conf, type, value)\n  if (encodedValue === '' && field !== 'homeDomain') return ''\n  else return `&${field}=${encodedValue}`\n}\n\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.type = function (conf, type, value) {\n  if (value === undefined) return ''\n\n  const encodedValue = process[type] ? process[type](conf, value) : value\n  if (encodedValue === undefined) return ''\n  else return encodedValue\n}\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.asset = function (conf, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + ':' + encodeURIComponent(asset.issuer)\n}\n\nprocess.assetsArray = function (conf, assetsArray) {\n  return assetsArray.map(asset => encode.asset(conf, asset)).toString()\n}\n\nprocess.boolean = function (conf, boolean) {\n  if (boolean === false) return 'false'\n}\n\nprocess.buffer = function (conf, buffer) {\n  if (buffer) return encodeURIComponent(buffer)\n}\n\nprocess.date = function (conf, date) {\n  return date.replace(/Z$/, '')\n}\n\nprocess.memo = function (conf, memo) {\n  if (memo.type === 'text') return encodeURIComponent(memo.value)\n  else return memo.type + ':' + encodeURIComponent(memo.value)\n}\n\nprocess.price = function (conf, price) {\n  if (typeof price === 'string') return price\n  else return price.n + ':' + price.d\n}\n\nprocess.signer = function (conf, signer) {\n  return signer.weight + ':' + signer.type + ':' + signer.value\n}\n\nprocess.string = encode.buffer\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  exports[type] = (conf, value) => encode.type(conf, type, value)\n})\n","'use strict'\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\nconst parse = exports\n\nconst check = require('./check')\nconst convert = require('./convert')\nconst decode = require('./decode')\nconst expand = require('./expand')\nconst specs = require('./specs')\nconst status = require('./status')\n\n/**\n * Sets cosmicLink page as the base path of `uri`.\n *\n * @param {string} page URI basename\n */\nparse.page = function (cosmicLink, uri) {\n  const page = uri.split('?')[0]\n  if (page) cosmicLink.page = encodeURI(page)\n}\n\n/**\n * Call the right functions to setup cosmicLink depending on `options` and\n * `value` type.\n *\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\nparse.dispatch = function (cosmicLink, value = '?', options = {}) {\n  const type = guessType(value)\n\n  try {\n    if (parseFmt[type]) parseFmt[type](cosmicLink, value, options)\n    else setTdesc(cosmicLink, type, value, options)\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error)\n      status.error(cosmicLink, error.message)\n    }\n    status.fail(cosmicLink, 'Invalid ' + type)\n    if (error.tdesc) cosmicLink._tdesc = error.tdesc\n  }\n\n  if (options.page) parse.page(cosmicLink, options.page)\n}\n\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n */\nfunction guessType (value) {\n  let type\n  if (typeof value === 'string') {\n    const query = convert.uriToQuery('', value)\n    if (value.substr(0, 12) === 'web+stellar:') type = 'sep7'\n    else if (query && query.substr(0, 5) === '?req=') type = 'sep7Request'\n    else if (query && query.substr(0, 5) === '?xdr=') type = 'xdrUri'\n    else if (value.substr(0, 1) === '?') type = 'query'\n    else if (value.substr(0, 1) === '{') type = 'json'\n    else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = 'xdr'\n    else type = 'uri'\n  } else {\n    if (value.tx) type = 'transaction'\n    else type = 'tdesc'\n  }\n  return type\n}\n\n/******************************************************************************/\n\nconst parseFmt = {}\n\n/**\n * Initialize cosmicLink using `xdrUri`.\n */\nparseFmt.xdrUri = function (cosmicLink, xdrUri, options) {\n  parse.page(cosmicLink, xdrUri)\n\n  const query = convert.uriToQuery(cosmicLink, xdrUri)\n  const temp = query.split('&')\n  const xdr = temp[0].substr(5)\n\n  temp.slice(1).forEach(entry => {\n    let field = entry.replace(/=.*$/, '')\n    let value = entry.substr(field.length + 1)\n\n    switch (field) {\n      case 'stripSignatures':\n        options.stripSignatures = true\n        break\n      case 'stripSequence':\n        options.stripSequence = true\n        break\n      case 'stripSource':\n        options.stripSource = true\n        break\n      case 'network':\n        options.network = decode.network(cosmicLink, value)\n        break\n      case 'horizon':\n        options.horizon = decode.url(cosmicLink, value)\n        break\n      default:\n        status.error(cosmicLink, 'Unknow option: ' + entry)\n        status.fail(cosmicLink, 'Invalid query')\n    }\n  })\n\n  setTdesc(cosmicLink, 'xdr', xdr, options)\n}\n\n/**\n * Initialize cosmicLink using `sep7Request`.\n */\nparseFmt.sep7Request = function (cosmicLink, sep7Request, options) {\n  parse.page(cosmicLink, sep7Request)\n\n  const query = convert.uriToQuery(cosmicLink, sep7Request)\n  const sep7 = decodeURIComponent(query.substr(5))\n  parseFmt.sep7(cosmicLink, sep7, options)\n}\n\n/**\n * Initialize cosmicLink using `sep7`.\n */\nparseFmt.sep7 = function (cosmicLink, sep7, options = {}) {\n  if (sep7.substr(12, 4) === 'pay?') {\n    throw new Error(\"SEP-0007 'pay' operation is not currently supported.\")\n  } else if (sep7.substr(12, 3) !== 'tx?') {\n    throw new Error('Invalid SEP-0007 link.')\n  }\n\n  const query = convert.uriToQuery(cosmicLink, sep7)\n  const params = query.substr(1).split('&')\n  if (!options.network) options.network = 'public'\n  let xdr\n\n  params.forEach(entry => {\n    const field = entry.replace(/=.*$/, '')\n    const value = entry.substr(field.length + 1)\n\n    if (!isValidSep7Field('tx', field)) {\n      throw new Error('Invalid SEP-0007 field: ' + field)\n    }\n\n    if (isIgnoredSep7Field(field)) {\n      console.warn('Ignored SEP-0007 field: ' + field)\n    }\n\n    if (field === 'xdr') xdr = decodeURIComponent(value)\n    if (field === 'network_passphrase') options.network = decode.network(cosmicLink, value)\n    if (field === 'horizon') options.horizon = decode.url(cosmicLink, value)\n  })\n\n  setTdesc(cosmicLink, 'xdr', xdr, options)\n}\n\nfunction isValidSep7Field (sep7Op, field) {\n  return specs.sep7MandatoryFields[sep7Op].find(name => name === field) ||\n    specs.sep7OptionalFields[sep7Op].find(name => name === field)\n}\n\nfunction isIgnoredSep7Field (field) {\n  return specs.sep7IgnoredFields.find(name => name === field)\n}\n\n/******************************************************************************/\n\n/**\n * Set cosmicLink_tdesc from format `type`. From there, the CosmicLink methods\n * can lazy-evaluate any requested format.\n */\nfunction setTdesc (cosmicLink, type, value, options) {\n  if (type !== 'uri') cosmicLink['_' + type] = value\n\n  switch (type) {\n    case 'uri':\n      parse.page(cosmicLink, value)\n      cosmicLink._query = convert.uriToQuery(cosmicLink, value, options)\n    case 'query':\n      cosmicLink._tdesc = convert.queryToTdesc(cosmicLink, cosmicLink.query, options)\n      break\n    case 'json':\n      value = convert.jsonToTdesc(cosmicLink, value)\n    case 'tdesc':\n      cosmicLink._tdesc = expand.tdesc(cosmicLink, value)\n      delete cosmicLink._json\n      check.tdesc(cosmicLink, cosmicLink.tdesc)\n      break\n    case 'sep7':\n      cosmicLink._xdr = convert.sep7ToXdr(cosmicLink, cosmicLink.sep7)\n    case 'xdr':\n      cosmicLink._transaction = convert.xdrToTransaction(cosmicLink, cosmicLink.xdr, options)\n    case 'transaction':\n      cosmicLink._tdesc = convert.transactionToTdesc(cosmicLink, cosmicLink.transaction, options)\n      if (options.stripSource || options.stripSequence) {\n        delete cosmicLink._xdr\n        delete cosmicLink._transaction\n      } else if (options.stripSignatures) {\n        cosmicLink.transaction.signatures = []\n        delete cosmicLink._xdr\n      }\n  }\n}\n","'use_strict'\n/**\n * Methods that expand tdesc paramaters from their query/StellarSdk format into\n * their tdesc equivalent. This allows user to pass value in the format they\n * feel the most confortable with when creating CosmicLinks.\n *\n * @private\n * @exports expand\n */\nconst expand = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst decode = require('./decode')\nconst destruct = require('./destruct')\nconst normalize = require('./normalize')\nconst specs = require('./specs')\n\n/**\n * Replace each tdesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `tdesc` passed in\n * parameter.\n *\n * @param {Object} tdesc\n * @return tdesc\n */\nexpand.tdesc = function (conf, tdesc) {\n  for (let field in tdesc) {\n    if (field === 'operations') continue\n    else tdesc[field] = expand.field(conf, field, tdesc[field])\n  }\n  if (tdesc.operations) tdesc.operations.forEach(odesc => expand.odesc(conf, odesc))\n  normalize.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/**\n * Replace each odesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `odesc` passed in\n * parameter.\n *\n * @param {Object} odesc\n * @return tdesc\n */\nexpand.odesc = function (conf, odesc) {\n  for (let field in odesc) {\n    if (field === 'type') continue\n    else odesc[field] = expand.field(conf, field, odesc[field])\n  }\n  normalize.odesc(conf, odesc)\n  return odesc\n}\n\n/******************************************************************************/\n\n/**\n * Expands `value` to its tdesc format according to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\nexpand.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return expand.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Expands `value` to its tdesc format according to `type`.\n *\n * @param {string} type\n * @param {string} value\n */\nexpand.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value\n  if (typeof value === 'number') value = value + ''\n  return expand[type] ? expand[type](conf, value) : value + ''\n}\n\n/******************************************************************************/\n\nexpand.asset = function (conf, asset) {\n  if (asset instanceof StellarSdk.Asset) return destruct.asset(conf, asset)\n  else if (typeof asset === 'string') return decode.asset(conf, asset)\n  else return asset\n}\n\nexpand.assetPath = function (conf, assetPath) {\n  if (Array.isArray(assetPath)) return assetPath.map(asset => expand.asset(conf, asset))\n  else if (typeof assetPath === 'string') return decode.assetPath(conf, assetPath)\n}\n\nexpand.date = function (conf, date) {\n  if (typeof date === 'number') date = date + ''\n  if (!date.match(/^[0-9]*$/) || date.length < 5) return decode.date(conf, date)\n  else return destruct.date(conf, date)\n}\n\nexpand.memo = function (conf, memo) {\n  if (memo instanceof StellarSdk.Memo) return destruct.memo(conf, memo)\n  else if (typeof memo === 'string') return decode.memo(conf, memo)\n  else return memo\n}\n\nexpand.price = function (conf, price) {\n  if (typeof price === 'string' && price.match(/:/)) {\n    return decode.price(conf, price)\n  } else {\n    return price\n  }\n}\n\nexpand.signer = function (conf, signer) {\n  if (signer.key) return destruct.signer(conf, signer)\n  else if (typeof signer === 'string') return decode.signer(conf, signer)\n  else return signer\n}\n\nexpand.string = function (conf, string) {\n  if (typeof string === 'number') return string + ''\n  else return string\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) {\n    exports[type] = (conf, value) => {\n      if (typeof value === 'number') return value + ''\n      else return value\n    }\n  }\n})\n","'use_strict'\n/**\n * Asynchronously load external ressources.\n *\n * @exports load\n */\nconst load = exports\n\nconst dom = require('@cosmic-plus/jsutils/dom')\nconst html = require('@cosmic-plus/jsutils/html')\n\n/**\n * Load cosmic-lib CSS from **href** or from default origin. All subsequent\n * calls will refer to the original request.\n *\n * @example\n * /// Preload at the start of your script:\n * cosmicLib.load.styles('css/cosmic-lib.css')\n *\n * /// Then wait for the request to resolve before you display CosmicLink HTML\n * /// description:\n * await cosmicLib.load.styles()\n *\n * @async\n * @param {string} [href='cosmic-lib.css']\n */\nload.styles = async function (conf, href = 'https://cosmic.plus/cosmic-lib/cosmic-lib.css') {\n  const promise = load.css(conf, href)\n  load.styles = () => promise\n  return promise\n}\n\n/**\n * Load a CSS from **href**.\n *\n * @example\n * /// Preload at script initialization:\n * const cssLoader = cosmicLib.load.css('my-styles.css')\n *\n * /// To wait for loading to finish:\n * await cssLoader\n *\n * @async\n * @param {string} href\n */\nload.css = async function (conf, href) {\n  return new Promise(function (resolve, reject) {\n    const attributes = { rel: 'stylesheet', type: 'text/css', href: href, onload: resolve, onerror: reject }\n    const linkNode = html.create('link', attributes)\n    html.append(dom.head, linkNode)\n  })\n}\n","'use_strict'\n/**\n * A simple module that ease access to HTML DOM nodes. Any HTML element having\n * an `id` at loading time is registered at dom[id]. This is to avoid running\n * `querySelector` multiple times.\n *\n * @exports dom\n */\nconst dom = exports\n\nconst html = require('./html')\n\n/// Prevent node failure when accidentaly loading this file.\nconst env = require('./env')\nconst document = env.window ? env.window.document : undefined\nif (env.isNode) console.error('@cosmic-plus/jsutils/dom is a browser-only module')\n\n\n/**\n * Add to dom all **element** child having an `id=` attribute.\n */\nfunction ingest (element = document) {\n  const array = element.querySelectorAll('[id]')\n  for (let index in array) {\n    const element = array[index]\n    if (element.id) dom[element.id] = element\n  }\n}\nObject.defineProperty(dom, 'ingest',\n  { value: ingest, enumerable: false, writable: false,})\n\n/**\n * Main tags.\n */\ndom.html = html.grab('html')\ndom.head = html.grab('head')\ndom.body = html.grab('body')\ndom.header = html.grab('header')\ndom.main = html.grab('main')\ndom.footer = html.grab('footer')\n\n/**\n * All elements having an ID.\n */\ndom.ingest()\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://cosmicLib/webpack/universalModuleDefinition","webpack://cosmicLib/webpack/bootstrap","webpack://cosmicLib/./node_modules/axios/lib/utils.js","webpack://cosmicLib/./src/specs.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/misc.js","webpack://cosmicLib/./node_modules/@cosmic-plus/base/stellar-sdk.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/env.js","webpack://cosmicLib/./src/resolve.js","webpack://cosmicLib/./src/status.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/html.js","webpack://cosmicLib/./node_modules/babel-runtime/regenerator/index.js","webpack://cosmicLib/./src/config.js","webpack://cosmicLib/./node_modules/axios/lib/defaults.js","webpack://cosmicLib/./src/convert.js","webpack://cosmicLib/./src/normalize.js","webpack://cosmicLib/./src/signers-utils.js","webpack://cosmicLib/./src/event.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/bind.js","webpack://cosmicLib/./node_modules/axios/lib/adapters/xhr.js","webpack://cosmicLib/./node_modules/axios/lib/core/createError.js","webpack://cosmicLib/./node_modules/axios/lib/cancel/isCancel.js","webpack://cosmicLib/./node_modules/axios/lib/cancel/Cancel.js","webpack://cosmicLib/./src/decode.js","webpack://cosmicLib/./src/check.js","webpack://cosmicLib/./src/destruct.js","webpack://cosmicLib/./src/format.js","webpack://cosmicLib/./src/index.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/polyfill.js","webpack://cosmicLib/./src/aliases.js","webpack://cosmicLib/./src/cosmiclink.js","webpack://cosmicLib/./src/action.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime-module.js","webpack://cosmicLib/./node_modules/regenerator-runtime/runtime.js","webpack://cosmicLib/./node_modules/@stellarguard/sdk/src/index.js","webpack://cosmicLib/./node_modules/axios/index.js","webpack://cosmicLib/./node_modules/axios/lib/axios.js","webpack://cosmicLib/./node_modules/is-buffer/index.js","webpack://cosmicLib/./node_modules/axios/lib/core/Axios.js","webpack://cosmicLib/./node_modules/process/browser.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://cosmicLib/./node_modules/axios/lib/core/settle.js","webpack://cosmicLib/./node_modules/axios/lib/core/enhanceError.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/buildURL.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/btoa.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/cookies.js","webpack://cosmicLib/./node_modules/axios/lib/core/InterceptorManager.js","webpack://cosmicLib/./node_modules/axios/lib/core/dispatchRequest.js","webpack://cosmicLib/./node_modules/axios/lib/core/transformData.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/combineURLs.js","webpack://cosmicLib/./node_modules/axios/lib/cancel/CancelToken.js","webpack://cosmicLib/./node_modules/axios/lib/helpers/spread.js","webpack://cosmicLib/./src/construct.js","webpack://cosmicLib/./src/encode.js","webpack://cosmicLib/./src/parse.js","webpack://cosmicLib/./src/expand.js","webpack://cosmicLib/./src/load.js","webpack://cosmicLib/./node_modules/@cosmic-plus/jsutils/dom.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","specs","field","transactionOptionalFields","isTransactionField","find","operationMandatoryFields","accountMerge","allowTrust","bumpSequence","changeTrust","createAccount","createPassiveOffer","inflation","manageData","manageOffer","pathPayment","payment","setOptions","operationOptionalFields","operationFields","concat","isOperationField","operation","fieldType","amount","asset","assetCode","assetIssuer","authorize","bumpTo","buying","clearFlags","destAsset","destAmount","destination","fee","highThreshold","homeDomain","inflationDest","limit","lowThreshold","masterWeight","maxTime","medThreshold","memo","memoHash","memoId","memoReturn","memoText","memoType","minTime","network","offerId","price","path","selling","sendAsset","sendMax","sequence","setFlags","signer","signerHash","signerKey","signerType","signerTx","signerWeight","source","startingBalance","trustor","fieldDesc","types","type","entry","push","_loop","neutralAccountId","sep7MandatoryFields","tx","pay","sep7OptionalFields","sep7IgnoredFields","misc","html","isBrowser","delay","thunk","memoized","firstCall","Promise","resolve","timeout","x","setTimeout","capitalize","string","substr","toUpperCase","slice","shorter","copy","textBox","append","grab","copyContent","destroy","setHiddenProperty","writable","deprecated","date","before","after","console","error","useExtra","extraField","env","undefined","StellarSdk","nodeRequire","Function","isNode","global","stealth_require","eval","_callee","conf","address","account","accountId","_regenerator2","default","wrap","_context","prev","next","FederationServer","sent","account_id","Error","memo_type","aliases","alias","abrupt","t0","status","helpers","fail","stop","_callee3","quietFlag","server","accountResponse","_context3","loadAccount","signersTableToSignersList","signersTable","array","horizon","passphrase","networkPassphrase","current","Server","useNetwork","log","Network","use","currentNetwork","cache","promise","addressResolver","_ref2","_asyncToGenerator","mark","_callee2","_context2","accountResolver","_x9","_x10","_x11","apply","isAccountEmpty","then","catch","txSourceAccount","_ref4","_callee4","neutralAccount","baseAccount","_context4","Account","signers","id","sub","_baseAccount","_x15","_x16","_x17","txSources","transaction","extra","index","operations","txSigners","_ref5","_callee5","_source","_context5","keys","t1","done","filter","_x18","_x19","txSignersList","_ref6","_callee6","_context6","_x20","_x21","_cosmicplus","errorContinuation","continuation","init","errors","update","_statusNode","textContent","errorStatus","appendClass","errorsNode","lineNode","makeHtmlNode","statusNode","statusLine","errorLine","element","childs","child","appendChild","createTextNode","newClass","className","clear","innerHTML","selectionStart","selectionEnd","select","getSelection","range","createRange","selectNode","removeAllRanges","addRange","execCommand","attributes","createElement","parentNode","removeChild","pattern","parent","querySelector","show","elements","style","display","hide","element1","element2","replaceChild","rewrite","addStyles","styles","styleNode","headNode","config","event","page","setupNetwork","Networks","PUBLIC","TESTNET","all","addAliases","definitions","add","removeAliases","remove","clickHandlers","defaultClickHandlers","setClickHandler","callback","clearClickHandler","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","process","getDefaultAdapter","transformRequest","data","JSON","stringify","transformResponse","parse","e","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","common","Accept","method","convert","construct","decode","destruct","encode","uriToQuery","uri","match","queryToTdesc","query","tdescToJson","tdesc","tdescToTransaction","transactionToXdr","toEnvelope","toXDR","xdrToSep7","xdr","sep7","encodeURIComponent","xdrToTransaction","options","Transaction","stripSignatures","signatures","xdrToQuery","transactionToTdesc","jsonToTdesc","json","tdescToQuery","queryToUri","normalize","removeEmptyFields","dateFields","odesc","XLM","Asset","native","signersUtils","SignersUtils","_classCallCheck","extendFlag","txHash","hash","sources","signersList","assign","utilities","hasSigner","keypair","Keypair","fromPublicKey","verify","signature","for","extends","callClickHandler","handler","domNode","message","alert","classList","contains","preimage","prompt","cosmicLink","sign","args","Array","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","reject","requestData","requestHeaders","request","loadEvent","xDomain","XDomainRequest","url","onprogress","ontimeout","auth","username","password","Authorization","open","params","paramsSerializer","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","cancel","abort","send","enhanceError","code","__CANCEL__","Cancel","check","command","split","param","decodeURIComponent","assetLower","temp","issuer","assetsList","map","Date","toISOString","numerator","denominator","weight","errDesc","txField","operationType","operationField","number","min","max","num","isNaN","integer","parseInt","assetsArray","isValid","boolean","flags","_typeof","threshold","stripSource","stripSequence","_memo","_switch","timeBounds","op","optree","_attributes","body","_value","line","assetPath","timestamp","sdkMemo","_arm","sdkSequence","sdkSigner","ed25519PublicKey","sha256Hash","preAuthTx","addressNode","animation","grandpa","title","format","trNode","infoNode","sort","opNode","sourceNode","meaning","msg","operationMeaning","fieldNode","txt","signersNode","div","accountSignersNode","titleNode","listNode","signerNode","hasSigned","insertBefore","firstChild","makeAccountSignersNode","eventObject","constructor","onclick","errorNode","resolveAddressAndUpdate","codeNode","issuerNode","assetNode","assetsArrayNode","toLocaleString","typeNode","valueNode","value1","value2","value3","StrKey","decodeSha256Hash","weightNode","exposeModule","layer","_len","_key","_config","withConfig","library","__proto__","_module","_class","_possibleConstructorReturn","getPrototypeOf","_inherits","CosmicLink","load","predicate","TypeError","len","k","kValue","configurable","target","varArgs","to","nextSource","nextKey","publicKeys","anchorsdestinationsaction","initCosmicLink","checkLock","splice","lock","keypairs_or_preimage","_query","_tdesc","locker","_json","_transaction","_xdr","_sep7","_page","setTxFields","_htmlDescription","makeHtmlDescription","_htmlLink","makeHtmlLink","htmlDescription","formatsFields","dispatch","_transactionNode","_signersNode","htmlLink","href","StellarGuard","updateSignersNode","_ref","applyLock","_x2","_ref3","keypairsOrPreimage","allFine","publicKey","short","_short","_short2","t2","signHashX","_x5","hasStellarGuard","usePublicNetwork","useTestNetwork","submitTransaction","_x7","g","hadRuntime","regeneratorRuntime","getOwnPropertyNames","oldRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","reverse","pop","Context","reset","skipTempReset","_sent","delegate","tryEntries","resetTryEntry","charAt","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","err","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","info","pushTryEntry","locs","iteratorMethod","axios","httpClient","baseURL","some","public_key","_verifyNetworkSet","post","getAccount","getMultigSetup","stellarGuardPublicKey","backupSignerPublicKey","activateAccount","Axios","createInstance","defaultConfig","instance","instanceConfig","CancelToken","isCancel","promises","spread","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","unshift","fulfilled","rejected","shift","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","nextTick","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizedName","serializedParams","parts","v","join","ignoreDuplicateOf","parsed","originURL","msie","test","userAgent","urlParsingNode","resolveURL","setAttribute","protocol","host","search","hostname","port","pathname","location","requestURL","chars","E","input","block","charCode","String","output","idx","charCodeAt","write","expires","domain","secure","cookie","toGMTString","RegExp","now","handlers","eject","h","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","reason","fns","relativeURL","executor","resolvePromise","token","arr","txOpts","sourceAccount","builder","memoValue","timebounds","TransactionBuilder","addMemo","Memo","txBuilder","makeTransactionBuilder","addOperation","build","_x","Operation","_x3","_x4","_x8","_x12","_x13","_x14","_ref7","_callee7","_context7","_ref8","_callee8","constructedAsset","_context8","_ref9","_callee9","_context9","encodedValue","expand","encodeURI","guessType","parseFmt","setTdesc","sep7ToXdr","xdrUri","sep7Op","isValidSep7Field","isIgnoredSep7Field","warn","dom","css","rel","onload","linkNode","head","header","main","footer","querySelectorAll"],"mappings":"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","file":"cosmic-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cosmicLib\"] = factory();\n\telse\n\t\troot[\"cosmicLib\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","'use_strict'\n/**\n * Contains Stellar transactions specification.\n *\n * @exports specs\n */\nconst specs = exports\n\n/**\n * Transaction optional fields.\n */\nspecs.transactionOptionalFields = [\n  'network', 'memo', 'source', 'sequence',\n  'minTime', 'maxTime', 'fee'\n]\n\n/**\n * @param {string} field\n * @return {boolean}\n */\nspecs.isTransactionField = function (field) {\n  return specs.transactionOptionalFields.find(name => name === field)\n}\n\n/**\n * Operation mandatory fields.\n */\nspecs.operationMandatoryFields = {\n  accountMerge: ['destination'],\n  allowTrust: ['authorize', 'assetCode', 'trustor'],\n  bumpSequence: ['bumpTo'],\n  changeTrust: ['asset'],\n  createAccount: ['destination', 'startingBalance'],\n  createPassiveOffer: ['selling', 'buying', 'amount', 'price'],\n  inflation: [],\n  manageData: ['name', 'value'],\n  manageOffer: ['selling', 'buying', 'amount', 'price'],\n  pathPayment: ['sendAsset', 'sendMax', 'destination', 'destAsset', 'destAmount'],\n  payment: ['asset', 'destination', 'amount'],\n  setOptions: []\n}\n\n/**\n * Operation optionnal fields.\n */\nspecs.operationOptionalFields = {\n  accountMerge: ['source'],\n  allowTrust: ['source'],\n  bumpSequence: ['source'],\n  changeTrust: ['limit', 'source'],\n  createAccount: ['source'],\n  createPassiveOffer: ['source'],\n  inflation: ['source'],\n  manageData: ['source'],\n  manageOffer: ['offerId', 'source'],\n  pathPayment: ['path', 'source'],\n  payment: ['source'],\n  setOptions: ['inflationDest', 'clearFlags', 'setFlags', 'masterWeight',\n    'lowThreshold', 'medThreshold', 'highThreshold', 'signer', 'homeDomain',\n    'source']\n}\n\n/**\n * Operations fields\n */\nspecs.operationFields = {}\nfor (let field in specs.operationMandatoryFields) {\n  specs.operationFields[field] = specs.operationMandatoryFields[field]\n    .concat(specs.operationOptionalFields[field])\n}\n\n/**\n * @param {string} type Operation type\n * @param {string} field\n * @return {boolean}\n */\nspecs.isOperationField = function (operation, field) {\n  return specs.operationFields[operation].find(name => name === field)\n}\n\n/**\n * Field types.\n */\nspecs.fieldType = {\n  amount: 'amount',\n  asset: 'asset',\n  assetCode: 'string',\n  assetIssuer: 'address',\n  authorize: 'boolean',\n  bumpTo: 'sequence',\n  buying: 'asset',\n  clearFlags: 'flags',\n  destAsset: 'asset',\n  destAmount: 'amount',\n  destination: 'address',\n  fee: 'amount',\n  highThreshold: 'threshold',\n  homeDomain: 'string',\n  inflationDest: 'address',\n  limit: 'amount',\n  lowThreshold: 'threshold',\n  masterWeight: 'weight',\n  maxTime: 'date',\n  medThreshold: 'threshold',\n  memo: 'memo',\n  memoHash: 'hash',\n  memoId: 'id',\n  memoReturn: 'hash',\n  memoText: 'buffer',\n  memoType: 'string',\n  minTime: 'date',\n  network: 'network',\n  offerId: 'string',\n  price: 'price',\n  name: 'string',\n  path: 'assetsArray',\n  selling: 'asset',\n  sendAsset: 'asset',\n  sendMax: 'amount',\n  sequence: 'sequence',\n  setFlags: 'flags',\n  signer: 'signer',\n  signerHash: 'hash',\n  signerKey: 'address',\n  signerType: 'string',\n  signerTx: 'id',\n  signerWeight: 'weight',\n  source: 'address',\n  startingBalance: 'amount',\n  trustor: 'address',\n  value: 'buffer'\n}\n\n/**\n * Transaction field meaning.\n */\nspecs.fieldDesc = {\n  source: 'Source',\n  fee: 'Fees',\n  minTime: 'Valid only after',\n  maxTime: 'Valid only before',\n  memo: 'Memo',\n\n  network: 'Network',\n  sequence: 'Sequence'\n}\n\n/**\n * An array of each valid type for fields.\n */\nspecs.types = []\nfor (let field in specs.fieldType) {\n  const type = specs.fieldType[field]\n  specs.types.find(entry => entry === type) || specs.types.push(type)\n}\n\n/**\n * A neutral account ID meant to be replaced before signing & sending the\n * transaction.\n * @static\n */\nspecs.neutralAccountId = 'GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF'\n\n/**\n * The mandatory fields for each SEP-0007 operation.\n */\nspecs.sep7MandatoryFields = {\n  tx: [ 'xdr' ],\n  pay: [ 'destination' ]\n}\n\n/**\n * The optional fields for each SEP-0007 operation.\n */\nspecs.sep7OptionalFields = {\n  tx: [ 'callback', 'pubkey', 'network_passphrase', 'origin_domain', 'signature' ],\n  pay: [ 'amount', 'asset_code', 'asset_issuer', 'memo', 'memo_type', 'callback',\n    'network_passphrase', 'origin_domain', 'signature' ]\n}\n\nspecs.sep7IgnoredFields = [ 'callback', 'pubkey', 'origin_domain', 'signature' ]\n","'use strict'\n/**\n * Various independent helpers.\n *\n * @exports misc\n */\nconst misc = exports\n\nconst env = require('./env')\nconst html = env.isBrowser && require('./html')\n\n/**\n * Return a function that will execute `thunk` when called, and return the\n * result of its execution as a Promise. Handle async and regular functions\n * equally. Any error will be carried to .catch.\n *\n * @param {function} thunk A parameterless function\n * @return {function}\n */\nmisc.delay = function (thunk) {\n  let firstCall = true\n  let memoized\n  return function () {\n    if (firstCall) {\n      firstCall = false\n      memoized = new Promise((resolve) => resolve(thunk()))\n    }\n    return memoized\n  }\n}\n\n/**\n * Return a promise that takes `x` seconds to resolve\n *\n * @param {number} x Time to wait\n * @return {Promise}\n */\nmisc.timeout = function (x) {\n  return new Promise(function (resolve) { setTimeout(resolve, x) })\n}\n\n/**\n * Return `string` with first letter capitalized.\n *\n * @param {string} string\n * @return {string}\n */\nmisc.capitalize = function (string) {\n  return string.substr(0, 1).toUpperCase() + string.slice(1)\n}\n\n/**\n * Return shortified `string` if longer than 30 characters; else return\n * `string`.\n *\n * @param {string}\n * @return {string}\n */\nmisc.shorter = function (string) {\n  if (string.length > 50) {\n    return string.substr(0, 5) + '...' + string.substr(-5)\n  } else {\n    return string\n  }\n}\n\n/**\n * Return a function that copy `string` into user clipboard.\n *\n * @private\n * @param {string} string\n * @return {function}\n */\nmisc.copy = function (string) {\n  const textBox = html.create('textarea', {}, string)\n  html.append(html.grab('body'), textBox)\n  html.copyContent(textBox)\n  html.destroy(textBox)\n}\n\n/**\n * Set `object` property `name` as hidden, and set it to `value`.\n */\nmisc.setHiddenProperty = function (object, name, value) {\n  Object.defineProperty(object, name, { value: value, enumerable: false, writable: true })\n}\n\n/**\n * Log an error stating that `before` is deprecated.\n *\n * @param {string} date YYYY-MM or YYYY-MM-DD\n * @param {string} before Old function/property\n * @param {string} after New function/property\n */\nmisc.deprecated = function (date, before, after) {\n  console.error(`Warning: ${before} is deprecated and will be removed after \\\n${date}. Please use ${after} instead.`)\n}\n\n/**\n * Creates and returns an extra field (`extra_ticot`) for **obj**. This allow to\n * append additional information to objects without mess.\n *\n * @param {Object}\n * @return {Object} The extra field object.\n */\nmisc.useExtra = function (obj) {\n  if (!obj[extraField]) obj[extraField] = {}\n  return obj[extraField]\n}\nconst extraField = '_extra_ticot'\n","'use_strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\n\nif (env.isBrowser) {\n  if (StellarSdk === undefined) console.error('Missing dependency: StellarSdk')\n  else module.exports = StellarSdk\n} else {\n  module.exports = env.nodeRequire('stellar-sdk')\n}\n","'use_strict'\n/**\n * Methods to detect in which environment we're running.\n *\n * @exports env\n */\nconst env = exports\n\n/**\n * `true` if we are in a browser environment, `false` otherwise.\n */\nenv.isBrowser = new Function('try { return this === window } catch (e) { return false }')()\n\n/**\n * `true` if we are in a node.js environment, `false` otherwise.\n */\nenv.isNode = new Function('try { return this === global } catch (e) { return false }')()\n\n/**\n * The window object, or `undefined`.\n */\nenv.window = new Function('try { return window } catch (e) { return undefined }')()\n\n/**\n * The global objet, or `undefined`.\n */\nenv.global = new Function('try { return global } catch (e) { return undefined }')()\n\n/**\n * A require that only have effect in Node.js and that is invisible package\n * bundlers.\n */\nenv.nodeRequire = () => {}\nif (env.isNode) {\n  const stealth_require = eval('require')\n  env.nodeRequire = (module) => stealth_require(module)\n}\n","'use strict'\n/**\n * Contains functions that probe the blockchain or federation servers to collect\n * datas.\n *\n * @exports resolve\n */\nconst resolve = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst specs = require('./specs')\nconst status = require('./status')\n\n/**\n * Returns the\n * [Server]{@link https://stellar.github.io/js-stellar-sdk/Server.html} object\n * for **horizon**, or for **network**, or for the current network.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @param {string} [horizon] A horizon URL\n * @returns {Server} A StellarSdk Server object\n */\nresolve.server = function (conf, network = conf.network, horizon = conf.horizon) {\n  if (!horizon) {\n    const passphrase = resolve.networkPassphrase(conf, network)\n    if (!passphrase) throw new Error('No network selected.')\n    horizon = conf.current.horizon[passphrase]\n    if (!horizon) throw new Error('No horizon node defined for selected network.')\n  }\n  if (!conf.current.server[horizon]) conf.current.server[horizon] = new StellarSdk.Server(horizon)\n  return conf.current.server[horizon]\n}\n\n/**\n * Switch to the current network, or to **network** if provided.\n *\n * @param {string} [network] 'public', 'test' or a network passphrase\n * @returns {Server} A StellarSdk Server object\n */\nresolve.useNetwork = function (conf, network = conf.network) {\n  const passphrase = resolve.networkPassphrase(conf, network)\n  const currentPassphrase = resolve.networkPassphrase()\n  if (passphrase !== currentPassphrase) {\n    console.log('Switch to network: ' + network)\n    StellarSdk.Network.use(new StellarSdk.Network(passphrase))\n  }\n}\n\n/**\n * Returns the curent Horizon node URL, or the Horizon node URL for **network**\n * if provided.\n *\n * @param {string} [network] A network name or passphrase.\n */\nresolve.horizon = function (conf, network = conf.network) {\n  const passphrase = resolve.networkPassphrase(conf, network)\n  return conf.current.horizon[passphrase]\n}\n\n/**\n * Returns the current network passphrase, or the passphrase for **network** is\n * provided.\n */\nresolve.networkPassphrase = function (conf = {}, network = conf.network) {\n  if (network) {\n    return conf.current.passphrase[network] || network\n  } else {\n    const currentNetwork = StellarSdk.Network.current()\n    if (currentNetwork) return currentNetwork.networkPassphrase()\n  }\n}\n\n/**\n * Returns the federation server\n * [Account]{@link https://stellar.github.io/js-stellar-sdk/Account.html}\n * for **address**.\n *\n * @async\n * @param {string} address A Stellar public key or a federated address\n * @return {} Resolve to federation server response\n */\nresolve.address = function (conf, address) {\n  const cache = conf.cache\n  if (cache && cache.destination[address]) return cache.destination[address]\n\n  const promise = addressResolver(conf, address)\n  if (cache) cache.destination[address] = promise\n  return promise\n}\n\nasync function addressResolver (conf, address) {\n  try {\n    const account = await StellarSdk.FederationServer.resolve(address)\n    const accountId = account.account_id\n    if (!accountId) throw new Error('Unknow address')\n    if (!account.memo_type) delete account.memo\n    if (address !== accountId) account.address = address\n    if (conf.aliases && conf.aliases[accountId]) {\n      account.alias = conf.aliases[accountId]\n    }\n    return account\n  } catch (error) {\n    console.error(error)\n    status.error(conf, \"Can't resolve: \" + helpers.shorter(address))\n    status.fail(conf, 'Unresolved address', 'throw')\n  }\n}\n\n/**\n * Returns the\n * [AccountResponse]{@link https://stellar.github.io/js-stellar-sdk/AccountResponse.html}\n * object for **address**.\n *\n * @param {string} address A public key or a federated address\n * @return {Object} The AccountResponse\n */\nresolve.account = async function (conf, address, quietFlag) {\n  const account = await resolve.address(conf, address)\n  const accountId = account.account_id\n  const cache = conf.cache\n  if (cache && cache.account[accountId]) return cache.account[accountId]\n\n  const promise = accountResolver(conf, accountId, quietFlag)\n  if (cache) cache.account[accountId] = promise\n  return promise\n}\n\nasync function accountResolver (conf, accountId, quietFlag) {\n  const server = resolve.server(conf)\n  try {\n    const accountResponse = await server.loadAccount(accountId)\n    return accountResponse\n  } catch (error) {\n    if (quietFlag) {\n      throw error\n    } else {\n      console.error(error)\n      status.error(conf, 'Empty account: ' + helpers.shorter(accountId), 'throw')\n    }\n  }\n}\n\n/**\n * Returns `true` if **address** account is empty, `false` otherwise.\n *\n * @async\n * @param {string} address Public key or federated address\n * @return {boolean}\n */\nresolve.isAccountEmpty = function (conf, address) {\n  return resolve.account(conf, address, true).then(x => false).catch(x => true)\n}\n\n/**\n * Returns the account object for transaction source **address`** with sequence\n * set at **sequence** if provided. If **address** is not provided, returns the\n * neutral account object instead (as in SEP-0007 specifications).\n *\n * @param {string} [address]\n * @param {string|numbre} [sequence]\n * @return {AccountResponse}\n */\nresolve.txSourceAccount = async function (conf, address, sequence) {\n  if (!address) {\n    const neutralAccount = new StellarSdk.Account(specs.neutralAccountId, '-1')\n    neutralAccount.signers = []\n    if (conf.cache) {\n      conf.cache.account[specs.neutralAccountId] = neutralAccount\n    }\n    return neutralAccount\n  } else {\n    const destination = await resolve.address(conf, address)\n    if (destination.memo) status.error(conf, 'Invalid transaction source address (requires a memo)', 'throw')\n    const account = await resolve.account(conf, destination.account_id)\n    if (sequence) {\n      const baseAccount = new StellarSdk.Account(account.id, sequence)\n      baseAccount.sequence = baseAccount.sequence.sub(1)\n      account._baseAccount = baseAccount\n    }\n    return account\n  }\n}\n\n/**\n * Returns the array of all source accounts ID involved in **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\nresolve.txSources = function (conf, transaction) {\n  if (!transaction.source) throw new Error('No source for transaction')\n\n  const extra = resolve.extra(conf, transaction)\n  if (extra.cache.txSources) return extra.cache.txSources\n\n  const array = extra.cache.txSources = [ transaction.source ]\n  for (let index in transaction.operations) {\n    const source = transaction.operations[index].source\n    if (source && !array.find(a => a === source)) array.push(source)\n  }\n\n  return array\n}\n\n/**\n * Returns an object such as:\n *\n * ```js\n * {\n *    $accountId: $accountSigners\n *    ...\n * }\n * ```\n *\n * @param {Transaction} transaction\n * @return {Object}\n */\nresolve.txSigners = async function (conf, transaction) {\n  const extra = resolve.extra(conf, transaction)\n  if (extra.cache.txSigners) return extra.cache.txSigners\n\n  const txSources = resolve.txSources(extra, transaction)\n  const signers = extra.cache.txSigners = {}\n\n  for (let index in txSources) {\n    const source = txSources[index]\n    const account = await resolve.account(extra, source)\n    if (!signers[account.id]) {\n      signers[account.id] = account.signers.filter(signer => {\n        return signer.type !== 'preauthTx'\n      })\n    }\n  }\n\n  return signers\n}\n\n/**\n * Returns an Array containing the keys for all legit signers of **transaction**.\n *\n * @param {Transaction} transaction\n * @return {Array}\n */\nresolve.txSignersList = async function (conf, transaction) {\n  const extra = resolve.extra(conf, transaction)\n  if (!extra.cache.txSignersList) {\n    const txSigners = await resolve.txSigners(extra, transaction)\n    extra.cache.txSignersList = signersTableToSignersList(txSigners)\n  }\n  return extra.cache.txSignersList\n}\n\nfunction signersTableToSignersList (signersTable) {\n  const array = []\n  for (let accountId in signersTable) {\n    signersTable[accountId].forEach(signer => {\n      if (!array.find(key => key === signer.key)) array.push(signer.key)\n    })\n  }\n  return array\n}\n\n/**\n * Add an extra field to **object** that embed cache and local configuration.\n *\n * @private\n */\nresolve.extra = function (conf, object) {\n  if (!object._cosmicplus) {\n    helpers.setHiddenProperty(object, '_cosmicplus', {})\n    if (conf.cache) object._cosmicplus.cache = conf.cache\n    else object._cosmicplus.cache = { destination: {}, account: {} }\n    object._cosmicplus.network = conf.network\n    object._cosmicplus.current = conf.current\n  }\n  return object._cosmicplus\n}\n","'use strict'\n/**\n * Contains the methods to update cosmic link status and HTML status node.\n * Thoses methods won't have effect unless status reporting is enabled on `conf`\n * object by using `status.init` (wich is done automatically on CosmicLink\n * objects).\n *\n * @private\n * @exports status\n */\nconst status = exports\n\nconst env = require('@cosmic-plus/jsutils/env')\nconst html = env.isBrowser && require('@cosmic-plus/jsutils/html')\n\n/**\n * Initialize `conf.status` & `conf.errors`.\n */\nstatus.init = function (conf) {\n  conf.status = null\n  conf.errors = false\n}\n\n/**\n * Set `conf` status as `status` and update statusNode. Error status should be\n * recorded using the `status.fail` function bellow. Once a status is set it\n * won't be mutated.\n *\n * @param {string} status\n */\nstatus.update = function (conf, status) {\n  if (conf.status || conf.status === undefined) return\n\n  console.log('Set status: ' + status)\n  conf.status = status\n\n  if (conf._statusNode) {\n    const title = html.grab('.cosmiclib_status', conf._statusNode)\n    title.textContent = status\n  }\n}\n\n/**\n * Set `conf` status as error status `status` and update statusNode. This\n * implies that the cosmic link or the underlying transaction is invalid. Then,\n * call `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} status\n * @param {function|'throw'} [continuation]\n */\nstatus.fail = function (conf, errorStatus, continuation) {\n  status.update(conf, errorStatus)\n  if (conf._statusNode) html.appendClass(conf._statusNode, 'cosmiclib_error')\n  errorContinuation(errorStatus, continuation)\n}\n\n/**\n * Append `error` to `conf.errors` and to the HTML display. Then, call\n * `continuation` if any. `continuation` should be a either a function or\n * 'throw'.\n *\n * @param {string} error\n * @param {procedure|'throw'} [continuation]\n */\nstatus.error = function (conf, error, continuation) {\n  console.log(error)\n\n  if (conf.errors !== undefined) {\n    if (!conf.errors) conf.errors = []\n\n    conf.errors.push(error)\n\n    if (conf._statusNode) {\n      const errorsNode = html.grab('.cosmiclib_errors', conf._statusNode)\n      const lineNode = html.create('li', null, error)\n      html.append(errorsNode, lineNode)\n    }\n  }\n\n  errorContinuation(error, continuation)\n}\n\n/**\n * Create & return an HTML element that displays `conf` status and eventual\n * errors.\n *\n * @return {htmlElement}\n */\nstatus.makeHtmlNode = function (conf) {\n  const statusNode = html.create('div', '.cosmiclib_statusNode')\n\n  const statusLine = html.create('span', '.cosmiclib_status')\n  html.append(statusNode, statusLine)\n  if (conf.status) statusLine.textContent = conf.status\n\n  const errorsNode = html.create('ul', '.cosmiclib_errors')\n  html.append(statusNode, errorsNode)\n  if (conf.errors) {\n    conf.errors.forEach(error => {\n      const errorLine = html.create('li', null, error)\n      html.append(errorsNode, errorLine)\n    })\n  }\n\n  return statusNode\n}\n\n/**\n * If `continuation` is a function, call it with `error` as argument.\n * If `continuation` equal 'throw', throw a new error with `error` as message.\n * If `continuation` is undefined, do nothing.\n */\nfunction errorContinuation (error, continuation) {\n  if (continuation) {\n    if (continuation === 'throw') throw new Error(error)\n    else continuation(error)\n  }\n}\n","'use_strict'\n/**\n * Utilities to manipulate HTML element from javascript.\n *\n * Those may not be feature complete, as this library purpose is to ease\n * cosmic-lib and Stellar Authenticator development, rather than provide a\n * generic-case toolbox.\n *\n * @exports html\n */\nconst html = exports\n\n/// Prevent node failure when accidentaly loading this file.\nconst env = require('./env')\nconst document = env.window ? env.window.document : undefined\nif (env.isNode) console.error('@cosmic-plus/jsutils/html is a browser-only module')\n\n/**\n * Append `childs` as the end of `element`.\n *\n * @param {HTMLElement} element\n * @param {...(HTMLElement|String|Error)} childs\n */\nhtml.append = function (element, ...childs) {\n  childs.forEach(child => {\n    if (typeof child === 'string' || child instanceof Error) {\n      element.appendChild(document.createTextNode(child))\n    } else {\n      element.appendChild(child)\n    }\n  })\n}\n\n/**\n * Add `newClass` as an additionnal class for `element`.\n *\n * @param {HTMLElement} element\n * @param {string} newClass\n * */\nhtml.appendClass = function (element, newClass) {\n  element.className += ' ' + newClass\n}\n\n/**\n * Remove everything inside `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.clear = function (element) {\n  element.innerHTML = ''\n}\n\n/**\n * Copy text inside `element`. `element` should be a textbox like textarea or\n * text input.\n *\n * @param {HTMLElement} element\n * @param\n * */\nhtml.copyContent = function (element) {\n  /// Don't copy complete box content twice / when user made a selection.\n  if (element.selectionStart !== element.selectionEnd) return\n\n  if (element.select) {\n    element.select()\n  } else if (window.getSelection) {\n    const range = document.createRange()\n    range.selectNode(element)\n    window.getSelection().removeAllRanges()\n    window.getSelection().addRange(range)\n  } else {\n    return\n  }\n  return document.execCommand('copy')\n}\n\n/**\n * Return a newly created HTML element whose tag is `name`, attributes\n * `attributes` and childs `childs`.\n *\n * @param {string} name\n * @param {object|string} [attributes|className|ID]\n * @param {...HTMLElement} [childs]\n */\nhtml.create = function (name, attributes, ...childs) {\n  if (!name) throw new Error('Missing tag name')\n\n  const element = document.createElement(name)\n\n  if (typeof attributes === 'string') {\n    switch (attributes.substr(0, 1)) {\n      case '#': element.id = attributes.substr(1); break\n      case '.': element.className = attributes.substr(1); break\n      default: throw new Error('Unhandled attribute')\n    }\n  } else {\n    let field; for (field in attributes) {\n      element[field] = attributes[field]\n    }\n  }\n\n  if (childs.length > 0) html.append(element, ...childs)\n\n  return element\n}\n\n/**\n * Destroy `element`.\n *\n * @param {HTMLElement} element\n * */\nhtml.destroy = function (element) {\n  try {\n    element.innerHTML = ''\n    if (element.parentNode) element.parentNode.removeChild(element)\n  } catch (error) { console.error(error) }\n}\n\n/**\n * Return the first element matching `pattern`.\n * If `name` starts with `#`, it will match against IDs.\n * If `name` starts with `.`, it will match against classes.\n * If `name` is a plain word, it will match against tags.\n * If `parent` is given, it will look recursively in `parent` childs.\n *\n * @param {string} pattern\n * @param {HTMLElement} [parent=document]\n * */\nhtml.grab = function (pattern, parent = document) {\n  return parent.querySelector(pattern)\n}\n\n/**\n * Set the `style.display` property of `...elements` to `block`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.show = function (...elements) {\n  elements.forEach(element => element.style.display = 'block')\n}\n\n/** Set the `style.display` property of `...elements` to `none`.\n *\n * @param {...HTMLElement} elements\n */\nhtml.hide = function (...elements) {\n  elements.forEach(element => element.style.display = 'none')\n}\n\n/**\n * Replace `element1` by `element2`.\n *\n * @param {HTMLElement} element1 The element to replace.\n * @param {HTMLElement} element2 The element to put in place of `element1`.\n */\nhtml.replace = function (element1, element2) {\n  element1.parentNode.replaceChild(element2, element1)\n}\n\n/**\n * Set the content of element to ...childs. Any previous content will be erased.\n *\n * @param {HTMLElement} element\n * @param {...HTMLElement} childs\n */\nhtml.rewrite = function (element, ...childs) {\n  html.clear(element)\n  html.append(element, ...childs)\n}\n\n/**\n * Add `string` as additional CSS definitions for the current document.\n *\n * @param {string} styles CSS definitions\n */\nhtml.addStyles = function (styles) {\n  const styleNode = html.create('style', { type: 'text/css' }, styles)\n  html.append(headNode, styleNode)\n}\nconst headNode = html.grab('head')\n","module.exports = require(\"regenerator-runtime\");\n","'use_strict'\n/**\n * Library-wide configuration.\n *\n * @borrows module:aliases.all as aliases\n * @borrows module:aliases.add as addAliases\n * @borrows module:aliases.remove as removeAliases\n *\n * @borrows module:event.defaultClickHandlers as clickHandlers\n * @borrows module:event.setClickHandler as setClickHandler\n * @borrows module:event.clearClickHandler as clearClickHandler\n *\n * @exports config\n */\nconst config = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst aliases = require('./aliases')\nconst event = require('./event')\n\n/**\n * The base URI to build cosmic links.\n * @default 'https://cosmic.link/'\n */\nconfig.page = 'https://cosmic.link/'\n/**\n * The default fallback network.\n * @default 'public'\n */\nconfig.network = 'public'\n/**\n * The default fallback source address.\n * @default undefined\n */\nconfig.source = undefined\n\n/**\n * Networks setup.\n *\n * @private\n */\nconfig.current = {\n  passphrase: {},\n  horizon: {},\n  server: {}\n}\n\n/**\n * Set default **passphrase** and **horizon** URL for network **name**.\n *\n * Adding custom network this way will enable the use of their name in cosmic\n * queries (as in `&network=name`). However, please remind that this feature\n * will works only on your side and could break compatibility with other\n * services.\n *\n * @example\n * cosmicLib.config.setupNetwork('public', 'https://my-own-horizon-instance.example.org')\n * cosmicLib.config.setupNetwork('custom', 'https://custom-horizon.example.org', 'My Custom Passphrase')\n *\n * @param {string} name Network name (like 'public', 'test')\n * @param {string} horizon Horizon URL\n * @param {string} [passphrase] Network passphrase\n */\nconfig.setupNetwork = function (name, horizon, passphrase) {\n  if (passphrase) config.current.passphrase[name] = passphrase\n  else passphrase = config.current.passphrase[name]\n  config.current.horizon[passphrase] = horizon\n}\n\nconfig.setupNetwork('public', 'https://horizon.stellar.org', StellarSdk.Networks.PUBLIC)\nconfig.setupNetwork('test', 'https://horizon-testnet.stellar.org', StellarSdk.Networks.TESTNET)\n\nconfig.aliases = aliases.all\nconfig.addAliases = (definitions) => aliases.add(config, definitions)\nconfig.removeAliases = (array) => aliases.remove(config, array)\n\nconfig.clickHandlers = event.defaultClickHandlers\nconfig.setClickHandler = (fieldType, callback) => event.setClickHandler(config, fieldType, callback)\nconfig.clearClickHandler = (fieldType) => event.clearClickHandler(config, fieldType)\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict'\n/**\n * Contains the methods to convert transactions between various formats.\n *\n * @private\n * @exports convert\n */\nconst convert = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst construct = require('./construct')\nconst decode = require('./decode')\nconst destruct = require('./destruct')\nconst encode = require('./encode')\nconst resolve = require('./resolve')\n\n/** ****************************    URI -> XDR    ******************************/\n\nconvert.uriToQuery = function (conf, uri) {\n  if (!uri.match(/\\?/)) return null\n  const query = uri.replace(/^[^?]*/, '')\n  return query\n}\n\nconvert.queryToTdesc = decode.query\n\nconvert.tdescToJson = function (conf, tdesc) {\n  return JSON.stringify(tdesc, null, 2)\n}\n\nconvert.tdescToTransaction = construct.transaction\n\nconvert.transactionToXdr = function (conf, transaction) {\n  return transaction.toEnvelope().toXDR('base64')\n}\n\nconvert.xdrToSep7 = function (conf, xdr) {\n  let sep7 = 'web+stellar:tx?xdr='\n  sep7 += encodeURIComponent(xdr)\n  const passphrase = resolve.networkPassphrase(conf)\n  if (passphrase !== StellarSdk.Networks.PUBLIC) {\n    sep7 += '&network_passphrase=' + encodeURIComponent(passphrase)\n  }\n  return sep7\n}\n\n/** ****************************    XDR -> URI    ******************************/\n\nconvert.xdrToTransaction = function (conf, xdr, options = {}) {\n  const transaction = new StellarSdk.Transaction(xdr)\n  if (options.stripSignatures) transaction.signatures = []\n  return transaction\n}\n\nconvert.xdrToQuery = function (conf, xdr, options = {}) {\n  let query = '?xdr=' + xdr\n  if (options.network) query += '&network=' + encodeURIComponent(options.network)\n  return query\n}\n\nconvert.transactionToTdesc = destruct.transaction\n\nconvert.jsonToTdesc = function (conf, json) {\n  return JSON.parse(json)\n}\n\nconvert.tdescToQuery = encode.query\n\nconvert.queryToUri = function (conf, query) {\n  const page = conf.page || 'https://cosmic.link'\n  return page + query\n}\n","'use_strict'\n/**\n * Methods to set tdesc/odesc defaults values and strip out useless data.\n *\n * @exports normalize\n * @private\n */\nconst normalize = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\n/**\n * Setup the default values for `tdesc`.\n */\nnormalize.tdesc = function (conf, tdesc) {\n  removeEmptyFields(tdesc)\n  if (!tdesc.operations) tdesc.operations = []\n\n  if (tdesc.fee === 100 * tdesc.operations.length) delete tdesc.fee\n  dateFields.forEach(field => {\n    if (tdesc[field]) {\n      tdesc[field] = normalize.date(conf, tdesc[field])\n      if (tdesc[field] === '1970') delete tdesc[field]\n    }\n  })\n}\n\nconst dateFields = ['minTime', 'maxTime']\n\nnormalize.date = function (conf, date) {\n  return date.replace(/:00\\.000/, '').replace(/\\.000/, '')\n    .replace(/T00:00Z/, '').replace(/-01$/, '').replace(/-01$/, '')\n}\n\n/**\n * Add the implicit values for fields made optional in the CosmicLink protocol\n * but required by StellarSdk.\n */\nnormalize.odesc = function (conf, odesc) {\n  removeEmptyFields(odesc)\n  /// No limit = maximum limit.\n  if (odesc.limit === '922337203685.4775807') delete odesc.limit\n  /// New offer.\n  if (odesc.offerId === '0') delete odesc.offerId\n  /// Empty asset conversion path.\n  if (odesc.path && !odesc.path.length) delete odesc.path\n  /// Useless denominator.\n  if (odesc.price && odesc.price.d === 1) odesc.price = odesc.price.n + ''\n\n  switch (odesc.type) {\n    case 'allowTrust':\n      /// Allow trust by default.\n      if (odesc.authorize === undefined) odesc.authorize = true\n      break\n    case 'createPassiveOffer':\n    case 'manageOffer': {\n      /// XLM as default asset.\n      if (odesc.buying && !odesc.selling) odesc.selling = XLM\n      if (odesc.selling && !odesc.buying) odesc.buying = XLM\n      break\n    }\n    case 'manageData':\n      /// Delete data entry.\n      if (!odesc.value) odesc.value = ''\n      break\n    case 'pathPayment':\n      /// XLM as default asset.\n      if (odesc.destAsset && !odesc.sendAsset) odesc.sendAsset = XLM\n      if (odesc.sendAsset && !odesc.destAsset) odesc.destAsset = XLM\n      break\n    case 'payment':\n      /// XLM as default asset.\n      if (!odesc.asset) odesc.asset = XLM\n      break\n  }\n}\n\nconst XLM = StellarSdk.Asset.native()\n\nfunction removeEmptyFields (object) {\n  for (let field in object) {\n    if (object[field] === null || object[field] === undefined) delete object[field]\n  }\n}\n","'use_strict'\n/**\n * This module provides two ways to generate {@link SignersUtils} for a\n * Transaction object. The first one extends the object and is the intended way\n * to use those utilities. However, as extending objects can sometimes prove\n * inconvenient or intrusive, a second method allows to create a stand-alone\n * {@link SignersUtils} tied to a given transaction.\n *\n * @exports signersUtils\n */\nconst signersUtils = exports\n\nconst resolve = require('./resolve')\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\n/**\n * **SignersUtils** is a toolbox that aims to ease the handling of\n * multisignature transactions. The idea behind it is to fetch all required\n * data once and to cache the responses into the transaction. Then, all\n * the utilities can function in a synchronous (immediate) manner.\n *\n * Those are automatically available in `cosmicLink.transaction` after\n * `await cosmicLink.lock()` is ran. Alternatively, you can extend a transaction\n * or generate its SignersUtils by using {@link module:signersUtils}. There's no\n * `cosmicLib.SignersUtils` constructor.\n *\n * An instance of SignersUtils is always tied to a given transaction. This is\n * why none of the provided methods take a transaction as parameter.\n *\n * >\n * | Members                                                                     | Methods\n * |-----------------------------------------------------------------------------|-------------\n * | [sources]{@link SignersUtils#sources}: Array of transaction sources         | [hasSigner]{@link SignersUtils#hasSigner}: Test if a key is a legit signer for transaction\n * | [signers]{@link SignersUtils#signers}: Table of transaction signers         | [hasSigned]{@link SignersUtils#hasSigned}: Test if a key has signed transaction\n * | [signersList]{@link SignersUtils#signersList}: Array of transaction signers |\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Donation', maxDate: 2019 })\n *  .addOperation('payment', { destination: 'tips*cosmic.link', amount: 10 })\n *\n * await cosmicLink.lock({ network: 'test', source: 'myaddress*example.org' })\n *\n * console.log(cosmicLink.transaction.signers)\n * console.log(cosmicLink.transaction.hasSigner(GB...DXEZ))\n *\n * @alias SignersUtils\n * @namespace\n */\nclass SignersUtils {\n  static async resolve (conf, transaction, extendFlag) {\n    const extra = resolve.extra(conf, transaction)\n\n    if (!extra.cache.signersUtils) {\n      resolve.useNetwork(extra)\n      extra.cache.txHash = transaction.hash()\n      const utils = new SignersUtils(extra, transaction)\n      /**\n       * A list of the sources involved in the transaction.\n       * @alias SignersUtils#sources\n       * @type {Array}\n       */\n      utils.sources = await resolve.txSources(extra, transaction)\n      /**\n       * A table of the signers for each transaction source.\n       * @alias SignersUtils#signers\n       * @type {Object}\n       */\n      utils.signers = await resolve.txSigners(extra, transaction)\n      /**\n       * A list of the legit signers for the transaction.\n       * @alias SignersUtils#signersList\n       * @type {Array}\n       */\n      utils.signersList = await resolve.txSignersList(extra, transaction)\n      Object.assign(utils, utilities)\n      extra.cache.signersUtils = utils\n    }\n\n    if (extendFlag) {\n      if (!transaction.hasSigner) Object.assign(transaction, extra.cache.signersUtils)\n      return transaction\n    } else {\n      return extra.cache.signersUtils\n    }\n  }\n\n  constructor (conf, transaction) {\n    this.signatures = transaction.signatures\n    helpers.setHiddenProperty(this, '_cosmicplus', transaction._cosmicplus)\n  }\n}\n\n/******************************************************************************/\n\nconst utilities = {}\n\n/**\n * Tests if **accountId** is a legit signer for the transaction.\n *\n * @example\n * if (transaction.hasSigner(GB...DEZX)) console.log('Legit signer')\n *\n * @alias SignersUtils#hasSigner\n * @param {string} accountId\n * @return {boolean}\n */\nutilities.hasSigner = function (accountId) {\n  return this.signersList.find(key => key === accountId)\n}\n\n/**\n * Tests if **accountId** has signed the transaction.\n *\n * @example\n * if (transaction.hasSigned(GB...DEZX)) console.log('Has signed')\n *\n * @alias SignersUtils#hasSigned\n * @param {string} accountId\n * @return {boolean}\n */\nutilities.hasSigned = function (accountId) {\n  if (accountId.substr(0, 1) === 'G') {\n    const keypair = StellarSdk.Keypair.fromPublicKey(accountId)\n    const txHash = this._cosmicplus.cache.txHash\n    return !!this.signatures.find(entry => keypair.verify(txHash, entry.signature()))\n  }\n}\n\n/******************************************************************************/\n\n/**\n * Returns SignersUtils for **transaction**.\n *\n * @async\n * @param {Transaction} transaction\n * @return {SignersUtils}\n */\nsignersUtils.for = (conf, transaction) => SignersUtils.resolve(conf, transaction)\n\n/**\n * Extends **transaction** with SignersUtils.\n *\n * @async\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nsignersUtils.extends = (conf, transaction) => SignersUtils.resolve(conf, transaction, true)\n","'use strict'\n/**\n * Contains the methods to trigger and handle events.\n *\n * @private\n * @exports event\n */\nconst event = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\n/** *** Click events *****/\n\n/**\n * Set the click handler for **type** HTML elements as **callback**.\n *\n * @example\n * cosmicLib.config.setClickHandler('address', showAddressPopup)\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n * @param {function} callback A function that accept one `event` argument\n */\nevent.setClickHandler = function (conf, type, callback) {\n  conf.clickHandlers[type] = callback\n}\n\n/**\n * Remove the current click handler for **type**.\n *\n * @example\n * cosmicLib.config.clearClickHandler('address')\n *\n * @param {string} type Type of a transaction/operation field such as\n *     `address`, `asset`, `hash`, ...\n */\nevent.clearClickHandler = function (conf, type) {\n  conf.clickHandlers[type] = undefined\n}\n\nevent.callClickHandler = function (conf, type, event) {\n  const handler = conf.clickHandlers[type]\n  event.extra = event.domNode.extra\n  event.field = event.domNode.field\n  if (handler) handler(event)\n}\n\n/**\n * The active click handlers. Takes the form:\n *\n * ```\n * cosmicLib.config.clickHandlers = {\n *   type1: callback1,\n *   ...\n *   typeN: callbackN\n * }\n * ```\n *\n * Thoses click handlers are set by default:\n *\n * * **address**: A prompt that shows the address details\n * * **id**: A function that copy the id into the clipboard\n * * **hash**: A function that copy the hash into the clipboard or show a prompt\n *   for preimage signature when relevant\n * ```\n */\nevent.defaultClickHandlers = {\n  address: function (event) {\n    if (!event.extra) return\n    let message = ''\n    for (let field in event.extra) {\n      message += `${field}:\\n` + `${event.extra[field]}\\n\\n`\n    }\n    window.alert(message)\n  },\n  hash: function (event) {\n    const grandma = event.domNode.parentNode.parentNode.parentNode\n    if (grandma.classList.contains('cosmiclib_signers')) {\n      const preimage = prompt('Please enter preimage:')\n      if (preimage) event.cosmicLink.sign(preimage)\n    } else {\n      helpers.copy(event.value)\n    }\n  },\n  id: helpers.copy\n}\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict'\n/**\n * Decode fields values from URI to cosmic link JSON format. This format differs\n * from Stellar transaction format: it is simpler, allow for federated address\n * and can be stringified/parsed without loss of information.\n *\n * For each of those functions, any error is recorded in the `conf` object\n * and HTML nodes are updated accordingly.\n *\n * @private\n * @exports decode\n */\nconst decode = exports\n\nconst check = require('./check')\nconst normalize = require('./normalize')\nconst specs = require('./specs')\nconst status = require('./status')\n\ndecode.query = function (conf, query = '?') {\n  if (query.substr(0, 1) !== '?') status.fail(conf, 'Invalid query', 'throw')\n\n  const operations = []\n  const tdesc = {}\n\n  let command = query.substr(1).replace(/&.*/, '')\n  const params = query.substr(command.length + 2).split('&')\n  if (command && command !== 'transaction') operations.push({ type: command })\n\n  for (let index in params) {\n    const param = params[index].split('=', 2)\n    const field = param[0]\n    if (!field) continue\n\n    if (field === 'operation') {\n      operations.push({ type: param[1] })\n      command = 'operation'\n      continue\n    }\n\n    const value = decode.field(conf, field, param[1])\n\n    /// Multi-operation link.\n    if (command === 'transaction') {\n      tdesc[field] = value\n    } else if (command === 'operation') {\n      operations[operations.length - 1][field] = value\n    /// One-operation link.\n    } else {\n      if (specs.isTransactionField(field)) {\n        tdesc[field] = value\n      } else {\n        operations[0][field] = value\n      }\n    }\n  }\n\n  tdesc.operations = operations\n  normalize.tdesc(conf, tdesc)\n  tdesc.operations.forEach(odesc => normalize.odesc(conf, odesc))\n  check.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/******************************************************************************/\n\n/**\n * Decode `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\ndecode.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  return type ? decode.type(conf, type, value) : value\n}\n\n/**\n * Decode `value` using the decoding function for `type`.\n *\n * @param {string} type\n * @param {string} value\n */\ndecode.type = function (conf, type, value) {\n  if (value) {\n    value = decodeURIComponent(value)\n    return process[type] ? process[type](conf, value) : value\n  } else {\n    return ''\n  }\n}\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.asset = function (conf, asset) {\n  const assetLower = asset.toLowerCase()\n  if (assetLower === 'xlm' || assetLower === 'native') {\n    return { code: 'XLM' }\n  } else {\n    const temp = asset.split(':')\n    const object = { code: temp[0], issuer: temp[1] }\n    return object\n  }\n}\n\nprocess.assetsArray = function (conf, assetsList) {\n  const strArray = assetsList.split(',')\n  return strArray.map(entry => decode.asset(conf, entry))\n}\n\nprocess.boolean = function (conf, string) {\n  switch (string) {\n    case 'true': return true\n    case 'false': return false\n  }\n}\n\nprocess.date = function (conf, string) {\n  /// Use UTC timezone by default.\n  if (string.match(/T[^+]*[0-9]$/)) string += 'Z'\n  return new Date(string).toISOString()\n}\n\nprocess.memo = function (conf, memo) {\n  const type = memo.replace(/:.*/, '')\n  const value = memo.replace(/^[^:]*:/, '')\n  if (type === value) {\n    return { type: 'text', value: value }\n  } else {\n    return { type: type, value: value }\n  }\n}\n\nprocess.price = function (conf, price) {\n  const numerator = price.replace(/:.*/, '')\n  const denominator = price.replace(/^[^:]*:/, '')\n  if (numerator === denominator) return price\n  else return { n: +numerator, d: +denominator }\n}\n\nprocess.signer = function (conf, signer) {\n  const temp = signer.split(':')\n  const object = { weight: temp[0], type: temp[1], value: temp[2] }\n  return object\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  exports[type] = (conf, value) => decode.type(conf, type, value)\n})\n","'use strict'\n/**\n * Provide checks for varous type of field used in cosmic links.\n *\n * This module may no be type-complete and new type checks got added only when\n * needed.\n *\n * The check apply on values using the cosmic link JSON format.\n *\n * @private\n * @exports check\n */\nconst check = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\nconst specs = require('./specs')\nconst status = require('./status')\n\ncheck.tdesc = function (conf, tdesc) {\n  for (let field in tdesc) {\n    try {\n      check.txField(conf, field, tdesc[field])\n    } catch (error) {\n      tdesc[field] = errDesc(error, tdesc[field])\n    }\n  }\n\n  if (tdesc.operations.length > 100) {\n    status.error(conf, 'Too much operations (max 100)')\n  }\n\n  tdesc.operations.forEach(odesc => {\n    try { check.odesc(conf, odesc) } catch (e) {}\n  })\n\n  if (conf.errors) {\n    const error = new Error('Invalid tdesc')\n    error.tdesc = tdesc\n    throw error\n  }\n}\n\ncheck.odesc = function (conf, odesc) {\n  try {\n    check.operationType(conf, odesc.type)\n  } catch (error) {\n    odesc.type = errDesc(error, odesc.type)\n  }\n\n  for (let field in odesc) {\n    try {\n      check.operationField(conf, odesc.type, field, odesc[field])\n    } catch (error) {\n      odesc[field] = errDesc(error, odesc[field])\n    }\n  }\n\n  specs.operationMandatoryFields[odesc.type].forEach(field => {\n    if (odesc[field] === undefined) {\n      const error = new Error('Missing mandatory field: ' + field)\n      odesc[field] = errDesc(error)\n      status.error(conf, error.message)\n    }\n  })\n\n  if (conf.errors) throw new Error('Invalid odesc')\n}\n\ncheck.txField = function (conf, field, value) {\n  if (field === 'operations') return\n  if (!specs.transactionOptionalFields.find(name => name === field)) {\n    status.error(conf, 'Invalid transaction field: ' + field, 'throw')\n  }\n  check.field(conf, field, value)\n}\n\ncheck.operationType = function (conf, type) {\n  if (!specs.operationMandatoryFields[type]) {\n    status.error(conf, 'Invalid operation: ' + type, 'throw')\n  }\n}\n\ncheck.operationField = function (conf, operation, field, value) {\n  if (field === 'type') return\n  if (!specs.isOperationField(operation, field)) {\n    status.error(conf, `Invalid field for ${operation}: ${field}`, 'throw')\n  }\n  check.field(conf, field, value)\n}\n\nfunction errDesc (error, value = '') {\n  return { error: error, value: value }\n}\n\n/******************************************************************************/\n\n/**\n * Check that `field` is a valid transaction/operation field. If `value` is\n * given, check that it is valid for that `field`. If a check doesn't pass, an\n * error is throwed.\n *\n * @param {string} field\n * @param {string} [value]\n */\ncheck.field = function (conf, field, value) {\n  if (value === '' && field !== 'homeDomain' && field !== 'value') {\n    status.error(conf, `Missing value for field: ${field}`, 'throw')\n  }\n\n  const type = specs.fieldType[field]\n  if (!type) status.error(conf, 'Unknow field: ' + field, 'throw')\n  if (value) check.type(conf, type, value)\n}\n\n/**\n * Check that `type` is a valid transaction/operation field type. If `value` is\n * given, check that it is valid for that `type`. If a check doesn't pass, an\n * error is throwed.\n *\n * @param {string} type\n * @param {string} [value]\n */\ncheck.type = function (conf, type, value) {\n  if (!specs.types.find(entry => entry === type)) {\n    throw new Error('Invalid type: ' + type)\n  }\n  return check[type](conf, value)\n}\n\n/**\n * Generic check for numbers. Check that `value` is a number or a string\n * representing a number. `type` is for the customization of the message in case\n * of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'number']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.number = function (conf, value, type = 'number', min, max = 'unlimited') {\n  const num = +value\n  if (isNaN(num)) {\n    status.error(conf,\n      `Invalid ${type} (should be a number): ${value}`,\n      'throw'\n    )\n  } else if ((min && num < min) || (max && num > max)) {\n    status.error(conf,\n      `Invalid ${type} (should be between ${min} and ${max} ): ${value}`,\n      'throw'\n    )\n  }\n}\n\n/**\n * Generic check for integers. Check that `value` is an integer or a string\n * representing an integer. `type` is for the customization of the message in\n * case of error. `min` and `max` may be provided as additional restriction for\n * `value`.\n *\n * @param {number|string} value\n * @param {string} [type = 'integer']\n * @param {number|string} [min]\n * @param {number|string} [max]\n */\ncheck.integer = function (conf, value, type = 'integer', min, max) {\n  check.number(conf, value, type, min, max)\n  if (parseInt(value) + '' !== value + '') {\n    status.error(conf, `Not an integer: ${value}`, 'throw')\n  }\n}\n\n/******************************************************************************/\n\ncheck.amount = function (conf, amount) {\n  check.number(conf, amount, 'amount')\n}\n\ncheck.address = function (conf, address) {\n  if (address.length !== 56 && !address.match(/.*\\*.*\\..*/)) {\n    status.error(conf, 'Invalid address: ' + helpers.shorter(address), 'throw')\n  }\n}\n\ncheck.asset = function (conf, asset) {\n  const code = asset.code.toLowerCase()\n  if (!asset.issuer && code !== 'xlm' && code !== 'native') {\n    status.error(conf, 'Missing issuer for asset: ' + code, 'throw')\n  }\n}\n\ncheck.assetsArray = function (conf, assetsArray) {\n  let isValid = true\n  for (let index in assetsArray) {\n    try {\n      check.asset(conf, assetsArray[index])\n    } catch (error) {\n      console.log(error)\n      isValid = false\n    }\n  }\n  if (!isValid) throw new Error('Invalid assets array')\n}\n\ncheck.boolean = function (conf, boolean) {\n  if (typeof boolean !== 'boolean') {\n    status.error(conf, 'Invalid boolean: ' + boolean, 'throw')\n  }\n}\n\ncheck.date = function (conf, date) {\n  if (isNaN(Date.parse(date))) {\n    status.error(conf, 'Invalid date: ' + date, 'throw')\n  }\n}\n\ncheck.flags = function (conf, flags) {\n  check.integer(conf, flags, 'flags', 0, 7)\n}\n\ncheck.hash = function (conf, hash) {\n  if (hash.length !== 64 || !hash.match(/[0-9a-f]*/)) {\n    status.error(conf, 'Invalid hash:' + hash, 'throw')\n  }\n}\n\ncheck.price = function (conf, price) {\n  if (typeof price === 'object') {\n    try {\n      check.price(null, price.n)\n      check.price(null, price.d)\n    } catch (error) {\n      status.error(conf, 'Invalid price: ' + price, 'throw')\n    }\n  } else {\n    check.number(conf, price, 'price', 0)\n  }\n}\n\ncheck.signer = function (conf, signer) {\n  check.weight(conf, signer.weight)\n  switch (signer.type) {\n    case 'key':\n      check.address(conf, signer.value)\n      break\n    case 'hash':\n    case 'tx':\n      check.hash(conf, signer.value)\n      break\n    default:\n      status.error(conf, 'Invalid signer type: ' + signer.type, 'throw')\n  }\n}\n\ncheck.sequence = function (conf, sequence) {\n  check.number(conf, sequence, 'sequence', 0)\n}\n\ncheck.threshold = function (conf, threshold) {\n  check.integer(conf, threshold, 'threshold', 0, 255)\n}\n\ncheck.weight = function (conf, weight) {\n  check.integer(conf, weight, 'weight', 0, 255)\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","'use strict'\n/**\n * Contains the methods to convert data from *{@see Transaction}* format to\n * *Tdesc* format.\n *\n * @private\n * @exports destruct\n */\nconst destruct = exports\n\nconst normalize = require('./normalize')\nconst specs = require('./specs')\n\n/**\n * Convert `tx` into *Tdesc*.\n *\n * @param {Transaction} tx\n * @param {Object} options\n * @return {Object} A tdesc\n */\ndestruct.transaction = function (conf, tx, options = {}) {\n  const tdesc = {}\n\n  if (tx.source === specs.neutralAccountId) options.stripSource = true\n  if (tx.sequence === '0') options.stripSequence = true\n\n  if (options.network !== undefined) tdesc.network = options.network\n  if (!options.stripSource) tdesc.source = tx.source\n  if (!options.stripSignatures && !options.stripSequence) {\n    tdesc.sequence = destruct.sequence(conf, tx.sequence)\n  }\n\n  if (tx._memo._switch.name !== 'memoNone') tdesc.memo = destruct.memo(conf, tx._memo)\n  if (tx.timeBounds) {\n    if (tx.timeBounds.minTime) tdesc.minTime = destruct.date(conf, tx.timeBounds.minTime)\n    if (tx.timeBounds.maxTime) tdesc.maxTime = destruct.date(conf, tx.timeBounds.maxTime)\n  }\n  tdesc.fee = tx.fee\n\n  /// Work around a bug in stellar-sdk 0.11\n  /// https://github.com/stellar/js-stellar-sdk/issues/204\n  tdesc.operations = []\n  for (let index in tx.operations) {\n    const op = tx.operations[index]\n    if (op.homeDomain === null) {\n      const optree = tx.tx._attributes.operations[index]\n      op.homeDomain = optree._attributes.body._value._attributes.homeDomain\n    }\n    tdesc.operations[index] = destruct.operation(conf, op)\n  }\n  // tdesc.operations = tx.operations.map(op => destruct.operation(conf, op))\n\n  normalize.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/**\n * Convert `op` into odesc format.\n *\n * @param {Object} op A StellarSdk Operation\n * @return {Object} An odesc\n */\ndestruct.operation = function (conf, op) {\n  const odesc = {}\n\n  for (let field in op) {\n    if (field === 'type') odesc.type = op.type\n    else if (field === 'line') odesc.asset = op.line\n    else odesc[field] = destruct.field(conf, field, op[field])\n  }\n\n  normalize.odesc(conf, odesc)\n  return odesc\n}\n\n/******************************************************************************/\n\n/**\n * Destruct `value` according to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\ndestruct.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return destruct.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Destruct `value` using the destructuring function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\ndestruct.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value\n  else return destruct[type](conf, value)\n}\n\n/******************************************************************************/\n\ndestruct.asset = function (conf, asset) {\n  return Object.assign({}, asset)\n}\n\ndestruct.assetPath = function (conf, assetPath) {\n  return assetPath.map(asset => destruct.asset(asset))\n}\n\ndestruct.buffer = function (conf, buffer) {\n  if (buffer) return buffer.toString()\n  else return null\n}\n\ndestruct.date = function (conf, timestamp) {\n  return new Date(timestamp * 1000).toISOString()\n}\n\ndestruct.memo = function (conf, sdkMemo) {\n  const memo = {}\n  if (sdkMemo._switch.name !== 'memoNone') {\n    memo.type = sdkMemo._arm\n    if (memo.type === 'hash' || memo.type === 'retHash') {\n      memo.value = sdkMemo._value.toString('hex')\n      if (memo.type === 'retHash') memo.type = 'return'\n    } else {\n      memo.value = sdkMemo._value.toString()\n    }\n  }\n  return memo\n}\n\ndestruct.sequence = function (conf, sdkSequence) {\n  return sdkSequence.toString()\n}\n\ndestruct.signer = function (conf, sdkSigner) {\n  const signer = { weight: sdkSigner.weight }\n  if (sdkSigner.ed25519PublicKey) {\n    signer.type = 'key'\n    signer.value = sdkSigner.ed25519PublicKey\n  } else if (sdkSigner.sha256Hash) {\n    signer.type = 'hash'\n    signer.value = sdkSigner.sha256Hash.toString('hex')\n  } else if (sdkSigner.preAuthTx) {\n    signer.type = 'tx'\n    signer.value = sdkSigner.preAuthTx.toString('hex')\n  }\n  return signer\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","'use strict'\n/**\n * Contains methods to format a `transaction descriptor` into CSS/HTML for\n * display in browser.\n *\n * @private\n * @exports format\n */\nconst format = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst html = require('@cosmic-plus/jsutils/html')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst event = require('./event')\nconst resolve = require('./resolve')\nconst signersUtils = require('./signers-utils')\nconst specs = require('./specs')\n\n/**\n * Returns an HTML div describing `tdesc`.\n *\n * @param {Object} tdesc Transaction descriptor.\n * @return {HTMLElement} Transaction HTML description.\n */\nformat.tdesc = function (conf, tdesc) {\n  const trNode = html.create('div', '.cosmiclib_transactionNode')\n  if (!tdesc) return trNode\n\n  let infoNode\n  specs.transactionOptionalFields.forEach(entry => {\n    if (tdesc[entry]) {\n      if (!infoNode) infoNode = html.create('ul', '.cosmiclib_sideInfo')\n      const lineNode = html.create('li', {},\n        specs.fieldDesc[entry] + ': ',\n        format.field(conf, entry, tdesc[entry])\n      )\n      html.append(infoNode, lineNode)\n    }\n  })\n  if (infoNode) html.append(trNode, infoNode)\n\n  /// Sort operations so that the ones with declared sources are at the end.\n  /// (makes data presentation better)\n  let operations = tdesc.operations.sort(entry => entry.source ? 1 : 0)\n\n  try {\n    for (let index in operations) {\n      const operation = tdesc.operations[index]\n      const opNode = format.odesc(conf, operation)\n      html.append(trNode, opNode)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n\n  return trNode\n}\n\n/**\n * Returns an HTML div describing `odesc`.\n *\n * @param {Object} odesc Operation in cosmic link JSON format.\n * @return {HTMLElement} Operation HTML description.\n */\nformat.odesc = function (conf, odesc) {\n  const opNode = html.create('div', '.cosmiclib_operation')\n\n  if (odesc.source) {\n    html.appendClass(opNode, 'cosmiclib_sourcedOperation')\n    const sourceNode = html.create('div', '.cosmiclib_sideInfo', 'Source: ')\n    const addressNode = format.address(conf, odesc.source)\n    html.append(sourceNode, addressNode)\n    html.append(opNode, sourceNode)\n  }\n\n  let meaning = operationMeaning(odesc)\n  while (meaning) {\n    if (meaning.substr(0, 1) === '{') {\n      const query = meaning.substr(1).replace(/}.*/, '')\n      meaning = meaning.replace(/^[^}]*}/, '')\n      if (query === 'newline') {\n        if (meaning === '') break\n        html.append(opNode, html.create('br'))\n      } else {\n        const fieldNode = format.field(conf, query, odesc[query])\n        html.append(opNode, fieldNode)\n      }\n    } else {\n      const txt = meaning.replace(/{.*/, '')\n      meaning = meaning.replace(/^[^{]*/, '')\n      html.append(opNode, txt)\n    }\n  }\n  return opNode\n}\n\n/**\n * Returns a string describing `odesc`.\n *\n * @private\n */\nfunction operationMeaning (odesc) {\n  let msg\n  switch (odesc.type) {\n    case 'accountMerge':\n      return 'Merge account inside {destination}'\n    case 'allowTrust':\n      if (odesc.authorize) {\n        return 'Allow usage of your asset {assetCode} to {trustor}'\n      } else {\n        return 'Deny usage of your asset {assetCode} to {trustor}'\n      }\n    case 'bumpSequence':\n      return 'Set account sequence number to {bumpTo}'\n    case 'changeTrust':\n      if (odesc.limit === '0') {\n        return 'Refuse asset {asset}'\n      } else if (odesc.limit) {\n        return 'Set holding limit as {limit} for asset {asset}'\n      } else {\n        return 'Accept asset {asset}'\n      }\n    case 'createAccount':\n      return 'Create account {destination} and send it {startingBalance} XLM'\n    case 'createPassiveOffer':\n      return 'Passive offer of {amount} {selling} at {price} {buying} / unit'\n    case 'inflation':\n      return 'Run inflation'\n    case 'manageData':\n      if (odesc.value) {\n        return \"Set data entry '{name}' as '{value}'\"\n      } else {\n        return \"Delete data entry '{name}'\"\n      }\n    case 'manageOffer':\n      if (!odesc.offerId || odesc.offerId === '0') {\n        return 'Offer {amount} {selling} at {price} {buying} / unit'\n      } else if (odesc.amount !== '0') {\n        return \"Change offer '{offerId}' to: offer {amount} {selling} at \" +\n          '{price} {buying} / unit'\n      } else {\n        return \"Delete offer '{offerId}'\"\n      }\n    case 'pathPayment':\n      msg = 'Send {destAmount} {destAsset} to {destination} for a maximum ' +\n        'of {sendMax} {sendAsset}'\n      if (odesc.path) msg += ' using conversion path: {path}'\n      return msg\n    case 'payment':\n      return 'Send {amount} {asset} to {destination}'\n    case 'setOptions':\n      msg = ''\n      if (odesc.inflationDest) {\n        msg += 'Set inflation destination to: {inflationDest}{newline}'\n      }\n      if (odesc.clearFlags) msg += 'Clear flag(s): {clearFlags}{newline}'\n      if (odesc.setFlags) msg += 'Set flag(s): {setFlags}{newline}'\n      if (odesc.masterWeight) {\n        if (odesc.masterWeight === '0') {\n          msg += 'Delete master key{newline}'\n        } else {\n          msg += 'Set master key weight at: {masterWeight}{newline}'\n        }\n      }\n      ['lowThreshold', 'medThreshold', 'highThreshold'].forEach(field => {\n        if (odesc[field]) msg += 'Set ' + field + ' at: {' + field + '}{newline}'\n      })\n      if (odesc.signer) {\n        if (odesc.signer.type === 'tx') {\n          if (odesc.signer.weight === '0') msg += 'Remove pre-signed {signer}{newline}'\n          else msg += 'Pre-sign {signer}{newline}'\n        } else {\n          if (odesc.signer.weight === '0') msg += 'Remove signer: {signer}{newline}'\n          else msg += 'Set signer: {signer}{newline}'\n        }\n      }\n      if (odesc.homeDomain) msg += 'Set home domain: {homeDomain}{newline}'\n      if (odesc.homeDomain === '') msg += 'Unset home domain'\n      if (!msg) msg = 'Do nothing'\n      return msg\n    default:\n      throw new Error('Unknow operation: ' + odesc.type)\n  }\n}\n\n/**\n * Returns an HTML div describing `signers`.\n *\n * @param {Object} signers Signers object as returned by @see{resolve.signers}.\n * @return {HTMLElement} Signers HTML description\n */\nformat.signatures = function (conf, transaction) {\n  const signersNode = html.create('div', '.cosmiclib_signersNode')\n\n  signersUtils.for(conf, transaction).then(utils => {\n    if (utils.signersList.length < 2 && !utils.signatures.length) return\n\n    utils.sources.forEach(accountId => {\n      if (accountId !== specs.neutralAccountId) {\n        const div = makeAccountSignersNode(conf, utils, accountId)\n        html.append(signersNode, div)\n      }\n    })\n  })\n\n  return signersNode\n}\n\nfunction makeAccountSignersNode (conf, utils, accountId) {\n  const accountSignersNode = html.create('div')\n\n  const title = 'Signers for ' + helpers.shorter(accountId)\n  const titleNode = html.create('span', '.cosmiclib_threshold', title)\n  const listNode = html.create('ul', '.cosmiclib_signers')\n  html.append(accountSignersNode, titleNode, listNode)\n\n  utils.signers[accountId].forEach(signer => {\n    const signerNode = format.signer(conf, signer)\n    const lineNode = html.create('li', null, signerNode)\n    if (utils.hasSigned(signer.key)) {\n      html.appendClass(lineNode, 'cosmiclib_signed')\n      listNode.insertBefore(lineNode, listNode.firstChild)\n    } else {\n      html.append(listNode, lineNode)\n    }\n  })\n\n  return accountSignersNode\n}\n\n/******************************************************************************/\n\n/**\n * Returns an HTML div describing `field` `value`.\n *\n * @param {string} field The field name of `value` as defined in `spec.js`.\n * @param {*} value The value of `field`.\n * @return {HTLMElement} `field` `value` HTML description\n */\nformat.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) throw new Error('Unknow field: ' + field)\n\n  const domNode = format.type(conf, type, value)\n  domNode.field = field\n  if (field !== type) html.appendClass(domNode, 'cosmiclib_' + field)\n\n  return domNode\n}\n\nformat.type = function (conf, type, value) {\n  if (typeof value === 'object' && value.error) type = 'error'\n  const formatter = process[type] || process.string\n  const domNode = formatter(conf, value)\n  domNode.className = 'cosmiclib_' + type\n\n  const eventObject = {\n    conf: conf,\n    type: type,\n    value: value,\n    domNode: domNode\n  }\n  if (conf.constructor.name === 'CosmicLink') eventObject.cosmicLink = conf\n  domNode.onclick = () => event.callClickHandler(conf, type, eventObject)\n  return domNode\n}\n\n/// Provide a format method for each data type.\nspecs.types.forEach(type => {\n  format[type] = (conf, value) => format.type(conf, type, value)\n})\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.string = function (conf, string) {\n  if (typeof string !== 'string') string = string + ''\n  return html.create('span', null, string)\n}\n\nprocess.error = function (conf, errDesc) {\n  const errorNode = html.create('span', '.cosmiclib_error')\n  errorNode.textContent = errDesc.value === '' ? '(undefined)' : errDesc.value\n  errorNode.title = errDesc.error.message\n  return errorNode\n}\n\nprocess.address = function (conf, address) {\n  const addressNode = html.create('span',\n    { title: 'Resolving...' },\n    helpers.shorter(address),\n    html.create('span', '.cosmiclib_loadingAnim')\n  )\n\n  resolveAddressAndUpdate(conf, address, addressNode)\n  return addressNode\n}\n\nasync function resolveAddressAndUpdate (conf, address, addressNode) {\n  try {\n    const account = await resolve.address(conf, address)\n\n    addressNode.title = account.account_id\n    if (account.memo) {\n      addressNode.title += `\\nMemo (${account.memo_type}): ${account.memo}`\n    }\n\n    if (account.address) addressNode.textContent = account.address\n    else if (account.alias) addressNode.textContent = account.alias\n\n    addressNode.extra = account\n  } catch (error) {\n    addressNode.title = \"Can't resolve address\"\n    html.appendClass(addressNode, 'cosmiclib_error')\n\n    const parent = addressNode.parentNode\n    if (parent.classList.contains('cosmiclib_assetIssuer')) {\n      parent.style.display = 'inline'\n    }\n  }\n\n  const animation = html.grab('.cosmiclib_loadingAnim', addressNode)\n  if (animation) html.destroy(animation)\n  const grandpa = addressNode.parentNode.parentNode\n  if (grandpa && grandpa.classList.contains('cosmiclib_asset')) {\n    html.destroy(html.grab('.cosmiclib_loadingAnim', grandpa))\n  }\n}\n\nprocess.asset = function (conf, asset) {\n  const codeNode = format.field(conf, 'assetCode', asset.code)\n  const issuerNode = html.create('span', null, ' issued by ')\n  const assetNode = html.create('span', null, codeNode, issuerNode)\n  issuerNode.style.display = 'none'\n\n  if (asset.issuer) {\n    codeNode.title = 'Issued by ' + asset.issuer\n    html.append(issuerNode, format.field(conf, 'assetIssuer', asset.issuer))\n    html.append(codeNode, html.create('span', '.cosmiclib_loadingAnim'))\n  } else {\n    codeNode.title = 'Native asset'\n    html.append(issuerNode, ' native asset')\n  }\n\n  codeNode.onclick = () => {\n    if (issuerNode.style.display === 'inline') issuerNode.style.display = 'none'\n    else issuerNode.style.display = 'inline'\n  }\n\n  return assetNode\n}\n\nprocess.assetsArray = function (conf, assetsArray) {\n  const assetsArrayNode = html.create('span')\n  for (let i = 0; i < assetsArray.length; i++) {\n    if (i !== 0) html.append(assetsArrayNode, ', ')\n    html.append(assetsArrayNode, format.asset(conf, assetsArray[i]))\n  }\n\n  return assetsArrayNode\n}\n\nprocess.date = function (conf, date) {\n  return html.create('span', {}, new Date(date).toLocaleString())\n}\n\nprocess.hash = function (conf, hash) {\n  return html.create('span', { title: hash }, helpers.shorter(hash))\n}\n\nprocess.id = process.hash\n\nprocess.flags = function (conf, flags) {\n  let string = ''\n  if (flags >= 4) {\n    string = 'immutable'\n    flags = flags - 4\n  }\n  if (flags >= 2) {\n    if (string) string = ', ' + string\n    string = 'revocable' + string\n    flags = flags - 2\n  }\n  if (+flags === 1) {\n    if (string) string = ', ' + string\n    string = 'required' + string\n  }\n\n  return html.create('span', {}, string)\n}\n\nprocess.memo = function (conf, memo) {\n  const typeNode = format.field(conf, 'memoType', memo.type)\n  let valueNode\n  switch (memo.type) {\n    case 'text':\n      valueNode = format.field(conf, 'memoText', memo.value)\n      break\n    case 'id':\n      valueNode = format.field(conf, 'memoId', memo.value)\n      break\n    case 'hash':\n      valueNode = format.field(conf, 'memoHash', memo.value)\n      break\n    case 'return':\n      valueNode = format.field(conf, 'memoReturn', memo.value)\n  }\n  return html.create('span', {}, '(', typeNode, ') ', valueNode)\n}\n\nprocess.price = function (conf, price) {\n  if (typeof price === 'string') {\n    return html.create('span', {}, price)\n  } else {\n    return html.create('span', {}, price.n / price.d + '')\n  }\n}\n\nprocess.signer = function (conf, signer) {\n  const signerNode = html.create('span')\n  switch (signer.type) {\n    case 'key':\n    case 'ed25519_public_key':\n      const value1 = signer.value || signer.key\n      html.append(signerNode, 'Account ', format.field(conf, 'signerKey', value1))\n      break\n    case 'tx':\n      const value2 = signer.value || signer.key\n      html.append(signerNode, 'transaction ', format.field(conf, 'signerTx', value2))\n      break\n    case 'hash':\n    case 'sha256hash':\n      const value3 = signer.value || StellarSdk.StrKey.decodeSha256Hash(signer.key).toString('hex')\n      html.append(signerNode, 'key whose hash is ', format.field(conf, 'signerHash', value3))\n      break\n  }\n  if (signer.weight > 1) {\n    const weightNode = format.weight(conf, signer.weight)\n    html.append(signerNode, ' (weight: ', weightNode, ')')\n  }\n  return signerNode\n}\n","'use strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\nif (env.isBrowser) require('@cosmic-plus/jsutils/polyfill')\n\n/**\n * Automatically pass `config` to `module` functions as first argument.\n *\n * @param {Object} config A configuration object similar than config.js module.\n * @param {Object} module A cosmic-lib module whose functions takes config as the\n *   first argument.\n * @private\n */\nfunction exposeModule (config, module) {\n  const layer = Object.assign({}, module)\n  helpers.setHiddenProperty(layer, '_config', config)\n  for (let name in module) {\n    if (typeof module[name] === 'function') {\n      layer[name] = function (...params) { return module[name](this._config, ...params) }\n    } else {\n      layer[name] = module[name]\n    }\n  }\n  return layer\n}\n\n/**\n * Create a clone of the library with an alternative config object derived from\n * **params**. Fields which are not defined in **params** stay in sync with parent\n * configuration.\n *\n * @example\n * const testnet = cosmicLib.withConfig({ network: 'test' })\n * const account = await testnet.resolve.account('tips*cosmic.link')\n *\n * @params {Object} params Alternative configuration\n * @return {Object} A clone of cosmicLib\n */\nexports.withConfig = function (params) {\n  const library = Object.create(this)\n  library.config = Object.assign({}, this.config, params)\n\n  for (let module in this) {\n    if (this[module].prototype && this[module].prototype.__proto__ === this.config) {\n      library[module] = class extends this[module] {}\n      Object.assign(library[module].prototype, this[module].prototype)\n      library[module].prototype.__proto__ = library.config\n    } else if (this[module]._config) {\n      library[module] = Object.create(this[module])\n      helpers.setHiddenProperty(library[module], '_config', library.config)\n    }\n  }\n\n  return library\n}\n\n/// Export modules.\n\nconst config = exports.config = require('./config')\nexports.CosmicLink = require('./cosmiclink')\nexports.load = env.isBrowser && exposeModule(config, require('./load'))\nexports.resolve = exposeModule(config, require('./resolve'))\nexports.signersUtils = exposeModule(config, require('./signers-utils'))\nexports.specs = require('./specs')\n","'use_strict'\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined')\n      }\n\n      var o = Object(this)\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function')\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1]\n\n      // 5. Let k be 0.\n      var k = 0\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k]\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue\n        }\n        // e. Increase k by 1.\n        k++\n      }\n\n      // 7. Return undefined.\n      return undefined\n    },\n    configurable: true,\n    writable: true\n  })\n}\n\n/// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nif (typeof Object.assign !== 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign (target, varArgs) { // .length of function is 2\n      'use strict'\n      if (target == null) { // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object')\n      }\n\n      var to = Object(target)\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index]\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey]\n            }\n          }\n        }\n      }\n      return to\n    },\n    writable: true,\n    configurable: true\n  })\n}\n","'use_strict'\n/**\n * Aliases handlers & most known Stellar addresses.\n *\n * @private\n * @exports aliases\n */\nconst aliases = exports\n\n/**\n * Add new **aliases** or replace existing ones.\n *\n * @example\n * cosmicLib.config.addAliases({\n *   'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n *   'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io'\n * })\n *\n * @param {Object} aliases An object such as `{ publicKey1: name1, ..., publicKeyN: nameN }`\n */\naliases.add = function (conf, aliases) {\n  conf.aliases = Object.assign(conf.aliases, aliases)\n}\n\n/**\n * Remove **publicKeys** from aliases list.\n *\n * @example\n * cosmicLib.config.removeAliases([\n *  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP',\n *  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5',\n * ])\n *\n * @param {Array} publicKeys An array of public keys\n */\naliases.remove = function (conf, publicKeys) {\n  publicKeys.forEach(entry => delete conf.aliases[entry])\n}\n\n/**\n * Aliases for most known anchors.\n */\naliases.anchors = {\n  'GAEDLNMCQZOSLY7Y4NW3DTEWQEVVCXYYMBDNGPPGBMQH4GFYECBI7YVK': 'anclax.com',\n  'GAEGOS7I6TYZSVHPSN76RSPIVL3SELATXZWLFO4DIAFYJF7MPAHFE7H4': 'apay.io',\n  'GAUTUYY2THLF7SGITDFMXJVYH3LHDSMGEAKSBU267M2K7A3W543CKUEF': 'apay.io',\n  'GBDEVU63Y6NTHJQQZIKVTC23NWLQVP3WJ2RI2OTSJTNYOIGICST6DUXR': 'apay.io',\n  'GC5LOR3BK6KIOK7GKAUD5EGHQCMFOGHJTC7I3ELB66PTDFXORC2VM5LP': 'apay.io',\n  'GAUWES2POH347NNJGRI4OBM34LMOCMWSTZ3RAOZMOBH4PFVBWFMHLNTC': 'astral9.io',\n  'GBRPTWEZTUKYM6VJXLHXBFI23M2GSY3TCVIQSZKFQLMOJXH7VPDGKBDP': 'charnatoken.top',\n  'GBUQWP3BOUZX34TOND2QV7QQ7K7VJTG6VSE7WMLBTMDJLLAW7YKGU6EP': 'coins.asia',\n  'GDPFSEBZO2W4TLWZO7FIMMG3QONHXYVF6LUULI6HUJS6PJLE4TRZEXLF': 'collective21.org',\n  'GABSZVZBYEO5F4V5LZKV7GR4SAJ5IKJGGOF43BIN42FNDUG7QPH6IMRQ': 'cryptomover.com',\n  'GBWZHAVWY23QKKDJW7TXLSIHY5EX4NIB37O4NMRKN2SKNWOSE5TEPCY3': 'cryptomover.com',\n  'GCVBUIXKKLH2DYHZRSLZUIZSVJUL74RTW6FVCCEYB2OE3RH7RVDBPCFG': 'cryptomover.com',\n  'GDBCHKTHJUKDGSIQSTBUXFWVP3QVART5LED6KRZQ5X4Z5WLT4BGYXWCI': 'cryptomover.com',\n  'GDU2FEL6THGGOFDHHP4I5FHNWY4S2SXYUBCEDB5ZREMD6UFRT4SYWSW2': 'cryptomover.com',\n  'GD7UVDDJHJYKUXB4SJFIC6VJDQ4YADQCMRN3KLHJFV4H6NIUAEREVCO7': 'cryptotari.io',\n  'GCGEQJR3E5BVMQYSNCHPO6NPP3KOT4VVZHIOLSRSNLE2GFY7EWVSLLTN': 'equid.co',\n  'GCC4YLCR7DDWFCIPTROQM7EB2QMFD35XRWEQVIQYJQHVW6VE5MJZXIGW': 'flutterwave.com',\n  'GC75WHUIMU7LV6WURMCA5GGF2S5FWFOK7K5VLR2WGRKWKZQAJQEBM53M': 'frasindo.com',\n  'GCYK67DDGBOANS6UODJ62QWGLEB2A7JQ3XUV25HCMLT7CI23PMMK3W6R': 'golix.io',\n  'GBBRMEXJMS3L7Y3DZZ2AHBD545GZ72OAEHHEFKGZAHHASHGWMHK5P6PL': 'irene.energy',\n  'GD2RRX6BKVTORZ6RIMBLWFVUOAYOLTS2QFJQUQPXLI3PBHR3TMLQNGZX': 'liquido.i-server.org',\n  'GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH': 'mobius.network',\n  'GAKBPBDMW6CTRDCXNAPSVJZ6QAN3OBNRG6CWI27FGDQT2ZJJEMDRXPKK': 'moni.com',\n  'GATEMHCCKCY67ZUCKTROYN24ZYT5GK4EQZ65JJLDHKHRUZI3EUEKMTCH': 'naobtc.com',\n  'GAXELY4AOIRVONF7V25BUPDNKZYIVT6CWURG7R2I6NQU26IQSQODBVCS': 'naobtc.com',\n  'GDGKBRCPW4C3ENNC5C64PE6U33MG52GBKFXOK5P3OSWF74DAOXRXV6OJ': 'nezly.com',\n  'GDPB3BGHJAHAKVIWUNLST7N6OGZ73W6AUAI7QDZJW26LEWL46VDAKBH6': 'old.repocoin.io',\n  'GCVWTTPADC5YB5AYDKJCTUYSCJ7RKPGE4HT75NIZOUM4L7VRTS5EKLFN': 'old.sureremit.co',\n  'GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY': 'pedity.com',\n  'GAZPKDTEZ5UM3BF4E7FL7EMXRMLH76F2TNVXRLOF6SCVXOFWSPCEWFI5': 'pr.network',\n  'GCZNF24HPMYTV6NOEHI7Q5RJFFUI23JKUKY3H3XTQAFBQIBOHD5OXG3B': 'repocoin.io',\n  'GAREELUB43IRHWEASCFBLKHURCGMHE5IF6XSE7EXDLACYHGRHM43RFOX': 'ripplefox.com',\n  'GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z': 'six.network',\n  'GCKA6K5PCQ6PNF5RQBF7PQDJWRHO6UOGFMRLK3DYHDOI244V47XKQ4GP': 'smartlands.io',\n  'GBVOL67TMUQBGL4TZYNMY3ZQ5WGQYFPFD5VJRWXR72VA33VFNL225PL5': 'stellarport.io',\n  'GAFXX2VJE2EGLLY3EFA2BQXJADAZTNR7NC7IJ6LFYPSCLE7AI3AK3B3M': 'stemchain.io',\n  'GBSTRH4QOTWNSVA6E4HFERETX4ZLSR3CIUBLK7AXYII277PFJC4BBYOG': 'stronghold.co',\n  'GBSTRUSD7IRX73RQZBL3RQUH6KS3O4NYFY3QCALDLZD77XMZOPWAVTUK': 'stronghold.co',\n  'GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI': 'superlumen.org',\n  'GDEGOXPCHXWFYY234D2YZSPEJ24BX42ESJNVHY5H7TWWQSYRN5ZKZE3N': 'sureremit.co',\n  'GAP5LETOV6YIE62YAM56STDANPRDO7ZFDBGSNHJQIYGGKSMOZAHOOS2S': 'tempo.eu.com',\n  'GDGQDVO6XPFSY4NMX75A7AOVYCF5JYGW2SHCJJNWCQWIDGOZB53DGP6C': 'ternio.io',\n  'GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3': 'thefutbolcoin.io',\n  'GCLRUZDCWBHS7VIFCT43BARPP63BHR32HMEVKXYQODA5BU6SIGFK4HL2': 'tonaira.com',\n  'GBFJGO46OV6E2QS2ZUMCF256ZL4BFOZWFHULRNLPSPW47HH5HFAKJTON': 'tontinetrust.com',\n  'GA7FCCMTTSUIC37PODEL6EOOSPDRILP6OQI5FWCWDDVDBLJV72W6RINZ': 'vcbear.net',\n  'GBVAOIACNSB7OVUXJYC5UE2D4YK2F7A24T7EE5YOMN4CE6GCHUTOUQXM': 'vcbear.net',\n  'GDXTJEK4JZNSTNQAWA53RZNS2GIKTDRPEUWDXELFMKU52XNECNVDVXDI': 'vcbear.net',\n  'GCNHYZLBCSVZHSQJ2DOIBHYBF4J24DJYGS5QKURX4AGSLBK6SDJOYWIN': 'winsome.gift',\n  'GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM': 'ximcoin.com',\n  'GAO4DADCRAHA35GD6J3KUNOB5ELZE5D6CGPSJX2WBMEQV7R2M4PGKJL5': 'xirkle.com'\n}\n\naliases.destinations = {\n  'GDZCEWJ5TVXUTFH6V5CVDQDE43KRXYUFRHKI7X64EWMVOVYYZJFWIFQ2': 'AEX',\n  'GAHK7EEG2WWHVKDNT4CEQFZGKF2LGDSW2IVM4S5DP42RBW3K6BTODB4A': 'Binance',\n  'GCO2IP3MJNUOKS4PUDI4C7LGGMQDJGXG3COYX3WSB4HHNAHKYV5YL3VC': 'Binance',\n  'GAWPTHY6233GRWZZ7JXDMVXDUDCVQVVQ2SXCSTG3R3CNP5LQPDAHNBKL': 'Bitfinex',\n  'GB6YPGW5JFMMP2QB2USQ33EUWTXVL4ZT5ITUNCY3YKVWOJPP57CANOF3': 'Bittrex',\n  'GB7GRJ5DTE3AA2TCVHQS2LAD3D7NFG7YLTOEWEBVRNUUI2Q3TJ5UQIFM': 'BTC38',\n  'GBV4ZDEPNQ2FKSPKGJP2YKDAIZWQ2XKRQD4V4ACH3TCTFY6KPY3OAVS7': 'Changelly',\n  'GBKTJSNUSR6OCXA5WDWGT33MNSCNQHOBQUBYC7TVS7BOXDKWFNHI4QNH': 'Exrates',\n  'GDRSWSKJCIB6Z65UA7W5RG62A7M5K3A5IHMED6DYHLPLWLVQCOOGDQ7S': 'Gate.io',\n  'GCXDR4QZ4OTVX6433DPTXELCSEWQ4E5BIPVRRJMUR6M3NT4JCVIDALZO': 'GOPAX',\n  'GC4KAS6W2YCGJGLP633A6F6AKTCV4WSLMTMIQRSEQE5QRRVKSX7THV6S': 'Indodax',\n  'GBTBVILDGCOIK26EPEHYCMKM7J5MTQ4FD5DO37GVTTBP45TVGRAROQHP': 'KOINEX',\n  'GA5XIGA5C7QTPTWXQHY6MCJRMTRZDOSHR6EFIBNDQTCQHG262N4GGKTM': 'Kraken',\n  'GCCD6AJOYZCUAQLX32ZJF2MKFFAUJ53PVCFQI3RHWKL3V47QYE2BNAUT': 'Lumenaut Inflation',\n  'GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH': 'Mobius Issuer',\n  'GBTCBCWLE6YVTR5Y5RRZC36Z37OH22G773HECWEIZTZJSN4WTG3CSOES': 'NaoBTC',\n  'GBOEEVARKVASOQSSXCAHNTGJTVALJE2QM3AQQ2K3VXACQ6JJREQRJZKB': 'OKEX',\n  'GBR3RS2Z277FER476OFHFXQJRKYSQX4Z7XNWO65AN3QPRUANUASANG3L': 'PapayaBot',\n  'GBGVRE5DH6HGNYNLWQITKRQYGR4PWQEH6MOE5ELPY3I4XJPTZ7CVT4YW': 'PapayaSwap',\n  'GBVUDZLMHTLMZANLZB6P4S4RYF52MVWTYVYXTQ2EJBPBX4DZI2SDOLLY': 'Pedity Issuer',\n  'GBQWA6DU6OXHH4AVTFCONQ76LHEWQVZAW7SFSW4PPCAI2NX4MJDZUYDW': 'Piiko',\n  'GCGNWKCJ3KHRLPM3TM6N7D3W5YKDJFL6A2YCXFXNMRTZ4Q66MEMZ6FI2': 'Poloniex',\n  'GCZYLNGU4CA5NAWBAVTHMZH4JXWKP2OUJ6OK3I7XXZCNA5622WUJVLTG': 'RMT swap',\n  'GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD': 'Stellar Guard',\n  'GDCHDRSDOBRMSUDKRE2C4U4KDLNEATJPIHHR2ORFL5BSD56G4DQXL4VW': 'StellarTerm Inflation',\n  'GCEGERI7COJYNNID6CYSKS5DPPLGCCLPTOSCDD2LG5SJIVWM5ISUPERI': 'Superlumen Issuer',\n  'GBZ35ZJRIKJGYH5PBKLKOZ5L6EXCNTO7BKIL7DAVVDFQ2ODJEEHHJXIM': 'XIM'\n}\n\n/**\n * Aliases handlers & most known Stellar addresses. Aliases takes the form:\n *\n * ```js\n * {\n *   'publicKey1': 'name1',\n *   'publicKey2': 'name2',\n *    ...\n *   'publicKeyN': 'nameN'\n * }\n * ```\n *\n * Aliases are only used as a displaying sugar and can't be used as a\n * replacement for federated address as it would lead to security issues.\n */\naliases.all = Object.assign({}, aliases.anchors, aliases.destinations)\n","'use_strict'\n\nconst env = require('@cosmic-plus/jsutils/env')\nconst helpers = require('@cosmic-plus/jsutils/misc')\n\nconst action = require('./action')\nconst config = require('./config')\nconst convert = require('./convert')\nconst parse = require('./parse')\nconst resolve = require('./resolve')\nconst status = require('./status')\n\n/// Web only\nlet html, format\nif (env.isBrowser) {\n  html = require('@cosmic-plus/jsutils/html')\n  format = require('./format')\n}\n\n/**\n * | Formats                                     | Data                               | Actions                                        | Editor                                       | HTML elements\n * |---------------------------------------------|------------------------------------|------------------------------------------------|----------------------------------------------|----------------------------------------\n * |-----------------------|-----------------------|-----------------------|-----------------------|-----------------------\n * | [uri]{@link CosmicLink#uri}                 |[page]{@link CosmicLink#page}       |[selectNetwork]{@link CosmicLink#selectNetwork} |[parse]{@link CosmicLink#parse}               |[htmlDescription]{@link CosmicLink#htmlDescription}\n * | [query]{@link CosmicLink#query}             |[network]{@link CosmicLink#network} |await [lock]{@link CosmicLink#lock}             |[setTxFields]{@link CosmicLink#setTxFields}   |[htmlLink]{@link CosmicLink#htmlLink}\n * | [tdesc]{@link CosmicLink#tdesc}             |[source]{@link CosmicLink#source}   |[sign]{@link CosmicLink#sign}                   |[addOperation]{@link CosmicLink#addOperation} |\n * | [json]{@link CosmicLink#json}               |[status]{@link CosmicLink#status}   |await [send]{@link CosmicLink#send}             |[setOperation]{@link CosmicLink#setOperation}\n * | [transaction]{@link CosmicLink#transaction} |[errors]{@link CosmicLink#errors}   |\n * | [xdr]{@link CosmicLink#xdr}                 |[locker]{@link CosmicLink#locker}   |\n * | [sep7]{@link CosmicLink#sep7}               |[cache]{@link CosmicLink#cache}     |\n *\n * -----\n *\n * The **CosmicLink** class represents Stellar\n * [transactions]{@link https://stellar.org/developers/guides/concepts/transactions.html}\n * encoded in various formats. It allows to convert between those formats, to\n * edit the underlying transaction, to build it, to sign it and to send it to\n * the blockchain.\n *\n * There are 3 main formats from which the other are derived:\n *\n * * The StellarSdk [Transaction]{@link {@link https://stellar.github.io/js-stellar-sdk/Transaction.html}} object. (**transaction**)\n * * The CosmicLink, which is a transaction encoded as a query. (**query**)\n * * The Tdesc, which is an internal JSON-compatible format in-between those two.\n *   It is the easier format to work with. (**tdesc**)\n *\n * Those formats can be derived into other related formats:\n *\n * * The XDR, which's a base64 representation of StellarSdk Transaction. (**xdr**)\n * * The Sep-0007 link, in its XDR form. (**sep7**)\n * * The CosmicLink URL/URI, which is a page plus the query. (**uri**)\n * * The Tdesc JSON, which is its stringified version. (**json**)\n *\n * A CosmicLink object can be created from any of those formats. Some of the\n * other formats are immediately available, while others may need an\n * `await cosmicLink.lock()` operation to become computable:\n *\n * * If you create a CosmicLink from an **uri**, a **query**, a **tdesc** or a\n *   **json**, only those 4 formats are available at first. Transaction, xdr &\n *   sep7 will become available after a `cosmicLink.lock()`. (**free formats**)\n * * If you create a CosmicLink from a **transaction**, an **xdr** or a **sep7**,\n *   all formats will immediately be available. (**locked formats**)\n *\n * For a better efficiency, formats are lazy-evaluated. This means that they are\n * computed once only if/when you call them:\n *\n * ```js\n * const cosmicLink = new CosmicLink(xdr, { network: 'test' })\n * console.log(cosmicLink.query)\n * ```\n *\n * The role of `cosmicLink.lock()` is centric to this class. In practice, the\n * free formats don't have to be tied to a **network**, a **source** or a\n * **sequence number**. For example, the CosmicQuery `?inflation` is a valid\n * generic transaction that can be locked to any network/source/sequence\n * combination.\n *\n * On the other hand, locked formats are always tied to a particular combination\n * of those, hence the need for a **lock** command:\n *\n * ```js\n * const cosmicLink = new CosmicLink('?inflation')\n *\n * console.log(cosmicLink.tdesc.source)    // => undefined\n * console.log(cosmicLink.tdesc.network)   // => undefined\n * console.log(cosmicLink.tdesc.sequence)  // => undefined\n * console.log(cosmicLink.xdr)             // => undefined\n *\n * await cosmicLink.lock({ network: 'test', source: 'tips*cosmic.link' })\n *\n * console.log(cosmicLink.tdesc.source)    // => 'GC6Z...2JVW'\n * console.log(cosmicLink.tdesc.network)   // => 'test'\n * console.log(cosmicLink.tdesc.sequence)  // => 29...3903\n * console.log(cosmicLink.xdr)             // => 'AAAA....AA=='\n * ```\n *\n * The **lock** command is asynchronous because free formats accept\n * [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html},\n * but locked formats don't. The library automatically resolve\n * those and this is an asynchronous operation. At the same time, it downloads\n * the required data from the blockchain to handle multi-signers transactions.\n *\n * After the lock operation, all free formats are updated according to the new\n * state of the transaction. It is now possible to `cosmicLink.sign(keypair)`\n * it, and to `cosmicLink.send()` it to the blockchain.\n */\nclass CosmicLink {\n  /**\n   * Create a new CosmicLink object. **transaction** can be one of the accepted\n   * format: uri, query, json, tdesc, transaction, xdr or sep7.\n   *\n   * @constructor\n   * @param {string|Object|Transaction} transaction A transaction in one of\n   *  thoses formats: uri, query, json, tdesc, transaction, xdr, sep7\n   * @param {Object} options Additional options\n   * @param {string} options.page The base URI to use when converting transaction\n   *     to URI format.\n   * @param {string} options.network For Transaction/XDR formats, the network for\n   *     which it have been created\n   * @param {boolean} options.stripSignatures If set, will strip out signatures\n   *     from XDR/Transaction formats.\n   * @param {boolean} options.stripSequence If set, will strip out signatures\n   *     and sequence number from XDR/Transaction formats.\n   * @param {boolean} options.stripSource If set, will strip out signatures,\n   *     sequence number and transaction primary source account from\n   *     XDR/Transaction formats.\n   * @return {CosmicLink}\n   */\n  constructor (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /**\n   * Re-parse this CosmicLink. Useful in implementing transaction editors. The\n   * parameters are the same than [Constructor]{@link CosmicLink#Constructor},\n   * and the result is similar except that no new CosmicLink object is created.\n   */\n  parse (transaction, options) {\n    initCosmicLink(this, transaction, options)\n  }\n\n  /// Formats\n  /**\n   * A CosmicLink is a URI that embed a Cosmic [Query]{@link CosmicLink#query}.\n   * This format is simply the `cosmicLink.query` appended to the\n   * `cosmicLink.page`\n   */\n  get uri () {\n    if (this.query) return this.page + this.query\n  }\n\n  /**\n   * CosmicLink's transaction encoded in the Cosmic\n   * [Query]{@link tutorial:specs_query} format. This format allows to\n   * conveniently pass around Stellar transactions over any URI.\n   */\n  get query () {\n    if (!this._query) {\n      if (this.xdr) this._query = convert.xdrToQuery(this, this.xdr, { network: this.network })\n      else if (this.tdesc) this._query = convert.tdescToQuery(this, this.tdesc)\n      else return undefined\n    }\n    return this._query\n  }\n\n  /**\n   * CosmicLink's transaction in Tdesc format. This is in-between an objectified\n   * query representation and a simplified StellarSdk Transaction object. It has\n   * been created to be convenient to understand, use and manipulate.\n   *\n   * If you need to read the transaction parameters, this is the format of\n   * choice:\n   *\n   * ```js\n   * console.log(cosmicLink.tdesc.network) // Does the transaction enforce a network?\n   * console.log(cosmicLink.tdesc.source)  // Does the transaction enforce a source?\n   * console.log(cosmicLink.tdesc.memo)    // A simplified memo object or undefined\n   * console.log(cosmicLink.operations)    // Transaction operations in simplified format\n   * ```\n   *\n   * This formats authorize [federated addresses]{@link https://stellar.org/developers/guides/concepts/federation.html}\n   * everywhere StellarSdk Transaction accept public keys. Those addresses are\n   * resolved when running the [lock]{@link CosmicLink#lock} method, and the\n   * tdesc is replaced by a resolved one.\n   *\n   * Tdesc is also very convenient to edit. To keep the CosmicLink in sync, you\n   * either need to [parse]{@link CosmicLink#parse} the edited tdesc, or to edit\n   * it using the dedicated methods:\n   *\n   * * [setTxFields]{@link CosmicLink#setTxFields}: set/clear transaction fields\n   * * [addOperation]{@link CosmicLink#addOperation}: add a new operation\n   * * [setOperation]{@link CosmicLink#setOperation}: edit/clear an operation\n   */\n  get tdesc () {\n    if (!this._tdesc) {\n      if (this.transaction) this._tdesc = convert.transactionToTdesc(this, this.transaction, this.locker)\n      else return undefined\n    }\n    return this._tdesc\n  }\n\n  /**\n   * CosmicLink's transaction in JSON format. This is a stringified version of\n   * [Tdesc]{@link CosmicLink#tdesc} format.\n   */\n  get json () {\n    if (!this._json) this._json = convert.tdescToJson(this, this.tdesc)\n    return this._json\n  }\n\n  /**\n   * CosmicLink's transaction in StellarSdk\n   * [Transaction]{@link https://stellar.github.io/js-stellar-sdk/Transaction.html}\n   * format.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get transaction () {\n    return this._transaction\n  }\n\n  /**\n   * CosmicLink's transaction in\n   * [XDR]{@link https://stellar.org/developers/guides/concepts/xdr.html}\n   * format.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get xdr () {\n    if (!this._xdr) {\n      if (!this.transaction) return undefined\n      this._xdr = convert.transactionToXdr(this, this.transaction)\n    }\n    return this._xdr\n  }\n\n  /**\n   * CosmicLink transaction in\n   * [SEP-0007]{@link https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0007.md}\n   * link format. Only the XDR part of this protocol is currently supported by\n   * CosmicLink, minus the signature verification.\n   *\n   * If you created the CosmicLink from uri, query, tdesc or json format, a\n   * [lock()]{@link CosmicLink#lock} operation is needed to make this format\n   * available.\n   */\n  get sep7 () {\n    if (!this._sep7) {\n      if (!this.xdr) return undefined\n      this._sep7 = convert.xdrToSep7(this, this.xdr)\n    }\n    return this._sep7\n  }\n\n  /// Data\n  /**\n   * The page this CosmicLink uses to construct its [URI]{@link CosmicLink#uri}.\n   */\n  get page () {\n    return this._page || this.__proto__.page\n  }\n\n  set page (value) {\n    this._page = value\n  }\n\n  /**\n   * The source this CosmicLink uses, which is defined after the following\n   * rule:\n   *\n   * > transaction source OR locker source OR global configuration source OR neutral source\n   *\n   * When a transaction defines its source, it is available at\n   * `cosmicLink.tdesc.source`. The global configuration source is set at\n   * `cosmiclib.config.source`. The neutral source account is used to generate\n   * StellarSdk Transactions, XDR and Sep-0007 links when no source is given and\n   * is automatically removed when those format are parsed again.\n   */\n  get source () {\n    return (this.tdesc && this.tdesc.source) || this.__proto__.source\n  }\n\n  set source (source) {\n    this.setTxFields({ source: source })\n  }\n\n  /**\n   * The network this CosmicLink uses, which is defined after the following\n   * rule:\n   *\n   * > transaction network OR locker network OR global configuration network\n   *\n   * When a transaction defines its network, it is available at\n   * `cosmicLink.tdesc.network`. The global configuration network is set at\n   * `cosmiclib.config.network`.\n   */\n  get network () {\n    return (this.tdesc && this.tdesc.network) || this.__proto__.network\n  }\n\n  set network (network) {\n    this.setTxFields({ network: network })\n  }\n\n  /// Editor\n  /**\n   * Add/remove transaction fields and reparse the CosmicLink. **object** should\n   * follow the Tdesc format, but fields values can be written using query or\n   * StellarSdk format as well.\n   *\n   * @example\n   * cosmicLink.setTxFields({ minTime: '2018-10', maxTime: '2019-01' })\n   *\n   * @example\n   * cosmicLink.setTxFields({ minTime: null, maxTime: null })\n   *\n   * @example\n   * cosmicLink.setTxFields({ memo: 'Bonjour!' })\n   *\n   * @param {Object} object Transaction fields definition. Fields can be either\n   *   written using the JSON format or the query format\n   * @return {CosmicLink}\n   */\n  setTxFields (object) {\n    checkLock(this)\n    this.parse(Object.assign(this.tdesc, object))\n    return this\n  }\n\n  /**\n   * Add a new operation to CosmicLink. **params** should follow the Tdesc format,\n   * but fields values can be written using query or StellarSdk format as well.\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: 'CNY:admin*ripplefox' })\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: { code: 'CNY', issuer: 'admin*ripplefox } })\n   *\n   * @example\n   * cosmicLink.addOperation('changeTrust', { asset: new StellarSdk.Asset('CNY', ...) })\n   *\n   * @param {string} type The operation type.\n   * @param {Object} params The operation parameters.\n   * @return {CosmicLink}\n   */\n  addOperation (type, params) {\n    checkLock(this)\n    const odesc = Object.assign({ type: type }, params)\n    this.tdesc.operations.push(odesc)\n    this.parse(this.tdesc)\n    return this\n  }\n\n  /**\n   * Set/remove one of the CosmicLink operations. **params** should follow the\n   * Tdesc format, but fields can be written using query or StellarSdk format\n   * as well. If **type** is set to `null`, the operation at **index**\n   * is deleted.\n   *\n   * @example\n   * cosmicLink.setOperation(1, 'setOptions', { homeDomain: 'example.org' })\n   *\n   * @example\n   * cosmicLink.setOperation(2, null)\n   *\n   * @param {integer} index The operation index.\n   * @param {type} type  The operation type.\n   * @param {params} params The operation parameters.\n   * @return {CosmicLink}\n   */\n  setOperation (index, type, params) {\n    checkLock(this)\n    if (!this.tdesc.operations[index]) {\n      throw new Error(`Operation ${index} doesn't exists`)\n    }\n\n    if (type === null) {\n      this.tdesc.operations.splice(index, 1)\n    } else {\n      this.tdesc.operations[index] = Object.assign({ type: type }, params)\n      this.parse(this.tdesc)\n    }\n    return this\n  }\n\n  /// Actions\n  /**\n   * Select the network that this CosmicLink uses.\n   */\n  selectNetwork () { return resolve.useNetwork(this) }\n  lock (options) { return action.lock(this, options) }\n  sign (...keypairs_or_preimage) { return action.sign(this, ...keypairs_or_preimage) }\n  send (horizon) { return action.send(this, horizon) }\n\n  /**\n   * The HTML DOM node that displays a description of the current transaction.\n   * This is a browser-only property.\n   *\n   * If your HTML page contains an element with `id=\"cosmiclink_description\"`,\n   * it will automatically get populated with the description of the last\n   * CosmicLink created.\n   */\n  get htmlDescription () {\n    if (!this._htmlDescription) makeHtmlDescription(this)\n    return this._htmlDescription\n  }\n\n  /**\n   * A link HTML Element that points to `cosmicLink.uri`\n   */\n  get htmlLink () {\n    if (!this._htmlLink) makeHtmlLink(this)\n    return this._htmlLink\n  }\n\n  /// Backward compatibility (2018-09 -> 2019-03).\n  get server () {\n    return resolve.server(this)\n  }\n\n  get htmlNode () {\n    helpers.deprecated('2019-03', 'cosmicLink.htmlNode', 'cosmicLink.htmlDescription')\n    return this.htmlDescription\n  }\n  get transactionNode () { return html.grab('.cosmiclib_transactionNode', this.htmlDescription) }\n  get statusNode () { return html.grab('.cosmiclib_statusNode', this.htmlDescription) }\n  get signersNode () { return html.grab('.cosmiclib_signersNode', this.htmlDescription) }\n\n  hasSigned (accountId) {\n    helpers.deprecated('2019-03', 'cosmicLink.hasSigned', 'cosmicLink.transaction.hasSigned')\n    return this.transaction.hasSigned(accountId)\n  }\n  hasSigner (accountId) {\n    helpers.deprecated('2019-03', 'cosmicLink.hasSigner', 'cosmicLink.transaction.hasSigner')\n    return this.transaction.hasSigner(accountId)\n  }\n}\n\n/**\n * Initialize or reset a CosmicLink.\n *\n * @private\n */\nfunction initCosmicLink (cosmicLink, transaction, options = {}) {\n  checkLock(cosmicLink)\n\n  /// Reset object in case of reparse.\n  formatsFields.forEach(type => delete cosmicLink[type])\n  cosmicLink.page = cosmicLink.page || options.page || config.page\n  /**\n   * The status of a CosmicLink. It becomes non-null in case of failure.\n   * @var CosmicLink#status\n   */\n  /**\n   * By default `false`, or an *Array* of errors.\n   * @var CosmicLink#errors\n   */\n  status.init(cosmicLink)\n\n  /**\n   * The CosmicLink cache contains the resolved federations addresses and the\n   * accounts object. Using the same set of data for all the CosmicLink related\n   * computations ensure consistent results.\n   *\n   * @var CosmicLink#cache\n   */\n  cosmicLink.cache = { destination: {}, account: {} }\n\n  parse.dispatch(cosmicLink, transaction, options)\n\n  if (env.isBrowser) {\n    makeHtmlLink(cosmicLink)\n    if (!cosmicLink._htmlDescription) {\n      /// #cosmiclib_htmlNode: Backward compatibility (2018-09 -> 2019-03).\n      cosmicLink._htmlDescription = html.grab('#cosmiclink_description') || html.grab('#CL_htmlNode')\n    }\n    if (cosmicLink._htmlDescription) {\n      if (cosmicLink.htmlDescription.id === '#CL_htmlNode') {\n        helpers.deprecated('2019-03', 'id=\"#CL_htmlNode\"', 'id=\"cosmiclink_description\"')\n      }\n      makeHtmlDescription(cosmicLink)\n    }\n  }\n}\nconst formatsFields = ['_query', '_tdesc', '_json', '_transaction', '_xdr']\n\n/**\n * Initialize CosmicLink html nodes.\n *\n * @private\n */\nfunction makeHtmlDescription (cosmicLink) {\n  if (env.isNode) return\n  let htmlDescription = cosmicLink._htmlDescription\n\n  if (htmlDescription) {\n    html.clear(htmlDescription)\n    htmlDescription.className = 'cosmiclink_description'\n  } else {\n    htmlDescription = html.create('div', '.cosmiclink_description')\n    cosmicLink._htmlDescription = htmlDescription\n  }\n\n  cosmicLink._transactionNode = format.tdesc(cosmicLink, cosmicLink.tdesc)\n  cosmicLink._statusNode = status.makeHtmlNode(cosmicLink)\n  cosmicLink._signersNode = html.create('div', '.cosmiclib_signersNode')\n\n  html.append(htmlDescription,\n    cosmicLink._transactionNode, cosmicLink._statusNode, cosmicLink._signersNode)\n}\n\n/**\n * Make the HTML link.\n * @private\n */\nfunction makeHtmlLink (cosmicLink) {\n  if (env.isNode) return\n\n  const htmlLink = html.grab('#cosmiclink') || html.create('a')\n  htmlLink.className = '.cosmiclink'\n  htmlLink.href = cosmicLink.page\n  htmlLink.onclick = () => htmlLink.href = cosmicLink.uri\n  if (!htmlLink.title) htmlLink.title = 'Sign transaction'\n  if (!htmlLink.textContent) htmlLink.textContent = 'CosmicLink'\n\n  cosmicLink._htmlLink = htmlLink\n  return htmlLink\n}\n\n/**\n * Throw an error if CosmicLink is locked.\n * @private\n */\nfunction checkLock (cosmicLink) {\n  if (cosmicLink.locker) throw new Error('Cosmic link is locked.')\n}\n\nCosmicLink.prototype.__proto__ = config\nmodule.exports = CosmicLink\n","'use strict'\n/**\n * Contains the action methods for CosmicLink.\n *\n * @private\n * @exports action\n */\nconst action = exports\n\nconst env = require('@cosmic-plus/jsutils/env')\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarGuard = require('@stellarguard/sdk')\n\nconst convert = require('./convert')\nconst config = require('./config')\nconst format = env.isBrowser && require('./format')\nconst resolve = require('./resolve')\nconst signersUtils = require('./signers-utils')\nconst status = require('./status')\n\n/**\n * Lock a CosmicLink to a network/source pair. The actual values for this pair\n * are defined by the transaction itself, or at parsing time for Transaction &\n * XDR formats, or by this lock method, or by the global configuration.\n *\n * Locking is an asynchronous operation and resolves the transaction's federated\n * addresses if any. It also fetchs required accounts data to handle the\n * transaction signers properly. For this reason, it is mandatory before\n * signing and sending a transaction to the blockchain.\n *\n * @example\n * const cosmicLink = new CosmicLink({ memo: 'Demo', network: 'test' })\n * await cosmicLink.lock({ network: 'public' })\n * console.log(cosmicLink.network)   // => 'test'\n *\n * @alias CosmicLink#lock\n * @async\n * @param {Object} [options]\n * @param {string} options.network The fallback network in case transaction doesn't provides one.\n * @param {string} options.source The fallback address in case transaction doesn't provides one.\n */\naction.lock = async function (cosmicLink, options = {}) {\n  if (cosmicLink.status) throw new Error(cosmicLink.status)\n  if (cosmicLink.locker) throw new Error('CosmicLink is already locked.')\n\n  try {\n    await applyLock(cosmicLink, options)\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error)\n      status.error(cosmicLink, error.message)\n    }\n    status.fail(cosmicLink, 'Transaction build failed', 'throw')\n  }\n\n  updateSignersNode(cosmicLink)\n\n  return cosmicLink\n}\n\nasync function applyLock (cosmicLink, options) {\n  /**\n   * The locker property tells that a CosmicLink have been locked, and exposes\n   * the network & source values to which it have been locked.\n   *\n   * @alias CosmicLink#locker\n   */\n  cosmicLink.locker = {\n    source: cosmicLink.tdesc.source || options.source || config.source,\n    network: cosmicLink.tdesc.network || options.network || config.network\n  }\n\n  /// Preserve the underlying tdesc object.\n  cosmicLink._tdesc = Object.assign({}, cosmicLink.tdesc, cosmicLink.locker)\n  delete cosmicLink._query\n  delete cosmicLink._json\n\n  if (!cosmicLink._transaction) {\n    cosmicLink._transaction = await convert.tdescToTransaction(cosmicLink, cosmicLink.tdesc)\n    delete cosmicLink._tdesc\n  }\n\n  delete cosmicLink._transaction._cosmicplus\n  await signersUtils.extends(cosmicLink, cosmicLink._transaction)\n}\n\n/**\n * Sign CosmicLink's Transaction with **keypairs_or_preimage** and update the\n * other formats accordingly. Only legit signers are allowed to sign, and a\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before signing.\n *\n * @alias CosmicLink#sign\n * @param {...Keypair|Buffer|string} ...keypairs_or_preimage\n */\naction.sign = async function (cosmicLink, ...keypairsOrPreimage) {\n  if (!cosmicLink.locker) throw new Error('cosmicLink is not locked.')\n  resolve.useNetwork(cosmicLink)\n\n  const transaction = cosmicLink.transaction\n  let allFine = true\n\n  if (typeof keypairsOrPreimage[0] !== 'string') {\n    for (let index in keypairsOrPreimage) {\n      const keypair = keypairsOrPreimage[index]\n      const publicKey = keypair.publicKey()\n\n      if (!cosmicLink.transaction.hasSigner(publicKey)) {\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, 'Not a legit signer: ' + short)\n        allFine = false\n        continue\n      }\n\n      if (cosmicLink.transaction.hasSigned(publicKey)) continue\n\n      try {\n        transaction.sign(keypair)\n      } catch (error) {\n        console.error(error)\n        const short = helpers.shorter(publicKey)\n        status.error(cosmicLink, 'Failed to sign with key: ' + short)\n        allFine = false\n        continue\n      }\n    }\n  } else {\n    try {\n      transaction.signHashX(keypairsOrPreimage[0])\n    } catch (error) {\n      console.error(error)\n      const short = helpers.shorter(keypairsOrPreimage[0])\n      status.error(cosmicLink, 'Failed to sign with preimage: ' + short, 'throw')\n    }\n  }\n\n  /// Update other formats.\n  ['_query', '_xdr', '_sep7'].forEach(format => delete cosmicLink[format])\n  updateSignersNode(cosmicLink)\n\n  if (!allFine) throw new Error('Some signers where invalid')\n  else return transaction\n}\n\nfunction updateSignersNode (cosmicLink) {\n  if (cosmicLink._signersNode) {\n    const signersNode = format.signatures(cosmicLink, cosmicLink._transaction)\n    cosmicLink.htmlDescription.replaceChild(signersNode, cosmicLink._signersNode)\n    cosmicLink._signersNode = signersNode\n  }\n}\n\n/**\n * Send CosmicLink's transaction to a blockchain validator, or to\n * [StellarGuard]{@link https://stellarguard.me} when relevant. A\n * CosmicLink have to be [locked]{@link CosmicLink#lock} before sending.\n *\n * Returns a promise that resolve/reject to the horizon server response.\n *\n * @example\n * cosmicLink.send()\n *   .then(console.log)\n *   .catch(console.error)\n *\n * @alias CosmicLink#send\n * @param {horizon} [horizon] An horizon node URL\n * @return {Object} The server response\n */\naction.send = async function (cosmicLink, horizon = cosmicLink.horizon) {\n  if (!cosmicLink.locker) throw new Error('cosmicLink is not locked.')\n  const server = resolve.server(cosmicLink, horizon)\n  const account = await resolve.account(cosmicLink, cosmicLink.source)\n\n  if (StellarGuard.hasStellarGuard(account)) {\n    if (cosmicLink.network === 'public') StellarGuard.usePublicNetwork()\n    else StellarGuard.useTestNetwork()\n    return StellarGuard.submitTransaction(cosmicLink.transaction)\n  } else {\n    return server.submitTransaction(cosmicLink.transaction)\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","var axios = require('axios');\n\nvar STELLARGUARD_PUBLIC_KEY =\n  'GCVHEKSRASJBD6O2Z532LWH4N2ZLCBVDLLTLKSYCSMBLOYTNMEEGUARD';\n\nfunction StellarGuard() {}\n\nStellarGuard.prototype.useTestNetwork = function() {\n  this.httpClient = axios.create({\n    baseURL: 'https://test.stellarguard.me/api'\n  });\n};\n\nStellarGuard.prototype.usePublicNetwork = function() {\n  this.httpClient = axios.create({\n    baseURL: 'https://stellarguard.me/api'\n  });\n};\n\nStellarGuard.prototype.hasStellarGuard = function(account) {\n  return account.signers.some(function(signer) {\n    return signer.public_key === STELLARGUARD_PUBLIC_KEY;\n  });\n};\n\nStellarGuard.prototype.submitTransaction = function(transaction, callback) {\n  this._verifyNetworkSet();\n  var xdr = transaction.toEnvelope().toXDR('base64');\n  return this.httpClient\n    .post('/transactions', { xdr: xdr, callback: callback })\n    .then(function(result) {\n      return result.data;\n    });\n};\n\nStellarGuard.prototype.getAccount = function(publicKey) {\n  this._verifyNetworkSet();\n  return this.httpClient.get('/accounts/' + publicKey).then(function(result) {\n    return result.data;\n  });\n};\n\nStellarGuard.prototype.getMultigSetup = function(\n  publicKey,\n  stellarGuardPublicKey,\n  backupSignerPublicKey\n) {\n  this._verifyNetworkSet();\n  return this.httpClient\n    .get('/accounts/' + publicKey + '/multisig', {\n      params: {\n        stellarGuardPublicKey: stellarGuardPublicKey,\n        backupSignerPublicKey: backupSignerPublicKey\n      }\n    })\n    .then(function(result) {\n      return result.data;\n    });\n};\n\nStellarGuard.prototype.activateAccount = function(publicKey) {\n  this._verifyNetworkSet();\n  return this.httpClient.post('/accounts/' + publicKey).then(function(result) {\n    return result.data;\n  });\n};\n\nStellarGuard.prototype._verifyNetworkSet = function() {\n  if (!this.httpClient) {\n    throw new Error(\n      'Call StellarGuard.useTestNetwork() or StellarGuard.usePublicNetwork() before submitting.'\n    );\n  }\n};\n\nmodule.exports = new StellarGuard();\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict'\n/**\n * Contains the methods to convert field values from CosmicLink's\n * `transaction descriptor` format to Stellar transaction object format.\n *\n * @private\n * @exports construct\n */\nconst construct = exports\n\nconst helpers = require('@cosmic-plus/jsutils/misc')\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst resolve = require('./resolve')\nconst specs = require('./specs')\nconst status = require('./status')\n\n/**\n * Returns the StellarSdk Transaction built from tdesc.\n *\n * @param {Object} tdesc\n * @return {Transaction}\n */\nconstruct.transaction = async function (conf, tdesc) {\n  if (conf.status) throw new Error(conf.status)\n\n  try {\n    const txBuilder = await makeTransactionBuilder(conf, tdesc)\n    for (let index in tdesc.operations) {\n      const odesc = tdesc.operations[index]\n      const operation = await construct.operation(conf, odesc)\n      txBuilder.addOperation(operation)\n    }\n    return txBuilder.build()\n  } catch (error) {\n    if (!conf.errors) {\n      console.error(error)\n      status.error(conf, error.message)\n    }\n    if (!conf.status) status.fail(conf, 'Transaction build failed', 'throw')\n    else throw error\n  }\n}\n\n/**\n * Returns the StellarSdk Operation built from `odesc`.\n *\n * @param {Object} odesc\n * @return {Operation}\n */\nconstruct.operation = async function (conf, odesc) {\n  const operation = odesc.type\n  delete odesc.type\n\n  for (let field in odesc) {\n    odesc[field] = await construct.field(conf, field, odesc[field])\n  }\n\n  return StellarSdk.Operation[operation](odesc)\n}\n\n/**\n * Returns the TransactionBuilder for `tdesc`.\n */\nasync function makeTransactionBuilder (conf, tdesc) {\n  let txOpts = {}\n  if (tdesc.fee) txOpts.fee = tdesc.fee\n  if (tdesc.memo) txOpts.memo = construct.memo(conf, tdesc.memo)\n  if (tdesc.minTime || tdesc.maxTime) {\n    txOpts.timebounds = { minTime: 0, maxTime: 0 }\n    if (tdesc.minTime) txOpts.timebounds.minTime = construct.date(conf, tdesc.minTime)\n    if (tdesc.maxTime) txOpts.timebounds.maxTime = construct.date(conf, tdesc.maxTime)\n  }\n\n  const sourceAccount = await resolve.txSourceAccount(conf, tdesc.source, tdesc.sequence)\n  const builder = new StellarSdk.TransactionBuilder(sourceAccount, txOpts)\n\n  /// Check if memo is needed for destination account.\n  for (let index in tdesc.operations) {\n    const operation = tdesc.operations[index]\n    if (operation.destination) {\n      const destination = await resolve.address(conf, operation.destination)\n      if (destination.memo) {\n        const memoType = destination.memo_type\n        const memoValue = destination.memo\n        if (tdesc.memo && (tdesc.memo.type !== memoType || tdesc.memo.value !== memoValue)) {\n          const short = helpers.shorter(operation.destination)\n          status.error(conf, `Memo conflict: ${short} requires to set a memo`, 'throw')\n        } else {\n          tdesc.memo = { type: memoType, value: memoValue }\n          builder.addMemo(new StellarSdk.Memo(memoType, memoValue))\n        }\n      }\n    }\n  }\n\n  return builder\n}\n\n/******************************************************************************/\n\n/**\n * Prepare `value` accordingly to `field` type.\n *\n * @param {string} field\n * @param {any} value\n */\nconstruct.field = async function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return construct.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Prepare `value` using the preparing function for `type`.\n *\n * @param {string} type\n * @param {any} value\n */\nconstruct.type = async function (conf, type, value) {\n  return construct[type](conf, value)\n}\n\n/******************************************************************************/\n\nconstruct.address = async function (conf, address) {\n  const account = await resolve.address(conf, address)\n  return account.account_id\n}\n\nconstruct.asset = async function (conf, asset) {\n  if (asset.issuer) {\n    const publicKey = await construct.address(conf, asset.issuer)\n    return new StellarSdk.Asset(asset.code, publicKey)\n  } else {\n    return StellarSdk.Asset.native()\n  }\n}\n\nconstruct.assetsArray = async function (conf, assetsArray) {\n  let path = []\n  for (let index in assetsArray) {\n    const string = assetsArray[index]\n    const constructedAsset = await construct.asset(conf, string)\n    path.push(constructedAsset)\n  }\n  return path\n}\n\nconstruct.date = function (conf, string) {\n  return Date.parse(string) / 1000\n}\n\nconstruct.memo = function (conf, memo) {\n  return new StellarSdk.Memo(memo.type, memo.value)\n}\n\nconstruct.signer = async function (conf, signer) {\n  let sdkSigner = { weight: +signer.weight }\n  if (signer.type === 'tx') sdkSigner.preAuthTx = signer.value\n  else if (signer.type === 'hash') sdkSigner.sha256Hash = signer.value\n  else if (signer.type === 'key') {\n    const publicKey = await construct.address(conf, signer.value)\n    sdkSigner.ed25519PublicKey = publicKey\n  }\n  return sdkSigner\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) exports[type] = (conf, value) => value\n})\n","'use strict'\n/**\n * Contains the methods to encode values formatted in `transaction descriptor`\n * format into URI format.\n *\n * @private\n * @exports encode\n */\nconst encode = exports\n\nconst specs = require('./specs')\n\nencode.query = function (conf, tdesc) {\n  if (conf.errors) return undefined\n\n  let command\n  if (!tdesc.operations.length || tdesc.operations.length > 1 || tdesc.operations[0].source) {\n    command = 'transaction'\n  } else {\n    command = tdesc.operations[0].type\n  }\n  let query = '?' + command\n\n  specs.transactionOptionalFields.forEach(field => {\n    if (tdesc[field] !== undefined) query += encode.field(conf, field, tdesc[field])\n  })\n\n  tdesc.operations.forEach(odesc => {\n    if (command === 'transaction') query += '&operation=' + odesc.type\n    for (let field in odesc) {\n      if (field === 'type') continue\n      query += encode.field(conf, field, odesc[field])\n    }\n  })\n\n  return query\n}\n\n/******************************************************************************/\n\n/**\n * Encode `value` into cosmic link query format and return\n * `&${field}=${encodedValue}`\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (!type) throw new Error(`Invalid field: ${field}`)\n\n  const encodedValue = encode.type(conf, type, value)\n  if (encodedValue === '' && field !== 'homeDomain') return ''\n  else return `&${field}=${encodedValue}`\n}\n\n/**\n * Encode `value` into cosmic link query format according to `type`.\n *\n * @param {string} field\n * @param {*} value `value` should use cosmic link JSON format\n * @return {string}\n */\nencode.type = function (conf, type, value) {\n  if (value === undefined) return ''\n\n  const encodedValue = process[type] ? process[type](conf, value) : value\n  if (encodedValue === undefined) return ''\n  else return encodedValue\n}\n\n/******************************************************************************/\n\nconst process = {}\n\nprocess.asset = function (conf, asset) {\n  if (asset.issuer) return encodeURIComponent(asset.code) + ':' + encodeURIComponent(asset.issuer)\n}\n\nprocess.assetsArray = function (conf, assetsArray) {\n  return assetsArray.map(asset => encode.asset(conf, asset)).toString()\n}\n\nprocess.boolean = function (conf, boolean) {\n  if (boolean === false) return 'false'\n}\n\nprocess.buffer = function (conf, buffer) {\n  if (buffer) return encodeURIComponent(buffer)\n}\n\nprocess.date = function (conf, date) {\n  return date.replace(/Z$/, '')\n}\n\nprocess.memo = function (conf, memo) {\n  if (memo.type === 'text') return encodeURIComponent(memo.value)\n  else return memo.type + ':' + encodeURIComponent(memo.value)\n}\n\nprocess.price = function (conf, price) {\n  if (typeof price === 'string') return price\n  else return price.n + ':' + price.d\n}\n\nprocess.signer = function (conf, signer) {\n  return signer.weight + ':' + signer.type + ':' + signer.value\n}\n\nprocess.string = encode.buffer\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  exports[type] = (conf, value) => encode.type(conf, type, value)\n})\n","'use strict'\n/**\n * Contains the methods to parse transactions in various format and create a\n * `CosmicLink` object out of them.\n *\n * Also contains methods to update some of the `CosmicLink` datas when it\n * require update/re-parse of part or totallity of the object.\n *\n * @private\n * @exports parse\n */\nconst parse = exports\n\nconst check = require('./check')\nconst convert = require('./convert')\nconst expand = require('./expand')\nconst specs = require('./specs')\nconst status = require('./status')\n\n/**\n * Sets cosmicLink page as the base path of `uri`.\n *\n * @param {string} page URI basename\n */\nparse.page = function (cosmicLink, uri) {\n  const page = uri.split('?')[0]\n  if (page) cosmicLink.page = encodeURI(page)\n}\n\n/**\n * Call the right functions to setup cosmicLink depending on `options` and\n * `value` type.\n *\n * @param {*} value A transaction in any format\n * @param {Object} options Same options as {@see CosmicLink#constructor}\n */\nparse.dispatch = function (cosmicLink, value = '?', options = {}) {\n  const type = guessType(value)\n\n  try {\n    if (parseFmt[type]) parseFmt[type](cosmicLink, value, options)\n    else setTdesc(cosmicLink, type, value, options)\n  } catch (error) {\n    if (!cosmicLink.errors) {\n      console.error(error)\n      status.error(cosmicLink, error.message)\n    }\n    status.fail(cosmicLink, 'Invalid ' + type)\n    if (error.tdesc) cosmicLink._tdesc = error.tdesc\n  }\n\n  if (options.page) parse.page(cosmicLink, options.page)\n}\n\n/**\n * Returns `type` which is the format of transaction represented by `value`.\n */\nfunction guessType (value) {\n  let type\n  if (typeof value === 'string') {\n    const query = convert.uriToQuery('', value)\n    if (value.substr(0, 12) === 'web+stellar:') type = 'sep7'\n    else if (query && query.substr(0, 5) === '?xdr=') type = 'xdrUri'\n    else if (value.substr(0, 1) === '?') type = 'query'\n    else if (value.substr(0, 1) === '{') type = 'json'\n    else if (value.match(/^[a-zA-Z0-9+-=/]+$/)) type = 'xdr'\n    else type = 'uri'\n  } else {\n    if (value.tx) type = 'transaction'\n    else type = 'tdesc'\n  }\n  return type\n}\n\n/******************************************************************************/\n\nconst parseFmt = {}\n\n/**\n * Initialize cosmicLink using `xdrUri`.\n */\nparseFmt.xdrUri = function (cosmicLink, xdrUri, options) {\n  parse.page(cosmicLink, xdrUri)\n\n  const query = convert.uriToQuery(cosmicLink, xdrUri)\n  const temp = query.split('&')\n  const xdr = temp[0].substr(5)\n\n  temp.slice(1).forEach(entry => {\n    let field = entry.replace(/=.*$/, '')\n    let value = entry.substr(field.length + 1)\n\n    switch (field) {\n      case 'stripSignatures':\n        options.stripSignatures = true\n        break\n      case 'stripSequence':\n        options.stripSequence = true\n        break\n      case 'stripSource':\n        options.stripSource = true\n        break\n      case 'network':\n        options.network = value\n        break\n      default:\n        status.error(cosmicLink, 'Unknow option: ' + entry)\n        status.fail(cosmicLink, 'Invalid query')\n    }\n  })\n\n  setTdesc(cosmicLink, 'xdr', xdr, options)\n}\n\n/**\n * Initialize cosmicLink using `sep7`.\n */\nparseFmt.sep7 = function (cosmicLink, sep7, options = {}) {\n  if (sep7.substr(12, 4) === 'pay?') {\n    throw new Error(\"SEP-0007 'pay' operation is not currently supported.\")\n  } else if (sep7.substr(12, 3) !== 'tx?') {\n    throw new Error('Invalid SEP-0007 link.')\n  }\n\n  const query = convert.uriToQuery(cosmicLink, sep7)\n  const params = query.substr(1).split('&')\n  if (!options.network) options.network = 'public'\n  let xdr\n\n  params.forEach(entry => {\n    const field = entry.replace(/=.*$/, '')\n    const value = entry.substr(field.length + 1)\n\n    if (!isValidSep7Field('tx', field)) {\n      throw new Error('Invalid SEP-0007 field: ' + field)\n    }\n\n    if (isIgnoredSep7Field(field)) {\n      console.warn('Ignored SEP-0007 field: ' + field)\n    }\n\n    if (field === 'xdr') xdr = decodeURIComponent(value)\n    if (field === 'network_passphrase') options.network = decodeURIComponent(value)\n  })\n\n  setTdesc(cosmicLink, 'xdr', xdr, options)\n}\n\nfunction isValidSep7Field (sep7Op, field) {\n  return specs.sep7MandatoryFields[sep7Op].find(name => name === field) ||\n    specs.sep7OptionalFields[sep7Op].find(name => name === field)\n}\n\nfunction isIgnoredSep7Field (field) {\n  return specs.sep7IgnoredFields.find(name => name === field)\n}\n\n/******************************************************************************/\n\n/**\n * Set cosmicLink_tdesc from format `type`. From there, the CosmicLink methods\n * can lazy-evaluate any requested format.\n */\nfunction setTdesc (cosmicLink, type, value, options) {\n  if (type !== 'uri') cosmicLink['_' + type] = value\n\n  switch (type) {\n    case 'uri':\n      parse.page(cosmicLink, value)\n      cosmicLink._query = convert.uriToQuery(cosmicLink, value, options)\n    case 'query':\n      cosmicLink._tdesc = convert.queryToTdesc(cosmicLink, cosmicLink.query, options)\n      break\n    case 'json':\n      value = convert.jsonToTdesc(cosmicLink, value)\n    case 'tdesc':\n      cosmicLink._tdesc = expand.tdesc(cosmicLink, value)\n      delete cosmicLink._json\n      check.tdesc(cosmicLink, cosmicLink.tdesc)\n      break\n    case 'sep7':\n      cosmicLink._xdr = convert.sep7ToXdr(cosmicLink, cosmicLink.sep7)\n    case 'xdr':\n      cosmicLink._transaction = convert.xdrToTransaction(cosmicLink, cosmicLink.xdr, options)\n    case 'transaction':\n      cosmicLink._tdesc = convert.transactionToTdesc(cosmicLink, cosmicLink.transaction, options)\n      if (options.stripSource || options.stripSequence) {\n        delete cosmicLink._xdr\n        delete cosmicLink._transaction\n      } else if (options.stripSignatures) {\n        cosmicLink.transaction.signatures = []\n        delete cosmicLink._xdr\n      }\n  }\n}\n","'use_strict'\n/**\n * Methods that expand tdesc paramaters from their query/StellarSdk format into\n * their tdesc equivalent. This allows user to pass value in the format they\n * feel the most confortable with when creating CosmicLinks.\n *\n * @private\n * @exports expand\n */\nconst expand = exports\n\nconst StellarSdk = require('@cosmic-plus/base/stellar-sdk')\n\nconst decode = require('./decode')\nconst destruct = require('./destruct')\nconst normalize = require('./normalize')\nconst specs = require('./specs')\n\n/**\n * Replace each tdesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `tdesc` passed in\n * parameter.\n *\n * @param {Object} tdesc\n * @return tdesc\n */\nexpand.tdesc = function (conf, tdesc) {\n  for (let field in tdesc) {\n    if (field === 'operations') continue\n    else tdesc[field] = expand.field(conf, field, tdesc[field])\n  }\n  if (tdesc.operations) tdesc.operations.forEach(odesc => expand.odesc(conf, odesc))\n  normalize.tdesc(conf, tdesc)\n  return tdesc\n}\n\n/**\n * Replace each odesc field value that is in query/StellarSdk format by its\n * tdesc format counterpart. This function alter the `odesc` passed in\n * parameter.\n *\n * @param {Object} odesc\n * @return tdesc\n */\nexpand.odesc = function (conf, odesc) {\n  for (let field in odesc) {\n    if (field === 'type') continue\n    else odesc[field] = expand.field(conf, field, odesc[field])\n  }\n  normalize.odesc(conf, odesc)\n  return odesc\n}\n\n/******************************************************************************/\n\n/**\n * Expands `value` to its tdesc format according to `field` type.\n *\n * @param {string} field\n * @param {string} value\n */\nexpand.field = function (conf, field, value) {\n  const type = specs.fieldType[field]\n  if (type) return expand.type(conf, type, value)\n  else throw new Error(`Invalid field: ${field}`)\n}\n\n/**\n * Expands `value` to its tdesc format according to `type`.\n *\n * @param {string} type\n * @param {string} value\n */\nexpand.type = function (conf, type, value) {\n  if (value === null || value === undefined) return value\n  if (typeof value === 'number') value = value + ''\n  return expand[type] ? expand[type](conf, value) : value + ''\n}\n\n/******************************************************************************/\n\nexpand.asset = function (conf, asset) {\n  if (asset instanceof StellarSdk.Asset) return destruct.asset(conf, asset)\n  else if (typeof asset === 'string') return decode.asset(conf, asset)\n  else return asset\n}\n\nexpand.assetPath = function (conf, assetPath) {\n  if (Array.isArray(assetPath)) return assetPath.map(asset => expand.asset(conf, asset))\n  else if (typeof assetPath === 'string') return decode.assetPath(conf, assetPath)\n}\n\nexpand.date = function (conf, date) {\n  if (typeof date === 'number') date = date + ''\n  if (!date.match(/^[0-9]*$/) || date.length < 5) return decode.date(conf, date)\n  else return destruct.date(conf, date)\n}\n\nexpand.memo = function (conf, memo) {\n  if (memo instanceof StellarSdk.Memo) return destruct.memo(conf, memo)\n  else if (typeof memo === 'string') return decode.memo(conf, memo)\n  else return memo\n}\n\nexpand.price = function (conf, price) {\n  if (typeof price === 'string' && price.match(/:/)) {\n    return decode.price(conf, price)\n  } else {\n    return price\n  }\n}\n\nexpand.signer = function (conf, signer) {\n  if (signer.key) return destruct.signer(conf, signer)\n  else if (typeof signer === 'string') return decode.signer(conf, signer)\n  else return signer\n}\n\nexpand.string = function (conf, string) {\n  if (typeof string === 'number') return string + ''\n  else return string\n}\n\n/******************************************************************************/\n\n/**\n * Provide dummy aliases for every other type for convenience & backward\n * compatibility.\n */\nspecs.types.forEach(type => {\n  if (!exports[type]) {\n    exports[type] = (conf, value) => {\n      if (typeof value === 'number') return value + ''\n      else return value\n    }\n  }\n})\n","'use_strict'\n/**\n * Asynchronously load external ressources.\n *\n * @exports load\n */\nconst load = exports\n\nconst dom = require('@cosmic-plus/jsutils/dom')\nconst html = require('@cosmic-plus/jsutils/html')\n\n/**\n * Load cosmic-lib CSS from **href** or from default origin. All subsequent\n * calls will refer to the original request.\n *\n * @example\n * /// Preload at the start of your script:\n * cosmicLib.load.styles('css/cosmic-lib.css')\n *\n * /// Then wait for the request to resolve before you display CosmicLink HTML\n * /// description:\n * await cosmicLib.load.styles()\n *\n * @async\n * @param {string} [href='cosmic-lib.css']\n */\nload.styles = async function (conf, href = 'https://cosmic.plus/cosmic-lib/cosmic-lib.css') {\n  const promise = load.css(conf, href)\n  load.styles = () => promise\n  return promise\n}\n\n/**\n * Load a CSS from **href**.\n *\n * @example\n * /// Preload at script initialization:\n * const cssLoader = cosmicLib.load.css('my-styles.css')\n *\n * /// To wait for loading to finish:\n * await cssLoader\n *\n * @async\n * @param {string} href\n */\nload.css = async function (conf, href) {\n  return new Promise(function (resolve, reject) {\n    const attributes = { rel: 'stylesheet', type: 'text/css', href: href, onload: resolve, onerror: reject }\n    const linkNode = html.create('link', attributes)\n    html.append(dom.head, linkNode)\n  })\n}\n","'use_strict'\n/**\n * A simple module that ease access to HTML DOM nodes. Any HTML element having\n * an `id` at loading time is registered at dom[id]. This is to avoid running\n * `querySelector` multiple times.\n *\n * @exports dom\n */\nconst dom = exports\n\nconst html = require('./html')\n\n/**\n * Main tags.\n */\ndom.html = html.grab('html')\ndom.head = html.grab('head')\ndom.body = html.grab('body')\ndom.header = html.grab('header')\ndom.main = html.grab('main')\ndom.footer = html.grab('footer')\n\n/**\n * All elements having an ID.\n */\nconst array = document.querySelectorAll('[id]')\nfor (let index in array) {\n  const element = array[index]\n  dom[element.id] = element\n}\n"],"sourceRoot":""}